{"Python":{"urlName":"python","mode":"text\/x-python","tutorials":{"Basics":[{"id":66799332,"name":"Data Types","tests":[{"id":915474269,"question":"Which type is suitable for describing car's model?","code":null,"answers":["int","string","bool"],"correct_answer":"string","explanation":"<ul>\r\n<li>string is suitable for describing a sequence of symbols.<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1866868506,"question":"Which type is suitable for describing person's age?","code":null,"answers":["string","double","int"],"correct_answer":"int","explanation":"<ul>\r\n<li>int - whole numbers (like 5, 6, 10).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"},{"id":569067227,"question":"Which type is suitable for describing distance?","code":null,"answers":["string","double","char"],"correct_answer":"double","explanation":"<ul>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>char - a single symbol.<\/li>\r\n<\/ul>"},{"id":446195352,"question":"Which type is suitable for describing a single symbol?","code":null,"answers":["char","int","boolean"],"correct_answer":"char","explanation":"<ul>\r\n<li>char - a single symbol.<\/li>\r\n<li>Int - whole number.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1397524057,"question":"Which type is suitable for describing if person is famous (true or false)?","code":null,"answers":["boolean","int","double"],"correct_answer":"boolean","explanation":"<ul>\r\n<li>boolean - true or false (famous or not famous).<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"}],"puzzles":[{"id":1811252378,"text":"Define a variable.","code":"fillword fillword fillword;","result":null,"words":{"operators":["="],"values":["'Alex'"],"variables_constants":["name"],"others":[]},"correct_patterns":[["name","=","'Alex'"]]},{"id":748332123,"text":"Define variables about person's name and age.","code":"name fillword fillword;\r\nage = fillword;","result":null,"words":{"operators":["'Jim'","Jim","=","19"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","'Jim'","19"]]},{"id":1699726360,"text":"Fill the missing words to match the output.","code":"color = 'Blue';\r\nfillword(fillword);","result":"Blue","words":{"operators":[],"values":[],"variables_constants":["color","'color'","print"],"others":[]},"correct_patterns":[["print","color"]]}]},{"id":1151887013,"name":"Calculations","tests":[{"id":368157158,"question":"What's the output of the code snippet?","code":"number = 5 + 6 - 2;\r\nprint(number);","answers":["9","10","11"],"correct_answer":"9","explanation":"5 + 6 - 2 =  <br>\r\n11 - 2 =  <br>\r\n9"},{"id":1319551399,"question":"What's the output of the code snippet?","code":"number = 6 * 3 - 1;\r\nprint(number);","answers":["12","17","18"],"correct_answer":"17","explanation":"6 * 3 - 1 = <br>\r\n18 - 1 = <br>\r\n17"},{"id":122413412,"question":"What's the output of the code snippet?","code":"number = 18 \/ 3 + 3;\r\nprint(number);","answers":["3","6","9"],"correct_answer":"9","explanation":"18 \/ 3 + 3 = <br>\r\n6 + 3 = <br>\r\n9"},{"id":2046296357,"question":"What's the output of the code snippet?","code":"number = (14 + 7) \/ 7;\r\nprint(number);","answers":["3","15","22"],"correct_answer":"3","explanation":"(14 + 7) \/ 7 = <br>\r\n21 \/ 7 = <br>\r\n3"},{"id":850206946,"question":"What's the output of the code snippet?","code":"number = 14 % 3;\r\nprint(number);","answers":["2","3","4"],"correct_answer":"2","explanation":"14 : 3 = <b>4<\/b>.67 <br><br>\r\n14 - 3 * 4 = <br>\r\n14 - 12 =<br>\r\n2"}],"puzzles":[{"id":1610409945,"text":"Fill the missing words to match the output.","code":"number = 6 fillword 2;\r\nprint(number);","result":"12","words":{"operators":["+","%","*","\/"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["*"]]},{"id":278988646,"text":"Fill the missing words to match the output.","code":"combine = \"Blue \" fillword \"Sky\";\r\nprint(combine);","result":"Blue Sky","words":{"operators":[".","*","-","+","%"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["+"]]},{"id":1230382887,"text":"Fill the missing words to match the output.","code":"division = 12 fillword 4;\r\nremainder = 17 fillword  5;\r\n\r\nprint(division, remainder);","result":"3 2","words":{"operators":["+","\/","%","^"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["\/","%"]]}]},{"id":306891200,"name":"Assignments","tests":[{"id":1800552611,"question":"What's the output of the code snippet?","code":"val = 8;\r\nval = 2;\r\nprint(val);","answers":["2","8","10"],"correct_answer":"2","explanation":"The last value set to the variable <code>val<\/code> is 2.\r\n<br><br>\r\nSo <code>val<\/code> has value of 2 when it's printed."},{"id":738680928,"question":"What's the output of the code snippet?","code":"num = 2;\r\nnum = num + 3;\r\n\r\nprint(num);","answers":["2","3","5"],"correct_answer":"5","explanation":"num = 2\r\n<br>\r\nnum = 2 + 3\r\n<br>\r\nnum = 5"},{"id":1722515489,"question":"What's the output of the code snippet?","code":"num = 4;\r\nnum *= 3;\r\n\r\nprint(num);","answers":["3","9","12"],"correct_answer":"12","explanation":"num = 4 <br>\r\nnum *= 3\r\n<br>\r\nnum = num * 3\r\n<br>\r\nnum = 4 * 3<br>\r\nnum = 12"},{"id":1599644654,"question":"What's the output of the code snippet?","code":"num = 4 + 6;\r\nnum \/= 2;\r\nnum *= 3;\r\n\r\nprint(num);","answers":["5","15","60"],"correct_answer":"15","explanation":"num = 4 + 6; <br>\r\nnum = 10 <br>\r\n<br>\r\nnum \/= 2; <br>\r\nnum = num \/ 2; <br>\r\nnum = 10 \/ 2; <br>\r\nnum = 5 <br>\r\n<br>\r\nnum *= 3; <br>\r\nnum = num * 3; <br>\r\nnum = 5 * 3; <br>\r\nnum = 15"},{"id":269337519,"question":"What's the output of the code snippet?","code":"a = 3;\r\nb = 2;\r\n\r\na *= b;\r\nb *= a;\r\n\r\nprint(b);","answers":["6","12","72"],"correct_answer":"12","explanation":"a = 3 <br>\r\nb = 2 <br>\r\n<br>\r\na *= b <br>\r\na = a * b <br>\r\na = 3 * 2 <br>\r\na = 6 <br>\r\n<br>\r\nb *= a <br>\r\nb = b * a <br>\r\nb = 2 * 6 <br>\r\nb = 12"}],"puzzles":[{"id":66799332,"text":"Fill the missing words to match the output.","code":"num = fillword;\r\nnum = fillword;\r\n\r\nprint(num);\r\nnum = fillword;","result":"8","words":{"operators":[],"values":["1","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["1","8","7"],["7","8","1"]]},{"id":1151887013,"text":"Fill the missing words to match the output.","code":"num = 5;\r\nnum fillword fillword;\r\nprint(num);","result":"15","words":{"operators":[],"values":["1","2","3"],"variables_constants":["+=","*=","\/="],"others":[]},"correct_patterns":[["*=","3"]]},{"id":1029473890,"text":"Fill the missing words to match the output.","code":"num fillword 10;\r\nnum fillword 5;\r\nnum fillword 2;\r\nnum fillword 1;\r\n\r\nprint(num);","result":"29","words":{"operators":["=","+=","-=","*=","\/="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","+=","*=","-="]]}]},{"id":1029473890,"name":"If Statement","tests":[{"id":672301609,"question":"What's the output of the code snippet?","code":"age = 18;\r\n\r\nif age >= 21:\r\n    print(\"a \");\r\n\r\nif age < 30:\r\n    print(\"b\");","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>age = 18<\/code>\r\n<br><br>\r\n<code>age >= 21<\/code> is false.\r\n<br><br>\r\n<code>age < 30<\/code> is true so \"b\" is printed."},{"id":1657253366,"question":"What's the output of the code snippet?","code":"pagesCount = 100;\r\n\r\nif pagesCount > 100:\r\n    print(\"a\");\r\n\r\nif pagesCount >= 100:\r\n    print(\"b\");","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>pagesCount = 100<\/code>\r\n<br><br>\r\n\r\n<code>pagesCount > 100<\/code> is false. <br><br>\r\n<code>pagesCount >= 100<\/code> is true so \"b\" is printed."},{"id":1534381495,"question":"What's the output of the code snippet?","code":"num = 3;\r\n\r\nif num == 3:\r\n    print(\"a\");\r\n\r\nif num != 3:\r\n    print(\"b\");","answers":["a","b","a b"],"correct_answer":"a","explanation":"<code>num = 3<\/code>\r\n<br><br>\r\n\r\n<code>num == 3<\/code> is true so \"a\" is printed.\r\n<br><br>\r\n<code>num != 3<\/code> is false (because num is equal to 3)."},{"id":471461236,"question":"What's the output of the code snippet?","code":"score = 87;\r\n\r\nif score <= 87:\r\n    print(\"1\");\r\n\r\nif score == 87:\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>score = 87<\/code>\r\n<br><br>\r\n\r\n<code>score <= 87<\/code> is true so \"1\" is printed.\r\n<br><br>\r\n<code>score == 87<\/code> is true so \"2\" is printed."},{"id":1456344373,"question":"What's the output of the code snippet?","code":"num = 77;\r\nrem = num % 2;\r\n\r\nif rem == 0:\r\n    print(\"even\");\r\n\r\nif rem == 1:\r\n    print(\"odd\");","answers":["even","odd","even odd"],"correct_answer":"odd","explanation":"77 % 2 is equal to 1 (rem is 1) so odd is printed.\r\n<br><br>\r\nThe only condition that's true is <code>rem == 1<\/code> ."}],"puzzles":[{"id":1979819555,"text":"Fill the missing words to match the output.","code":"price = 300;\r\n\r\nif price fillword 500:\r\n   print(\"High\");","result":"High","words":{"operators":["<","==",">"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["<"]]},{"id":683065824,"text":"Fill the missing words to match the output.","code":"number = 7;\r\nif number fillword 7:\r\n    print(\"Special Number\");\r\n\r\nvolume = 101;\r\nif volume fillword 100:\r\n    print(\"Large\");","result":"Special Number\r\nLarge","words":{"operators":["<",">","=="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["==",">"]]},{"id":1633411489,"text":"Fill the missing words to match the output.","code":"number = 5;\r\n\r\nif number fillword 0:\r\n    print(\"Different\");","result":"Different","words":{"operators":["==","!=","<","<="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!="]]}]},{"id":1979819555,"name":"Logical Operators","tests":[{"id":259206386,"question":"What's the output of the code snippet?","code":"num = 7;\r\n\r\nif num > 7 or num < 21:\r\n    print(\"1\");\r\n\r\nif num > 10 or num < 15:\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>num = 7<\/code>\r\n<br><br>\r\n<code>num > 7 or num < 21<\/code> is true because <code>num < 21<\/code> is true .\r\n<br><br>\r\n<code>num > 10 or num < 15<\/code> is true because <code>num < 15<\/code> is true.\r\n<br><br>\r\nUsing \"or\" means that If any of the two operands is true, then  the condition becomes true."},{"id":1075858611,"question":"What's the output of the code snippet?","code":"age = 17;\r\n\r\nif age > 13 and age < 21:\r\n    print(\"1\");\r\n\r\nif age > 21 and age < 60:\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n<code>age > 13 and age < 21<\/code> is true because both operands are true.\r\n<br><br>\r\n<code>age > 21 and age < 60<\/code> is false because <code>age > 21<\/code> is false.\r\n<br><br>\r\n\r\nUsing \"and\" means that If any of the two operands is false, then  the condition becomes false."},{"id":987065456,"question":"What's the output of the code snippet?","code":"level = 5;\r\n\r\nif level > 0 and level < 11:\r\n    print(\"valid\");\r\n\r\nif level == 5 or level == 7:\r\n    print(\"special\");","answers":["valid","special","valid special"],"correct_answer":"valid special","explanation":"<code>level = 5<\/code>\r\n<br><br>\r\n<code>level > 0 and level < 11<\/code> is true because both operands are true (level is between 0 and 11).\r\n<br><br>\r\n<code>level == 5 or level == 7<\/code> is true because <code>level == 5<\/code> is true.\r\n<br><br>\r\nUsing \"and\" means that If any of the two operands is false, then  the condition becomes false.\r\n<br><br>\r\n\r\nUsing \"or\" means that If any of the two operands is true, then  the condition becomes true."},{"id":1937345585,"question":"What's the output of the code snippet?","code":"height = 165;\r\n\r\nif not (height == 160): \r\n    print(\"1\");\r\n\r\nif not (height > 150 and height < 200):\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>height = 165<\/code>\r\n<br><br>\r\n<code>height == 160<\/code> is false <br>\r\n<code>not false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>height > 150 and height < 200<\/code> is <code>true<\/code> <br>\r\n<code>not true<\/code> is <code>false<\/code> so \"2\" is not printed."},{"id":875474942,"question":"What's the output of the code snippet?","code":"code = 301;\r\n\r\nif not (code >= 100 and code <= 200):\r\n    print(\"1\");\r\n\r\nif not (code >= 400 or code == 301):\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>code = 301<\/code>\r\n<br><br>\r\n<code>code >= 100 and code <= 200<\/code> is false <br>\r\n<code>not false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>code >= 400 or code == 301<\/code> is <code>true<\/code> <br>\r\n<code>not true<\/code> is <code>false<\/code> so \"2\" is not printed."}],"puzzles":[{"id":1510474094,"text":"Fill the missing words to match the output.","code":"num = 1;\r\n\r\nif num == 1 fillword num == 2:\r\n    print(\"1 2\");","result":"1 2","words":{"operators":["and","or","not"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["or"]]},{"id":482156847,"text":"Fill the missing words to match the output.","code":"num = 4;\r\n\r\nif num >= 1 fillword num <= 9:\r\n    print(\"Between 1 and 9\");\r\n\r\nif num == 3 fillword num == 4:\r\n    print(\"3 4\");","result":"Between 1 and 9\r\n3 4","words":{"operators":["or","and","not"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["and","or"]]},{"id":1432502508,"text":"Fill the missing words to match the output.","code":"num = 1;\r\nif fillword num != 1:\r\n    print(\"Equal To One\");","result":"Equal To One","words":{"operators":["and","or","not"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["not"]]}]},{"id":683065824,"name":"If Else Statements","tests":[{"id":1859375039,"question":"What's the output of the code snippet?","code":"age = 17;\r\n\r\nif age == 17:\r\n    print(\"1\");\r\n\r\nelse: \r\n    print(\"2 \");","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n\r\n<code>age == 17<\/code> is true so the code inside if clause is executed.\r\n<br><br>\r\nThe code inside the else block is not executed."},{"id":662761340,"question":"What's the output of the code snippet?","code":"num = 5;\r\n\r\nif num == 3:\r\n    print(\"1\");\r\n\r\nelse:\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>num = 5<\/code>\r\n<br><br>\r\n<code>num == 3<\/code> is false so the code inside the else clause is executed.\r\n<br><br>\r\nThe code inside the if block is not executed."},{"id":406130493,"question":"What's the output of the code snippet?","code":"num = 15;\r\n\r\nif num == 14:\r\n    print(\"1\");\r\n\r\nelif num == 15:\r\n    print(\"2\");\r\n\r\nelse:\r\n    print(\"3\");","answers":["2","2 3","1 3"],"correct_answer":"2","explanation":"<code>num = 15<\/code>\r\n<br><br>\r\n\r\n<code>num == 14<\/code> is false but <code>num == 15<\/code> is true so the code inside the elif clause is executed.\r\n<br><br>\r\nThe code inside the if and else blocks is not executed."},{"id":1390030586,"question":"What's the output of the code snippet?","code":"score = 90;\r\n\r\nif score <= 50:\r\n   print(\"low\");\r\n\r\nelif score <= 75:\r\n    print(\"medium\");\r\n\r\nelse:\r\n    print(\"high\");","answers":["low","medium","high"],"correct_answer":"high","explanation":"<code>score = 90<\/code>\r\n<br><br>\r\nBoth <code>score <= 50<\/code> and <code>score <= 75<\/code> are false. \r\n<br><br>\r\nThat's the reason why the code inside the else block is executed."},{"id":193941179,"question":"What's the output of the code snippet?","code":"num = 75;\r\n\r\nif num <= 50:\r\n    pass;\r\nelif num <= 75:\r\n    print(\"1\");\r\n\r\nelif num <= 80:\r\n    print(\"2\");","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>num = 75<\/code>\r\n<br><br>\r\n<code>num <= 50<\/code> is false and <code>num <= 75<\/code> is true thus \"1\" is printed.\r\n<br><br>\r\nSince  the condition of the first elif block is true, the next one (<code>num <= 80<\/code>) is not checked.\r\n<br><br>\r\n<code>pass<\/code> is used to avoid exception throw when if statement is empty."}],"puzzles":[{"id":236413101,"text":"Fill the missing words to match the output.","code":"num = 5;\r\nif num fillword 10:\r\n    print(\"More than 10\");\r\n\r\nfillword:\r\n    print(\"Less than 10\");","result":"Less than 10","words":{"operators":["<","<=",">",">="],"values":[],"variables_constants":[],"others":["else","if"]},"correct_patterns":[[">=","else"],[">","else"]]},{"id":1086029930,"text":"Fill the missing words to match the output.","code":"num = 1;\r\n\r\nif num == fillword:\r\n    print(\"Equal to 0\");\r\n\r\nfillword num == fillword:\r\n    print(\"Equal to 1\");","result":"Equal to 1","words":{"operators":[],"values":["0","1"],"variables_constants":[],"others":["if","else","elif","=="]},"correct_patterns":[["0","elif","1"]]},{"id":963158059,"text":"Fill the missing words to match the output.","code":"num = 7;\r\n\r\nif num == fillword:\r\n    print(\"A\");\r\n\r\nelif num == fillword:\r\n    print(\"B\");\r\n\r\nfillword:\r\n    print(\"C\");","result":"C","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["if","else","elif"]},"correct_patterns":[["5","6","else"],["6","5","else"]]}]},{"id":1510474094,"name":"While Loop","tests":[{"id":1279028856,"question":"What's the output of the code snippet?","code":"num = 0;\r\nwhile num < 3:\r\n    print(num);\r\n    num += 1;","answers":["1 2 3","0 1 2","0 1 2 3"],"correct_answer":"0 1 2","explanation":"<code>num = 0<\/code>\r\n<br><br>\r\nLoop ends when <code>num<\/code> reaches value of 3.\r\n<br><br>\r\n3 is the first value that's false for the condition <code>num < 3<\/code>.\r\n<br><br>\r\n<code>num += 1<\/code> increments the value by 1."},{"id":115379769,"question":"What's the output of the code snippet?","code":"num = 1;\r\nwhile num < 5:\r\n    print(num);","answers":["1 2 3 4","1 2 3 4 5","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num = 1<\/code>\r\n<br><br>\r\nThe condition <code>num < 5<\/code> is always true since there is no modification like <code>num += 1<\/code>."},{"id":2140514758,"question":"What's the output of the code snippet?","code":"num = 2;\r\nwhile num < 7:\r\n    num += 2;\r\n    print(num);","answers":["2 4 6 8","4 6","4 6 8"],"correct_answer":"4 6 8","explanation":"<code>num = 2<\/code>\r\n<br><br>\r\n<code>num < 7<\/code> remains true until <code>num<\/code> reaches value of 8.\r\n<br><br>\r\nThe loop ends when <code>num < 7<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":809159047,"question":"What's the output of the code snippet?","code":"num = 10;\r\nprint(num);\r\n\r\nwhile num < 10:\r\n    print(num);\r\n    num += 1;","answers":["10","10 10","10 11"],"correct_answer":"10","explanation":"<code>num < 10<\/code> is false and the loop doesn't execute."},{"id":1794107716,"question":"What's the output of the code snippet?","code":"num = 20;\r\n\r\nwhile num > 10:\r\n    print(num);\r\n    num -= 5;","answers":["20","20 15","20 15 10"],"correct_answer":"20 15","explanation":"<code>num > 10<\/code> remains true until <code>num<\/code> decrements to 10.\r\n<br><br>\r\nThe loop ends when <code>num > 10<\/code> becomes false.\r\n<br><br>\r\n<code>num -= 5<\/code> decrements the value by 5."}],"puzzles":[{"id":1914553320,"text":"Fill the missing words to match the output.","code":"num = 1;\r\n\r\nwhile num fillword fillword:\r\n    print(num);\r\n    num += 1;","result":"1 2 3 4 5","words":{"operators":["<","<=",">",">="],"values":["4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","5"],["<","6"]]},{"id":885187497,"text":"Fill the missing words to match the output.","code":"num = 12;\r\n\r\nwhile num fillword fillword:\r\n    print(num);\r\n    fillword;","result":"12 14 16 18 20","words":{"operators":["<","<=",">",">="],"values":["18","20","21"],"variables_constants":[],"others":["num += 1","num += 2","num -= 1"]},"correct_patterns":[["<=","20","num += 2"],["<","21","num += 2"]]},{"id":1836516214,"text":"Fill the missing words to match the output.","code":"num = fillword;\r\n\r\nwhile num > 0:\r\n    fillword;\r\n    print(num);","result":"9 6 3 0","words":{"operators":[],"values":["9","10","12","13"],"variables_constants":[],"others":["num -= 1","num += 3","num -= 3"]},"correct_patterns":[["12","num -= 3"]]}]},{"id":1432502508,"name":"For Loop","tests":[{"id":597428485,"question":"What's the output of the code snippet?","code":"for i in range(1, 5):\r\n    print(i);","answers":["1 2 3 4","1 2 3 4 5","1 1 1 1 1"],"correct_answer":"1 2 3 4","explanation":"<code>for i in range(1, 5)<\/code> executes for i = 1, 2, 3 and 4.\r\n<br><br>\r\nThe first argument - 1 is the initial value of <code>i<\/code>.\r\n<br><br>\r\nThe second argument - 5 specifies what's the minimum value <code>i<\/code> needs to reach for the loop to end. \r\n<br><br>\r\nThere is no third argument so <code>i<\/code> is inremented by 1."},{"id":1681991874,"question":"What's the output of the code snippet?","code":"for i in range(2, 9, 2):\r\n    print(i);","answers":["2 4 6","2 4 6 8","2 3 4 5 6 7 8"],"correct_answer":"2 4 6 8","explanation":"<code>for i in range(2, 9, 2)<\/code> executes for i = 2, 4, 6 and 8.\r\n<br><br>\r\nThe first argument - 2 is the initial value of <code>i<\/code>.\r\n<br><br>\r\nThe second argument - 9 specifies what's the minimum value <code>i<\/code> needs to reach for the loop to end. \r\n<br><br>\r\nThe last argument - 2 is the value that <code>i<\/code> is incremented by."},{"id":1593198723,"question":"What's the output of the code snippet?","code":"for i in range(1, -2, -1):\r\n    print(i);","answers":["1 0 -1","1 0","1"],"correct_answer":"1 0 -1","explanation":"<code>for i in range(1, -2, -1)<\/code> executes for i = 1, 0 and -1.\r\n<br><br>\r\nThe first argument - 1 is the initial value of <code>i<\/code>.\r\n<br><br>\r\nThe second argument -2 specifies what's the minimum value <code>i<\/code> needs to reach for the loop to end. \r\n<br><br>\r\nThe last argument -1  is the value that <code>i<\/code> is incremented by.\r\n<br>\r\nIn this case it would be like <code>i -= 1<\/code>."},{"id":396060736,"question":"What's the output of the code snippet?","code":"for i in range(11, 2, -3):\r\n    print(i);","answers":["11 8 5 2","11 8 5","11 8"],"correct_answer":"11 8 5","explanation":"<code>for i in range(11, 2, -3)<\/code> executes for i = 11, 8 and 5.\r\n<br><br>\r\nThe first argument - 11 is the initial value of <code>i<\/code>.\r\n<br><br>\r\nThe second argument - 2 specifies what's the minimum value <code>i<\/code> needs to reach for the loop to end. \r\n<br><br>\r\nThe last argument - -3 is the value that <code>i<\/code> is incremented by.\r\n<br>\r\nIn this case it would be <code>i -= 3<\/code>."},{"id":1213171713,"question":"What's the output of the code snippet?","code":"print(0);\r\nfor i in range(1, 1):\r\n    print(i);","answers":["0","0 1","0 1 2"],"correct_answer":"0","explanation":"The initialization is <code>i = 1<\/code>.\r\n<br><br>\r\nThe loop is supposed to execute until <code>i<\/code> reaches value of 1 (the second argument).\r\n<br><br>\r\n<code>i<\/code> has already reached value of 1 so the loop executes 0 times."}],"puzzles":[{"id":639902519,"text":"Fill the missing words to match the output.","code":"for i in range(fillword, fillword):\r\n    print(i);","result":"0 1 2 3 4","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","5"]]},{"id":415843060,"text":"Fill the missing words to match the output.","code":"for i in range(fillword, fillword, fillword):\r\n    print(i);","result":"1 3 5 7 9 11","words":{"operators":[],"values":["0","1","2","3","9","10","11","12"],"variables_constants":[],"others":[]},"correct_patterns":[["1","12","2"]]},{"id":1367237301,"text":"Fill the missing words to match the output.","code":"for i in range(fillword, fillword, fillword):\r\n    print(i);","result":"5 4 3 2 1","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","-1"]]}]},{"id":236413101,"name":"Break And Continue","tests":[{"id":50113486,"question":"What's the output of the code snippet?","code":"for i in range(1, 10, 3):\r\n    print(i);\r\n    if(i == 4):\r\n        break;","answers":["1","1 4","1 4 7"],"correct_answer":"1 4","explanation":"The <code>break<\/code> keyword ends the loop when <code>i<\/code> reaches value of 4.\r\n\r\n<br><br>\r\n<code>i<\/code> is printed before terminating the loop via\r\n<code>break<\/code>."},{"id":2074200975,"question":"What's the output of the code snippet?","code":"num = 10;\r\n\r\nwhile num < 20:\r\n    print(num);\r\n    num += 4;\r\n    \r\n    if num == 18:\r\n        break;","answers":["10 14","10 14 18","10 14 18 22"],"correct_answer":"10 14","explanation":"The <code>break<\/code> keyword ends the loop when <code>num<\/code> reaches value of 18.\r\n\r\n<br><br>\r\n<code>num<\/code> reaches value of 18 after \"14\" is printed."},{"id":1012329292,"question":"What's the output of the code snippet?","code":"for i in range(0, 6, 2):\r\n    if i == 2:\r\n        continue;\r\n    \r\n    print(i);","answers":["0 4","0 2 4","0 4 6"],"correct_answer":"0 4","explanation":"The loop executes for i = 0, 2 and  4.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."},{"id":1996163853,"question":"What's the output of the code snippet?","code":"number = 0;\r\n\r\nwhile number < 7:\r\n    number += 3;\r\n\r\n    if number == 6:\r\n        continue;\r\n\r\n    print(number);","answers":["3 6 9","3 9","3"],"correct_answer":"3 9","explanation":"The loop executes for number = 3, 6, 9.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for number = 6 so all values except 6 are printed."},{"id":799550154,"question":"What's the output of the code snippet?","code":"print('a');\r\nfor i in range(1, 5):\r\n    if(i == 6):\r\n        break;\r\nelse:\r\n    print('b');","answers":["a","b","a b"],"correct_answer":"a b","explanation":"<code>i == 6<\/code> is never true so the loop is never terminated via <code>break<\/code>.\r\n<br><br>\r\nSince the loop is not terminated the else block executes and 'b' is printed."}],"puzzles":[{"id":170033778,"text":"Fill the missing words to match the output.","code":"sum = 0;\r\nfor i in range(1, 8):\r\n    print(i);\r\n    sum += i;\r\n    \r\n    if sum == fillword:\r\n        fillword;","result":"1 2 3 4","words":{"operators":[],"values":["6","10","15","21"],"variables_constants":[],"others":["continue","break"]},"correct_patterns":[["10","break"]]},{"id":1289200179,"text":"Fill the missing words to match the output.","code":"for i in range(1, 6):\r\n    if i == fillword:\r\n        fillword;\r\n    \r\n    print(i);","result":"1 2 4 5","words":{"operators":[],"values":["2","3","4","5"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["3","continue"]]},{"id":92589552,"text":"Fill the missing words to match the output.","code":"sum = 0;\r\nfor i in range(fillword, 100, 2):\r\n    print(i);\r\n    sum += i;\r\n    \r\n    if sum == fillword:\r\n        print(sum);\r\n        fillword;","result":"2 4 6 8 20","words":{"operators":[],"values":["0","1","2","20","30"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["2","20","break"]]}]},{"id":1086029930,"name":"Nested If","tests":[{"id":1616726667,"question":"What's the output of the code snippet?","code":"if(True):\r\n    print(\"1\");\r\n\r\n    if(True):\r\n        print(\"2\");\r\nelse:\r\n    print(\"3\");","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The code inside the outer if executes since it's condition is true thus \"1\" is printed.\r\n<br><br>\r\nBoth outer and inner if-s have true conditions, so \"2\" is printed too.\r\n<br><br>\r\nThe else block code does not execute because the outer if has true condition."},{"id":1493330504,"question":"What's the output of the code snippet?","code":"number = 10;\r\nif number >= 10:\r\n    print(\"1\");\r\n\r\n    if number < 10:\r\n        print(\"2\");\r\nelse:\r\n    print(\"3\");","answers":["1","1 2","3"],"correct_answer":"1","explanation":"The condition <code>number >= 10<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nThe condition <code>number < 10<\/code> is false so \"2\" is not printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number >= 10<\/code> is true ."},{"id":330729993,"question":"What's the output of the code snippet?","code":"number = 5;\r\nif(number == 5):\r\n    number += 1;\r\n    print(\"1\");\r\n\r\n    if number == 6:\r\n        print(\"2\");\r\nelse:\r\n    print(\"3\");","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The condition <code>number == 5<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nAfter incrementing <code>number<\/code> the <code>number == 6<\/code> condition becomes true so \"2\" is printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number == 5<\/code> is true."},{"id":1415288278,"question":"What's the output of the code snippet?","code":"number = 5;\r\nif number == 5:\r\n    print(\"1\");\r\n\r\n    if number > 0:\r\n        print(\"2\");\r\n\r\n        if number > 3:\r\n            print(\"3\");","answers":["1","1 2","1 2 3"],"correct_answer":"1 2 3","explanation":"All of the three conditions are true so \"1\", \"2\" and \"3\" are printed."},{"id":218674583,"question":"What's the output of the code snippet?","code":"number = 10;\r\nif number == 5:\r\n    print(\"1\");\r\n\r\nelse:\r\n    print(\"2\");\r\n    if number == 10:\r\n        print(\"3\");","answers":["1","2","2 3"],"correct_answer":"2 3","explanation":"The condition <code>number == 5<\/code> is false so the else block is executed and \"2\" is printed.\r\n<br><br>\r\n<code>number == 5<\/code> is false and <code>number == 10<\/code> is true so \"3\" is printed too."}],"puzzles":[{"id":2116677041,"text":"Fill the missing words to match the output.","code":"score = 100;\r\n\r\nif score > fillword:\r\n    print(\"High\");\r\n\r\n    if score fillword fillword:\r\n        print(\"Max Score\");","result":"High\r\nMax Score","words":{"operators":["=="],"values":["80","100","110"],"variables_constants":[],"others":[]},"correct_patterns":[["80","==","100"]]},{"id":819858814,"text":"Fill the missing words to match the output.","code":"level = fillword;\r\n\r\nif level > fillword and level <= 100:\r\n    print(\"Valid Level\");\r\n\r\n    if level fillword 10 == 0:\r\n        print(\"Contains Boss\");","result":"Valid Level\r\nContains Boss","words":{"operators":["-","+","\/","%"],"values":["40","0"],"variables_constants":[],"others":[]},"correct_patterns":[["40","0","%"]]},{"id":1770204479,"text":"Fill the missing words to match the output.","code":"calories = 200;\r\n\r\nif calories fillword 100:\r\n    print(\"High\");\r\n    calories += fillword;\r\n\r\n    if calories fillword 300:\r\n        print(\"Very High\");","result":"High\r\nVery High","words":{"operators":[">",">="],"values":["50","100"],"variables_constants":[],"others":[]},"correct_patterns":[[">","100",">="]]}]},{"id":963158059,"name":"Nested Loops","tests":[{"id":1203623252,"question":"What's the output of the code snippet?","code":"for i in range(0, 1):\r\n    print(i);\r\n    for j in range(0, 1):\r\n        print(j);","answers":["0","0 0","0 0 1 1"],"correct_answer":"0 0","explanation":"Both inner and outer loop execute only once for <code>i = 0<\/code> and <code>j = 0<\/code> ."},{"id":946009365,"question":"What's the output of the code snippet?","code":"for i in range(0, 2):\r\n    print(i);\r\n    for j in range(0, 0):\r\n        print(j);","answers":["0","0 0","0 1"],"correct_answer":"0 1","explanation":"The outer loop executes twice - for i = 0 and i = 1.\r\n<br><br>\r\nThe inner loop does not execute since <code>i<\/code> is initialized as 0 and the loop is supposed to end when <code>i<\/code> reaches value of 0."},{"id":1897338066,"question":"What's the output of the code snippet?","code":"for i in range(0, 3):\r\n    print(i);\r\n    for j in range(0, 1):\r\n        print(j);","answers":["0 0 1 0 2 0","0 0 1 0","0 1 2"],"correct_answer":"0 0 1 0 2 0","explanation":"The outer loop executes 3 times - for i = 0, 1 and 2.\r\n<br><br>\r\nThe inner loop executes once each time the outer loop iterates. \r\n<br><br>\r\nAll zeroes except for the first one are printed by the inner loop."},{"id":734278803,"question":"What's the output of the code snippet?","code":"for a in range(0, 2):\r\n    print(a);\r\n    for b in range(0, 1):\r\n        print(b);\r\n        for c in range(0, 1):\r\n            print(c);","answers":["0 0 0 1 1 1","0 0 1 0 0 0","0 0 0 1 0 0"],"correct_answer":"0 0 0 1 0 0","explanation":"The outer loop executes twice.\r\n<br><br>\r\nEach iteration of the outer loop makes the inner loops to execute once."},{"id":1818842192,"question":"What's the output of the code snippet?","code":"i = 1;\r\nwhile i <= 3:\r\n    j = 0;\r\n\r\n    while j < 2:\r\n        print(j);\r\n        j += 1;","answers":["0 1 0 1","0 1 0 1 0 1","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"Modification such as <code>i += 1<\/code> is missing for the outer loop."}],"puzzles":[{"id":573590780,"text":"Fill the missing words to match the output.","code":"for a in range(1, fillword):\r\n    for b in range(1, fillword):\r\n        print(fillword, fillword);","result":"1 1\r\n1 2\r\n2 1\r\n2 2\r\n3 1\r\n3 2","words":{"operators":[],"values":["1","2","3","4","5"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["4","3","a","b"]]},{"id":1692757181,"text":"Fill the missing words to match the output.","code":"for a in range(1, fillword):\r\n    row = \"\";\r\n    for b in range(1, fillword + 1):\r\n        row += str(fillword) + \" \"\r\n\r\n    print(row);","result":"1\r\n1 2\r\n1 2 3\r\n1 2 3 4","words":{"operators":[],"values":["3","4","5","6"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["5","a","b"]]},{"id":1569295482,"text":"Fill the missing words to match the output.","code":"for row in range(1, 6):\r\n    line = \"\";\r\n    for col in range(1, row + 1, fillword):\r\n        if row fillword col:\r\n            line += str(fillword);\r\n        else:\r\n            line += \" \";\r\n\r\n    print(line);","result":"1\r\n 2\r\n  3\r\n   4\r\n    5","words":{"operators":["<","==","!="],"values":["1","2","3","5","6"],"variables_constants":["col","row"],"others":[]},"correct_patterns":[["1","==","row"],["1","==","col"]]}]},{"id":1426057601,"name":"Strings","tests":[{"id":1253237612,"question":"What's the output of the code snippet?","code":"str = 'Hello';\r\nprint(str[1]);","answers":["H","e","o"],"correct_answer":"e","explanation":"The string has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>H<\/td>\r\n            <td class=\"table-primary\">e<\/td>\r\n            <td>l<\/td>\r\n            <td>l<\/td>\r\n            <td>o<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":57082669,"question":"What's the output of the code snippet?","code":"str1 = 'abc';\r\nstr2 = 'defg';\r\n\r\nprint(len(str1) + len(str2));","answers":["7","8","9"],"correct_answer":"7","explanation":"The <code>len<\/code> function returns the count of the symbols:\r\n<br><br>\r\n<code>len(str1)<\/code> is 3\r\n<br>\r\n<code>len(str2)<\/code> is 4\r\n<br>\r\n3 + 4 = 7"},{"id":1142170346,"question":"What's the output of the code snippet?","code":"color = 'green';\r\n\r\nprint(color[4], color[5]);","answers":["e n","n 0","Exception"],"correct_answer":"Exception","explanation":"<code>color<\/code> has the following structure:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>g<\/td>\r\n            <td>r<\/td>\r\n            <td>e<\/td>\r\n            <td>e<\/td>\r\n            <td>n<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br><br>\r\n<code>color[5]<\/code> accesses index that's outside of the bound (0 - 4) which results in exception."},{"id":1052328619,"question":"What's the output of the code snippet?","code":"word = 'Arena';\r\n\r\nprint('na' in word);\r\nprint('A' not in word);","answers":["True True","True False","False True"],"correct_answer":"True False","explanation":"'na' is contained in 'Arena' so <br>\r\n<code>'na' in word<\/code> returns True\r\n<br><br>\r\n'A' is contained in 'Arena' (it's first symbol) so <br>\r\n<code>'A' not in word<\/code> returns False."},{"id":2003722856,"question":"What's the output of the code snippet?","code":"equation = '160 + 135 = 295';\r\n\r\nfor symbol in equation:\r\n    if symbol not in '12':\r\n        print(symbol);","answers":["160 + 135 = 295","60 + 35 = 95","1 1 2"],"correct_answer":"60 + 35 = 95","explanation":"The for loop iterates over each symbol of the equation.\r\n<br><br>\r\nOnly symbols that are not '1' and '2' are printed. That's specified via <code>symbol not in '12'<\/code>.\r\n<br><br>\r\n\r\nBasically <code>1<\/code>60 + <code>1<\/code>35 = <code>2<\/code>95 is simplified to: <br>\r\n60 + 35 = 95"}],"puzzles":[{"id":373206075,"text":"Fill the missing words to match the output.","code":"str = 'clarity';\r\nprint(str[fillword], str[fillword], str[fillword]);","result":"c a t","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","5"]]},{"id":1222889464,"text":"Fill the missing words to match the output.","code":"str = 'jacket';\r\nprint(fillword(str) + fillword);","result":"10","words":{"operators":[],"values":["1","2","3","4","5","6","7","8"],"variables_constants":[],"others":["size","count","len"]},"correct_patterns":[["len","4"]]},{"id":26275769,"text":"Fill the missing words to match the output.","code":"str = 'readability';\r\n\r\nfor fillword in fillword:\r\n    if fillword in fillword:\r\n        print(letter);","result":"a a b","words":{"operators":[],"values":["'ab'"],"variables_constants":["letter","letter","str","str"],"others":[]},"correct_patterns":[["letter","str","letter","'ab'"]]}]}],"Advanced":[{"id":885187497,"name":"Arrays","tests":[{"id":622752785,"question":"What's the output of the code snippet?","code":"arr = [5, 10, 15];\r\nprint(arr[1]);","answers":["5","10","15"],"correct_answer":"10","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":532846558,"question":"What's the output of the code snippet?","code":"colors = [\"blue\", \"green\", \"pink\"];\r\n\r\nfor i in range(0, 2):\r\n    print(colors[i]);","answers":["blue green","blue green pink","green pink"],"correct_answer":"blue green","explanation":"The loop executes for i = 0 and i = 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">blue<\/td>\r\n            <td class=\"table-primary\">green<\/td>\r\n            <td>pink<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1350023071,"question":"What's the output of the code snippet?","code":"ages = [10, 15, 20, 25, 30];\r\nprint(len(ages));","answers":["5","4","30"],"correct_answer":"5","explanation":"The <code>len<\/code> function returns the count of the array elements.\r\n<br><br>\r\nThe array has 5 elements."},{"id":153409372,"question":"What's the output of the code snippet?","code":"numbers = [];\r\nprint(numbers[0]);","answers":["None","null","Exception"],"correct_answer":"Exception","explanation":"The array does not contain any elements.\r\n<br><br>\r\nAccessing indexes that are out of array's bounds results in exception."},{"id":1137309469,"question":"What's the output of the code snippet?","code":"numbers = [1, 2, 3];\r\nprint(numbers[3]);","answers":["3","1","Exception"],"correct_answer":"Exception","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nAccessing index that's outside of it's bounds results in exception."}],"puzzles":[{"id":2051346246,"text":"Fill the missing words to match the output.","code":"arr = [8, 4, 5, 6, 3];\r\n\r\nprint(arr[fillword]);\r\nprint(arr[fillword]);\r\nprint(arr[fillword]);","result":"8 5 3","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","4"]]},{"id":1021980423,"text":"Fill the missing words to match the output.","code":"arr = [5, 7, 9, 3];\r\n\r\nfor i in range(fillword, fillword):\r\n    print(arr[fillword]);","result":"5 7 9 3","words":{"operators":[],"values":["0","1","2","3","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["0","4","i"]]},{"id":1973374660,"text":"Fill the missing words to match the output.","code":"arr = [1, 2, 9, 8, 6];\r\n\r\nfor i in range(0, fillword):\r\n    if i % 2 == fillword:\r\n        print(arr[fillword]);","result":"1 9 6","words":{"operators":[],"values":["0","1","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","i"]]}]},{"id":1836516214,"name":"Functions Basics","tests":[{"id":75372250,"question":"What's the output of the code snippet?","code":"def a():\r\n    print(\"1\");\r\n\r\ndef b():\r\n    print(\"2\");\r\n\r\na();","answers":["1","2","1 2"],"correct_answer":"1","explanation":"The function <code>a<\/code> is called (<code>a();<\/code>) thus \"1\" is printed."},{"id":2099459739,"question":"What's the output of the code snippet?","code":"def getSum(a, b, c):\r\n\treturn a + b + c;\r\n\r\n\r\nsum = getSum(2, 4, 3);\r\nprint(sum);","answers":["0","9","243"],"correct_answer":"9","explanation":"The <code>getSum<\/code> function is called with 3 parameters - 2, 4 and 3 which sum is 9."},{"id":936400472,"question":"What's the output of the code snippet?","code":"def printArg(number):\r\n    print(number);\r\n\r\n\r\nprintArg();","answers":["0","1","Exception"],"correct_answer":"Exception","explanation":"The function <code>printArg<\/code> accepts 1 argument but none are passed to it thus exception is thrown."},{"id":1753576985,"question":"What's the output of the code snippet?","code":"def printName(name = \"Unknown\"):\r\n\tprint(name);\r\n\r\n\r\nprintName();\r\nprintName(\"Joe\");","answers":["Unknown Unknown","Unknown Joe","Exception"],"correct_answer":"Unknown Joe","explanation":"The <code>name<\/code> argument has default value - <code>\"Unknown\"<\/code>.\r\n<br><br>\r\nWhen <code>printName<\/code> is called without argument <code>name<\/code> takes it's default value - <code>Unknown<\/code>."},{"id":556372390,"question":"What's the output of the code snippet?","code":"prod = getProd(1, 2, 3);\r\nprint(prod);\r\n\r\ndef getProd(a, b, c):\r\n\treturn a * b * c;","answers":["123","6","Exception"],"correct_answer":"Exception","explanation":"<code>def getProd(a, b, c)<\/code> is defined after the function call (<code>getProd(1, 2, 3);<\/code>) which causes exception.\r\n<br><br>\r\nIn order to avoid the exception the function <code>getProd<\/code> needs to be defined before the function call."}],"puzzles":[{"id":776760965,"text":"Fill the missing words to match the output.","code":"def a():\r\n    print(1);\r\n\r\ndef b():\r\n    print(2);\r\n\r\nfillword;\r\nfillword;","result":"1 2","words":{"operators":[],"values":[],"variables_constants":[],"others":["a","b","a()","b()"]},"correct_patterns":[["a()","b()"]]},{"id":1626377794,"text":"Fill the missing words to match the output.","code":"fillword sumNums(a, b):\r\n    fillword a + b;\r\n\r\nsum = sumNums(fillword);\r\nprint(sum);","result":"7","words":{"operators":[],"values":[],"variables_constants":[],"others":["def","return","function","2, 5","7"]},"correct_patterns":[["def","return","2, 5"]]},{"id":1504030211,"text":"Fill the missing words to match the output.","code":"def printArgs(a, b, fillword):\r\n  print(a, b, c);\r\n\r\nprintArgs(fillword);","result":"1 2 5","words":{"operators":[],"values":[],"variables_constants":[],"others":["c","c = 5","1, 2","1, 2, 3"]},"correct_patterns":[["c = 5","1, 2"]]}]},{"id":1626377794,"name":"Functions Advanced","tests":[{"id":896401149,"question":"What's the output of the code snippet?","code":"def calcNums(*nums):\r\n    calculation = 1;\r\n    \r\n    for num in nums:\r\n        calculation *= num;\r\n\r\n    return calculation;\r\n    \r\n    \r\nprint(calcNums(1, 2, 3, 4));","answers":["4","10","24"],"correct_answer":"24","explanation":"<code>calcNums<\/code> multiplies the passed numbers (1 x 2 x 3 x 4 = 24).\r\n<br><br>\r\nArguments with <code>*<\/code> prefix contain the values of all passed parameters.\r\n<br><br>\r\nBasically <code>nums<\/code> is array of values."},{"id":1846681274,"question":"What's the output of the code snippet?","code":"def calc(*args):\r\n    count = len(args);\r\n    elem = args[count - 1];\r\n    \r\n    return count * elem;\r\n    \r\n\r\nprint(calc(2,2,1,3));","answers":["4","8","12"],"correct_answer":"12","explanation":"Arguments with <code>*<\/code> prefix contain the values of all passed parameters.\r\n<br><br>\r\n<code>len(args)<\/code> is the count of the passed arguments - 4 in this case.\r\n<br><br>\r\n<code>args[count - 1]<\/code> is the value of the last passed argument - 3 in  this case.\r\n<br><br>\r\n4 * 3 = 12"},{"id":549928571,"question":"What's the output of the code snippet?","code":"def printNums(a, b, c):\r\n    print(a + 1, b + 2, c + 3);\r\n    \r\n\r\nprintNums(c = 1, b = 2, a = 3);","answers":["4 4 4","2 4 6","3 2 1"],"correct_answer":"4 4 4","explanation":"In this case the order of the passed arguments is not the same as the order of arguments in the function definition.\r\n<br><br>\r\nThe values of the arguments are:<br>\r\na = 3 <br>\r\nb = 2 <br>\r\nc = 1 <br>\r\n<br>\r\nThe printed results are: <br>\r\n3 + 1 = 4<br>\r\n2 + 2 = 4 <br>\r\n1 + 3 = 4"},{"id":427056696,"question":"What's the output of the code snippet?","code":"def printStrings(a, b, c):\r\n    print(a + b + c);\r\n    \r\n\r\nprintStrings(a = \"c\", c = \"t\", b = \"a\");","answers":["cta","tac","cat"],"correct_answer":"cat","explanation":"In this case the order of the passed arguments is not the same as the order of arguments in the function definition.\r\n<br><br>\r\nThe values of the arguments are:<br>\r\na = \"c\" <br>\r\nb = \"a\" <br>\r\nc = \"t\" <br>\r\n<br>\r\nThe order of the printed arguments is: <br>\r\na + b + c = <br>\r\n\"c\" + \"a\" + \"t\" =  <br>\r\n\"cat\""},{"id":1377401337,"question":"What's the output of the code snippet?","code":"def calcTrapezoidArea(**data):\r\n    return (data['a'] + data['b']) \/ 2 * data['h']\r\n    \r\n\r\narea = calcTrapezoidArea(h = 4, a = 3, b = 2);\r\nprint(area);","answers":["7","10","12"],"correct_answer":"10","explanation":"Arguments with <code>**<\/code> prefix contain the values of all passed parameters.\r\n<br><br>\r\nThe data is stored in key-value pairs.\r\n<br><br>\r\nIn this case <code>data<\/code> has the following key-value pairs:<br>\r\n'a' = 3 <br>\r\n'b' = 2 <br>\r\n'h' = 4 <br><br>\r\nThe calculations for <code>calcTrapezoidArea<\/code> are: <br>\r\n(a + b) \/ 2 * h = <br>\r\n(3 + 2) \/ 2 * 4 = <br>\r\n5 \/ 2 * 4 = <br>\r\n2.5 * 4 = <br>\r\n10"}],"puzzles":[{"id":306891200,"text":"Fill the missing words to match the output.","code":"def printInfo(firstName, surname, age):\r\n  print('Name:', firstName);\r\n  print('Surname:', surname);\r\n  print('Age:', age); \r\n\r\nprintInfo(surname = fillword,\r\n    firstName = fillword, age = fillword);","result":"Name: Jason\r\nSurname: Jackson\r\nAge: 20","words":{"operators":[],"values":["20","21","'Jackson'","'Jason'"],"variables_constants":[],"others":[]},"correct_patterns":[["'Jackson'","'Jason'","20"]]},{"id":1426057601,"text":"Fill the missing words to match the output.","code":"def sumNums(fillword):\r\n    sum = 0;\r\n    for num in numbers:\r\n        sum += num;\r\n    return sum;\r\n\r\nprint(sumNums(fillword, fillword, fillword));","result":"9","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":[],"others":["numbers","*numbers","**numbers"]},"correct_patterns":[["*numbers","2","3","4"]]},{"id":229378382,"text":"Fill the missing words to match the output.","code":"def calcAverageCode(fillword):\r\n    sum = fillword;\r\n    for key, val in data.items():\r\n        sum += val;\r\n    \r\n    return sum \/ fillword;\r\n\r\nprint(calcAverageCode(a = 1, b = 3,\r\n    c = 2, d = 6));","result":"3","words":{"operators":[],"values":["0","1","2","3"],"variables_constants":[],"others":["data","*data","**data","len(data)"]},"correct_patterns":[["**data","0","len(data)"]]}]},{"id":639902519,"name":"Associative Arrays","tests":[{"id":467579239,"question":"What's the output of the code snippet?","code":"clothes = dict();\r\n\r\nclothes[\"Sweather\"] = 55;\r\nclothes[\"Jeans\"] = 45;\r\n\r\nprint(clothes[\"Jeans\"]);","answers":["0","45","55"],"correct_answer":"45","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td class=\"table-primary\">Jeans<\/td>\r\n            <td>Sweather<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td class=\"table-primary\">45<\/td>\r\n            <td>55<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe value 45 is accessed via the \"Jeans\" key."},{"id":1552142628,"question":"What's the output of the code snippet?","code":"fruits = dict();\r\n\r\nfruits[\"strawberry\"] = 2.5;\r\nfruits[\"cherry\"] = 1.8;\r\n\r\nprint(fruits[\"mango\"]);","answers":["Exception","0","2.5"],"correct_answer":"Exception","explanation":"The associative array doesn't contain \"mango\" key\r\nthus the code results in exception.\r\n<br><br>\r\nThe associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>cherry<\/td>\r\n            <td>strawberry<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>1.8<\/td>\r\n            <td>2.5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1340412066,"question":"What's the output of the code snippet?","code":"personsAges = dict();\r\n\r\npersonsAges[\"John\"] = 22;\r\npersonsAges[\"Alex\"] = 25;\r\n\r\nfor key, value in personsAges.items():\r\n    print(key);","answers":["John Alex","Alex John","22 25"],"correct_answer":"John Alex","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>John<\/td>\r\n            <td>Alex<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>22<\/td>\r\n            <td>25<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe for loop prints only the keys."},{"id":9056355,"question":"What's the output of the code snippet?","code":"playerScores = dict();\r\n\r\nplayerScores[\"Snowy\"] = 123;\r\nplayerScores[\"Avian\"] = 130;\r\n\r\ndel playerScores[\"Snowy\"];\r\n\r\nfor key, value in playerScores.items():\r\n    print(value);","answers":["123","130","123 130"],"correct_answer":"130","explanation":"2 key-value pairs are added.\r\n<br><br>\r\nVia the del keyword one of the key-value pairs is removed.\r\n<br><br>\r\nThe for loop prints all values - which is only 130.\r\n<br><br>\r\nThe final structure of the associative array is:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Avian<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>130<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2034192416,"question":"What's the output of the code snippet?","code":"capitals = dict();\r\n\r\ncapitals[\"France\"] = \"Paris\";\r\ncapitals[\"Canada\"] = \"Ottawa\";\r\ncapitals[\"Spain\"] = \"Madrid\";\r\n\r\ndel capitals[\"Spain\"];\r\n\r\nprint(len(capitals));","answers":["0","2","3"],"correct_answer":"2","explanation":"The <code>len<\/code> function returns the count of the key-value pairs.\r\n<br><br>\r\n3 key-value pairs are added to the associative array and afterwards 1 is removed.\r\n<br><br>\r\n3 - 1 = 2"}],"puzzles":[{"id":1179724047,"text":"Fill the missing words to match the output.","code":"persons = dict();\r\npersons[fillword] = fillword;\r\npersons[fillword] = fillword;\r\n\r\nprint(persons[\"James\"], persons[\"Sophia\"]);","result":"26 22","words":{"operators":[],"values":["20","22","26","\"Jake\"","\"James\"","\"Sophia\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Sophia\"","22","\"James\"","26"],["\"James\"","26","\"Sophia\"","22"]]},{"id":1057376460,"text":"Fill the missing words to match the output.","code":"grades = dict();\r\ngrades[\"Olivia\"] = \"A\";\r\ngrades[\"James\"] = \"B\";\r\n\r\nfor key, value in grades.items():\r\n    print(fillword, fillword);","result":"Olivia A\r\nJames B","words":{"operators":[],"values":["Olivia","James"],"variables_constants":["key","value"],"others":[]},"correct_patterns":[["key","value"]]},{"id":1907058829,"text":"Fill the missing words to match the output.","code":"colors = dict();\r\ncolors[\"White\"] = \"#ffffff\";\r\ncolors[\"Black\"] = \"#000000\";\r\ncolors[fillword] = \"#00ff00\";\r\n\r\ndel colors[\"Black\"];\r\nprint(fillword(colors));","result":"2","words":{"operators":[],"values":["\"White\"","\"Black\"","\"Green\""],"variables_constants":[],"others":["len","keys","values"]},"correct_patterns":[["\"Green\"","len"]]}]},{"id":415843060,"name":"Matrix","tests":[{"id":871134177,"question":"What's the output of the code snippet?","code":"matrix = [\r\n    [2, 4, 6],\r\n    [1, 3, 5]\r\n];\r\n\r\nprint(matrix[1][1]);","answers":["1","2","3"],"correct_answer":"3","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th class=\"btn-primary\">[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>2<\/td>\r\n            <td>4<\/td>\r\n            <td>6<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[1]<\/th>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1955632046,"question":"What's the output of the code snippet?","code":"matrix = [\r\n    [5, 7, 8],\r\n    [2, 2, 3],\r\n    [4, 4, 9]\r\n];\r\n\r\nprint(matrix[2][2]);","answers":["2","4","9"],"correct_answer":"9","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th class=\"btn-primary\">[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>5<\/td>\r\n            <td>7<\/td>\r\n            <td>8<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>2<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[2]<\/th>\r\n            <td>4<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":759542639,"question":"What's the output of the code snippet?","code":"matrix = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n];\r\n\r\nfor i in range(0, 3):\r\n    print(matrix[i][i]);","answers":["0 4 8","0 3 6","0 1 2"],"correct_answer":"0 4 8","explanation":"Via the for loop the row-col positions of the matrix are: <br>\r\n[0][0],  [1][1], [2][2].\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td>6<\/td>\r\n            <td>7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1743442732,"question":"What's the output of the code snippet?","code":"matrix = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n];\r\n\r\nfor i in range(0, 3):\r\n    for j in range(0, 3):\r\n        if i == 2 or j == 2:\r\n            print(matrix[i][j]);","answers":["0 1 3 4","2 5 6 7 8","6 7 8"],"correct_answer":"2 5 6 7 8","explanation":"In this case <code>i<\/code> represents the row index and <code>j<\/code> - the column.<br><br>\r\nBasically the elements of the last column and row are printed.\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td class=\"btn-primary\">6<\/td>\r\n            <td class=\"btn-primary\">7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1486877421,"question":"What's the output of the code snippet?","code":"matrix = [\r\n    [ 0, 1, 0, 1, 0 ],\r\n    [ 1, 0, 1, 0, 1 ],\r\n    [ 0, 1, 0, 1, 0 ],\r\n    [ 1, 0, 1, 0, 1 ],\r\n];\r\n\r\nsum = 0;\r\nfor i in range(0, 4):\r\n    for j in range(0, 5):\r\n        if (i + j) % 2 == 0:\r\n            sum += matrix[i][j];\r\n\r\nprint(sum);","answers":["0","10","6"],"correct_answer":"0","explanation":"The elements which have even sum of row and column index are sumed.  It's like a chessboard field.\r\n<br><br>\r\nAll of the summed elements are 0s which makes the\r\nvalue of the <code>sum<\/code>  variable 0.\r\n<br><br>\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n            <th>[3]<\/td>\r\n            <th>[4]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[3]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":710903882,"text":"Fill the missing words to match the output.","code":"matrix = [\r\n    [4, 1, 6, 3 ],\r\n    [2, 8, 0, 7 ]\r\n];\r\n\r\nprint(matrix[fillword][fillword]);\r\nprint(matrix[fillword][fillword]);","result":"3 0","words":{"operators":[],"values":["0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","3","1","2"]]},{"id":1661773835,"text":"Fill the missing words to match the output.","code":"matrix = [\r\n    [ 4, 1, 6 ],\r\n    [ 3, 8, 0 ],\r\n    [ 7, 2, 5 ]\r\n];\r\nfor i in range(fillword):\r\n    print(matrix[fillword][fillword]);","result":"1 8 2","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i"],"others":[]},"correct_patterns":[["3","i","1"]]},{"id":632409032,"text":"Fill the missing words to match the output.","code":"matrix = [\r\n    [ 5, 2, 8 ],\r\n    [ 1, 3, 6 ],\r\n    [ 4, 0, 7 ]\r\n];\r\n\r\nfor i in range(0, 3):\r\n    for j in range(0, 3):\r\n        if i == fillword or j == fillword:\r\n            print(matrix[fillword][j]);","result":"5 1 4 0 7","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i","j"],"others":[]},"correct_patterns":[["2","0","i"]]}]},{"id":1367237301,"name":"Reference Passing","tests":[{"id":290198186,"question":"What's the output of the code snippet?","code":"def decrement(num):\r\n    num -= 1;\r\n\r\nnum = 5;\r\ndecrement(num);\r\nprint(num);","answers":["0","4","5"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 5 outside the <code>decrement<\/code> function.\r\n<br><br>\r\nPrimitive types (like int and string) are not passed by reference."},{"id":1274098283,"question":"What's the output of the code snippet?","code":"def printDecremented(num):\r\n    num -= 1;\r\n    print(num);\r\n\r\nnum = 7;\r\nprintDecremented(num);\r\nprint(num);","answers":["6 6","6 7","7 7"],"correct_answer":"6 7","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 7 outside the <code>printDecremented<\/code> function.\r\n<br><br>\r\nDespite that, the value gets decremented inside the <code>printDecremented<\/code> function."},{"id":212226600,"question":"What's the output of the code snippet?","code":"def add1ToArray(arr):\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n\r\narr = [0, 1];\r\nadd1ToArray(arr);\r\nprint(arr[0], arr[1]);","answers":["0 1","1 1","1 2"],"correct_answer":"1 2","explanation":"Array is always passed by reference so it's elements remain modified outside the <code>add1ToArray<\/code> function."},{"id":1162575337,"question":"What's the output of the code snippet?","code":"def add1ToArray(arr):\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n\r\narr = [1, 1];\r\nadd1ToArray(arr);\r\narr[0] += 1;\r\narr[1] += 1;\r\n\r\nprint(arr[0], arr[1]);","answers":["1 1","2 2","3 3"],"correct_answer":"3 3","explanation":"Array is always passed by reference so it's elements remain modified outside the <code>add1ToArray<\/code> function.\r\n<br><br>\r\nAfterwards the elements are incremented by one again."},{"id":1073716662,"question":"What's the output of the code snippet?","code":"def addAge(key):\r\n    personAges[key] += 1;\r\n\r\npersonAges = dict();\r\n\r\npersonAges['Joe'] = 20;\r\npersonAges['Vanesa'] = 19;\r\n\r\naddAge('Joe');\r\naddAge('Vanesa');\r\n\r\nprint(personAges['Joe'], personAges['Vanesa']);","answers":["20 19","20 20","21 20"],"correct_answer":"21 20","explanation":"Dictionaries are passed by reference. \r\n<br><br>\r\nFor that reason <code>personAges<\/code> remains modified outside the <code>addAge<\/code> function."}],"puzzles":[{"id":510061449,"text":"Fill the missing words to match the output.","code":"def add1(arr, number):\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n    number += 1;\r\n\r\narr = [9, 10];\r\nnumber = 9;\r\nadd1(arr, number);\r\n\r\nprint(fillword);\r\nprint(fillword);","result":"9 10","words":{"operators":[],"values":[],"variables_constants":["number","number - 1","arr[0]","arr[1]","arr[2]"],"others":[]},"correct_patterns":[["number","arr[0]"]]},{"id":1460341590,"text":"Fill the missing words to match the output.","code":"def add1ToArr(arr):\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n    arr[2] += 1;\r\n\r\narr = [0, 1, 2];\r\nadd1ToArr(arr);\r\n\r\nprint(arr[fillword]);\r\nprint(arr[fillword]);","result":"1 2","words":{"operators":[],"values":["-1","0","1","2","3","4"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]},{"id":163064599,"text":"Fill the missing words to match the output.","code":"def changeVarAndObj(num, obj, val):\r\n    obj['age'] = val;\r\n    num = val;\r\n\r\nperson = dict();\r\nperson['age'] = 17;\r\n\r\nnum = 17;\r\nchangeVarAndObj(num, person, 18);\r\n\r\nprint(fillword, fillword);","result":"17 18","words":{"operators":[],"values":[],"variables_constants":[],"others":["num","num - 1","person","person['age']","person['age'] - 1","person['age'] + 1"]},"correct_patterns":[["num","person['age']"]]}]},{"id":170033778,"name":"Sets","tests":[{"id":1890368887,"question":"What's the output of the code snippet?","code":"cities = set([\"Rome\", \"Rome\", \"Beljing\"]);\r\n\r\nfor city in cities:\r\n  print(city);","answers":["Rome Rome","Rome Rome Beljing","Beljing Rome"],"correct_answer":"Beljing Rome","explanation":"Set holds only unique values. \r\n<br><br>\r\nFor that reason \"Rome\" is contained only once."},{"id":693230900,"question":"What's the output of the code snippet?","code":"names = set([\"Michelle\", \"Emily\", \"Ally\", \"Ally\"]);\r\n\r\nprint(len(names));","answers":["2","3","4"],"correct_answer":"3","explanation":"Set holds only unique values. \r\n<br><br>\r\nThe \"Ally\" value is contained only once.\r\n<br><br>\r\nThe Set holds 3 values - \"Michelle\", \"Emily\" and \"Ally\"."},{"id":1644625141,"question":"What's the output of the code snippet?","code":"socialMedias = set();\r\n\r\nsocialMedias.add(\"Instagram\");\r\nsocialMedias.add(\"Snapchat\");\r\n\r\nsocialMedias.add(\"Facebook\");\r\nsocialMedias.add(\"Facebook\");\r\nsocialMedias.remove(\"Facebook\");\r\n\r\nprint(len(socialMedias));","answers":["2","3","4"],"correct_answer":"2","explanation":"The Set holds only unique values.\r\n<br><br>\r\nWhen \"Facebook\" value is removed only 2 values remain - \"Instagram\" and \"Snapchat\"."},{"id":615193778,"question":"What's the output of the code snippet?","code":"colors = set([\"gray\", \"blue\"]);\r\nprint(\"blue\" in colors);","answers":["pink","False","True"],"correct_answer":"True","explanation":"The Set contains 2 values - \"gray\" and \"blue\".\r\n<br><br>\r\n\"blue\" is contained in the Set thus <code>\"blue\" in colors<\/code> returns True."},{"id":492321907,"question":"What's the output of the code snippet?","code":"devices = set([\"smartphone\", \"tablet\"]);\r\ndevices.remove(\"tablet\");\r\n\r\nprint(\"tablet\" in devices);","answers":["tablet","True","False"],"correct_answer":"False","explanation":"The tablet value is removed from the Set thus <code>\"tablet\" in devices<\/code> returns false."}],"puzzles":[{"id":1114458836,"text":"Fill the missing words to match the output.","code":"names = set();\r\n\r\nnames.add(\"Mia\");\r\nnames.add(\"Lucas\");\r\nnames.add(fillword);\r\nnames.add(fillword);\r\n\r\nprint(len(names));","result":"2","words":{"operators":[],"values":["\"Jo\"","\"Mia\"","\"Joe\"","\"Lucas\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Mia\"","\"Lucas\""],["\"Lucas\"","\"Mia\""]]},{"id":991062677,"text":"Fill the missing words to match the output.","code":"numbers = set();\r\n\r\nnumbers.add(fillword);\r\nnumbers.add(5);\r\nnumbers.add(fillword);\r\n\r\nnumbers.remove(fillword);\r\n\r\nfor num in numbers:\r\n    print(num);","result":"1 7","words":{"operators":[],"values":["1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["1","7","5"]]},{"id":2110163538,"text":"Fill the missing words to match the output.","code":"cities = set();\r\n\r\ncities.add(fillword);\r\ncities.add(\"London\");\r\ncities.add(fillword);\r\n\r\nprint(fillword in cities);","result":"True","words":{"operators":[],"values":["\"Moscow\"","\"Wellington\"","\"London\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Moscow\"","\"Wellington\"","\"London\""],["\"Wellington\"","\"Moscow\"","\"London\""]]}]},{"id":1289200179,"name":"Recursion","tests":[{"id":1443716144,"question":"What's the output of the code snippet?","code":"def sum(num):\r\n    if num == 1:\r\n        return 1;\r\n\r\n    return num + sum(num - 1);\r\n    \r\nprint(sum(4));","answers":["1","4","10"],"correct_answer":"10","explanation":"The <code>sum<\/code> function sums the numbers from n to 1.\r\n<br><br> \r\nIn this case 4 + 3 + 2 + 1 = 10.\r\n<br><br>\r\nThe recursion ends when the condition <code>num == 1<\/code> is met."},{"id":145915889,"question":"What's the output of the code snippet?","code":"def sum(num):\r\n    return num + sum(num - 1);\r\n\r\nprint(sum(3));","answers":["3","6","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"There is no end condition of the recursion so Stackoverflow Exception is thrown.\r\n<br><br>\r\nA suitable end condition could be: <br>\r\nif num == 1:\r\n    return 1;"},{"id":1097244606,"question":"What's the output of the code snippet?","code":"def printArr(arr, index):\r\n    if(index < len(arr)):\r\n        print(arr[index]);\r\n        printArr(arr, index + 1);\r\n\r\n\r\narr = [1, 2, 3, 4];\r\nprintArr(arr, 0);","answers":["1","1 2 3 4","Stackoverflow Exception"],"correct_answer":"1 2 3 4","explanation":"The function prints all elements of the array by passing array and  index of element.\r\n<br><br>\r\nThe index gets incremented each time so the next element is printed.\r\n<br><br>\r\nThe recursion ends when the condition <code>index < len(arr)<\/code> becomes false."},{"id":973848447,"question":"What's the output of the code snippet?","code":"def printUntilZero(arr, index):\r\n    if arr[index] != 0:\r\n        print(arr[index]);\r\n        printUntilZero(arr, index + 1);\r\n        \r\narr = [ 1, 2, 3, 4, 5];\r\nprintUntilZero(arr, 0);","answers":["0","1 2 3 4 5","Exception"],"correct_answer":"Exception","explanation":"The recursion is supposed to end when element with value of zero is found.\r\n<br><br>\r\nThe passed array does not contain any 0s so the index increments until it goes out of array's bounds.\r\n<br><br>\r\nAccessing index outside of array's bounds results in exception."},{"id":2092490556,"question":"What's the output of the code snippet?","code":"def calculate(num):\r\n    if num == 0:\r\n        return 0;\r\n\r\n    if num % 2 == 1:\r\n        num -= 1;\r\n\r\n    return num + calculate(num - 2);\r\n    \r\nsum = calculate(7);\r\nprint(sum);","answers":["7","12","16"],"correct_answer":"12","explanation":"The function <code>calculate<\/code> sums the numbers 6, 4, 2 and 0.\r\n<br><br>\r\n6 + 4 + 2 + 0 = 12"}],"puzzles":[{"id":913025555,"text":"Fill the missing words to match the output.","code":"def sumNums(num):\r\n    if num > 1:\r\n        return fillword + sumNums(fillword);\r\n\r\n    return fillword;\r\n    \r\nnumSum = sumNums(fillword);\r\nprint(numSum);","result":"15","words":{"operators":[],"values":["-1","0","1","3","4","5"],"variables_constants":["num","num - 1","num + 1"],"others":[]},"correct_patterns":[["num","num - 1","1","5"]]},{"id":1863890384,"text":"Fill the missing words to match the output.","code":"def printUntil(printNum, stop):\r\n    if fillword <= stop:\r\n        print(printNum);\r\n        printUntil(fillword, fillword);\r\n\r\nprintUntil(2, fillword);","result":"2 4 8 16","words":{"operators":[],"values":["8","16","32"],"variables_constants":[],"others":["printNum","printNum + 2","printNum * 2","stop","stop * 2"]},"correct_patterns":[["printNum","printNum * 2","stop","16"]]},{"id":567137681,"text":"Fill the missing words to match the output.","code":"def printElems(arr, index):\r\n    if index < len(arr):\r\n        print(arr[fillword]);\r\n        printElems(fillword, index + fillword);\r\n        \r\narr = [1, 5, 6, 7, 9];\r\nprintElems(arr, 0);","result":"1 5 6 7 9","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["index","arr","len(arr)"]},"correct_patterns":[["index","arr","1"]]}]}],"OOP":[{"id":92589552,"name":"Classes And Objects","tests":[{"id":349018502,"question":"How many objects are created in the code segment?","code":"class PC:\r\n    pass;\r\nclass Headphones:\r\n    pass;\r\n\r\npc1 = PC();\r\npc2 = PC();\r\nheadphones = Headphones();","answers":["1","2","3"],"correct_answer":"3","explanation":"There are 3 objects - <code>pc1<\/code>, <code>pc2 <\/code> and <code>headphones<\/code>.\r\n<br><br>\r\nAlso there  are 2 classes - <code>PC<\/code> and <code>Headphones<\/code>."},{"id":1299364167,"question":"How many classes are defined in the code segment?","code":"class Tablet:\r\n    pass;\r\n\r\ntablet1 = Tablet();\r\ntablet2 = Tablet();","answers":["0","1","2"],"correct_answer":"1","explanation":"There is 1 class - <code>Tablet<\/code> .\r\n<br><br>\r\nThere are 2 objects - <code>tablet1<\/code> and <code>tablet2<\/code> ."},{"id":103274756,"question":"Which of the following is a class member?","code":"class Square:\r\n    def calcArea(self):\r\n        return self.a * self.a;\r\n\r\nsq = Square();\r\nsq.a = 3;\r\nprint(sq.calcArea());","answers":["sq","calcArea","Square"],"correct_answer":"calcArea","explanation":"<ul>\r\n<li><code>calcArea<\/code> is a class member.<\/li>\r\n<li><code>Square <\/code> is the class name.<\/li>\r\n<li><code>sq<\/code> is a class object.<\/li>\r\n<\/ul>"},{"id":2027223237,"question":"What's the output of the code snippet?","code":"class Rectangle:\r\n    def calcPerimeter(self):\r\n        return 2 * (self.a + self.b);\r\n\r\nrect = Rectangle();\r\nrect.a = 2;\r\nrect.b = 3;\r\nprint(rect.calcPerimeter());","answers":["5","6","10"],"correct_answer":"10","explanation":"Calculations behind <code>calcPerimeter<\/code>:\r\n<br>\r\n2 * (2 + 3) = <br>\r\n2 * 5 = <br>\r\n10"},{"id":830019714,"question":"What's the output of the code snippet?","code":"class Headphones:\r\n    pass;\r\n\r\nobj = Headphones();\r\nprice = 35;\r\nobj.price = price;\r\n\r\nprice += 1;\r\nprint(obj.price);\r\n\r\nobj.price += 1;\r\nprint(obj.price);","answers":["35 35","35 36","36 37"],"correct_answer":"35 36","explanation":"Modifying the <code>price<\/code> variable does not change  the value of the class member."}],"puzzles":[{"id":443741534,"text":"Define an empty class.","code":"fillword fillword \r\n   fillword;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Employee","class","(",")","{","}","pass"]},"correct_patterns":[["class","Employee","pass"]]},{"id":1395070239,"text":"Create Objects.","code":"class Smartphone\r\n    pass;\r\n\r\nobj1 = fillword fillword;\r\nobj2 = fillword fillword;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Smartphone","Smartphone","new","new","()","()"]},"correct_patterns":[["Smartphone","()","Smartphone","()"]]},{"id":366228700,"text":"Fill the missing words to match the output.","code":"class Person:\r\n    def represent(self):\r\n        print(\"My name is\", self.name, \".\");\r\n        print(\"I am\", self.age, \"years old.\");\r\n\r\nfillword = Person();\r\nperson.fillword = fillword;\r\nperson.fillword= 22;\r\nperson.represent();","result":"My name is Joe. I am 22 years old.","words":{"operators":[],"values":["\"Joe\"","17","22"],"variables_constants":["person"],"others":["name","years","age"]},"correct_patterns":[["person","name","\"Joe\"","age"]]}]},{"id":2116677041,"name":"Self In Class","tests":[{"id":1781413955,"question":"What's the output of the code snippet?","code":"class Person:\r\n    def printData(self):\r\n        print(self.name, self.age);\r\n\r\nperson = Person();\r\nperson.name = \"Jane\";\r\nperson.age = 20;\r\nperson.printData();","answers":["Jane 20","Jane","20"],"correct_answer":"Jane 20","explanation":"The <code>printData<\/code> function prints the name and age members that are set to be \"Jane\" and 20."},{"id":752048128,"question":"What's the output of the code snippet?","code":"class Square:\r\n    def getArea(self):\r\n        return self.side * self.side;\r\n    \r\n    def printData(self):\r\n        print(\"Side =\", self.side);\r\n        print(\"Area =\", self.getArea());\r\n\r\nsquare = Square();\r\nsquare.side = 5;\r\nsquare.printData();","answers":["Side = 0 Area = 0","Side = 5 Area = 25","Side = 5 Area = 10"],"correct_answer":"Side = 5 Area = 25","explanation":"The <code>printData<\/code> functions prints the <code>side<\/code> member (5) and the result of the <code>getArea<\/code> function (5x5 = 25)."},{"id":1702919105,"question":"What's the output of the code snippet?","code":"class Rectangle:\r\n    def getPerimeter(self):\r\n        return 2 * (self.a + self.b);\r\n\r\n    def printData(self):\r\n        print(self.a, self.b, self.getPerimeter());\r\n\r\nobj = Rectangle();\r\nobj.a = 6;\r\nobj.b = 2;\r\nobj.printData();","answers":["6 2 16","2 6 8","6 2 8"],"correct_answer":"6 2 16","explanation":"The <code>printData<\/code> functions prints the <code>a<\/code> member (6), <code>b<\/code> member (2) and the result of the <code>getPerimeter<\/code> function (2 x (6 + 2) = 16)."},{"id":1580505998,"question":"What's the output of the code snippet?","code":"class TV:\r\n    pass;\r\n\r\nobj = TV();\r\nobj.price = 200;\r\nprint(self.price);","answers":["0","200","Exception"],"correct_answer":"Exception","explanation":"There is no variable named <code>self<\/code>.\r\n<br><br>\r\n<code>self<\/code> is supposed to access class members inside the class body."},{"id":282704719,"question":"What's the output of the code snippet?","code":"class Truck:\r\n    def set__color(self, color):\r\n        self.__color = color;\r\n    \r\n    def get__color(self):\r\n        return self.__color ;\r\n\r\nobj = Truck();\r\nobj.set__color(\"white\");\r\nprint(obj.get__color());","answers":["null","white","None"],"correct_answer":"white","explanation":"<code>set__color<\/code> sets the value of the <code>__color<\/code> property.\r\n<br><br>\r\n<code>get__color<\/code> accesses the value of the <code>__color<\/code> property."}],"puzzles":[{"id":1316574365,"text":"Fill the missing words to match the output.","code":"class Device:\r\n    def printResolution(self):\r\n        print(fillword.fillword, \"x\", fillword.fillword);\r\n\r\nobj = Device();\r\nobj.width = 1280;\r\nobj.height = 720;\r\n\r\nobj.printResolution();","result":"1280 x 720","words":{"operators":[],"values":[],"variables_constants":[],"others":["self","self","self","width","height","resolution"]},"correct_patterns":[["self","width","self","height"]]},{"id":120484954,"text":"Fill the missing words to match the output.","code":"class Square:\r\n    def calcPerimeter(self):\r\n        return fillword.fillword * 4;\r\n\r\n    def calcSemiPerimeter(self):\r\n        return fillword.fillword \/ 2;\r\n\r\nobj = Square();\r\nobj.side = 3;\r\nprint(\"P =\", obj.calcPerimeter());\r\nprint(\"p =\", obj.calcSemiPerimeter());","result":"P = 12\r\np = 6","words":{"operators":[],"values":[],"variables_constants":[],"others":["self","self","self","side","perimeter","calcPerimeter()","calcSemiPerimeter()"]},"correct_patterns":[["self","side","self","calcPerimeter()"]]},{"id":2043843611,"text":"Fill the missing words to match the output.","code":"import math;\r\n\r\nclass Cube:\r\n    def calcVolume(self):\r\n        return math.pow(self.side, 3);\r\n\r\n    def printDetails(self):\r\n        print(\"Side =\", fillword.fillword);\r\n        print(\"Volume =\", fillword.fillword);\r\n\r\ncube = Cube();\r\ncube.side = 3;\r\ncube.printDetails();","result":"Side = 3\r\nVolume = 27","words":{"operators":[],"values":[],"variables_constants":[],"others":["self","self","self","side","printDetails()","calcVolume()","3"]},"correct_patterns":[["self","side","self","calcVolume()"]]}]},{"id":819858814,"name":"Getters And Setters","tests":[{"id":1234098956,"question":"What's the output of the code snippet?","code":"class Square:\r\n    def getArea(self):\r\n        return self.side * self.side;\r\n\r\nobj = Square();\r\nobj.side = 8;\r\nprint(obj.side, obj.getArea());","answers":["8 32","8 64","0 0"],"correct_answer":"8 64","explanation":"The <code>getArea<\/code> function returns the result of multiplication (8 x 8 = 64)."},{"id":36960973,"question":"What's the output of the code snippet?","code":"class Website:\r\n    def setDomain(self, domain):\r\n        self.__domain = domain\r\n\r\n    def getDomain(self):\r\n        return self.__domain;\r\n\r\nobj = Website();\r\nobj.setDomain(\"example.com\");\r\nprint(obj.getDomain());","answers":["example.com","None","null"],"correct_answer":"example.com","explanation":"<code>obj.setDomain()<\/code> sets value to the <code>__domain <\/code> property.\r\n<br><br>\r\n<code>obj.getDomain()<\/code> accesses the <code>__domain<\/code> property."},{"id":1155537546,"question":"What's the output of the code snippet?","code":"class Processor:\r\n    def setData(self, value):\r\n        [self.__manufacturer, self.__model] = value.split(' ')\r\n        \r\n    def getManufacturer(self):\r\n        return self.__manufacturer;\r\n\r\nobj = Processor();\r\nobj.setData(\"Intel I7\");\r\nprint(obj.getManufacturer());","answers":["Intel","I7","Exception"],"correct_answer":"Intel","explanation":"<code>setData<\/code> function sets value to the <code>__manufacturer<\/code> and <code>__model<\/code> properties.\r\n<br><br>\r\n<code>value.split(' ')<\/code> returns the following array: <code>[\"Intel\", \"I7\"]<\/code>.\r\n<br><br>\r\nBasically <code>[self.__manufacturer, self.__model] = [\"Intel\", \"I7\"]<\/code> is the same as: <br>\r\n<code>self.__manufacturer= \"Intel\"<\/code><br>\r\n<code>self.__model= \"I7\"<\/code><br>"},{"id":1033189963,"question":"What's the output of the code snippet?","code":"class Square:\r\n    def get__side(self, format = False):\r\n        result = self.__side;\r\n        if(format):\r\n            result = round(result, 2);\r\n\r\n        return result;\r\n\r\n    def set__side(self, value):\r\n        self.__side = value;\r\n\r\nobj = Square();\r\nobj.set__side(1.567);\r\nprint(obj.get__side(True), obj.get__side());","answers":["1.567 1.567","1.57 1.567","1.57 1.57"],"correct_answer":"1.57 1.567","explanation":"<code>get__side(true)<\/code> rounds the <code>side<\/code> to 2 digits after the decimal point.\r\n<br><br>\r\n<code>get__side()<\/code> (without passed parameters) returns the raw value of the <code>__side <\/code> property."},{"id":1983535624,"question":"What's the output of the code snippet?","code":"class Teacher:\r\n    def getSubject(self, index):\r\n        return self.subjects[index];\r\n\r\nobj = Teacher();\r\nobj.subjects = ['Mathematics', 'Informatics', 'English'];\r\nprint(obj.getSubject(1));","answers":["Mathematics","Informatics","a"],"correct_answer":"Informatics","explanation":"<code>obj.getSubject(1)<\/code> accesses the element of array located at index 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Mathematics<\/td>\r\n            <td class=\"table-primary\">Informatics<\/td>\r\n            <td>English<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":847755224,"text":"Fill the missing words to match the output.","code":"class TShirt:\r\n    def setColor(self, colorVal):\r\n        self.fillword fillword fillword;\r\n        \r\n    def getColor(self):\r\n        fillword self.fillword;\r\n\r\nobj = TShirt();\r\nobj.setColor(\"Orange\");\r\nprint(obj.getColor());","result":"Orange","words":{"operators":[],"values":[],"variables_constants":[],"others":["__color","__color","colorVal","colorVal","return","return","=","="]},"correct_patterns":[["__color","=","colorVal","return","__color"]]},{"id":1798625177,"text":"Fill the missing words to match the output.","code":"class Planet:\r\n    def set__name(self, nameVal):\r\n        self.__name = nameVal;\r\n\r\n    def get__name(self):\r\n        return self.__name;\r\n\r\nobj = Planet();\r\nfillword.fillword(fillword);\r\nprint(fillword.fillword());","result":"Earth","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj","obj","setName","setName","getName","getName","\"Earth\"","\"Earth\""]},"correct_patterns":[["obj","setName","\"Earth\"","obj","getName"]]},{"id":769259302,"text":"Fill the missing words to match the output.","code":"class Laptop:\r\n\r\n    def get__price(self, discount):\r\n        return self__.price - (discount * self.price) \/ 100;\r\n        \r\n    def set__price(self, priceVal):\r\n        self.__price = priceVal;\r\n\r\nobj = Laptop();\r\nobj.fillword(2000);\r\nprint(obj.fillword(fillword));","result":"1800","words":{"operators":[],"values":["5","10","20"],"variables_constants":["set__price","get__price"],"others":[]},"correct_patterns":[["set__price","get__price","10"]]}]},{"id":1770204479,"name":"Constructors","tests":[{"id":686777801,"question":"What's the output of the code snippet?","code":"class Planet:\r\n    def __init__(self):\r\n        self.name = \"Unknown\";\r\n\r\nobj = Planet();\r\nprint(obj.name);","answers":["Null","Unknown","None"],"correct_answer":"Unknown","explanation":"<code>obj = Planet();<\/code> calls the <code>__init__<\/code> function which sets value to the <code>name<\/code> property."},{"id":1637057942,"question":"What's the output of the code snippet?","code":"class Keyboard:\r\n    def __init__(self):\r\n        self.price = 0;\r\n\r\nobj = Keyboard();\r\nobj.price = 15;\r\nprint(obj.price);","answers":["0","15","None"],"correct_answer":"15","explanation":"<code>obj = Keyboard();<\/code> calls the <code>__init__<\/code> function which sets value to the <code>price<\/code> property.\r\n<br><br>\r\nAfterwards <code>obj.price = 15<\/code> overwrites the value of the <code>price<\/code> property."},{"id":1514186071,"question":"What's the output of the code snippet?","code":"class Rectangle:\r\n    def __init__(self, width, height):\r\n        self.width = width;\r\n        self.height = height;\r\n    \r\n    def calcArea(self):\r\n        return self.width * self.height\r\n\r\nrect = Rectangle(3, 5);\r\nprint(rect.calcArea());","answers":["15","16","8"],"correct_answer":"15","explanation":"<code>rect = Rectangle(3, 5)<\/code> calls the <code>__init__<\/code> function which sets value to the <code>width<\/code> and <code>height<\/code> properties.\r\n<br><br>\r\nThe <code>rect<\/code> object has <code>width<\/code> equal to 3 and <code>height<\/code> equal to <code>5<\/code>.\r\n<br><br>\r\nCalculations behind <code>calcArea<\/code> method:\r\n<br>\r\n3 x 5 = 15"},{"id":485868820,"question":"What's the output of the code snippet?","code":"class Computer:\r\n    def __init__(self):\r\n        print('1');\r\n\r\nprint('2');\r\nComputer();","answers":["2 1","1 2","2"],"correct_answer":"2 1","explanation":"First <code>print('2')<\/code> executes which prints \"2\".\r\n<br><br>\r\nAfterwards <code>Computer()<\/code> runs. It calls the <code>__init__<\/code> method which prints \"1\"."},{"id":1436214485,"question":"What's the output of the code snippet?","code":"class Planet:\r\n    def __init__(self):\r\n        print('1');\r\n\r\n    def __init__(self):\r\n        print('2');\r\n\r\nplanet = Planet();","answers":["1","2","Exception"],"correct_answer":"2","explanation":"<code>planet = Planet()<\/code> calls the <code>__init__<\/code> function.\r\n<br><br>\r\nThe <code>__init__<\/code> function is defined 2 times.\r\n<br><br>\r\nThe last definition is called when a function is defined multiple times in a class.\r\n<br><br>\r\nIn general that's not a good practice but it can be a catchy question."}],"puzzles":[{"id":1720588007,"text":"Fill the missing words to match the output.","code":"class Person:\r\n    def __init__(self, nameVal, ageVal):\r\n        self.name = nameVal;\r\n        self.age = ageVal;\r\n        \r\n\r\nobj = fillword fillword;\r\nprint(obj.name, obj.age);","result":"Teo 21","words":{"operators":[],"values":[],"variables_constants":[],"others":["(\"Ally\", 19)","(\"Teo\", 21)","new","new","Person","Person"]},"correct_patterns":[["Person","(\"Teo\", 21)"]]},{"id":1597191844,"text":"Fill the missing words to match the output.","code":"class Wallet:\r\n    def fillword fillword:\r\n        self.pocketsCount = pocketsCount;\r\n\r\nobj = Wallet(4);\r\nprint(obj.pocketsCount);","result":"4","words":{"operators":[],"values":[],"variables_constants":[],"others":["init","__init","__init__","()","(self)","(self, pocketsCount)"]},"correct_patterns":[["__init__","(self, pocketsCount)"]]},{"id":299914853,"text":"Fill the missing words to match the output.","code":"class Country:\r\n    def __init__(self, name = 'Unknown'):\r\n        self.name = name;\r\n\r\nobj1 = fillword fillword;\r\nprint(obj1.name)\r\n\r\nobj2 = fillword fillword;\r\nprint(obj2.name)","result":"Unknown Iceland","words":{"operators":[],"values":[],"variables_constants":[],"others":["Country","Country","new","new","()","()","(\"Iceland\")","(\"Iceland\")"]},"correct_patterns":[["Country","()","Country","(\"Iceland\")"]]}]},{"id":573590780,"name":"Class Inheritance Basics","tests":[{"id":240059538,"question":"What's the output of the code snippet?","code":"class MemomyDevice:\r\n    def printPhysicalSize(self):\r\n        print(\"medium\");\r\n        \r\nclass SDCard(MemomyDevice):\r\n    def printPhysicalSize(self):\r\n        print(\"small\");\r\n\r\n\r\nsdCard = SDCard();\r\nsdCard.printPhysicalSize();","answers":["medium","small","medium small"],"correct_answer":"small","explanation":"<code>SDCard<\/code> inherits the <code>MemomyDevice <\/code> class.\r\n<br><br>\r\nThe <code>SDCard<\/code> class overwrites the <code>printPhysicalSize<\/code> method.\r\n<br><br>\r\nFor that reason <code>sdCard.printPhysicalSize()<\/code> prints \"small\"."},{"id":1090266195,"question":"What's the output of the code snippet?","code":"class Vehicle:\r\n    def printConsumation(self):\r\n        print(\"low\");\r\n\r\nclass Scooter(Vehicle):\r\n    pass;\r\n\r\nscooter = Scooter();\r\nscooter.printConsumation();","answers":["low","high","exception"],"correct_answer":"low","explanation":"<code>Scooter<\/code> inherits the <code>printConsumation<\/code> from it's parent - <code>Vehicle <\/code>.\r\n<br><br>\r\nFor that reason <code>scooter.printConsumation()<\/code> prints \"low\"."},{"id":966870032,"question":"What's the output of the code snippet?","code":"class Device:\r\n    def printSize(self):\r\n        print(\"extra\");\r\n\r\nclass Tablet (Device):\r\n    def printSize(self):\r\n        super().printSize();\r\n        print(\"large\");\r\n\r\nobj = Tablet();\r\nobj.printSize()","answers":["extra","large","extra large"],"correct_answer":"extra large","explanation":"<code>obj.printSize()<\/code> calls the method from the <code>Tablet<\/code> class.\r\n<br><br>\r\n<code>super().printSize()<\/code> calls the method from the parent class. For that reason \"extra\" is printed.\r\n<br><br>\r\nAfterwards \"large\" is printed."},{"id":1918265297,"question":"What's the output of the code snippet?","code":"class Fruit:\r\n    def __init__(self):\r\n        print('1');\r\n\r\nclass Apple(Fruit):\r\n    def __init__(self):\r\n        print('2');\r\n\r\n\r\nobj = Apple();","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>obj = Apple();<\/code> calls the <code>__init__<\/code> function of the <code>Apple<\/code> class.\r\n<br><br>\r\nThere is no call to the parent class (Fruit) via the super keyword."},{"id":888833950,"question":"What's the output of the code snippet?","code":"class Food:\r\n    def __init__(self):\r\n        self.taste = 'salty';\r\n\r\nclass Chocolate(Food):\r\n    def __init__(self):\r\n        self.taste = 'sweet';\r\n\r\nclass Pasta(Food):\r\n    pass;\r\n\r\nchoc = Chocolate();\r\npasta = Food();\r\n\r\nprint(choc.taste, pasta.taste)","answers":["salty salty","sweet sweet","sweet salty"],"correct_answer":"sweet salty","explanation":"The <code>Food<\/code> class constructor sets <code>salty<\/code> value for the <code>taste<\/code> property.\r\n<br><br>\r\nThe <code>Chocolate<\/code> class constructor overwrites the <code>taste<\/code> property with <code>sweet<\/code> value.\r\n<br><br>\r\nThe <code>Pasta<\/code> class inherits it's constructor from the <code>Food<\/code> class which sets 'salty' value to the <code>taste<\/code> property."}],"puzzles":[{"id":1251309090,"text":"Fill the missing words to match the output.","code":"class Liquid:\r\n    def printColor(self):\r\n        print(\"Transparent\");\r\n\r\nclass Coke(Liquid):\r\n    def printColor(self):\r\n        print(\"Black\");\r\n\r\nclass Water(Liquid):\r\n    pass;\r\n\r\nobj1 = fillword();\r\nobj1.printColor();\r\n\r\nobj2 = fillword();\r\nobj2.printColor();","result":"Transparent Black","words":{"operators":[],"values":[],"variables_constants":[],"others":["Coke","Coke","Water","Water"]},"correct_patterns":[["Water","Coke"]]},{"id":54104547,"text":"Fill the missing words to match the output.","code":"class Animal:\r\n    def __init__(self):\r\n        print(\"base\");\r\n\r\nclass Cat (fillword):\r\n    def __init__(self):\r\n        super().__init__();\r\n        print(\"child\");\r\n\r\nobj = fillword();","result":"base\r\nchild","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Cat","Cat"]},"correct_patterns":[["Animal","Cat"]]},{"id":1173270944,"text":"Fill the missing words to match the output.","code":"class Person:\r\n    def printData(self):\r\n        print(self.name);\r\n\r\nclass Singer(Person):\r\n    def __init__(self, nameVal, songsCountVal):\r\n        super().__init__();\r\n        self.name = nameVal;\r\n        self.songsCount = songsCountVal;\r\n\r\n    def printData(self):\r\n        fillword.fillword;\r\n        print(self.fillword);\r\n\r\nsinger = Singer(\"Ariana\", 26);\r\nsinger.printData();","result":"Ariana\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["super","super()","Singer","Person","printData()","songsCount"]},"correct_patterns":[["super()","printData()","songsCount"]]}]},{"id":1692757181,"name":"Class Inheritance Advanced","tests":[{"id":1840228191,"question":"What's the output of the code snippet?","code":"class Vehicle:\r\n    def print(self):\r\n        print(\"1\");\r\n\r\nclass MotorVehicle(Vehicle):\r\n    def print(self):\r\n        super().print();\r\n        print(\"2\");\r\n\r\nclass Car(MotorVehicle):\r\n    def print(self):\r\n        super().print();\r\n        print(\"3\");\r\n\r\nobj = Car();\r\nobj.print()","answers":["3","2 3","1 2 3"],"correct_answer":"1 2 3","explanation":"<code>super().print()<\/code> calls the <code>print<\/code> method from the parent class.\r\n<br><br>\r\nBasically the <code>print<\/code> method is executed first in\r\n<code>Vehicle<\/code>, afterwards in <code>MotorVehicle <\/code> and finally in the <code>Car<\/code> class."},{"id":643614492,"question":"What's the output of the code snippet?","code":"class Electronic:\r\n    def __init__(self):\r\n        print(\"1\");\r\n\r\nclass OSDevice(Electronic):\r\n    def __init__(self):\r\n        print(\"2\");\r\n\r\nclass Smartphone(OSDevice):\r\n    def __init__(self):\r\n        super().__init__();\r\n        print(\"3\");\r\n\r\nsm = Smartphone();","answers":["3","2 3","1 2 3"],"correct_answer":"2 3","explanation":"<code>sm = Smartphone();<\/code> calls the <code>__init__<\/code> method of the <code>Smartphone<\/code> class.\r\n<br><br>\r\n<code>super().__init__();<\/code> calls the  <code>__init__<\/code> method of the parent class (OSDevice)."},{"id":520218333,"question":"What's the output of the code snippet?","code":"class Device:\r\n    def printSize(self):\r\n        print('large');\r\n\r\nclass MobileDevice(Device):\r\n    pass;\r\n\r\nclass Smartphone(MobileDevice):\r\n    def printSize(self):\r\n        print('small');\r\n\r\nsm = Smartphone();\r\nmd = MobileDevice();\r\n\r\nsm.printSize();\r\nmd.printSize();","answers":["small small","small large","large large"],"correct_answer":"small large","explanation":"The <code>Smartphone<\/code> class overwrites the <code>printSize<\/code> method.\r\n<br>\r\nFor that reason <code>sm.printSize()<\/code> prints \"small\".\r\n<br><br>\r\nThe <code>MobileDevice<\/code> class inherits the <code>printSize<\/code> method from it's parent - <code>Device<\/code>.\r\n<br>\r\nFor that reason <code>md.printSize()<\/code> prints \"large\"."},{"id":1370883738,"question":"What's the output of the code snippet?","code":"class Glasses:\r\n    pass;\r\nclass Shader:\r\n\tdef printShadeIndex(self):\r\n\t    print('high');\r\n\r\nclass Sunglasses(Glasses, Shader):\r\n    pass;\r\n\r\nobj = Sunglasses();\r\nobj.printShadeIndex();","answers":["high","none","Exception"],"correct_answer":"high","explanation":"<code>Sunglasses<\/code> inherits it's <code>printShadeIndex<\/code> method from one of it's parents - the <code>Shader<\/code> class.\r\n<br><br>\r\nException is not thrown because <code>Sunglasses<\/code> has a <code>printShadeIndex<\/code> due to the inheritance."},{"id":173745755,"question":"What's the output of the code snippet?","code":"class Electric:\r\n\tdef printProp(self):\r\n\t\tprint(\"Electric\");\r\n\r\nclass Blanket:\r\n\tdef printProp(self):\r\n\t\tprint(\"Blanket\");\r\n\r\n\r\nclass ElectricBlanket(Electric, Blanket):\r\n    pass;\r\n\r\nobj = ElectricBlanket();\r\nobj.printProp();","answers":["Electric","Blanket","Exception"],"correct_answer":"Electric","explanation":"If class inherits method from multiple classes, the method from the first class specified in the inheritance chain is inherited.\r\n<br><br>\r\nSince <code>printProp<\/code> is defined in both parent classes, <code>ElectricBlanket<\/code> inherits the <code>printProp<\/code> method from the <code>Electric<\/code> class (because it's the first class specified in the inheritance chain - <code>ElectricBlanket(Electric, Blanket)<\/code>)."}],"puzzles":[{"id":1049874785,"text":"Fill the missing words to match the output.","code":"class Device:\r\n    def printLetter(self):\r\n        print(fillword);\r\n\r\nclass AudioDevice(Device):\r\n    def printLetter(self):\r\n        super().printLetter();\r\n        print(fillword);\r\n\r\nclass USBDevice(Device):\r\n    def printLetter(self):\r\n        super().printLetter();\r\n        print(fillword);\r\n        \r\nclass Headphones(AudioDevice):\r\n    def printLetter(self):\r\n        super().printLetter();\r\n        print(fillword);\r\n\r\n\r\nobj = Headphones();\r\nobj.printLetter();","result":"a b c","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"0\"","\"1\"","\"a\"","\"b\"","\"c\""]},"correct_patterns":[["\"a\"","\"b\"","\"0\"","\"c\""],["\"a\"","\"b\"","\"1\"","\"c\""]]},{"id":2000744750,"text":"Fill the missing words to match the output.","code":"class Animal:\r\n    def printChar(self):\r\n        print(fillword);\r\n\r\nclass Tiger(Animal):\r\n    def printChar(self): \r\n        super().printChar();\r\n        print(fillword);\r\n\r\nclass MarineAnimal (Animal):\r\n    def printChar(self):\r\n        super().printChar();\r\n        print(fillword);\r\n\r\nclass Whale(MarineAnimal):\r\n    def printChar(self):\r\n        super().printChar();\r\n        print(fillword);\r\n\r\nobj = Whale();\r\nobj.printChar();","result":"123","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"a\"","\"b\"","\"1\"","\"2\"","\"3\""]},"correct_patterns":[["\"1\"","\"a\"","\"2\"","\"3\""],["\"1\"","\"b\"","\"2\"","\"3\""]]},{"id":703926511,"text":"Fill the missing words to match the output.","code":"class Drink:\r\n    def __init__(self):\r\n        print(\"a\");\r\n\r\nclass fillword(Drink):\r\n    def __init__(self):\r\n        super().__init__(); \r\n        print(\"1\");\r\n\r\nclass FizzyDrink(Drink):\r\n    def __init__(self):\r\n        super().__init__(); \r\n        print(\"b\");\r\n\r\nclass fillword(fillword):\r\n    def __init__(self): \r\n        super().__init__(); \r\n        print(\"c\");\r\n\r\n\r\nobj = Coke();","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["Drink","Drink","Water","Water","FizzyDrink","Coke"]},"correct_patterns":[["Water","Coke","FizzyDrink"]]}]},{"id":1569295482,"name":"Abstract Classes","tests":[{"id":96297433,"question":"What's the output of the code snippet?","code":"from abc import ABC, abstractmethod;\r\n\r\nclass Enterprise(ABC):\r\n    @abstractmethod\r\n    def calcYearExpenses():\r\n        pass;\r\n\r\nclass TechShop (Enterprise):\r\n    def __init__(self):\r\n        print(\"TechShop\");\r\n\r\nobj = TechShop();","answers":["TechShop","Exception","null"],"correct_answer":"Exception","explanation":"The parent class <code>Enterprise<\/code> is an abstract class which has an abstract method - <code>calcYearExpenses<\/code>.\r\n<br><br>\r\nThe  inheritor - <code>TechShop<\/code> does not define a\r\n<code>calcYearExpenses<\/code> method which results in exception when attempted to instance (<code>obj = TechShop()<\/code>)."},{"id":2120319334,"question":"What's the output of the code snippet?","code":"from abc import ABC, abstractmethod;\r\n \r\nclass Shop(ABC):\r\n    @abstractmethod\r\n    def calcRevenue(self):\r\n        pass;\r\n        \r\nclass ClothesShop(Shop):\r\n    def calcRevenue(self):\r\n        return self.sellsCount * 5;\r\n\r\nobj = ClothesShop();\r\nobj.sellsCount = 20;\r\nprint(obj.calcRevenue());","answers":["20","100","Exception"],"correct_answer":"100","explanation":"The class <code>ClothesShop<\/code> inherits the abstract class <code>Shop<\/code> and defines it's abstract method - <code>calcRevenue<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown when <code>ClothesShop<\/code> is instanced(<code>obj = ClothesShop()<\/code>).\r\n<br><br>\r\nThe calculations for the <code>calcRevenue<\/code> method are:\r\n<br>\r\n20 * 5 = 100"},{"id":924229927,"question":"What's the output of the code snippet?","code":"from abc import ABC, abstractmethod;\r\n \r\nclass SpaceObject(ABC):\r\n    pass;\r\n\r\nobj = SpaceObject();\r\nprint('Object Creation');","answers":["Object Creation","Exception","null"],"correct_answer":"Object Creation","explanation":"<code>SpaceObject<\/code> is an abstract class which doesn't have any abstract methods.\r\n<br><br>\r\nInstancing an abstract class that has no abstract methods does not throw exception."},{"id":1773912292,"question":"What's the output of the code snippet?","code":"from abc import ABC, abstractmethod;\r\n\r\nclass PCComponent(ABC):\r\n    @abstractmethod\r\n    def getName(self):\r\n        pass;\r\n        \r\n    @abstractmethod\r\n    def getPrice(self):\r\n        pass;\r\n\r\nclass CPU(PCComponent):\r\n    def getName(self):\r\n        return \"CPU\";\r\n        \r\n\r\nobj = CPU();\r\nprint(obj.getName());","answers":["CPU","Exception","Null"],"correct_answer":"Exception","explanation":"<code>obj = CPU()<\/code> causes exception since it hasn't implemented the abstract <code>getPrice<\/code> method inherited from it's parent - <code>PCComponent<\/code>.\r\n\r\n<br><br>\r\nInstancing a child that hasn't implemented all of the parent's abstract methods causes exception."},{"id":577298597,"question":"What's the output of the code snippet?","code":"from abc import ABC, abstractmethod;\r\n\r\nclass Animal(ABC):\r\n    @abstractmethod\r\n    def makeSound(self):\r\n        pass;\r\n        \r\nclass MarineAnimal(Animal):\r\n    def makeSound(self):\r\n        print(\"No Sound\");\r\n\r\nclass Fish(MarineAnimal):\r\n    pass;\r\n\r\nfish = Fish();\r\nfish.makeSound();","answers":["null","No Sound","Exception"],"correct_answer":"No Sound","explanation":"The <code>MarineAnimal<\/code> class inherits the abstract <code>Animal<\/code> class  and defines it's abstract method - <code>makeSound<\/code> .\r\n<br><br>\r\nThe <code>Fish<\/code> class inherits the <code>makeSound<\/code> method from the <code>MarineAnimal<\/code> class.\r\n<br><br>\r\nFor that reason exception is not thrown when instancing fish (<code>fish = Fish();<\/code>) .\r\n<br>\r\nSimply the abstract <code>makeSound<\/code> method is already implemented by the parent (<code>MarineAnimal<\/code>)."}],"puzzles":[{"id":1654272172,"text":"Fill the missing words to match the output.","code":"from abc import ABC, abstractmethod;\r\n\r\nclass Device(ABC):\r\n    @abstractmethod\r\n    def printResolution():\r\n        pass;\r\n\r\nclass Tablet(ABC):\r\n    pass;\r\n\r\nobj = fillword();\r\nprint(\"Code that won't throw exception.\");","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Tablet"]},"correct_patterns":[["Tablet"]]},{"id":1531924589,"text":"Fill the missing words to match the output.","code":"from abc import ABC, abstractmethod;\r\n\r\nclass Pet(ABC):\r\n    @abstractmethod\r\n    def fillword():\r\n        fillword\r\n\r\nclass Cat(Pet):\r\n    def fillword():\r\n        fillword\r\n\r\nobj = Cat();\r\nobj.makeSound();","result":"meow","words":{"operators":[],"values":[],"variables_constants":[],"others":["printSound","printSound","makeSound","makeSound","print(\"meow\");","pass;"]},"correct_patterns":[["makeSound","pass;","makeSound","print(\"meow\");"]]},{"id":503083050,"text":"Fill the missing words to match the output.","code":"from abc import ABC, abstractmethod;\r\n\r\nclass Shape(fillword):\r\n    @abstractmethod\r\n    def printArea():\r\n        pass;\r\n\r\nclass fillword(fillword):\r\n    def printArea(self):\r\n        rad = self.radius;\r\n        print(3.14 * rad * rad);\r\n\r\nobj = fillword();\r\nobj.radius = 2;\r\nobj.printArea();","result":"12.56","words":{"operators":[],"values":[],"variables_constants":[],"others":["ABC","Shape","Shape","Circle","Circle"]},"correct_patterns":[["ABC","Circle","Shape","Circle"]]}]},{"id":373206075,"name":"Static Members","tests":[{"id":454885474,"question":"What's the output of the code snippet?","code":"class User:\r\n    def __init__(self):\r\n        User.count += 1;\r\n\r\nUser.count = 0;\r\n\r\nobj1 = User();\r\nobj2 = User();\r\nobj3 = User();\r\n\r\nprint(User.count);","answers":["0","2","3"],"correct_answer":"3","explanation":"The static member <code>count<\/code> increments each time when object is created.\r\n<br><br>\r\nIt's incremented in the class constructor - <code>User.count += 1;<\/code>"},{"id":1573003299,"question":"What's the output of the code snippet?","code":"class Circle:\r\n    pass;\r\n\r\nCircle.pi = 3.14;\r\nprint(Circle.pi);\r\nCircle.pi = 3.1415;","answers":["3.14","3.1415","None"],"correct_answer":"3.14","explanation":null},{"id":376914912,"question":"What's the output of the code snippet?","code":"class Animal:\r\n    @staticmethod\r\n    def getSound():\r\n        return 'roar';\r\n\r\nclass Cat(Animal):\r\n    pass;\r\n\r\nprint(Cat.getSound());","answers":["roar","None","Exception"],"correct_answer":"roar","explanation":"<code>Cat<\/code> inherits the <code>getSound<\/code> method from it's parent - <code>Animal <\/code>.\r\n<br><br>\r\nBasically <code>Cat.getSound()<\/code> calls the method <code>getSound<\/code> of the parent class - <code>Animal<\/code>."},{"id":1327784865,"question":"What's the output of the code snippet?","code":"class Tablet:\r\n    @staticmethod\r\n    def printModel(self):\r\n        print(self.model);\r\n\r\ntablet = Tablet();\r\ntablet.model = 'Sample';\r\nTablet.printModel()","answers":["Sample","None","Exception"],"correct_answer":"Exception","explanation":"Static functions cannot access non-static members."},{"id":29918062,"question":"What's the output of the code snippet?","code":"class Animal:\r\n    def __init__(self):\r\n        self.__class__.count += 1;\r\n\r\nclass Tiger(Animal):\r\n    pass;\r\nclass Lion (Animal):\r\n    pass;\r\n\r\nLion.count = 0;\r\nTiger.count = 0;\r\n\r\nTiger();\r\nTiger();\r\nLion();\r\n\r\nprint(Tiger.count, Lion.count);","answers":["2 1","0 0","3 3"],"correct_answer":"2 1","explanation":"<code> self.__class__.count += 1;<\/code> increments the static member <code>count<\/code> for the class that <code>self<\/code> is.\r\n<br><br>\r\nSo for <code>Tiger();<\/code> <br>\r\n<code>self.__class__.count += 1<\/code> is the same as <code>Tiger.count += 1<\/code>.\r\n<br><br>\r\nFor <code>Lion();<\/code> <br>\r\n<code>self.__class__.count += 1<\/code> is the same as <code>Lion.count += 1<\/code>."}],"puzzles":[{"id":1453364203,"text":"Fill the missing words to match the output.","code":"class Circle:\r\n    def printPerimeter(self):\r\n        print(2 * fillword.pi * fillword.radius);\r\n\r\nfillword.pi = 3.14;\r\n\r\nobj = Circle();\r\nfillword.radius = 1;\r\n\r\nobj.printPerimeter();","result":"6.28","words":{"operators":[],"values":[],"variables_constants":[],"others":["self","obj","obj","Circle","Circle"]},"correct_patterns":[["Circle","self","Circle","obj"]]},{"id":257274792,"text":"Fill the missing words to match the output.","code":"class Person:\r\n    def present(self):\r\n        print(\"My name is \", self.name, \".\");\r\n    \r\n    @staticmethod\r\n    def sayHi():\r\n        print(\"Hi!\");\r\n\r\nfillword.sayHi();\r\nobj = Person();\r\nfillword.name = \"Jake\";\r\nfillword.present();","result":"Hi! My name is Jake.","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj","obj","Person","Person"]},"correct_patterns":[["Person","obj","obj"]]},{"id":1106957161,"text":"Fill the missing words to match the output.","code":"class Building:\r\n    def printHeight(self):\r\n        print(self.height);\r\n\r\n    @staticmethod\r\n    def printCount():\r\n        print(Building.objCount);\r\n\r\n    def __init__(self, height):\r\n        fillword.height = height;\r\n        fillword.objCount += 1;\r\n\r\nfillword.objCount = 0;\r\nobj1 = Building(100);\r\nobj2 = Building(120);\r\nprint(fillword.objCount);\r\nprint(fillword.height);","result":"2 120","words":{"operators":[],"values":[],"variables_constants":[],"others":["Building","Building","Building","Building","obj1","obj2","self","self"]},"correct_patterns":[["self","Building","Building","Building","obj2"]]}]},{"id":1222889464,"name":"Encapsulation Principle","tests":[{"id":2055054127,"question":"What's the output of the code snippet?","code":"class Jacket:\r\n    def getColor(self):\r\n        colors = {\r\n            '#ffffff': 'white',\r\n            '#000000': 'black'\r\n        };\r\n        \r\n        return colors[self.__color]\r\n\r\n    def setColor(self, val):\r\n        self.__color = val;\r\n\r\nobj = Jacket();\r\nobj.setColor('#ffffff');\r\nprint(obj.getColor());","answers":["#ffffff","white","black"],"correct_answer":"white","explanation":"The <code>getColor<\/code> method converts the hex code into a color's name.\r\n<br><br>\r\n'#ffffff' that's set via the <code>setColor<\/code> method is converted to white via the <code>getColor<\/code> method."},{"id":857916140,"question":"What's the output of the code snippet?","code":"class Product:\r\n    def getPrice(self):\r\n        return self.__price;\r\n\r\n    def setPrice(self, val):\r\n        if val < 0:\r\n            self.__price = 0;\r\n            return\r\n\r\n        self.__price = val;\r\n\r\n\r\nobj = Product();\r\nobj.setPrice(-15);\r\nprint(obj.getPrice());","answers":["0","-15","None"],"correct_answer":"0","explanation":"-15 meets the condition <code>val < 0<\/code> so value of 0 is set to the <code>__price<\/code> property."},{"id":1977082541,"question":"What's the output of the code snippet?","code":"class Square:\r\n    def getSide (self, roundUp):\r\n        if roundUp:\r\n            return round(self.__side, 2);\r\n        \r\n        return self.__side;\r\n\r\n    def setSide(self, val):\r\n        self.__side = val; \r\n\r\nobj = Square();\r\nobj.setSide(1.234);\r\nprint(obj.getSide(True));","answers":["1.23","1.234","None"],"correct_answer":"1.23","explanation":"<code>obj.getSide(true)<\/code> rounds the <code>__side<\/code> property to 2 digits after the decimal point.\r\n<br><br>\r\n<code>print(obj.getSide(true))<\/code> prints 1.23.\r\n<br><br> \r\n<code>print(obj.getSide())<\/code> would print 1.234."},{"id":780403306,"question":"What's the output of the code snippet?","code":"class Person:\r\n    def setName(self, value = 'Unknown'):\r\n        self.__name = value;\r\n        \r\n    def getName (self):\r\n        return self.__name;\r\n\r\nobj = Person();\r\nobj.setName();\r\nprint(obj.getName());","answers":["null","None","Unknown"],"correct_answer":"Unknown","explanation":"<code>obj.setName()<\/code> passes no argument, thus the value argument takes it's default value - <code>'Unknown'<\/code>."},{"id":1730748971,"question":"What's the output of the code snippet?","code":"class Book:\r\n    def set__price(self, val):\r\n        self.__price = val + 1;\r\n\r\n    def get__price(self):\r\n        return self.__price + 1;\r\n\r\nobj = Book();\r\nobj.set__price(15);\r\nprint(obj.get__price());","answers":["15","16","17"],"correct_answer":"17","explanation":"<code>set__price<\/code> sets the passed value incremented by 1 (15 + 1 = 16).\r\n<br><br>\r\n<code>get__price<\/code> returns the <code>__price <\/code> value incremented by 1 (16 + 1 = 17)."}],"puzzles":[{"id":984609590,"text":"Fill the missing words to match the output.","code":"class Car:\r\n    def setData(self, makeVal, modelVal):\r\n        self.__make = makeVal;\r\n        self.__model = modelVal;\r\n\r\n    def getMake(self):\r\n        return self.__make.capitalize();\r\n\r\n    def getModel(self):\r\n        return self.__model.capitalize();\r\n\r\ncar = Car();\r\ncar.setData(\"ford\", \"fiesta\");\r\nprint(car.fillword, car.fillword);","result":"Ford Fiesta","words":{"operators":[],"values":[],"variables_constants":[],"others":["__make","__model","getMake()","getModel()"]},"correct_patterns":[["getMake()","getModel()"]]},{"id":1935414007,"text":"Fill the missing words to match the output.","code":"class Person:\r\n    def __init__(self, name, age):\r\n        self.__name = name;\r\n        self.__age = age;\r\n\r\n    def getAge(self):\r\n        if self.fillword < 0:\r\n            return 0;\r\n\r\n        return self.fillword;\r\n\r\n\r\nperson = Person(\"Thomas\", -3);\r\nprint(person.fillword);","result":"0","words":{"operators":[],"values":[],"variables_constants":[],"others":["__age","__age","__age","getAge()","getAge()","getAge()"]},"correct_patterns":[["__age","__age","getAge()"]]},{"id":872493748,"text":"Fill the missing words to match the output.","code":"class Square:\r\n    def setSide(self, val):\r\n        self.fillword = val;\r\n\r\n    def printArea(self):\r\n        print(self.fillword * self.__side);\r\n\r\nobj = Square();\r\nobj.setSide(3);\r\nobj.printArea();","result":"9","words":{"operators":[],"values":[],"variables_constants":[],"others":["side","side","_side","_side","__side","__side"]},"correct_patterns":[["__side","__side"]]}]},{"id":26275769,"name":"Abstraction Principle","tests":[{"id":1507741160,"question":"What's the output of the code snippet?","code":"class Rectangle:\r\n    def __init__(self, aVal, bVal):\r\n        self.a = aVal;\r\n        self.b = bVal;\r\n\r\n    def calcArea(self):\r\n        return self.a * self.b;\r\n\r\n\r\nrect = Rectangle(2, 5);\r\nprint(rect.calcArea());","answers":["7","10","14"],"correct_answer":"10","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n2 x 5 = 10"},{"id":310603177,"question":"What's the output of the code snippet?","code":"class Cube:\r\n    def __init__(self, a):\r\n        self.a = a;\r\n        \r\n    def calcVolume(self):\r\n        a = self.a;\r\n        return a * a * a;\r\n\r\nobj = Cube(5);\r\nprint(obj.calcVolume());","answers":["125","25","5"],"correct_answer":"125","explanation":"Calculations behind <code>calcVolume<\/code> method:\r\n<br><br>\r\n5 x 5 x 5 = <br>\r\n25 x 5 = 125"},{"id":1261931894,"question":"What's the output of the code snippet?","code":"import math;\r\n\r\nclass Rectangle:\r\n    def __init__(self, aVal, bVal):\r\n        self.a = aVal;\r\n        self.b = bVal;\r\n        \r\n    def calcDiagonal(self):\r\n        return math.sqrt(math.pow(self.a, 2) + math.pow(self.b, 2));\r\n\r\nobj = Rectangle(3, 4);\r\nprint(obj.calcDiagonal());","answers":["5","7","25"],"correct_answer":"5","explanation":"Calculations behind <code>calcDiagonal<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">3 ^ 2 + 4 ^ 2<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">3 * 3 + 4 * 4<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">9 + 16<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">25<\/span> = <br>\r\n5"},{"id":233090359,"question":"What's the output of the code snippet?","code":"class Trapezoid:\r\n    def __init__(self, aVal, bVal, hVal):\r\n        self.a = aVal;\r\n        self.b = bVal;\r\n        self.h = hVal;\r\n        \r\n    def calcArea(self):\r\n        return (self.a + self.b) \/ 2 * self.h;\r\n\r\nobj = Trapezoid(8, 10, 2);\r\nprint(obj.calcArea());","answers":["9","18","36"],"correct_answer":"18","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n(8 + 10) \/ 2 * 2 = <br>\r\n18 \/ 2 * 2 = <br>\r\n9 * 2 = <br>\r\n18"},{"id":1183436020,"question":"What's the output of the code snippet?","code":"class Rectangle:\r\n    def __init__(self, aVal, bVal):\r\n        self.a = aVal;\r\n        self.b = bVal;\r\n\r\n    def calcPerimeter(self):\r\n        return 2 * self.a + 2 * self.b;\r\n\r\nobj = Rectangle(1, 5);\r\nprint(obj.calcPerimeter());","answers":["6","10","12"],"correct_answer":"12","explanation":"Calculations behind <code>calcPerimeter<\/code> method:\r\n<br><br>\r\n2 * 1 + 2 * 5 = <br>\r\n2 + 10 = <br>\r\n12 <br>"}],"puzzles":[{"id":1857442421,"text":"Fill the missing words to match the output.","code":"class Rectangle:\r\n    def __init__(self, aVal, bVal):\r\n        self.a = aVal;\r\n        self.b = bVal;\r\n\r\n    def calcArea(self):\r\n        return self.a * self.b;\r\n\r\n    def calcPerimeter(self):\r\n        return 2 * (self.a + self.b);\r\n\r\nobj = Rectangle(2, 3);\r\nprint(fillword.fillword);\r\nprint(fillword.fillword);","result":"6 10","words":{"operators":[],"values":[],"variables_constants":["obj","obj"],"others":["a","b","calcArea()","calcPerimeter()","Rectangle"]},"correct_patterns":[["obj","calcArea()","obj","calcPerimeter()"]]},{"id":660304434,"text":"Fill the missing words to match the output.","code":"class Square:\r\n    def __init__(self, side):\r\n        self.side = side;\r\n\r\n    def calcArea(self):\r\n        return self.side * self.side;\r\n\r\n\r\nobj1 = Square(fillword);\r\nobj2 = Square(fillword);\r\nprint(obj1.calcArea());\r\nprint(obj2.calcArea());","result":"9 16","words":{"operators":[],"values":["2","3","4","5","6","9","16"],"variables_constants":[],"others":[]},"correct_patterns":[["3","4"]]},{"id":403676659,"text":"Fill the missing words to match the output.","code":"class Shape:\r\n    def __init__(self, angles):\r\n        self.angles = angles;\r\n\r\n    def calcDiagonalsCount(self):\r\n        diagonalsCount = 0;\r\n        step = 2;\r\n\r\n        for i in range(4, self.angles + 1, 1):\r\n            diagonalsCount += step;\r\n            step += 1;\r\n\r\n        return diagonalsCount;\r\n\r\nobj1 = Shape(fillword);\r\nobj2 = Shape(fillword);\r\nprint(obj1.calcDiagonalsCount());\r\nprint(obj2.calcDiagonalsCount());","result":"2 9","words":{"operators":[],"values":["2","3","4","5","6","7","8","9"],"variables_constants":[],"others":[]},"correct_patterns":[["4","6"]]}]},{"id":2051346246,"name":"Inheritance Principle","tests":[{"id":1061088437,"question":"What's the output of the code snippet?","code":"class Bird:\r\n\tdef printSize(self):\r\n\t\tprint(\"small\");\r\n\r\nclass Eagle(Bird):\r\n\tdef printSize(self):\r\n\t\tprint(\"large\");\r\n\r\n\r\neagle = Eagle();\r\neagle.printSize();","answers":["small","large","small large"],"correct_answer":"large","explanation":"The <code>Eagle<\/code> class overwrites the <code>printSize<\/code> function.\r\n<br><br>\r\nThe overwritten method prints \"large\" ."},{"id":1910705266,"question":"What's the output of the code snippet?","code":"class Glasses:\r\n\tdef printShadeIndex(self):\r\n\t\tprint(\"low\");\r\n\r\nclass Sunglasses(Glasses):\r\n\tdef printShadeIndex(self):\r\n\t\tprint(\"high\");\r\n\r\n\r\nglasses = Glasses();\r\nglasses.printShadeIndex();","answers":["low","high","low high"],"correct_answer":"low","explanation":"The <code>Glasses<\/code> class has <code>printShadeIndex<\/code> method which prints \"low\"."},{"id":714091571,"question":"What's the output of the code snippet?","code":"class Device:\r\n\tdef printSize(self):\r\n\t\tprint(\"medium\");\r\n\r\nclass Tablet(Device):\r\n    pass;\r\n\r\ntablet = Tablet();\r\ntablet.printSize();","answers":["medium","null","Exception"],"correct_answer":"medium","explanation":"<code>Tablet<\/code> inherits the <code>printSize<\/code> function from it's parent - <code>Device<\/code>."},{"id":1665486832,"question":"What's the output of the code snippet?","code":"class Car:\r\n\tdef printSize(self):\r\n\t\tprint(\"small\");\r\n\r\nclass HatchBack(Car):\r\n\tdef printSize(self):\r\n\t\tsuper().printSize();\r\n\t\tprint(\"medium\");\r\n\r\nhatch = HatchBack();\r\nhatch.printSize();","answers":["small","medium","small medium"],"correct_answer":"small medium","explanation":"The <code>HatchBack<\/code> class has <code>printSize<\/code> function which calls it's parent method (via <code>super().printSize();<\/code>) and afterwards prints \"medium\"."},{"id":636121009,"question":"What's the output of the code snippet?","code":"class Vehicle:\r\n    def printConsumation(self):\r\n        print('low');\r\n\r\nclass Car(Vehicle):\r\n    pass;\r\nclass Truck(Vehicle):\r\n    def printConsumation(self):\r\n        print('high');\r\n\r\n\r\ncar = Car();\r\ncar.printConsumation();\r\n\r\ntruck = Truck();\r\ntruck.printConsumation();","answers":["low high","low low","high high"],"correct_answer":"low high","explanation":"The <code>Car<\/code> class inherits <code>printConsumation<\/code> from it's parent - <code>Vehicle<\/code>.\r\n<br>\r\n<code>car.printConsumation()<\/code> prints \"low\".\r\n<br><br>\r\nThe <code>Truck<\/code> class overwrites the <code>printConsumation<\/code> method.\r\n<br>\r\n<code>truck.printConsumation()<\/code> prints \"high\"."}],"puzzles":[{"id":1388101040,"text":"Fill the missing words to match the output.","code":"class Device:\r\n    def printSizeCategory(self):\r\n        print(\"Small\");\r\n        \r\nclass Laptop(Device):\r\n    def printSizeCategory(self):\r\n        print(\"Large\");\r\n\r\nobj = fillword();\r\nobj.printSizeCategory();","result":"Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Device"]},"correct_patterns":[["Laptop"]]},{"id":190963057,"text":"Fill the missing words to match the output.","code":"class Electronic:\r\n    def printConsumation(self):\r\n        print(\"Low\");\r\n\r\nclass fillword(fillword):\r\n    pass;\r\n\r\nobj = fillword();\r\nobj.printConsumation();","result":"Low","words":{"operators":[],"values":[],"variables_constants":[],"others":["Electronic","Smartphone","Smartphone","Smartphone"]},"correct_patterns":[["Smartphone","Electronic","Smartphone"]]},{"id":1276575038,"text":"Fill the missing words to match the output.","code":"class Person:\r\n    def __init__(self, nameVal):\r\n        self.name = nameVal;\r\n\r\n    def printData(self):\r\n        print(self.name);\r\n\r\nclass Employee(Person):\r\n    def __init__(self, nameVal, salaryVal):\r\n        super().fillword(fillword);\r\n        self.salary = salaryVal;\r\n\r\n    def printData(self):\r\n        fillword.fillword;\r\n        print(self.salary);\r\n\r\nobj = Employee(\"Jim\", 26);\r\nobj.printData();","result":"Jim 26","words":{"operators":[],"values":[],"variables_constants":[],"others":["__init__","__init__","printData()","printData()","super()","nameVal","nameVal, salaryVal"]},"correct_patterns":[["__init__","nameVal","super()","printData()"]]}]},{"id":1021980423,"name":"Polymorphism Principle","tests":[{"id":513707902,"question":"What's the output of the code snippet?","code":"class OSDevice:\r\n    def printSize(self):\r\n        print('medium');\r\n\r\nclass SmartTV(OSDevice):\r\n    def printSize(self):\r\n        print('large');\r\n\r\n\r\nobj = SmartTV();\r\nobj.printSize();","answers":["medium","large","medium large"],"correct_answer":"large","explanation":"<code>SmartTV<\/code> inherits <code>OSDevice<\/code> and overwrites the <code>printSize<\/code> method.\r\n<br><br>\r\n<code>obj.printSize()<\/code> prints \"large\"."},{"id":1464053567,"question":"What's the output of the code snippet?","code":"class Bird:\r\n    def printSize(self):\r\n        print('small');\r\n\r\nclass Eagle(Bird):\r\n    def printSize(self):\r\n        print('large');\r\n\r\nbird = Bird();\r\nbird.printSize();","answers":["small","large","small large"],"correct_answer":"small","explanation":"The <code>Bird<\/code> class has it's own <code>printSize<\/code> method.\r\n<br><br>\r\n<code>bird.printSize()<\/code> prints \"small\"."},{"id":166776572,"question":"What's the output of the code snippet?","code":"class Vehicle:\r\n    def printConsumation(self):\r\n        print('none');\r\n\r\nclass MotorVehicle(Vehicle):\r\n    def printConsumation(self):\r\n        print('medium ');\r\n\r\nclass Car(MotorVehicle):\r\n    pass;\r\n\r\ncar = Car();\r\ncar.printConsumation();","answers":["none","medium","none medium"],"correct_answer":"medium","explanation":"The <code>Car<\/code> class inherits the  <code>printConsumation<\/code> method from it's parent - <code>MotorVehicle<\/code>.\r\n<br><br>\r\n<code>car.printConsumation()<\/code> prints \"medium \"."},{"id":1118170813,"question":"What's the output of the code snippet?","code":"class Animal:\r\n    def printSize(self):\r\n        print('very');\r\n\r\nclass Hamster(Animal):\r\n    def printSize(self):\r\n        super().printSize();\r\n        print('small');\r\n\r\n\r\nobj = Hamster();\r\nobj.printSize();","answers":["very","small","very small"],"correct_answer":"very small","explanation":"<code>obj.printSize()<\/code> calls the method from the <code>Hamster<\/code> class.\r\n<br><br>\r\n<code>super().printSize()<\/code> calls the method from the parent class. For that reason \"very\" is printed.\r\n<br><br>\r\nAfterwards \"small\" is printed."},{"id":994709114,"question":"What kind of polymorphism is the code snippet?","code":"class PolarAnimal:\r\n    def printWeight():\r\n        print(\"light\");\r\n\r\nclass Penguin(PolarAnimal):\r\n    def printWeight():\r\n        print(\"heavy\");","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Runtime Polymorphism","explanation":"Runtime polymorphism occurs in function overriding .\r\n<br><br>\r\nfunction overriding - base class ( <code>PolarAnimal<\/code> ) has a function that's being overwritten in a child class ( <code>Penguin<\/code> ).\r\n<br><br>\r\nCompile time polymorphism does not occur in Python."}],"puzzles":[{"id":112925951,"text":"Fill the missing words to match the output.","code":"class Animal:\r\n    def printSize(self):\r\n        print(\"Small\");\r\n\r\nclass Whale(Animal):\r\n    def printSize(self):\r\n        print(\"Large\");\r\n\r\nclass Cat(Animal):\r\n    pass;\r\n\r\nobj1 = fillword();\r\nobj1.printSize();\r\nobj2 = fillword();\r\nobj2.printSize();","result":"Small Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Whale","Whale","Cat","Cat"]},"correct_patterns":[["Cat","Whale"]]},{"id":2137537724,"text":"Fill the missing words to match the output.","code":"class Vehicle:\r\n    def printFuelCost(self):\r\n        print(\"none\");\r\n\r\nclass MotorVehicle(Vehicle):\r\n    def printFuelCost(self):\r\n        print(\"medium\");\r\n\r\nclass Car(MotorVehicle):\r\n    pass;\r\n\r\nobj = fillword();\r\nobj.printFuelCost();","result":"medium","words":{"operators":[],"values":[],"variables_constants":[],"others":["Vehicle","Car"]},"correct_patterns":[["Car"]]},{"id":807230589,"text":"Fill the missing words to match the output.","code":"class App:\r\n    def categorizeDevice(self):\r\n        return \"any\";\r\n\r\nclass MobileApp(App):\r\n    def categorizeDevice(self):\r\n        return \"small\";\r\n\r\nclass DesktopApp(App):\r\n    def categorizeDevice(self):\r\n        return \"large\";\r\n\r\nclass WebApp(App):\r\n    pass;\r\n\r\narr = [fillword(), fillword(), fillword()];\r\n\r\nfor obj in arr:\r\n    print(obj.categorizeDevice());","result":"any small large","words":{"operators":[],"values":[],"variables_constants":[],"others":["MobileApp","MobileApp","DesktopApp","DesktopApp","WebApp","WebApp"]},"correct_patterns":[["WebApp","MobileApp","DesktopApp"]]}]},{"id":1973374660,"name":"Array Of Class Objects","tests":[{"id":2113875515,"question":"What's the output of the code snippet?","code":"class Product:\r\n    pass;\r\nprods = [];\r\n\r\nfor i in range(1, 4):\r\n    obj = Product();\r\n    obj.price = i * 6;\r\n    prods.append(obj);\r\n    \r\nfor prod in prods:\r\n    if prod.price > 10:\r\n        print(prod.price);","answers":["18","6 12","12 18"],"correct_answer":"12 18","explanation":"After the elements are added, the array has the following prices:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>6<\/td>\r\n            <td>12<\/td>\r\n            <td>18<\/td>\r\n    <\/tr>\r\n<\/table>\r\nOnly two of them meet the condition <code>prod.price > 10<\/code> - 12 and 18"},{"id":917260792,"question":"What's the output of the code snippet?","code":"class Company:\r\n    pass;\r\nclass Employee:\r\n    pass;\r\n\r\nnames = ['Smith', 'CJ', 'Ian', 'Benny', 'Gabe'];\r\n\r\ncompany = Company();\r\ncompany.employees = [];\r\n\r\nfor name in names:\r\n    employee = Employee();\r\n    employee.name = name;\r\n    company.employees.append(employee);\r\n\r\n\r\nprint(company.employees[2].name);","answers":["CJ","Ian","Benny"],"correct_answer":"Ian","explanation":"After the elements are added, the array has the following names:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>Smith<\/td>\r\n            <td>CJ<\/td>\r\n            <td class=\"table-primary\">Ian<\/td>\r\n            <td>Benny<\/td>\r\n            <td>Gabe<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1867606457,"question":"What's the output of the code snippet?","code":"class Car:\r\n    def __init__(self, hp):\r\n        self.hp = hp;\r\n\r\ncars = [Car(75), Car(100), Car(115), Car(135)];\r\n\r\nfor car in cars:\r\n    if car.hp > 111:\r\n        print(car.hp);","answers":["75 100","100 115","115 135"],"correct_answer":"115 135","explanation":"From all hps - 75, 100, 115, 135, only 2 meet the condition <code>car.hp > 111<\/code> - 115 and 135."},{"id":537233734,"question":"What's the output of the code snippet?","code":"class Student:\r\n    def __init__(self, age):\r\n        self.age = age;\r\n\r\n\r\nstudents = [Student(15), Student(17), Student(12), Student(14)];\r\n\r\nstudents.sort(key=lambda s: s.age);\r\n\r\nprint(students[1].age);","answers":["12","14","15"],"correct_answer":"14","explanation":"After sorting the array by student's age it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>12<\/td>\r\n            <td class=\"table-primary\">14<\/td>\r\n            <td>15<\/td>\r\n            <td>17<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":447392007,"question":"What's the output of the code snippet?","code":"class Product:\r\n    def __init__(self, price):\r\n        self.price = price;\r\n\r\nprods = [Product(10), Product(15), Product(20), Product(25)];\r\n\r\nprods.sort(key=lambda p: p.price, reverse=True);\r\n\r\nprint(prods[1].price);","answers":["20","15","10"],"correct_answer":"20","explanation":"After sorting the array by product's price it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>25<\/td>\r\n            <td class=\"table-primary\">20<\/td>\r\n            <td>15<\/td>\r\n            <td>10<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1791130682,"text":"Fill the missing words to match the output.","code":"class Peak:\r\n    def __init__(self, heightVal):\r\n        self.height = heightVal;\r\n\r\npeaks = [Peak(2000), Peak(3000), Peak(4000), Peak(5000)];\r\n    \r\nfor peak in peaks:\r\n    if peak.height fillword fillword:\r\n        print(peak.height);","result":"4000 5000","words":{"operators":[">=","<="],"values":["4000","3000"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","4000"]]},{"id":594976763,"text":"Fill the missing words to match the output.","code":"class Student:\r\n    def __init__(self, ageVal):\r\n        self.age = ageVal;\r\n\r\nfillword = [];\r\nfor i in range(10, 21):\r\n    students.append(Student(i));\r\n\r\nfor student in students:\r\n    if student.age > fillword:\r\n        print(student.age);","result":"16 17 18 19 20","words":{"operators":[],"values":["15","16"],"variables_constants":["students","students"],"others":["Student","Student"]},"correct_patterns":[["students","15"]]},{"id":1679540152,"text":"Fill the missing words to match the output.","code":"class Product:\r\n    def __init__(self, priceVal):\r\n        self.price = priceVal;\r\n\r\nprods = [];\r\nfor i in range(11, 18):\r\n    prods.append(fillword fillword);\r\n\r\nfor prod in prods:\r\n    if prod.price >= 150:\r\n        print(prod.price);","result":"150 160 170","words":{"operators":[],"values":[],"variables_constants":[],"others":["Product","prods","(i)","(i * 10)","[]","new"]},"correct_patterns":[["Product","(i * 10)"]]}]},{"id":776760965,"name":"Try Except","tests":[{"id":1398786244,"question":"What's the output of the code snippet?","code":"try:\r\n    print(\"1\");\r\nexcept:\r\n    print(\"2\");\r\n\r\nprint(\"3\");","answers":["1 2 3","1 2","1 3"],"correct_answer":"1 3","explanation":"No exception is thrown so the except block is not executed and \"2\" is not printed."},{"id":336390277,"question":"What's the output of the code snippet?","code":"try:\r\n    print(\"1\");\r\n    raise Exception;\r\nexcept:\r\n    print(\"2\");","answers":["1 2","1","2"],"correct_answer":"1 2","explanation":"Since exception is raised the except block is executed thus \"2\" is printed."},{"id":1320224834,"question":"What's the output of the code snippet?","code":"try:\r\n    print(\"1\");\r\n    raise Exception(\"2\");\r\n    print(\"3\");\r\nexcept Exception as e:\r\n    print(str(e));\r\n    print(\"4\");","answers":["1 2 3","1 2 4","1 2 3 4"],"correct_answer":"1 2 4","explanation":"Since exception is raised the except block executes.\r\n<br><br>\r\n<code>str(e)<\/code> is the message that's passed to the thrown exception - \"2\"."},{"id":124135427,"question":"What's the output of the code snippet?","code":"class Smartphone:\r\n\tgetPrice(self):\r\n\t\treturn self.__price;\r\n\r\n\tsetPrice(self, num):\r\n\t\tif num <= 0:\r\n\t\t\traise Exception('Invalid Price');\r\n\t\t\r\n\t\tself.__price = num;\t\r\n\r\n\r\nprint('1');\r\ntry:\r\n    smartphone = Smartphone();\r\n    smartphone.setPrice(-5);\r\nexcept Exception as ex:\r\n   print(str(ex));","answers":["1","Invalid Price 1","1 Invalid Price"],"correct_answer":"1 Invalid Price","explanation":"The passed price (-5) meets the condition <code>num <= 0<\/code> thus exception is raised and the except block executes.\r\n<br><br>\r\n<code>str(ex)<\/code> is the message that's passed to the thrown exception - \"Invalid Price\"."},{"id":2014006208,"question":"What's the output of the code snippet?","code":"class Person:\r\n    pass;\r\n\r\ntry:\r\n    p = Person();\r\n    p.sayHi();\r\n    print('123');\r\nexcept Exception as e:\r\n    print(str(e));","answers":["123","object has no attribute 'sayHi'","object has no attribute 'sayHi' 123"],"correct_answer":"object has no attribute 'sayHi'","explanation":"The class <code>Person<\/code> does not have a function <code>sayHi<\/code>.\r\n<br><br>\r\nThis causes an exception. <br><br>\r\n\"123\" is not printed since the execution of the try block terminates when exception is raised."}],"puzzles":[{"id":1590222713,"text":"Fill the missing words to match the output.","code":"try:\r\n    raise Exception(fillword);\r\nexcept Exception as ex:\r\n    print(str(ex));\r\n    print(fillword);\r\n\r\nprint(fillword);","result":"A B C","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"A \"","\"B \"","\"C\"","\"D \""]},"correct_patterns":[["\"A \"","\"B \"","\"C\""]]},{"id":394133254,"text":"Fill the missing words to match the output.","code":"try:\r\n    print(fillword);\r\n    raise Exception(fillword);\r\nexcept Exception as ex:\r\n    print(fillword);\r\n    print(fillword);","result":"1 2 3","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"1 \"","\"2 \"","\"3 \"","str(ex)"]},"correct_patterns":[["\"1 \"","\"2 \"","str(ex)","\"3 \""]]},{"id":1210195655,"text":"Fill the missing words to match the output.","code":"class Calculator:\r\n    def divide(self, a, b):\r\n        if b == 0:\r\n            raise Exception(\"Cannot divide by zero\");\r\n\r\n        return a \/ b;\r\n\r\ntry:\r\n    calc = Calculator();\r\n    calc.divide(fillword, fillword);\r\nexcept Exception as ex:\r\n    print(fillword);","result":"Cannot divide by zero","words":{"operators":[],"values":["0","3"],"variables_constants":[],"others":["ex","str(ex)"]},"correct_patterns":[["3","0","str(ex)"]]}]}]},"projects":[{"id":1746157131,"name":"Rectangle Calculator","description":"<p>Create a rectangle calculator on your desktop \/ laptop.<\/p>\r\n\r\n<p>The program must read two parameters:<\/p>\r\n<ul>\r\n    <li><b>rectangle's width<\/b> - positive floating point number.<\/li>\r\n    <li><b>rectangle's height<\/b> - another positive floating point number.<\/li>\r\n<\/ul>\r\n\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula: 2 x (width + height).<\/li>\r\n    <li><b>Area<\/b>. It's calculated via the formula: width x height.<\/li>\r\n    <li ><b>Diagonal<\/b>. It's calculated via the formula:<img src=\"imgs\/projects\/diagonal-formula.png\" style=\"\r\n    height: 45px;\r\n    display: block;\"><\/li>\r\n<\/ul>\r\n\r\n<p>Hint: You may use the function Math.Sqrt to calculate square root and Math.Pow to calculate power for the diagonal formula.<\/p>\r\n\r\n<p>Test your code using the inputs and outputs specified below:<\/p>","inputs":["3<br>4","2.2<br>3.5","6<br>8"],"outputs":["Perimeter = 14.0 <br> Area = 12.0 <br> Diagonal = 5.0","Perimeter = 11.4 <br> Area = 7.700000000000001 <br> Diagonal = 4.1340053217188775","Perimeter = 28.0 <br> Area = 48.0 <br> Diagonal = 10.0"],"solution":"import math; # so square root can be used via sqrt.\r\n\r\n# Read user's input and cast it to floating point number:\r\nwidth = float(input(\"Enter Width: \"));\r\nheight = float(input(\"Enter Height: \"));\r\n\r\n# Basic calculations:\r\nperimeter = 2 * (width + height);\r\narea = width * height;\r\n\r\n# Use math.Sqrt to calculate square root and ** to calculate power.\r\ndiagonal = math.sqrt(width ** 2 + height ** 2);\r\n\r\n# Print calculations:\r\nprint(\"Perimeter = \", perimeter);\r\nprint(\"Area = \", area);\r\nprint(\"Diagonal = \", diagonal);","stars":1,"requirements":["Calculations"]},{"id":582573576,"name":"Digitized Time","description":"<p>Many timers show time in the format mm:ss (minutes, seconds) but keep track only on the seconds. <p>\r\n<p>Write a program on your desktop \/ laptop which reads a seconds parameter (positive integer that's between 0 and 3600) and prints the time in the format mm:ss.<\/p>\r\n\r\n<p>For example 130 seconds is equivalent to 2 minute and 10 seconds (2 * 60 + 10 = 130) which is formated as \"02:10\".<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["30","120","65","695","1","3599"],"outputs":["00:30","02:00","01:05","11:35","00:01","59:59"],"solution":"totalSeconds = int(input('Seconds:')); # Read input and convert it to int.\r\nminutes = int(totalSeconds \/ 60); # If totalSeconds \/ 60 has value of 2.90 it's parsed to int as 2.\r\nseconds = totalSeconds - minutes * 60; # Extract seconds from minutes and total seconds.\r\n\r\noutput = \"\";\r\nif minutes < 10:\r\n    output += \"0\"; # Add leading 0 for single digit numbers.\r\n    \r\noutput += str(minutes) + \":\";\r\n\r\nif seconds < 10:\r\n    output += \"0\"; # Add leading 0 for single digit numbers.\r\n\r\noutput += str(seconds);\r\n\r\nprint(output);","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":460224969,"name":"Price Management","description":"<p>Penny has groceries stores in multiple Italian cities. Some of the cities are more expensive than others so the price is different for every city.<\/p>\r\n<p>Help Penny to manage her groceries prices by creating a program on your desktop \/ laptop which accepts two arguments:<\/p>\r\n<ul>\r\n     <li> <b>City<\/b> - string which has one of three values - \"Milan\", \"Rome\", \"Florence\".<\/li>\r\n     <li> <b>Fruit<\/b> - string which has one of three values - \"Orange\", \"Apple\", \"Cherry\".<\/li>\r\n<\/ul>\r\n<p>The program must print the cost of the fruit per kilogram in the specified city.<\/p>\r\n\r\n<p>The prices for fruits per kilogram are displayed in the following table:<\/p>\r\n\r\n<table>\r\n    <thead>\r\n           <tr>\r\n                 <td><\/td>\r\n                 <td>Milan<\/td>\r\n                 <td>Rome<\/td>\r\n                 <td>Florence<\/td>\r\n           <\/tr>\r\n    <\/thead>\r\n    <tbody>\r\n           <tr>\r\n                  <td>Orange<\/td>\r\n                  <td>2.56<\/td>\r\n                  <td>3.20<\/td>\r\n                  <td>4.23<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Apple<\/td>\r\n                  <td>2.86<\/td>\r\n                  <td>3.60<\/td>\r\n                  <td>4.56<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Cherry<\/td>\r\n                  <td>2.00<\/td>\r\n                  <td>2.80<\/td>\r\n                  <td>3.64<\/td>\r\n           <\/tr>\r\n  <\/tbody>\r\n<\/table>\r\n\r\n<p>For example the price per kilogram for orange in Rome is 3.20 and the price per kilogram for cherry in Florence is 3.64.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["Milan<br>Orange","Florence<br>Orange","Florence<br>Cherry","Rome<br>Cherry"],"outputs":["2.56","4.23","3.64","2.80"],"solution":"# Read user's input:\r\ncity = input('City: ');\r\nfruit = input('Fruit: ');\r\n\r\nif city == \"Milan\":\r\n    if fruit == \"Orange\":\r\n        print(\"2.56\");\r\n    elif fruit == \"Apple\":\r\n        print(\"2.86\");\r\n    elif fruit == \"Cherry\":\r\n        print(\"2.00\");\r\n\r\nelif city == \"Rome\":\r\n    if fruit == \"Orange\":\r\n        print(\"3.20\");\r\n    elif fruit == \"Apple\":\r\n        print(\"3.60\");\r\n    elif fruit == \"Cherry\":\r\n        print(\"2.80\");\r\n\r\nelif city == \"Florence\":\r\n    if fruit == \"Orange\":\r\n        print(\"4.23\");\r\n    elif (fruit == \"Apple\"):\r\n        print(\"4.56\");\r\n    elif (fruit == \"Cherry\"):\r\n        print(\"3.64\");","stars":2,"requirements":["Condition Statements"]},{"id":1544722838,"name":"Currency Converter","description":"<p>Write a currency converter on your desktop \/ laptop which accepts 3 arguments:<\/p>\r\n<ul>\r\n    <li><b>Amount<\/b> - positive floating point number<\/li>\r\n    <li><b>Input currency<\/b> - string representing currency<\/li>\r\n    <li><b>Output currency<\/b> - another string representing currency<\/li>\r\n<\/ul>\r\n\r\n<p>The supported currencies are: USD, EUR and GBP. For the sake of simplicity it's assumed that their exchange rate is always the following:<\/p>\r\n\r\n<table class=\"table\">\r\n<tbody>\r\n<tr>\r\n\t<td rowspan=\"2\">1 USD<\/td>\r\n\t<td>0.84 EUR<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>&nbsp;0.72&nbsp;GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 EUR<\/td>\r\n\t<td>1.18 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>0.86 GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 GBP<\/td>\r\n\t<td>1.38 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>1.16 EUR<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>For example 2 EUR are 2.36 USD (2 * 1.18 = 2.36).<\/p>\r\n<p>Also the output needs to be rounded up to two digits after decimal point.<\/p>\r\n\r\n<p>Make sure it's printed \"Invalid Input\" if an unsupported currency is entered.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["2<br>EUR<br>GBP","1.12<br>USD<br>EUR","2.54<br>GBP<br>EUR","3.56<br>ABC<br>EUR","3.56<br>USD<br>ABC"],"outputs":["1.72","0.94","2.95","Invalid input.","Invalid input."],"solution":"# Read user's input and cast it to floating point number\r\namount = float(input('Amount: '));\r\n\r\ncurrencyFrom = input('From: ');\r\ncurrencyTo = input('To:');\r\n\r\nmultiplier = 0;\r\n\r\nif currencyFrom == \"USD\":\r\n    \r\n    if currencyTo == \"EUR\":\r\n        multiplier = 0.84;\r\n    elif currencyTo == \"GBP\":\r\n        multiplier = 0.72;\r\nelif currencyFrom == \"EUR\":\r\n    \r\n    if currencyTo == \"USD\":\r\n        multiplier = 1.18;\r\n    elif currencyTo == \"GBP\":\r\n        multiplier = 0.86;\r\nelif currencyFrom == \"GBP\":\r\n    \r\n    if currencyTo == \"USD\":\r\n        multiplier = 1.38;\r\n    elif currencyTo == \"EUR\":\r\n        multiplier = 1.16;\r\n\r\nif multiplier == 0:\r\n    # Neither of the checks has modified it's value.\r\n    # So inform user about invalid input.\r\n    print(\"Invalid input.\");\r\n\r\nelse:\r\n    # Valid Input\r\n    # Calculate and round output up to two digits after decimal point.\r\n\r\n    output = amount * multiplier;\r\n    print(round(output, 2));","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":382187863,"name":"Multiplication Table","description":"<p>Write a program on your desktop \/ laptop that prints multiplication table.<\/p>\r\n<p>The program must accept 1 argument:<\/p>\r\n<ul>\r\n    <li><b>number<\/b> - positive integer.<\/li>\r\n<\/ul>\r\n<p>The multiplication table must contain information about the multiplications for the input number and the numbers from 1 to 10.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["3","5","0"],"outputs":["3 x 3 = 3 <br> 3 x 2 = 6 <br> 3 x 3 = 9 <br> 3 x 4 = 12 <br> 3 x 5 = 15 <br> 3 x 6 = 18 <br> 3 x 7 = 21 <br> 3 x 8 = 24 <br> 3 x 9 = 27 <br> 3 x 10 = 30","5 x 1 = 5 <br> 5 x 2 = 10 <br> 5 x 3 = 15 <br> 5 x 4 = 20 <br> 5 x 5 = 25 <br> 5 x 6 = 30 <br> 5 x 7 = 35 <br> 5 x 8 = 40 <br> 5 x 9 = 45 <br> 5 x 10 = 50","0 x 1 = 0 <br> 0 x 2 = 0 <br> 0 x 3 = 0 <br> 0 x 4 = 0 <br> 0 x 5 = 0 <br> 0 x 6 = 0 <br> 0 x 7 = 0 <br> 0 x 8 = 0 <br> 0 x 9 = 0 <br> 0 x 10 = 0"],"solution":"# Read user's input and cast it to integer\r\nnumber = int(input('Number: '));\r\n\r\nfor i in range(1, 11):\r\n    print(number, \" x \", i, \" = \", number * i)","stars":2,"requirements":["Calculations","Loops"]},{"id":1333057812,"name":"Play Button","description":"<p>Write a program on your desktop \/ laptop that prints a play button made of stars.<\/p>\r\n\r\n<p>The program must accept one argument:<\/p>\r\n<ul>\r\n    <li><b>rows<\/b> - positive integer<\/li>\r\n<\/ul>\r\n<p>If the input number is even (like 0, 2, 4, 6 etc...) or negative print the message \"Invalid input.\".<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: You don't have to write nested loops if you don't want to. You can repeat a string like this: <br>\r\n<code>row = '*' * 4;<\/code> which creates the following string: \"****\".<\/p>","inputs":["1","3","5","7","2","0","-1"],"outputs":["<div style=\"letter-spacing: 5px;\">*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>****<br>***<br>**<br>*<\/div>","Invalid input.","Invalid input.","Invalid input."],"solution":"# Read user's input:\r\nnumber = int(input('Number: '));\r\n\r\nif number % 2 == 0 or number <= 0:\r\n    # Inform user that input is negative.\r\n    print(\"Invalid input.\");\r\nelse:\r\n\r\n    # Print the upper part:\r\n    for i in range(1, int(number \/ 2) + 1):\r\n        # repeat '*' i times.\r\n        # Example: '*' * 3 would create the string \"***\".\r\n        print('*' * i);\r\n    \r\n    # Print the middle row:\r\n    print('*' * int(number \/ 2 + 1));\r\n    \r\n    \r\n    # Print the below part:\r\n    for i in range (int(number \/ 2), 0, -1):\r\n        print('*' * i);","stars":3,"requirements":["Loops"]},{"id":1702101,"name":"Digits Counter","description":"<p>Write a program on your desktop \/ laptop which prints the occurrences of digits in input number.<\/p>\r\n<p>The program must read a positive integer.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details.<\/p>\r\n<p>Hint: you don't have to write nested loops if you don't want to. You can count occurances via the count function.<br>\r\nFor example:<br><\/p>\r\n<code>phrase= 'Sample String'; <br>\r\nprint(phrase.count('S'))<\/code>\r\n<br>\r\nprints 2 since 'S' is contained 2 times.<\/p>","inputs":["112266863","15968929","01230"],"outputs":["0 -> 0 <br> 1 -> 2 <br> 2 -> 2 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 3 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 0","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 0 <br> 4 -> 0 <br> 5 -> 1 <br> 6 -> 1 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 3","0 -> 1 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 0 <br> 7 -> 0 <br> 8 -> 0 <br> 9 -> 0"],"solution":"# Read user's input. Integer parsing removes the leading 0s.\r\n# For example 00123 is parsed as 123.\r\nstrInput = input('Number: ');\r\nnumber = int(strInput);\r\nnumberToString = str(number);\r\n\r\nfor i in range(0, 10):\r\n\r\n    occurrences = numberToString.count(str(i));\r\n    print(i, \" -> \", occurrences);","stars":3,"requirements":["Loops"]},{"id":2060327058,"name":"Chess Tournament","description":"<p>Write a program on your desktop \/ laptop which prints data about the ages of the participant in chess tournament.<\/p>\r\n<p>The program should read the following parameters:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - positive integer representing the count of the participant.<\/li>\r\n    <li><b>ages<\/b> - positive integers, each typed on a new line, representing the ages of the participant.<\/li>\r\n<\/ul>\r\n\r\nThe output of the program must provide data about:\r\n<ul>\r\n    <li><b>Minimum age<\/b> - the age of the youngest participant.<\/li>\r\n    <li><b>Maximum age<\/b> - the age of the oldest participant.<\/li>\r\n    <li><b>Average age<\/b><\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: you may use array for storing the participants ages.<\/p>","inputs":["3<br> 19<br> 21<br>20","2<br>18<br>19","3<br>15<br>15<br>18"],"outputs":["Min: 19 <br> Max: 21 <br> Average: 20","Min: 18 <br> Max: 19 <br> Average: 18","Min: 15 <br> Max: 18 <br> Average: 16"],"solution":"# Read user's input.\r\ncount = int(input('Count: '));\r\n\r\n# Create array and set values to it's elements:\r\nages = [];\r\nfor i in range(0, count):\r\n    ages.append(int(input()));\r\n\r\n# Loop array and find output data:\r\nminAge = ages[0];\r\nmaxAge = ages[0];\r\nsum = 0; # Used to calculate average age.\r\n\r\nfor age in ages:\r\n    if age < minAge:\r\n        minAge = age;\r\n    \r\n    if age > maxAge:\r\n        maxAge = age;\r\n\r\n    sum += age;\r\n\r\naverageAge = int(sum \/ count);\r\n\r\nprint(\"Min:\", minAge);\r\nprint(\"Max:\", maxAge);\r\nprint(\"Average: \", averageAge);","stars":3,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":863189075,"name":"Gaming Shop","description":"<p>Steve has a gaming shop and needs your help with inserting games and recording sells.<\/p>\r\n\r\n<p>Write a program on your desktop \/ laptop which reads commands.<\/p>\r\n<p>There are 3 types of commands:<\/p>\r\n<ul>\r\n    <li>\r\n        <b>Product Insertion<\/b> - it's in the format: <br>\r\n          \"insert-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It creates new game with the specified quantity or increases the quantity if the game is already added.\r\n    <\/li>\r\n    <li>\r\n        <b>Product Sell<\/b> - it's in the format: <br>\r\n          \"sell-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It decreases the quantity of the specified game. You can assume that the sold quantity will always be less or equal to the available one.\r\n    <\/li>\r\n    <li>\r\n        <b>Terminate program<\/b> - if a command with value \"end\" is entered, then a report of available games and their quantity is printed. Afterwards the program is terminated.\r\n    <\/li>\r\n<\/ul> \r\n\r\n<p>Notice that sold out games (with quantity of 0) must not be included in the end report.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: since game names are considered unique, the best practice would be to use dictionary for storing data with key - the game name and value - it's quantity.<\/p>","inputs":["insert-Minecraft-5<br>insert-Rocket League-10<br>end","insert-Counter Strike-10<br>sell-Counter Strike-3<br>end","insert-Fortnite-10<br>insert-pubg-10<br>sell-Fortnite-10<br>sell-pubg-7<br>end"],"outputs":["Minecraft: 5<br> Rocket League: 10","Counter Strike: 7","pubg: 3"],"solution":"gamesData = dict();\r\n\r\nwhile True : # Infinite loop which repeats until it's forcefully stopped via the break keyword.\r\n\r\n    command = input();\r\n\r\n    # Get command components by spliting.\r\n    # Example: if command has value \"insert-game-15\" then parameters would be array with 3 elements - \"insert\", \"game\" and \"15\"\r\n    parameters = command.split('-');\r\n\r\n    commandName = parameters[0];\r\n\r\n    if commandName == \"end\":\r\n        break; # Forcefully terminate the loop and proceed with the report.\r\n\r\n    gameName = parameters[1];\r\n    quantity = int(parameters[2]);\r\n\r\n    if commandName == \"insert\":\r\n        # The insert command is used for:\r\n        # - Adding new game to the store with the specified quantity.\r\n        # - Increasing quantity to already added game.\r\n        # Both cases need to be handled separately.\r\n\r\n        if gameName in gamesData:\r\n            # Increase quantity to already added game\r\n            gamesData[gameName] += quantity;\r\n        else:\r\n            # Adding new game to the store with the specified quantity.\r\n            gamesData[gameName] = quantity;\r\n\r\n    elif commandName == \"sell\": # Handle selling:\r\n        # Decrease quantity when game is sold.\r\n        gamesData[gameName] -= quantity;\r\n\r\n        if gamesData[gameName] == 0:\r\n        # Don't store data for games that have been sold out.\r\n            del gamesData[gameName];\r\n\r\n# Print report:\r\nfor name, quantity in gamesData.items():\r\n    # Print report in format name: quantity.\r\n    print(name, \": \",  quantity);","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":1948276752,"name":"Tic Tac Toe","description":"<p>Write a program on your desktop \/ laptop which checks who wins on in tic tac toe match.<\/p>\r\n<p>If you don't know how to play tic tac toe, you can learn the rules from\r\n<a href=\"https:\/\/www.wikihow.com\/Play-Tic-Tac-Toe\">here<\/a>.<\/p>\r\n\r\n<p>The input parameters of the program are 3. Each represents a line of the tic tac toe board.<\/p>\r\n<p>The program prints one of the following:<\/p>\r\n<ul>\r\n    <li><b>\"X wins\"<\/b> if X wins<\/li>\r\n    <li><b>\"O wins\"<\/b> if O wins<\/li>\r\n    <li><b>\"Tie\"<\/b> if neither of the players wins.<\/li>\r\n<\/ul>\r\n<p>You can assume that the input will always represent a legit tic tac toe endgame so you don't have to validate it.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: the best data structure that represents a tic tac toe board would be matrix with 3 rows and 3 columns.<\/p>","inputs":["ooo<br>xx-<br>---","xo-<br>oxo<br>x-x","xox<br>oox<br>xxo"],"outputs":["O wins","X wins","Tie"],"solution":"def winsTicTacToe(board, symbol):\r\n    for i in range(0, 3):\r\n        \r\n        # If line or column is filled only with x or o.\r\n        if (board[i][0] == symbol and board[i][1] == symbol and board[i][2] == symbol) or (board[0][i] == symbol and board[1][i] == symbol and board[2][i] == symbol):\r\n            return True;\r\n\r\n        # Check if one of the diagonals is filled only with x or o\r\n        if board[1][1] == symbol and ((board[0][0] == symbol and board[2][2] == symbol) or (board[0][2] == symbol and board[2][0] == symbol)):\r\n            return True;\r\n\r\n    return False;\r\n    \r\n    \r\nboard = [];\r\n\r\nfor i in range(0, 3):\r\n    line = input();\r\n\r\n    board.append([ line[0], line[1], line[2] ]);\r\n\r\nif winsTicTacToe(board, 'x'):\r\n    print(\"X wins\");\r\nelif winsTicTacToe(board, 'o'):\r\n    print(\"O wins\");\r\nelse:\r\n    print(\"Tie\");","stars":4,"requirements":["Condition Statements","Data Structures","Functions"]},{"id":785742801,"name":"Car Dealership","description":"<p>Write a program on your desktop \/ laptop which reads data for cars and print data only for those which make is the same as the specified one.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of cars which will be entered.<\/li>\r\n    <li><b>car's data<\/b> - the data for a single car in the format:<br>\r\n&lt;make&gt; &lt;model&gt; &lt;hp&gt;  &lt;price&gt; .<\/li>\r\n    <li><b>filter make<\/b> - string.<\/li>\r\n<\/ul>\r\n<p>The data for each car is entered on a separate line.<\/p>\r\n<p>The car dealership offers a 10 % discount for people who've bought a car from the same warehouse in the last 6 years. That discount must be included in the output. Also the prices of the cars must be printed as numbers with 2 digits after the decimal point.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Car<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to calculate discount<\/li>\r\n    <li>__str__ method<\/li>\r\n    <li>Data structure for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000<br>Volkswagen<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000.0 (22500.0 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Toyotta Corolla 120 23000<br>Ford Fiesta 80 18000<br>Toyotta Aygo 75 16000<br>Toyotta<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Toyotta Corolla 120 23000.0 (20700.0 for loyal customers)<br>Toyotta Aygo 75 16000.0 (14400.0 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"class Car:\r\n    # Members accessed via getters and setters:\r\n    def get_make(self):\r\n        return self.__make;\r\n    \r\n    def set_make(self, value):\r\n        self.__make = value;\r\n        \r\n    def get_model(self):\r\n        return self.__model;\r\n    \r\n    def set_model(self, value):\r\n        self.__model = value;\r\n\r\n    def get_hp(self):\r\n        return self.__hp;\r\n    \r\n    def set_hp(self, value):\r\n        self.__hp = value;\r\n        \r\n    def get_price(self):\r\n        return self.__price;\r\n    \r\n    def set_price(self, value):\r\n        self.__price = value;\r\n\r\n    # Parameterized constructor for creating objects:\r\n    def __init__(self, make, model, hp, price):\r\n        self.set_make(make);\r\n        self.set_model(model);\r\n        self.set_hp(hp);\r\n        self.set_price(price);\r\n    \r\n\r\n    def calculateDiscount(self):\r\n        # Calculate price with 10 % discount (90 % of the ordinary price):\r\n        return self.get_price() * 9 \/ 10;\r\n\r\n        # String representation of the class object:\r\n    def __str__ (self):\r\n        return self.get_make() + \" \" + self.get_model() + \" \" + str(self.get_hp()) + \" \" + str(round(self.get_price(), 2)) + \" (\" + str(round(self.calculateDiscount(), 2)) + \" for loyal customers)\";\r\n        \r\n\r\ncount = int(input());\r\n\r\ncars = [];\r\n\r\nfor i in range(0, count):\r\n    carData = input().split(' ');\r\n\r\n    make = carData[0];\r\n    model = carData[1];\r\n    hp = int(carData[2]);\r\n    price = float(carData[3]);\r\n\r\n    # Create object based on the input data and add it to list\r\n    obj = Car(make, model, hp, price);\r\n    cars.append(obj);\r\n\r\n\r\nfilterMake = input();\r\n\r\nfor car in cars:\r\n    # Filter cars by make:\r\n    if (car.get_make() == filterMake):\r\n        # Print the string representations specified with the __str__ method:\r\n        print(car);","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures","Functions","OOP"]},{"id":1736022942,"name":"Students Scores","description":"<p>Write a program on your desktop \/ laptop which reads data for students scores on exam and prints it back sorted.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of student's scores which will be entered.<\/li>\r\n    <li><b>exam data<\/b> - the data for a single exam score in the format:<br>\r\n&lt;student's first name&gt; &lt;student's last name&gt; &lt;exam score&gt; .<\/li>\r\n<\/ul>\r\n<p>The data for each student score is entered on a separate line.<\/p>\r\n<p>The output must include grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Student<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to get grade<\/li>\r\n    <li>__str__ method<\/li>\r\n    <li>Data structure for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>John Smith 81<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>John Smith 81 B<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>2<br>Alex  Ethan 77<br> Joe Hawke 82<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Joe Hawke 82 B<br>Alex  Ethan 77 C<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Olivia Smith 88<br> Jack DiIlan 88 <br> Gabriel Doe 93<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Gabriel Doe 93 A <br> Jack DiIlan 88 B <br> Olivia Smith 88 B<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"class Student:\r\n    # Members accessed via getters and setters:\r\n    def get_firstName(self):\r\n        return self.__firstName;\r\n    \r\n    def set_firstName(self, value):\r\n        self.__firstName = value;\r\n        \r\n    def get_lastName(self):\r\n        return self.__lastName;\r\n    \r\n    def set_lastName(self, value):\r\n        self.__lastName = value;\r\n        \r\n    def get_examScore(self):\r\n        return self.__examScore;\r\n    \r\n    def set_examScore(self, value):\r\n        self.__examScore = value;\r\n\r\n    def get_grade(self):\r\n        examScore = self.get_examScore();\r\n        \r\n        # Find out grade based on points:\r\n        if examScore < 50:\r\n            return 'F';\r\n        if examScore < 60:\r\n            return 'E';\r\n        if examScore < 70:\r\n            return 'D';\r\n        if examScore < 80:\r\n            return 'C';\r\n        if examScore < 90:\r\n            return 'B';\r\n\r\n        return 'A';\r\n\r\n     # Parameterized constructor for creating objects:\r\n    def __init__(self, firstName, lastName, examScore):\r\n        self.set_firstName(firstName);\r\n        self.set_lastName(lastName);\r\n        self.set_examScore(examScore);\r\n\r\n    # String representation of a class object:\r\n    def __str__ (self):\r\n        return self.get_firstName() + \" \" + self.get_lastName() + \" \" + str(self.get_examScore()) + \" \" + self.get_grade();\r\n\r\n\r\n\r\ncount = int(input());\r\n\r\nstudents = [];\r\n\r\nfor i in range(0, count):\r\n    studentsData = input().split(' ');\r\n\r\n    firstName = studentsData[0];\r\n    lastName = studentsData[1];\r\n    examScores = int(studentsData[2]);\r\n\r\n    # Create object based on the input data and add it to list:\r\n    obj = Student(firstName, lastName, examScores);\r\n    students.append(obj);\r\n\r\n# sort students by exam score: reverse=true specifies descending sort\r\nstudents.sort(key=lambda x: x.get_examScore(), reverse=True);\r\n\r\nfor student in students:\r\n    # Prints the string representation specified with the ToString method:\r\n    print(student);","stars":5,"requirements":["Condition Statements","Loops","Data Structures","Functions","OOP"]}],"challenges":[]},"Java":{"urlName":"java","mode":"text\/x-java","tutorials":{"Basics":[{"id":1948276752,"name":"Data Types","tests":[{"id":1106957161,"question":"Which type is suitable for describing car's model?","code":null,"answers":["int","String","boolean"],"correct_answer":"String","explanation":"<ul>\r\n<li>String is suitable for describing a sequence of symbols.<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":984609590,"question":"Which type is suitable for describing person's age?","code":null,"answers":["string","double","int"],"correct_answer":"int","explanation":"<ul>\r\n<li>int - whole numbers (like 5, 6, 10).<\/li>\r\n<li>String - a sequence of symbols.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"},{"id":1935414007,"question":"Which type is suitable for describing distance?","code":null,"answers":["string","double","char"],"correct_answer":"double","explanation":"<ul>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<li>String - a sequence of symbols.<\/li>\r\n<li>char - a single symbol.<\/li>\r\n<\/ul>"},{"id":872493748,"question":"Which type is suitable for describing a single symbol?","code":null,"answers":["char","int","boolean"],"correct_answer":"char","explanation":"<ul>\r\n<li>char - a single symbol.<\/li>\r\n<li>Int - whole number.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1857442421,"question":"Which type is suitable for describing if person is famous (true or false)?","code":null,"answers":["boolean","int","double"],"correct_answer":"boolean","explanation":"<ul>\r\n<li>boolean - true or false (famous or not famous).<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"}],"puzzles":[{"id":1293723732,"text":"Fill the missing words to match the output.","code":"fillword name = \"Alex\";\r\nfillword age = 20;","result":null,"words":{"operators":[],"values":[],"variables_constants":["int","String","char"],"others":[]},"correct_patterns":[["String","int"]]},{"id":130140181,"text":"Fill the missing words to match the output.","code":"fillword salesCount = 150;\r\nfillword height = 180.52;","result":null,"words":{"operators":[],"values":[],"variables_constants":["int","boolean","char","double"],"others":[]},"correct_patterns":[["int","double"]]},{"id":2021059538,"text":"Fill the missing words to match the output.","code":"fillword city = \"Madrid\";\r\nfillword letter = 'M';\r\nfillword isSunny = true;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["boolean","char","String","double","float"]},"correct_patterns":[["String","char","boolean"]]}]},{"id":785742801,"name":"Calculations","tests":[{"id":660304434,"question":"What's the output of the code snippet?","code":"int number = 5 + 6 - 2;\r\nSystem.out.print(number);","answers":["9","10","11"],"correct_answer":"9","explanation":"5 + 6 - 2 =  <br>\r\n11 - 2 =  <br>\r\n9"},{"id":403676659,"question":"What's the output of the code snippet?","code":"int number =  6 * 3 - 1;\r\nSystem.out.print(number);","answers":["12","17","18"],"correct_answer":"17","explanation":"6 * 3 - 1 = <br>\r\n18 - 1 = <br>\r\n17"},{"id":1388101040,"question":"What's the output of the code snippet?","code":"int number = 18 \/ 3 + 3;\r\nSystem.out.print(number);","answers":["3","6","9"],"correct_answer":"9","explanation":"18 \/ 3 + 3 = <br>\r\n6 + 3 = <br>\r\n9"},{"id":190963057,"question":"What's the output of the code snippet?","code":"int number = (14 + 7) \/ 7;\r\nSystem.out.print(number);","answers":["3","15","22"],"correct_answer":"3","explanation":"(14 + 7) \/ 7 = <br>\r\n21 \/ 7 = <br>\r\n3"},{"id":1276575038,"question":"What's the output of the code snippet?","code":"int number = 14 % 3;\r\nSystem.out.print(number);","answers":["2","3","4"],"correct_answer":"2","explanation":"14 : 3 = <b>4<\/b>.67 <br><br>\r\n14 - 3 * 4 = <br>\r\n14 - 12 =<br>\r\n2"}],"puzzles":[{"id":823856019,"text":"Fill the missing words to match the output.","code":"int number = 6 fillword 2;\r\nSystem.out.print(number);","result":"12","words":{"operators":["+","%","*","\/"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["*"]]},{"id":1808280400,"text":"Fill the missing words to match the output.","code":"String combine = \"Blue \" fillword \"Sky\";\r\nSystem.out.print(combine);","result":"Blue Sky","words":{"operators":[".","*","-","+","%"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["+"]]},{"id":746408721,"text":"Fill the missing words to match the output.","code":"int division = 12 fillword 4;\r\nint remainder = 17 fillword  5;\r\n\r\nSystem.out.println(division);\r\nSystem.out.println(remainder);","result":"3\r\n2","words":{"operators":["+","\/","%","^"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["\/","%"]]}]},{"id":632409032,"name":"Assignments","tests":[{"id":1794773987,"question":"What's the output of the code snippet?","code":"int val = 8;\r\nval = 2;\r\nSystem.out.println(val);","answers":["2","8","10"],"correct_answer":"2","explanation":"The last value set to the variable <code>val<\/code> is 2.\r\n<br><br>\r\nSo <code>val<\/code> has value of 2 when it's printed."},{"id":598684576,"question":"What's the output of the code snippet?","code":"int num = 2;\r\nnum = num + 3;\r\nSystem.out.println(num);","answers":["2","3","5"],"correct_answer":"5","explanation":"num = 2\r\n<br>\r\nnum = 2 + 3\r\n<br>\r\nnum = 5"},{"id":1683772257,"question":"What's the output of the code snippet?","code":"int num = 4;\r\nnum *= 3;\r\n\r\nSystem.out.println(num);","answers":["3","9","12"],"correct_answer":"12","explanation":"num = 4 <br>\r\nnum *= 3\r\n<br>\r\nnum = num * 3\r\n<br>\r\nnum = 4 * 3<br>\r\nnum = 12"},{"id":1560376110,"question":"What's the output of the code snippet?","code":"int num = 4 + 6;\r\nnum \/= 2;\r\nnum *= 3;\r\n\r\nSystem.out.println(num);","answers":["5","15","60"],"correct_answer":"15","explanation":"num = 4 + 6; <br>\r\nnum = 10 <br>\r\n<br>\r\nnum \/= 2; <br>\r\nnum = num \/ 2; <br>\r\nnum = 10 \/ 2; <br>\r\nnum = 5 <br>\r\n<br>\r\nnum *= 3; <br>\r\nnum = num * 3; <br>\r\nnum = 5 * 3; <br>\r\nnum = 15"},{"id":397775599,"question":"What's the output of the code snippet?","code":"int a = 3;\r\nint b = 2;\r\n\r\na *= b;\r\nb *= a;\r\n\r\nSystem.out.println(b);","answers":["6","12","72"],"correct_answer":"12","explanation":"a = 3 <br>\r\nb = 2 <br>\r\n<br>\r\na *= b <br>\r\na = a * b <br>\r\na = 3 * 2 <br>\r\na = 6 <br>\r\n<br>\r\nb *= a <br>\r\nb = b * a <br>\r\nb = 2 * 6 <br>\r\nb = 12"}],"puzzles":[{"id":1134790099,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\nnum = fillword;\r\n\r\nSystem.out.println(num);\r\nnum = fillword;","result":"8","words":{"operators":[],"values":["1","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["1","8","7"],["7","8","1"]]},{"id":72394128,"text":"Fill the missing words to match the output.","code":"int num = 5;\r\nnum fillword fillword;\r\nSystem.out.println(num);","result":"15","words":{"operators":[],"values":["1","2","3"],"variables_constants":["+=","*=","\/="],"others":[]},"correct_patterns":[["*=","3"]]},{"id":2097530193,"text":"Fill the missing words to match the output.","code":"int num fillword 10;\r\nnum fillword 5;\r\nnum fillword 2;\r\nnum fillword 1;\r\n\r\nSystem.out.println(num);","result":"29","words":{"operators":["=","+=","-=","*=","\/="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","+=","*=","-="]]}]},{"id":1736022942,"name":"If Statement","tests":[{"id":112925951,"question":"What's the output of the code snippet?","code":"int age = 18;\r\n\r\nif(age >= 21) {\r\n    System.out.print(\"a \");\r\n}\r\nif(age < 30) {\r\n    System.out.print(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>age = 18<\/code>\r\n<br><br>\r\n<code>age >= 21<\/code> is false.\r\n<br><br>\r\n<code>age < 30<\/code> is true so \"b\" is printed."},{"id":2137537724,"question":"What's the output of the code snippet?","code":"int pagesCount = 100;\r\n\r\nif(pagesCount > 100) {\r\n    System.out.print(\"a \");\r\n}\r\nif(pagesCount >= 100) {\r\n    System.out.print(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>pagesCount = 100<\/code>\r\n<br><br>\r\n\r\n<code>pagesCount > 100<\/code> is false. <br><br>\r\n<code>pagesCount >= 100<\/code> is true so \"b\" is printed."},{"id":807230589,"question":"What's the output of the code snippet?","code":"int num = 3;\r\n\r\nif(num == 3) {\r\n    System.out.print(\"a \");\r\n}\r\nif(num != 3) {\r\n    System.out.print(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"a","explanation":"<code>num = 3<\/code>\r\n<br><br>\r\n\r\n<code>num == 3<\/code> is true so \"a\" is printed.\r\n<br><br>\r\n<code>num != 3<\/code> is false (because num is equal to 3)."},{"id":1791130682,"question":"What's the output of the code snippet?","code":"int score = 87;\r\n\r\nif(score <= 87) {\r\n    System.out.print(\"1 \");\r\n}\r\nif(score == 87) {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>score = 87<\/code>\r\n<br><br>\r\n\r\n<code>score <= 87<\/code> is true so \"1\" is printed.\r\n<br><br>\r\n<code>score == 87<\/code> is true so \"2\" is printed."},{"id":594976763,"question":"What's the output of the code snippet?","code":"int num = 77;\r\nint rem = num % 2;\r\n\r\nif (rem == 0) {\r\n    System.out.print(\"even \");\r\n}\r\nif(rem == 1) {\r\n    System.out.print(\"odd \");\r\n}","answers":["even","odd","even odd"],"correct_answer":"odd","explanation":"77 % 2 is equal to 1 (rem is 1) so odd is printed.\r\n<br><br>\r\nThe only condition that's true is <code>rem == 1<\/code> ."}],"puzzles":[{"id":1696754398,"text":"Fill the missing words to match the output.","code":"double price = 300;\r\n\r\nif(price fillword 500) {\r\n   System.out.print(\"High\");\r\n}","result":"High","words":{"operators":["<","==",">"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["<"]]},{"id":1607895711,"text":"Fill the missing words to match the output.","code":"int number = 7;\r\nif(number fillword 7) {\r\n    System.out.println(\"Special Number\");\r\n}\r\n\r\ndouble volume = 101;\r\nif(volume fillword 100) {\r\n    System.out.println(\"Large\");\r\n}","result":"Special Number\r\nLarge","words":{"operators":["<",">","=="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["==",">"]]},{"id":276539996,"text":"Fill the missing words to match the output.","code":"int number = 5;\r\n\r\nif(number fillword 0) {\r\n    System.out.println(\"Different\");\r\n}","result":"Different","words":{"operators":["==","!=","<","<="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!="]]}]},{"id":1613010594,"name":"Logical Operators","tests":[{"id":1679540152,"question":"What's the output of the code snippet?","code":"int num = 7;\r\n\r\nif (num > 7 || num < 21) {\r\n    System.out.print(\"1 \");\r\n}\r\nif(num > 10 || num < 15) {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>num = 7<\/code>\r\n<br><br>\r\n<code>num > 7 || num < 21<\/code> is true because <code>num < 21<\/code> is true .\r\n<br><br>\r\n<code>num > 10 || num < 15<\/code> is true because <code>num < 15<\/code> is true.\r\n<br><br>\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1590222713,"question":"What's the output of the code snippet?","code":"int age = 17;\r\n\r\nif (age > 13 && age < 21) {\r\n    System.out.print(\"1 \");\r\n}\r\nif(age > 21 && age < 60) {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n<code>age > 13 && age < 21<\/code> is true because both operands are true.\r\n<br><br>\r\n<code>age > 21 && age < 60<\/code> is false because <code>age > 21<\/code> is false.\r\n<br><br>\r\n\r\nUsing && means that If any of the two operands is false, then  the condition becomes false."},{"id":394133254,"question":"What's the output of the code snippet?","code":"int level = 5;\r\n\r\nif (level > 0 && level < 11) {\r\n    System.out.print(\"valid \");\r\n}\r\nif(level == 5 || level == 7) {\r\n    System.out.print(\"special \");\r\n}","answers":["valid","special","valid special"],"correct_answer":"valid special","explanation":"<code>level = 5<\/code>\r\n<br><br>\r\n<code>level > 0 && level < 11<\/code> is true because both operands are true (level is between 0 and 11).\r\n<br><br>\r\n<code>level == 5 || level == 7<\/code> is true because <code>level == 5<\/code> is true.\r\n<br><br>\r\nUsing && means that If any of the two operands is false, then  the condition becomes false.\r\n<br><br>\r\n\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1210195655,"question":"What's the output of the code snippet?","code":"double height = 165;\r\n\r\nif (!(height == 160)) {\r\n    System.out.print(\"1 \");\r\n}\r\nif(!(height > 150 && height < 200)) {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>height = 165<\/code>\r\n<br><br>\r\n<code>height == 160<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>height > 150 && height < 200<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."},{"id":47660676,"question":"What's the output of the code snippet?","code":"int code = 301;\r\n\r\nif (!(code >= 100 && code <= 200)) {\r\n    System.out.print(\"1 \");\r\n}\r\nif(!(code >= 400 || code == 301)) {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>code = 301<\/code>\r\n<br><br>\r\n<code>code >= 100 && code <= 200<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>code >= 400 || code == 301<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."}],"puzzles":[{"id":1227409949,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nif(num == 1 fillword num == 2) {\r\n    System.out.print(\"1 or 2\");\r\n}","result":"1 or 2","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["||"]]},{"id":64869850,"text":"Fill the missing words to match the output.","code":"int num = 4;\r\n\r\nif(num >= 1 fillword num <= 9) {\r\n    System.out.println(\"Between 1 and 9\");\r\n}\r\n\r\nif(num == 3 fillword  num == 4) {\r\n    System.out.println(\"3 or 4\");\r\n}","result":"Between 1 and 9\r\n3 or 4","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["&&","||"]]},{"id":1149433243,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\nif(fillword(num != 1)) {\r\n    System.out.print(\"Equal To One\");\r\n}","result":"Equal To One","words":{"operators":["&","|","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!"]]}]},{"id":1479457631,"name":"If Else Statements","tests":[{"id":2072272453,"question":"What's the output of the code snippet?","code":"int age = 17;\r\n\r\nif (age == 17) {\r\n    System.out.print(\"1 \");\r\n}\r\nelse {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n\r\n<code>age == 17<\/code> is true so the code inside if clause is executed.\r\n<br><br>\r\nThe code inside the else block is not executed."},{"id":1009352194,"question":"What's the output of the code snippet?","code":"int num = 5;\r\n\r\nif (num == 3) {\r\n    System.out.print(\"1 \");\r\n}\r\nelse {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>num = 5<\/code>\r\n<br><br>\r\n<code>num == 3<\/code> is false so the code inside the else clause is executed.\r\n<br><br>\r\nThe code inside the if block is not executed."},{"id":1994234307,"question":"What's the output of the code snippet?","code":"int num = 15;\r\n\r\nif (num == 14) {\r\n    System.out.print(\"1 \");\r\n}\r\nelse if (num == 15) {\r\n    System.out.print(\"2 \");\r\n}\r\nelse {\r\n    System.out.print(\"3 \");\r\n}","answers":["2","2 3","1 3"],"correct_answer":"2","explanation":"<code>num = 15<\/code>\r\n<br><br>\r\n\r\n<code>num == 14<\/code> is false but <code>num == 15<\/code> is true so the code inside the else if clause is executed.\r\n<br><br>\r\nThe code inside the if and else blocks is not executed."},{"id":797096320,"question":"What's the output of the code snippet?","code":"int score = 90;\r\n\r\nif (score <= 50) {\r\n    System.out.print(\"low\");\r\n}\r\nelse if (score <= 75) {\r\n    System.out.print(\"medium\");\r\n}\r\nelse {\r\n    System.out.print(\"high\");\r\n}","answers":["low","medium","high"],"correct_answer":"high","explanation":"<code>score = 90<\/code>\r\n<br><br>\r\nBoth <code>score <= 50<\/code> and <code>score <= 75<\/code> are false. \r\n<br><br>\r\nThat's the reason why the code inside the else block is executed."},{"id":1614272833,"question":"What's the output of the code snippet?","code":"int num = 75;\r\n\r\nif (num <= 50) {\r\n\r\n}\r\nelse if (num <= 75) {\r\n    System.out.print(\"1 \");\r\n}\r\nelse if (num <= 80) {\r\n    System.out.print(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>num = 75<\/code>\r\n<br><br>\r\n<code>num <= 50<\/code> is false and <code>num <= 75<\/code> is true thus \"1\" is printed.\r\n<br><br>\r\nSince  the condition of the first else-if block is true, the next one (<code>num <= 80<\/code>) is not checked."}],"puzzles":[{"id":1027020120,"text":"Fill the missing words to match the output.","code":"int num = 5;\r\nif(num fillword 10) {\r\n    System.out.print(\"More than 10\");\r\n}\r\nfillword  {\r\n    System.out.print(\"Less than 10\");\r\n}","result":"Less than 10","words":{"operators":["<","<=",">",">="],"values":[],"variables_constants":[],"others":["else","if"]},"correct_patterns":[[">=","else"],[">","else"]]},{"id":2011444505,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nif(num == fillword) {\r\n    System.out.print(\"Equal to 0\");\r\n}\r\nfillword fillword (num == fillword) {\r\n    System.out.print(\"Equal to 1\");\r\n}","result":"Equal to 1","words":{"operators":[],"values":["0","1"],"variables_constants":[],"others":["if","else","=="]},"correct_patterns":[["0","else","if","1"]]},{"id":680088742,"text":"Fill the missing words to match the output.","code":"int num = 7;\r\n\r\nif(num == fillword) {\r\n    System.out.print(\"A\");\r\n}\r\nelse if(num == fillword) {\r\n    System.out.print(\"B\");\r\n}\r\nfillword {\r\n    System.out.print(\"C\");\r\n}","result":"C","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["if","else","else if"]},"correct_patterns":[["5","6","else"],["6","5","else"]]}]},{"id":1199911279,"name":"Switch Statement","tests":[{"id":1524955406,"question":"What's the output of the code snippet?","code":"int num = 2;\r\n\r\nswitch(num) {\r\n    case 1:\r\n        System.out.print(\"a\");\r\n        break;\r\n    case 2:\r\n        System.out.print(\"b\");\r\n        break;\r\n    case 3:\r\n        System.out.print(\"c\");\r\n        break;\r\n}","answers":["a","b","c"],"correct_answer":"b","explanation":"<code>num<\/code> is equal to 2 so the case 2 block is executed."},{"id":327751887,"question":"What's the output of the code snippet?","code":"int num = 10;\r\n\r\nswitch(num) {\r\n    case 10:\r\n        System.out.print(\"a \");\r\n        break;\r\n    case 20:\r\n        System.out.print(\"b \");\r\n        break;\r\n    default:\r\n        System.out.print(\"c\");\r\n        break;\r\n}","answers":["a","b","a c"],"correct_answer":"a","explanation":"<code>num<\/code> is equal to 10 so the case 10 block is executed."},{"id":1413363852,"question":"What's the output of the code snippet?","code":"int num = 5;\r\n\r\nswitch(num) {\r\n    case 3:\r\n        System.out.print(\"a \");\r\n        break;\r\n    case 4:\r\n        System.out.print(\"b \");\r\n        break;\r\n    default:\r\n        System.out.print(\"c\");\r\n        break;\r\n}","answers":["a","b","c"],"correct_answer":"c","explanation":"<code>num<\/code> is neither 3 nor 4 so the default block is executed."},{"id":249780301,"question":"What's the output of the code snippet?","code":"int age = 15;\r\n\r\nswitch(age) {\r\n    case 10:\r\n    case 11:\r\n    case 12:\r\n    case 13:\r\n        System.out.print(\"Middle School \");\r\n        break;\r\n    case 14: \r\n    case 15:\r\n    case 16:\r\n    case 17:\r\n    case 18:\r\n        System.out.print(\"High School \");\r\n        break;\r\n    default:\r\n        System.out.print(\"Primary School\");\r\n        break;\r\n}","answers":["Primary School","Middle School","High School"],"correct_answer":"High School","explanation":"<code>age<\/code> is matched by case 15 so \"High School\" is printed."},{"id":1200650250,"question":"What's the output of the code snippet?","code":"int level = 8;\r\n\r\nswitch(level) {\r\n     case 1:\r\n     case 2:\r\n     case 3:\r\n     case 4:\r\n         System.out.print(\"Easy\");\r\n         break;\r\n     case 5:\r\n     case 6:\r\n     case 7:\r\n         System.out.print(\"Medium \");\r\n         break;\r\n     default:\r\n         System.out.print(\"Tricky\");\r\n         break;\r\n }","answers":["Easy","Medium","Tricky"],"correct_answer":"Tricky","explanation":"<code>level<\/code> is not matched by any of the cases (from 1 to 7) so the default block is executed."}],"puzzles":[{"id":1631482983,"text":"Fill the missing words to match the output.","code":"int num = 2;\r\nswitch(num) {\r\n    case fillword:\r\n        System.out.print(\"a\");\r\n        break;\r\n    fillword fillword:\r\n        System.out.print(\"b\");\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2"],"variables_constants":[],"others":["case","switch"]},"correct_patterns":[["1","case","2"]]},{"id":1541575716,"text":"Fill the missing words to match the output.","code":"int num = 3;\r\nswitch(num) {\r\n    case fillword:\r\n        System.out.print(\"a\");\r\n        break;\r\n    case fillword:\r\n        System.out.print(\"b\");\r\n        break;\r\n    fillword :\r\n        System.out.print(\"c\");\r\n        break;\r\n}","result":"c","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","default"]},"correct_patterns":[["1","2","default"],["2","1","default"]]},{"id":479705061,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\nswitch(num) {\r\n    case 1:\r\n        System.out.print(\"a\");\r\n        break;\r\n    fillword fillword :\r\n    case 3:\r\n        System.out.print(\"b\");\r\n        break;\r\n    default:\r\n        System.out.print(\"c\");\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","break"]},"correct_patterns":[["3","case","2"]]}]},{"id":315874076,"name":"While Loop","tests":[{"id":944020427,"question":"What's the output of the code snippet?","code":"int num = 0;\r\nwhile(num < 3)\r\n{\r\n    System.out.print(num + \" \");\r\n    num++;\r\n}","answers":["1 2 3","0 1 2","0 1 2 3"],"correct_answer":"0 1 2","explanation":"<code>num = 0<\/code>\r\n<br><br>\r\nLoop ends when <code>num<\/code> reaches value of 3.\r\n<br><br>\r\n3 is the first value that's false for the condition <code>num < 3<\/code>.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":1927920520,"question":"What's the output of the code snippet?","code":"int num = 1;\r\nwhile(num < 5)\r\n{\r\n    System.out.print(num + \" \");\r\n}","answers":["1 2 3 4","1 2 3 4 5","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num = 1<\/code>\r\n<br><br>\r\nThe condition <code>num < 5<\/code> is always true since there is no modification like <code>num++<\/code>."},{"id":731831113,"question":"What's the output of the code snippet?","code":"int num = 2;\r\nwhile(num < 7)\r\n{\r\n    num += 2;\r\n    System.out.print(num + \" \");\r\n}","answers":["2 4 6 8","4 6","4 6 8"],"correct_answer":"4 6 8","explanation":"<code>num = 2<\/code>\r\n<br><br>\r\n<code>num < 7<\/code> remains true until <code>num<\/code> reaches value of 8.\r\n<br><br>\r\nThe loop ends when <code>num < 7<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":1816394518,"question":"What's the output of the code snippet?","code":"int num = 10;\r\nSystem.out.print(num + \" \");\r\n\r\nwhile(num < 10)\r\n{\r\n    System.out.print(num + \" \");\r\n    num++;\r\n}","answers":["10","10 10","10 11"],"correct_answer":"10","explanation":"<code>num < 10<\/code> is false and the loop doesn't execute."},{"id":653269719,"question":"What's the output of the code snippet?","code":"int num = 20;\r\n\r\nwhile(num > 10)\r\n{\r\n    System.out.print(num + \" \");\r\n    num -= 5;\r\n}","answers":["20","20 15","20 15 10"],"correct_answer":"20 15","explanation":"<code>num > 10<\/code> remains true until <code>num<\/code> decrements to 10.\r\n<br><br>\r\nThe loop ends when <code>num > 10<\/code> becomes false.\r\n<br><br>\r\n<code>num -= 5<\/code> decrements the value by 5."}],"puzzles":[{"id":1430575010,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nwhile(num fillword fillword ) {\r\n    System.out.print(num + \" \");\r\n    num++;\r\n}","result":"1 2 3 4 5","words":{"operators":["<","<=",">",">="],"values":["4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","5"],["<","6"]]},{"id":266991459,"text":"Fill the missing words to match the output.","code":"int num = 12;\r\n\r\nwhile(num fillword fillword) {\r\n    System.out.print(num + \" \");\r\n    fillword ;\r\n}","result":"12 14 16 18 20","words":{"operators":["<","<=",">",">="],"values":["18","20","21"],"variables_constants":[],"others":["num++","num += 2","num--"]},"correct_patterns":[["<=","20","num += 2"],["<","21","num += 2"]]},{"id":1084102432,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\n\r\nwhile(num > 0) {\r\n    fillword ;\r\n    System.out.print(num + \" \");\r\n}","result":"9 6 3 0","words":{"operators":[],"values":["9","10","12","13"],"variables_constants":[],"others":["num--","num += 3","num -= 3"]},"correct_patterns":[["12","num -= 3"]]}]},{"id":1266744029,"name":"Do While Loop","tests":[{"id":530922132,"question":"What's the output of the code snippet?","code":"int num = 1;\r\n\r\ndo\r\n{\r\n    System.out.print(num + \" \");\r\n    num++;\r\n} while (num < 4);","answers":["1 2 3","1 2 3 4","2 3"],"correct_answer":"1 2 3","explanation":"<code>num < 4<\/code> remains true until <code>num<\/code> increments to 4.\r\n<br><br>\r\nThe loop ends when <code>num < 4<\/code> becomes false.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":1347050069,"question":"What's the output of the code snippet?","code":"int num = 1;\r\nSystem.out.print(\"0 \");\r\ndo\r\n{\r\n    System.out.print(num + \" \");\r\n    num--;\r\n} while (num > 1);","answers":["0","0 1","0 1 0"],"correct_answer":"0 1","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since <code>num > 1<\/code> is false."},{"id":184515090,"question":"What's the output of the code snippet?","code":"int num = 1;\r\n\r\ndo\r\n{\r\n    System.out.print(num + \" \");\r\n    num++;\r\n} while (num > 1);","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num > 1<\/code> remains true and the loop repeats infinitely.\r\n<br><br>\r\n<code>num++<\/code> needs to be removed or replaced with <code>num--<\/code> in order to stop it."},{"id":1134790099,"question":"What's the output of the code snippet?","code":"int num = 0;\r\n\r\ndo\r\n{\r\n    num += 2;\r\n    System.out.print(num + \" \");\r\n} while (num <= 5);","answers":["0 2 4","2 4 6","2 4 6 8"],"correct_answer":"2 4 6","explanation":"<code>num <= 5<\/code> remains true until <code>num<\/code> increments to 6.\r\n<br><br>\r\nThe loop ends when <code>num <= 5<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":72394128,"question":"What's the output of the code snippet?","code":"System.out.print(\"1 \");\r\ndo\r\n{\r\n    System.out.print(\"2 \");\r\n} while (false);","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since it's condition is false."}],"puzzles":[{"id":960706273,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\ndo\r\n{\r\n    System.out.print(num + \" \");\r\n    num++;\r\n} while (num fillword fillword);","result":"1 2 3 4 5 6 7","words":{"operators":["<","<=",">",">="],"values":["6","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","7"],["<","8"]]},{"id":1945130670,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\ndo\r\n{\r\n    System.out.print(num + \" \");\r\n    fillword\r\n} while (num <= 25);","result":"10 15 20 25","words":{"operators":[],"values":["5","10","15"],"variables_constants":[],"others":["num++","num += 5"]},"correct_patterns":[["10","num += 5"]]},{"id":883258991,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\ndo\r\n{\r\n    num++;\r\n    System.out.print(num + \" \");\r\n} while (num == fillword);","result":"1 2","words":{"operators":[],"values":["-1","0","1","2"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]}]},{"id":204806810,"name":"For Loop","tests":[{"id":2097530193,"question":"What's the output of the code snippet?","code":"for(int i = 1; i < 5; i++)\r\n{\r\n    System.out.print(i + \" \");\r\n}","answers":["1 2 3 4","1 2 3 4 5","1 1 1 1 1"],"correct_answer":"1 2 3 4","explanation":"The loop starts with <code>i = 1<\/code>.\r\n<br><br>\r\n<code>i < 5<\/code> remains true until <code>i<\/code> increments to 5.\r\n<br><br>\r\nThe loop ends when <code>i < 5<\/code> becomes false.\r\n<br><br>\r\n<code>i++<\/code> increments the value by 1 in the end of every loop iteration."},{"id":933946654,"question":"What's the output of the code snippet?","code":"for(int i = 2; i <= 8; i+=2)\r\n{\r\n    System.out.print(i + \" \");\r\n}","answers":["2 4 6","2 4 6 8","2 3 4 5 6 7 8"],"correct_answer":"2 4 6 8","explanation":"The loop starts with <code>i = 2<\/code>.\r\n<br><br>\r\n<code>i <= 8<\/code> remains true until <code>i<\/code> increments to 10.\r\n<br><br>\r\nThe loop ends when <code>i <= 8<\/code> becomes false.\r\n<br><br>\r\n<code>i+=2<\/code> increments the value by 2 in the end of every loop iteration."},{"id":1751057631,"question":"What's the output of the code snippet?","code":"for(int i = 1 ;; i++)\r\n{\r\n    System.out.print(i + \" \");\r\n}","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"The condition is not specified so the loop repeats infinitely.\r\n<br><br>\r\nA condition such as <code>i <= 5<\/code> could be added in order to stop it."},{"id":554443932,"question":"What's the output of the code snippet?","code":"for(int i = 11; i >= 5; i -= 3)\r\n{\r\n    System.out.print(i + \" \");\r\n}","answers":["11 8 5 2","11 8 5","11 8"],"correct_answer":"11 8 5","explanation":"The loop starts with <code>i = 11<\/code>.\r\n<br><br>\r\n<code>i >= 5<\/code> remains true until <code>i<\/code> decrements to 2.\r\n<br><br>\r\nThe loop ends when <code>i >= 5<\/code> becomes false.\r\n<br><br>\r\n<code>i -= 3<\/code> decrements the value by 3 in the end of every loop iteration."},{"id":464602205,"question":"What's the output of the code snippet?","code":"System.out.print(\"0 \");\r\nfor(int i = 1; i < 1 ; i++)\r\n{\r\n    System.out.print(i + \" \");\r\n}","answers":["0","0 1","0 1 2"],"correct_answer":"0","explanation":"The initialization is <code>i = 1<\/code>.\r\nThe condition <code>i < 1<\/code> is false so the loop doesnt't execute."}],"puzzles":[{"id":1833539116,"text":"Fill the missing words to match the output.","code":"for(int i = fillword; i fillword fillword; i++) {\r\n\tSystem.out.print(i + \" \");\r\n}","result":"0 1 2 3 4","words":{"operators":["<","<=",">",">="],"values":["0","1","4","5"],"variables_constants":[],"others":[]},"correct_patterns":[["0","<","5"],["0","<=","4"]]},{"id":671003117,"text":"Fill the missing words to match the output.","code":"for (int i = 1; i fillword 11; i fillword) {\r\n    System.out.print(i + \" \");\r\n}","result":"1 3 5 7 9 11","words":{"operators":["<","<=","=="],"values":[],"variables_constants":[],"others":["++","+= 2","+= 4"]},"correct_patterns":[["<=","+= 2"]]},{"id":413389226,"text":"Fill the missing words to match the output.","code":"for (int i = 5; i >= fillword; fillword) {\r\n    System.out.print(i + \" \");\r\n}","result":"5 4 3 2 1","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["i++","i--","i-=5","i+=5"]},"correct_patterns":[["1","i--"]]}]},{"id":652595240,"name":"Break And Continue","tests":[{"id":1550214170,"question":"What's the output of the code snippet?","code":"for(int i = 1; i < 10; i += 3)\r\n{\r\n    System.out.print(i + \" \");\r\n\r\n    if(i == 4)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["1","1 4","1 4 7"],"correct_answer":"1 4","explanation":"The <code>break<\/code> keyword ends the loop when <code>i<\/code> reaches value of 4.\r\n\r\n<br><br>\r\n<code>i<\/code> is printed before terminating the loop via\r\n<code>break<\/code>."},{"id":353011675,"question":"What's the output of the code snippet?","code":"int num = 10;\r\n\r\nwhile(num < 20)\r\n{\r\n    System.out.print(num + \" \");\r\n    num += 4;\r\n\r\n    if(num == 18)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["10 14","10 14 18","10 14 18 22"],"correct_answer":"10 14","explanation":"The <code>break<\/code> keyword ends the loop when <code>num<\/code> reaches value of 18.\r\n\r\n<br><br>\r\n<code>num<\/code> reaches value of 18 after \"14\" is printed."},{"id":1337960344,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 6; i+= 2)\r\n{\r\n    if(i == 2)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    System.out.print(i + \" \");\r\n}","answers":["0 4","0 2 4","0 4 6"],"correct_answer":"0 4","explanation":"The loop executes for i = 0, 2 and  4.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."},{"id":7128921,"question":"What's the output of the code snippet?","code":"int number = 0;\r\n\r\nwhile(number < 7)\r\n{\r\n    number += 3;\r\n\r\n    if(number == 6)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    System.out.print(number + \" \");\r\n}","answers":["3 6 9","3 9","3"],"correct_answer":"3 9","explanation":"The loop executes for number = 3, 6, 9.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for number = 6 so all values except 6 are printed."},{"id":2031216358,"question":"What's the output of the code snippet?","code":"for(int i = 1; i <= 3; i++)\r\n{\r\n    if(i == 2)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    System.out.print(i + \" \");\r\n}","answers":["1","1 3","1 2 3"],"correct_answer":"1 3","explanation":"<code>continue<\/code> skips a loop iteration.\r\n<br><br>\r\nThe loop executes for i= 1, 2, 3.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."}],"puzzles":[{"id":1364259179,"text":"Fill the missing words to match the output.","code":"int sum = 0;\r\nfor (int i = 1; i <= 8; i++) {\r\n    System.out.print(i + \" \");\r\n    sum += i;\r\n\r\n    if(sum == fillword ) {\r\n        fillword ;\r\n    }                \r\n}","result":"1 2 3 4","words":{"operators":[],"values":["6","10","15","21"],"variables_constants":[],"others":["continue","break"]},"correct_patterns":[["10","break"]]},{"id":168104232,"text":"Fill the missing words to match the output.","code":"for (int i = 1; i <= 5; i++) {\r\n    if(i == fillword ) {\r\n        fillword;\r\n    }\r\n    System.out.print(i + \" \");\r\n}","result":"1 2 4 5","words":{"operators":[],"values":["2","3","4","5"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["3","continue"]]},{"id":1286222057,"text":"Fill the missing words to match the output.","code":"int sum = 0; \r\nfor (int i = fillword; i <= 100; i+= 2) {\r\n    System.out.print(i + \" \");\r\n    sum += i;\r\n\r\n    if (sum == fillword) {\r\n        System.out.print(sum);\r\n        fillword;\r\n    }\r\n}","result":"2 4 6 8 20","words":{"operators":[],"values":["0","1","2","20","30"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["2","20","break"]]}]},{"id":71725813,"name":"Nested If","tests":[{"id":868615847,"question":"What's the output of the code snippet?","code":"if(true)\r\n{\r\n    System.out.print(\"1 \");\r\n\r\n    if(true)\r\n    {\r\n        System.out.print(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    System.out.print(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The code inside the outer if executes since it's condition is true thus \"1\" is printed.\r\n<br><br>\r\nBoth outer and inner if-s have true conditions, so \"2\" is printed too.\r\n<br><br>\r\nThe else block code does not execute because the outer if has true condition."},{"id":1953179236,"question":"What's the output of the code snippet?","code":"int number = 10;\r\nif(number >= 10)\r\n{\r\n    System.out.print(\"1 \");\r\n\r\n    if(number < 10)\r\n    {\r\n        System.out.print(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    System.out.print(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1","explanation":"The condition <code>number >= 10<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nThe condition <code>number < 10<\/code> is false so \"2\" is not printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number >= 10<\/code> is true ."},{"id":756565541,"question":"What's the output of the code snippet?","code":"int number = 5;\r\nif(number == 5)\r\n{\r\n    number++;\r\n    System.out.print(\"1 \");\r\n\r\n    if(number == 6)\r\n    {\r\n        System.out.print(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    System.out.print(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The condition <code>number == 5<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nAfter incrementing <code>number<\/code> the <code>number == 6<\/code> condition becomes true so \"2\" is printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number == 5<\/code> is true."},{"id":1741513186,"question":"What's the output of the code snippet?","code":"int number = 5;\r\nif(number == 5) {\r\n    System.out.print(\"1 \");\r\n\r\n    if(number > 0) {\r\n        System.out.print(\"2 \");\r\n\r\n        if(number > 3) {\r\n            System.out.print(\"3\");\r\n        }\r\n    }\r\n}","answers":["1","1 2","1 2 3"],"correct_answer":"1 2 3","explanation":"All of the three conditions are true so \"1\", \"2\" and \"3\" are printed."},{"id":1483833763,"question":"What's the output of the code snippet?","code":"int number = 10;\r\nif(number == 5) {\r\n    System.out.print(\"1 \");\r\n}\r\nelse {\r\n    System.out.print(\"2 \");\r\n    if(number == 10) {\r\n        System.out.print(\"3\");\r\n    }\r\n}","answers":["1","2","2 3"],"correct_answer":"2 3","explanation":"The condition <code>number == 5<\/code> is false so the else block is executed and \"2\" is printed.\r\n<br><br>\r\n<code>number == 5<\/code> is false and <code>number == 10<\/code> is true so \"3\" is printed too."}],"puzzles":[{"id":90132662,"text":"Fill the missing words to match the output.","code":"int score = 100;\r\n\r\nif(score > fillword) {\r\n    System.out.println(\"High\");\r\n\r\n    if(score fillword fillword) {\r\n        System.out.println(\"Max Score\");\r\n    }\r\n}","result":"High\r\nMax Score","words":{"operators":["=="],"values":["80","100","110"],"variables_constants":[],"others":[]},"correct_patterns":[["80","==","100"]]},{"id":2114744439,"text":"Fill the missing words to match the output.","code":"int level = fillword;\r\n\r\nif(level > fillword && level <= 100 ) {\r\n    System.out.println(\"Valid Level\");\r\n\r\n    if(level fillword 10 == 0) {\r\n        System.out.println(\"Contains Boss\");\r\n    }\r\n}","result":"Valid Level\r\nContains Boss","words":{"operators":["-","+","\/","%"],"values":["40","0"],"variables_constants":[],"others":[]},"correct_patterns":[["40","0","%"]]},{"id":816877620,"text":"Fill the missing words to match the output.","code":"int calories = 200;\r\n\r\nif(calories fillword 100) {\r\n    System.out.println(\"High\");\r\n    calories += fillword;\r\n\r\n    if(calories fillword 300) {\r\n        System.out.println(\"Very High\");\r\n    }\r\n}","result":"High\r\nVery High","words":{"operators":[">",">="],"values":["50","100"],"variables_constants":[],"others":[]},"correct_patterns":[[">","100",">="]]}]},{"id":463871422,"name":"Nested Loops","tests":[{"id":287744352,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 1; i++) {\r\n    System.out.print(i + \" \");\r\n    for (int j = 0; j < 1; j++) {\r\n        System.out.print(j + \" \");\r\n    }\r\n}","answers":["0","0 0","0 0 1 1"],"correct_answer":"0 0","explanation":"Both inner and outer loop execute only once for <code>i = 0<\/code> and <code>j = 0<\/code> ."},{"id":1271644449,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 2; i++) {\r\n    System.out.print(i + \" \");\r\n    for (int j = 0; j < 0; j++) {\r\n        System.out.print(j + \" \");\r\n    }\r\n}","answers":["0","0 0","0 1"],"correct_answer":"0 1","explanation":"The outer loop executes twice - for i = 0 and i = 1.\r\n<br><br>\r\nThe inner loop has false condition so it doesn't execute."},{"id":209248494,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 3; i++) {\r\n    System.out.print(i + \" \");\r\n    for (int j = 0; j < 1; j++) {\r\n        System.out.print(j + \" \");\r\n    }\r\n}","answers":["0 0 1 0 2 0","0 0 1 0","0 1 2"],"correct_answer":"0 0 1 0 2 0","explanation":"The outer loop executes 3 times - for i = 0, 1 and 2.\r\n<br><br>\r\nThe inner loop executes once each time the outer loop iterates. \r\n<br><br>\r\nAll zeroes except for the first one are printed by the inner loop."},{"id":1160577199,"question":"What's the output of the code snippet?","code":"for(int a = 0; a < 2; a++) {\r\n    System.out.print(a + \" \");\r\n    for (int b = 0; b < 1; b++)\r\n    {\r\n        System.out.print(b + \" \");\r\n        for (int c = 0; c < 1; c++)\r\n        {\r\n            System.out.print(c + \" \");\r\n        }\r\n    }\r\n}","answers":["0 0 0 1 1 1","0 0 1 0 0 0","0 0 0 1 0 0"],"correct_answer":"0 0 0 1 0 0","explanation":"The outer loop executes twice.\r\n<br><br>\r\nEach iteration of the outer loop makes the inner loops to execute once."},{"id":1070735468,"question":"What's the output of the code snippet?","code":"int i = 1;\r\nwhile(i <= 3)\r\n{\r\n    int j = 0;\r\n\r\n    while (j < 2)\r\n    {\r\n        System.out.print(j);\r\n        j++;\r\n    }\r\n}","answers":["0 1 0 1","0 1 0 1 0 1","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"Modification such as <code>i++<\/code> is missing for the outer loop."}],"puzzles":[{"id":1768272885,"text":"Fill the missing words to match the output.","code":"for(int a = 1; a <= fillword; a++)\r\n{\r\n    for(int b = 1; b <= fillword; b++ )\r\n    {\r\n        System.out.println(fillword + \" \" + fillword);\r\n    }\r\n}","result":"1 1\r\n1 2\r\n2 1\r\n2 2\r\n3 1\r\n3 2","words":{"operators":[],"values":["1","2","3","4"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["3","2","a","b"]]},{"id":571134898,"text":"Fill the missing words to match the output.","code":"for(int a = 1; a <= fillword; a++)\r\n{\r\n    for(int b = 1; b <= fillword; b++ )\r\n    {\r\n        System.out.print(fillword + \" \");\r\n    }\r\n    System.out.println();\r\n}","result":"1\r\n1 2\r\n1 2 3\r\n1 2 3 4","words":{"operators":[],"values":["3","4","5","6"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["4","a","b"]]},{"id":1690301299,"text":"Fill the missing words to match the output.","code":"for(int row = 1; row <= 5; row++)\r\n{\r\n    for (int col = 1; col <= row; fillword)\r\n    {\r\n        if(row fillword col) {\r\n            System.out.println(fillword);\r\n        }\r\n        else {\r\n            System.out.print(\" \");\r\n        }\r\n    }\r\n}","result":"1\r\n 2\r\n  3\r\n   4\r\n    5","words":{"operators":["<","==","!="],"values":[],"variables_constants":["col","row"],"others":["col++","row++"]},"correct_patterns":[["col++","==","row"],["col++","==","col"]]}]},{"id":2030484603,"name":"Tricky Questions","tests":[{"id":1887911981,"question":"What's the output of the code snippet?","code":"int a = 1;\r\nint b = 1;\r\n\r\na++;\r\n++b;\r\nSystem.out.print(a + \" \" + b);","answers":["1 2","2 1","2 2"],"correct_answer":"2 2","explanation":"Both <code>a++<\/code> and <code>++b<\/code> increment the values by 1."},{"id":691299306,"question":"What's the output of the code snippet?","code":"int a = 1;\r\nint b = 1;\r\nSystem.out.print(++a + \" \" + b++);","answers":["1 1","2 1","2 2"],"correct_answer":"2 1","explanation":"<code>++a <\/code> returns the incremented result\r\n<br><br>\r\n<code>b++<\/code> returns the value before incrementation."},{"id":1675133867,"question":"What's the output of the code snippet?","code":"int a = 2;\r\nint b = 2;\r\n\r\n--a;\r\nb--;\r\n\r\nSystem.out.print(--a + \" \" + b--);","answers":["1 1","1 0","0 1"],"correct_answer":"0 1","explanation":"Both <code>--a<\/code> and <code>b--<\/code> decrement the value by 1.\r\n<br><br>\r\n<code>--a<\/code> returns the decremented value.\r\n<br><br>\r\n<code>b--<\/code> returns the value before decrementation."},{"id":613262184,"question":"What's the output of the code snippet?","code":"int i = 0;\r\nfor (; i < 100; i++) ;\r\n\r\nSystem.out.print(i);","answers":["0","1","100"],"correct_answer":"100","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 100.\r\n<br><br>\r\n100 is the first value of <code>i<\/code> which breaks the condition <code>i < 100<\/code>."},{"id":489866025,"question":"What's the output of the code snippet?","code":"int i = 0;\r\nfor (; i <= 10; i+=2) ;\r\n\r\nSystem.out.print(i);","answers":["0","10","12"],"correct_answer":"12","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 12.\r\n<br><br>\r\n12 is the first value of <code>i<\/code> which breaks the condition <code>i <= 10<\/code>."}],"puzzles":[{"id":1567363888,"text":"Fill the missing words to match the output.","code":"int a = 3;\r\nint b = 7;\r\n\r\nSystem.out.print(fillword + \" \" + fillword);","result":"3 8","words":{"operators":[],"values":[],"variables_constants":[],"others":["a++","++a","b++","++b"]},"correct_patterns":[["a++","++b"]]},{"id":370225905,"text":"Fill the missing words to match the output.","code":"int i = 0;\r\nfor (; i fillword fillword; i++) ;\r\n\r\nSystem.out.print(i);","result":"101","words":{"operators":["<","<=",">",">="],"values":["99","100"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","100"]]},{"id":1220956862,"text":"Fill the missing words to match the output.","code":"int i = 0;\r\nfor (; i fillword 10; i++);\r\n\r\nSystem.out.print(fillword);","result":"10","words":{"operators":[">",">=","<","<="],"values":[],"variables_constants":[],"others":["i++","++i"]},"correct_patterns":[["<","i++"]]}]},{"id":510061449,"name":"Strings","tests":[{"id":1213903532,"question":"What's the output of the code snippet?","code":"String str = \"Hello\";\r\nSystem.out.println(str.charAt(1));","answers":["H","e","o"],"correct_answer":"e","explanation":"The string has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"btn-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>H<\/td>\r\n            <td class=\"btn-primary\">e<\/td>\r\n            <td>l<\/td>\r\n            <td>l<\/td>\r\n            <td>o<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":17814125,"question":"What's the output of the code snippet?","code":"String str1 = \"abc\";\r\nString str2 = \"defg\";\r\n\r\nSystem.out.println(str1.length() + str2.length());","answers":["7","8","9"],"correct_answer":"7","explanation":"The <code>length<\/code> function returns the count of the symbols:\r\n<br><br>\r\n<code>str1.length()<\/code> is 3\r\n<br>\r\n<code>str2.length()<\/code> is 4\r\n<br>\r\n3 + 4 = 7"},{"id":2075980330,"question":"What's the output of the code snippet?","code":"String color = \"green\";\r\n\r\nSystem.out.println(color.charAt(4));\r\nSystem.out.println(color.charAt(5));","answers":["e n","n 0","Exception"],"correct_answer":"Exception","explanation":"<code>color<\/code> has the following structure:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>g<\/td>\r\n            <td>r<\/td>\r\n            <td>e<\/td>\r\n            <td>e<\/td>\r\n            <td>n<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br><br>\r\n<code>color.charAt(5)<\/code> accesses index that's outside of the bound (0 - 4) which results in exception."},{"id":1012997611,"question":"What's the output of the code snippet?","code":"String word = \"Arena\";\r\n\r\nSystem.out.println(word.contains(\"na\"));\r\nSystem.out.println(word.contains(\"A\"));","answers":["True True","True False","False True"],"correct_answer":"True True","explanation":"'na' is contained in 'Arena' so <br>\r\n<code>word.contains(\"na\")<\/code> returns true.\r\n<br><br>\r\n'A' is contained in 'Arena' (it's first symbol) so <br>\r\n<code>word.contains(\"A\")<\/code> returns true."},{"id":1964391848,"question":"What's the output of the code snippet?","code":"String equation = \"160 + 135 = 295\";\r\n\r\nfor(int i = 0; i < equation.length(); i++)\r\n{\r\n    String charToString = equation.charAt(i) + \"\";\r\n    \r\n    if (!\"12\".contains(charToString))\r\n    {\r\n        System.out.print(charToString);\r\n    }\r\n}","answers":["160 + 135 = 295","60 + 35 = 95","1 1 2"],"correct_answer":"60 + 35 = 95","explanation":"The for loop iterates over each symbol of the equation.\r\n<br><br>\r\nOnly symbols that are not '1' and '2' are printed. That's specified via <code>!\"12\".contains(charToString)<\/code>.\r\n<br><br>\r\n\r\nBasically <code>1<\/code>60 + <code>1<\/code>35 = <code>2<\/code>95 is simplified to: <br>\r\n60 + 35 = 95"}],"puzzles":[{"id":933946654,"text":"Fill the missing words to match the output.","code":"String str = 'clarity';\r\nSystem.out.println(str.charAt(fillword));\r\nSystem.out.println(str.charAt(fillword));\r\nSystem.out.println(str.charAt(fillword));","result":"c a t","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","5"]]},{"id":1751057631,"text":"Fill the missing words to match the output.","code":"String str = \"jacket\";\r\nSystem.out.println(str.fillword + fillword);","result":"10","words":{"operators":[],"values":["1","2","3","4","5","6","7","8"],"variables_constants":[],"others":["size()","count()","length()"]},"correct_patterns":[["length()","4"]]},{"id":554443932,"text":"Fill the missing words to match the output.","code":"String str  = \"readability\";\r\n\r\nfor(int i = 0; i < str.length(); i++)\r\n{\r\n    String charToString = str.charAt(i) + \"\";\r\n    \r\n    if (fillword.fillword(fillword))\r\n    {\r\n        System.out.print(charToString);\r\n    }\r\n}","result":"a a b","words":{"operators":[],"values":["\"readability\"","\"redility\"","\"ab\""],"variables_constants":[],"others":["contains","has","length()","charToString"]},"correct_patterns":[["\"ab\"","contains","charToString"]]}]}],"Advanced":[{"id":1188706907,"name":"Arrays","tests":[{"id":1474814710,"question":"What's the output of the code snippet?","code":"int[] arr = { 5, 10, 15 };\r\nSystem.out.print(arr[1]);","answers":["5","10","15"],"correct_answer":"10","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":143917751,"question":"What's the output of the code snippet?","code":"String[] colors = { \"blue\", \"green\", \"pink\" };\r\n\r\nfor(int i = 0; i < 2; i++)\r\n{\r\n    System.out.print(colors[i] + \" \");\r\n}","answers":["blue green","blue green pink","green pink"],"correct_answer":"blue green","explanation":"The loop executes for i = 0 and i = 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">blue<\/td>\r\n            <td class=\"table-primary\">green<\/td>\r\n            <td>pink<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1094263412,"question":"What's the output of the code snippet?","code":"int[] ages = { 10, 15, 20, 25, 30 };\r\nSystem.out.print(ages.length);","answers":["5","4","10"],"correct_answer":"5","explanation":"The <code>length<\/code> property is the count of the array elements.\r\n<br><br>\r\nThe array has 5 elements."},{"id":1005470261,"question":"What's the output of the code snippet?","code":"int[] numbers = new int[3];\r\n\r\nSystem.out.print(numbers[0] + \" \");\r\nSystem.out.print(numbers[1]);","answers":["0 0","0 1","Exception"],"correct_answer":"0 0","explanation":"The array with 3 elements is created.\r\n<br><br>\r\nAll of it's elements have default value - 0.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>0<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2090036722,"question":"What's the output of the code snippet?","code":"int[] numbers = { 1, 2, 3};\r\nSystem.out.print(numbers[3]);","answers":["3","1","Exception"],"correct_answer":"Exception","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nAccessing index that's outside of it's bounds results in exception."}],"puzzles":[{"id":23818879,"text":"Fill the missing words to match the output.","code":"int[] arr = {8, 4, 5, 6, 3};\r\n\r\nSystem.out.print(arr[fillword] + \" \");\r\nSystem.out.print(arr[fillword] + \" \"); \r\nSystem.out.print(arr[fillword]);","result":"8 5 3","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","4"]]},{"id":2048889404,"text":"Fill the missing words to match the output.","code":"int[] arr = {5, 7, 9, 3};\r\n\r\nfor(int i = fillword; i < fillword; i++)\r\n{\r\n    System.out.print(arr[fillword] + \" \");\r\n}","result":"5 7 9 3","words":{"operators":[],"values":["0","1","2","3","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["0","4","i"]]},{"id":1020050941,"text":"Fill the missing words to match the output.","code":"int[] arr = {1, 2, 9, 8, 6};\r\n\r\nfor(int i = 0; i < fillword; i++)\r\n{\r\n    if(i % 2 == fillword) {\r\n        System.out.print(arr[fillword] + \" \");\r\n    }\r\n}","result":"1 9 6","words":{"operators":[],"values":["0","1","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","i"]]}]},{"id":1070070209,"name":"Functions","tests":[{"id":893881779,"question":"What's the output of the code snippet?","code":"public static void main(String[] args) {\r\n    a();\r\n}\r\nstatic void a() {\r\n    System.out.print(\"1 \");\r\n}\r\nstatic void b() {\r\n    System.out.print(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"The function <code>a<\/code> is called in the main function thus \"1 \" is printed."},{"id":1878306160,"question":"What's the output of the code snippet?","code":"public static void main(String[] args) {\r\n    int sum = getSum(2,4,3);\r\n    System.out.print(sum);\r\n}\r\nstatic int getSum(int a, int b, int c) {\r\n    return a + b + c;\r\n}","answers":["0","9","243"],"correct_answer":"9","explanation":"The <code>getSum<\/code> function is called with 3 parameters - 2, 4 and 3 which sum is 9."},{"id":546950449,"question":"What's the output of the code snippet?","code":"public static void main(String[] args) {\r\n    printArg();\r\n}\r\nstatic void printArg(int number) {\r\n    System.out.print(number);\r\n}","answers":["0","1","Exception"],"correct_answer":"Exception","explanation":"The function <code>printArg<\/code> accepts 1 argument but none are passed to it thus exception is thrown."},{"id":424602878,"question":"What's the output of the code snippet?","code":"public static void main(String[] args) {\r\n    int number = 0;\r\n    number += getOneTenth(100);\r\n    number += getOneTenth(300);\r\n\r\n    System.out.print(number);\r\n}\r\nstatic int getOneTenth(int number) {\r\n    return number \/ 10;\r\n}","answers":["0","40","400"],"correct_answer":"40","explanation":"<code>getOneTenth<\/code> returns one tenth of the passed argument.\r\n<br><br>\r\nCalculations for the <code>number<\/code> variable:\r\n<br>\r\nnumber = 0 <br>\r\nnumber = 0 + 10 <br>\r\nnumber = 0 + 10 + 30 <br>\r\nnumber = 40"},{"id":1408437439,"question":"What's the output of the code snippet?","code":"public static void main(String[] args) {\r\n    int prod = getProd(1, 2, 3);\r\n    System.out.print(prod);\r\n}\r\nstatic String getProd(int a, int b, int c) {\r\n    return a * b * c;\r\n}","answers":["123","6","Exception"],"correct_answer":"Exception","explanation":"The <code>getProd<\/code> function is expected to return a String but it returns an integer thus exception is thrown."}],"puzzles":[{"id":1970396602,"text":"Fill the missing words to match the output.","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        fillword;\r\n        fillword;\r\n    }\r\n    static void a() {\r\n        System.out.println(1);\r\n    }\r\n    static void b() {\r\n        System.out.println(2);\r\n    }\r\n}","result":"1\r\n2","words":{"operators":[],"values":[],"variables_constants":[],"others":["a","b","a()","b()"]},"correct_patterns":[["a()","b()"]]},{"id":774307195,"text":"Fill the missing words to match the output.","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        int sum = sumNums(fillword);\r\n        System.out.print(sum);\r\n    }\r\n    static fillword sumNums(int a, int b) {\r\n        fillword a + b;\r\n    }\r\n}","result":"7","words":{"operators":[],"values":[],"variables_constants":[],"others":["int","void","return","sum =","2, 5","7"]},"correct_patterns":[["2, 5","int","return"]]},{"id":1623924024,"text":"Fill the missing words to match the output.","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        for(int i = 1; i <= 3; i++) {\r\n            fillword(fillword,  fillword);\r\n        }\r\n    }\r\n    static void printMp(int a, int b) {\r\n        System.out.print(a * b + \" \");\r\n    }\r\n}","result":"2 6 12","words":{"operators":[],"values":[],"variables_constants":[],"others":["printMp","i","i","i + 1","i + 1","i + 2","i + 2"]},"correct_patterns":[["printMp","i","i + 1"],["printMp","i + 1","i"]]}]},{"id":1886656910,"name":"Arraylist","tests":[{"id":346041468,"question":"What's the output of the code snippet?","code":"ArrayList<Integer> arrList = new ArrayList<Integer>();\r\narrList.add(1);\r\narrList.add(3);\r\narrList.add(5);\r\narrList.add(7);\r\narrList.add(9);\r\n\r\nSystem.out.print(arrList.get(3));","answers":["3","5","7"],"correct_answer":"7","explanation":"The ArrayList has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td >0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td class=\"table-primary\">3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>3<\/td>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">7<\/td>\r\n            <td>9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1297435709,"question":"What's the output of the code snippet?","code":"ArrayList<Integer> prices = new ArrayList<>();\r\nprices.add(100);\r\nprices.add(320);\r\nprices.add(510);\r\nprices.add(180);\r\n\r\nfor(int price : prices)\r\n{\r\n    if(price <= 180)\r\n    {\r\n        System.out.print(price + \" \");\r\n    }\r\n}","answers":["100 180","320 510","100"],"correct_answer":"100 180","explanation":"The ArrayList has 4 elements only 2 of which meet the condition <code>price <= 180<\/code> - 100 and 180."},{"id":133853178,"question":"What's the output of the code snippet?","code":"ArrayList<Integer> ages = new ArrayList<>();\r\nages.add(15);\r\nages.add(25);\r\nages.add(18);\r\nages.add(23);\r\nages.add(16);\r\n\r\nSystem.out.print(ages.size());","answers":["2","3","5"],"correct_answer":"5","explanation":"The <code>size<\/code> function returns the count of the ArrayList's elements.\r\n<br><br>\r\n5 elements are added to the ArrayList via the <code>add<\/code> function."},{"id":2024705979,"question":"What's the output of the code snippet?","code":"ArrayList<Integer> numbers = new ArrayList<>();\r\nnumbers.add(35);\r\n\r\nSystem.out.print(numbers.get(1));","answers":["0","35","Exception"],"correct_answer":"Exception","explanation":"The ArrayList's has 1 element that can be accessed via <code>get(0)<\/code>.\r\n<br><br>\r\n<code>get(1)<\/code> accesses element  that's outside of the ArrayList's bounds which results in exception."},{"id":827567992,"question":"What's the output of the code snippet?","code":"ArrayList<Integer> nums1 = new ArrayList<>();\r\nnums1.add(3);\r\nnums1.add(5);\r\n\r\nArrayList<Integer> nums2 = new ArrayList<>();\r\nnums2.add(2);\r\nnums2.add(4);\r\n\r\nfor(int i = 0; i < 2; i++) {\r\n    System.out.print(nums1.get(i));\r\n    System.out.print(\" \");\r\n    System.out.print(nums2.get(i));\r\n    System.out.print(\" \");\r\n}","answers":["3 5 2 4","3 2 5 4","2 3 4 5"],"correct_answer":"3 2 5 4","explanation":"<code>i<\/code> takes values of 0 and 1.\r\nThe elements are printed in the following way:\r\n<br><br> \r\n<code>nums1[0]<\/code> <code>nums2[0]<\/code>\r\n<code>nums1[1]<\/code> <code>nums2[1]<\/code>\r\n<br><br>\r\nThe lists have the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>nums1 <\/th>\r\n            <td >3<\/td>\r\n            <td >5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>nums2 <\/th>\r\n            <td >2<\/td>\r\n            <td >4<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1501052153,"text":"Fill the missing words to match the output.","code":"ArrayList<Integer> arrList = new ArrayList<>();\r\narrList.add(5);\r\narrList.add(8);\r\narrList.add(6);\r\narrList.add(fillword);\r\n\r\nSystem.out.print(arrList.get(fillword) + \" \");\r\nSystem.out.print(arrList.get(fillword) + \" \" + arrList.get(3));","result":"5 6 7","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["7","0","2"]]},{"id":304962694,"text":"Fill the missing words to match the output.","code":"ArrayList<Integer> numbers = new ArrayList<>();\r\nnumbers.add(3);\r\nnumbers.add(7);\r\nnumbers.add(0);\r\nnumbers.add(9);\r\nnumbers.add(1);\r\n\r\nfor (int num : numbers) {\r\n    if (num fillword fillword) {\r\n        System.out.print(num + \" \");\r\n    }\r\n}","result":"7 9","words":{"operators":["<","<=",">",">="],"values":["0","1","7","9"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","7"]]},{"id":1423080519,"text":"Fill the missing words to match the output.","code":"ArrayList<Integer> numbers = new ArrayList<>();\r\nint[] arr = {fillword};\r\nfor(int i = 0; i < arr.length; i++) {\r\n    numbers.add(i);\r\n}\r\nnumbers.add(5);\r\nnumbers.add(8);\r\n\r\nif(numbers.size() == fillword) {\r\n    System.out.print(\"Size Function\");\r\n}","result":"Size Function","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["0","0, 3","0, 3, 4"]},"correct_patterns":[["0, 3, 4","5"]]}]},{"id":689518927,"name":"Associative Arrays","tests":[{"id":1778437945,"question":"What's the output of the code snippet?","code":"HashMap<String, Double> clothes = new HashMap<>();\r\n\r\nclothes.put(\"Sweather\", 55.0);\r\nclothes.put(\"Jeans\", 45.0);\r\n\r\nSystem.out.print(clothes.get(\"Jeans\"));","answers":["0","45","55"],"correct_answer":"45","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Sweather<\/td>\r\n            <td class=\"table-primary\">Jeans<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>55<\/td>\r\n            <td class=\"table-primary\">45<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe value 45 is accessed via the \"Jeans\" key."},{"id":750120646,"question":"What's the output of the code snippet?","code":"HashMap<String, Double> fruits = new HashMap<>();\r\n\r\nfruits.put(\"strawberry\", 2.5);\r\nfruits.put(\"cherry\", 1.8);\r\n\r\nSystem.out.print(fruits.get(\"mango\"));","answers":["2.5","Exception","null"],"correct_answer":"null","explanation":"The associative array doesn't contain \"mango\" key\r\nthus \u0430 default value is returned - null.\r\n<br><br>\r\nThe associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>cherry<\/td>\r\n            <td>strawberry<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>1.8<\/td>\r\n            <td>2.5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1700400775,"question":"What's the output of the code snippet?","code":"HashMap<String, Integer> personsAges = new HashMap<>();\r\n\r\npersonsAges.put(\"John\", 22);\r\npersonsAges.put(\"Alex\", 25);\r\n\r\nfor (String key : personsAges.keySet())\r\n    System.out.print(key + \" \");\r\n}","answers":["John Alex","Alex John","22 25"],"correct_answer":"Alex John","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Alex<\/td>\r\n            <td>John<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>25<\/td>\r\n            <td>22<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe for loop prints only the keys.\r\n<br><br>\r\nNotice that the HashMap stores data sorted by their keys."},{"id":1578053188,"question":"What's the output of the code snippet?","code":"HashMap<String, Integer> playerScores = new HashMap<>();\r\n\r\nplayerScores.put(\"Snowy\", 123);\r\nplayerScores.put(\"Avian\", 130);\r\n\r\nplayerScores.remove(\"Snowy\");\r\n\r\nfor (String key : playerScores.keySet())\r\n    System.out.print(playerScores.get(key) + \" \");\r\n}","answers":["123","130","123 130"],"correct_answer":"130","explanation":"Via the put functions 2 key-value pairs are added.\r\n<br><br>\r\nVia the remove function one of the key-value pairs is removed.\r\n<br><br>\r\nThe for loop prints all values - which is only 130.\r\n<br><br>\r\nThe final structure of the associative array is:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Avian<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>130<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":280776197,"question":"What's the output of the code snippet?","code":"HashMap<String, String> capitals = new HashMap<>();\r\n\r\ncapitals.put(\"France\", \"Paris\");\r\ncapitals.put(\"Canada\", \"Ottawa\");\r\ncapitals.put(\"Spain\", \"Madrid\");\r\n\r\ncapitals.remove(\"Spain\");\r\nSystem.out.print(capitals.size());","answers":["0","2","3"],"correct_answer":"2","explanation":"The <code>size<\/code> function returns the count of the key-value pairs.\r\n<br><br>\r\n3 key-value pairs are added to the associative array and afterwards 1 is removed.\r\n<br><br>\r\n3 - 1 = 2"}],"puzzles":[{"id":226925572,"text":"Fill the missing words to match the output.","code":"HashMap<String, Integer> persons = new HashMap<>();\r\npersons.put(fillword, fillword);\r\npersons.put(fillword, fillword);\r\n\r\nSystem.out.print(persons.get(\"James\") + \" \");\r\nSystem.out.print(persons.get(\"Sophia\"));","result":"26 22","words":{"operators":[],"values":["20","22","26","\"Jake\"","\"James\"","\"Sophia\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Sophia\"","22","\"James\"","26"],["\"James\"","26","\"Sophia\"","22"]]},{"id":1177272261,"text":"Fill the missing words to match the output.","code":"HashMap<String, String> grades = new HashMap<>();\r\ngrades.put(\"Olivia\", \"A\");\r\ngrades.put(\"James\", \"B\");\r\n\r\nfor(String name : grades.keySet()) {\r\n    System.out.println(fillword+ \" \" + fillword (fillword));\r\n}","result":"Olivia A\r\nJames B","words":{"operators":[],"values":["Olivia","James"],"variables_constants":[],"others":["name","name","grades.get"]},"correct_patterns":[["name","grades.get","name"]]},{"id":953737090,"text":"Fill the missing words to match the output.","code":"HashMap<String, String> colors = new HashMap<>();\r\ncolors.put(\"White\", \"#ffffff\");\r\ncolors.put(\"Black\", \"#000000\");\r\ncolors.put(fillword, \"#00ff00\");\r\n\r\ncolors.remove(\"Black\");\r\nSystem.out.print(colors.fillword);","result":"2","words":{"operators":[],"values":["\"White\"","\"Black\"","\"Green\""],"variables_constants":[],"others":["size()","keys()","values()"]},"correct_patterns":[["\"Green\"","size()"]]}]},{"id":1674467596,"name":"Hashset","tests":[{"id":1231120834,"question":"What's the output of the code snippet?","code":"HashSet<String> cities = new HashSet<>();\r\n\r\ncities.add(\"Rome\");\r\ncities.add(\"Rome\");\r\ncities.add(\"Beljing\");\r\nfor(String city : cities)\r\n{\r\n    System.out.print(city + \" \");\r\n}","answers":["Rome Rome","Rome Rome Beljing","Rome Beljing"],"correct_answer":"Rome Beljing","explanation":"HashSet holds only unique values. \r\n<br><br>\r\nFor that reason \"Rome\" is contained only once."},{"id":34965891,"question":"What's the output of the code snippet?","code":"HashSet<String> names = new HashSet<>();\r\n\r\nnames.add(\"Michelle\");\r\nnames.add(\"Emily\");\r\nnames.add(\"Ally\");\r\nnames.add(\"Ally\");\r\n\r\nSystem.out.print(names.size());","answers":["2","3","4"],"correct_answer":"3","explanation":"HashSet holds only unique values. \r\n<br><br>\r\nThe \"Ally\" value is contained only once.\r\n<br><br>\r\nThe HashSet holds 3 values - \"Michelle\", \"Emily\" and \"Ally\"."},{"id":1153083712,"question":"What's the output of the code snippet?","code":"HashSet<String> socialMedias = new HashSet<>();\r\n\r\nsocialMedias.add(\"Instagram\");\r\nsocialMedias.add(\"Snapchat\");\r\n\r\nsocialMedias.add(\"Facebook\");\r\nsocialMedias.add(\"Facebook\");\r\nsocialMedias.remove(\"Facebook\");\r\n\r\nSystem.out.print(socialMedias.size());","answers":["2","3","4"],"correct_answer":"2","explanation":"The HashSet holds only unique values.\r\n<br><br>\r\nWhen \"Facebook\" value is removed only 2 values remain - \"Instagram\" and \"Snapchat\"."},{"id":1030736129,"question":"What's the output of the code snippet?","code":"HashSet<String> colors = new HashSet<>();\r\ncolors.add(\"gray\");\r\ncolors.add(\"blue\");\r\nSystem.out.print(colors.contains(\"blue\"));","answers":["pink","false","true"],"correct_answer":"true","explanation":"The HashSet contains 2 values - \"gray\" and \"blue\".\r\n<br><br>\r\n\"blue\" is contained in the HashSet  thus the <code>contains<\/code> method returns true."},{"id":1981606094,"question":"What's the output of the code snippet?","code":"HashSet<String> devices = new HashSet<>();\r\ndevices.add(\"smartphone\");\r\ndevices.add(\"tablet\");\r\ndevices.remove(\"tablet\");\r\n\r\nSystem.out.print(devices.contains(\"tablet\"));","answers":["tablet","true","false"],"correct_answer":"false","explanation":"The tablet value is removed from the HashSet thus the <code>contains<\/code> method returns false."}],"puzzles":[{"id":1905131331,"text":"Fill the missing words to match the output.","code":"HashSet<String> names = new HashSet<String>();\r\n\r\nnames.add(\"Mia\");\r\nnames.add(\"Lucas\");\r\nnames.add(fillword);\r\nnames.add(fillword);\r\n\r\nSystem.out.print(names.size());","result":"2","words":{"operators":[],"values":["\"Jo\"","\"Mia\"","\"Joe\"","\"Lucas\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Mia\"","\"Lucas\""],["\"Lucas\"","\"Mia\""]]},{"id":707927808,"text":"Fill the missing words to match the output.","code":"HashSet<Integer> numbers = new HashSet<>();\r\n\r\nnumbers.add(fillword);\r\nnumbers.add(5);\r\nnumbers.add(fillword);\r\n\r\nnumbers.remove(fillword);\r\nfor(int num : numbers) {\r\n    System.out.print(num + \" \");\r\n}","result":"1 7","words":{"operators":[],"values":["1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["1","7","5"]]},{"id":1827094209,"text":"Fill the missing words to match the output.","code":"HashSet<String> cities = new HashSet<>();\r\n\r\ncities.add(fillword);\r\ncities.add(\"London\");\r\ncities.add(fillword);\r\n\r\nSystem.out.print(cities.fillword(fillword));","result":"true","words":{"operators":[],"values":["\"Moscow\"","\"Wellington\"","\"London\""],"variables_constants":[],"others":["contains","equals","indexOf"]},"correct_patterns":[["\"Moscow\"","\"Wellington\"","contains","\"London\""],["\"Wellington\"","\"Moscow\"","contains","\"London\""]]}]},{"id":611547341,"name":"Matrix","tests":[{"id":683739279,"question":"What's the output of the code snippet?","code":"int[][] matrix = {\r\n    {2, 4, 6 },\r\n    {1, 3, 5 }\r\n};\r\n\r\nSystem.out.print(matrix[1][1]);","answers":["1","2","3"],"correct_answer":"3","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th class=\"btn-primary\">[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>2<\/td>\r\n            <td>4<\/td>\r\n            <td>6<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[1]<\/th>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1635133516,"question":"What's the output of the code snippet?","code":"int[][] matrix = {\r\n    { 5, 7, 8 },\r\n    { 2, 2, 3 },\r\n    { 4, 4, 9 }\r\n};\r\n\r\nSystem.out.print(matrix[2][2]);","answers":["2","4","9"],"correct_answer":"9","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th class=\"btn-primary\">[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>5<\/td>\r\n            <td>7<\/td>\r\n            <td>8<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>2<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[2]<\/th>\r\n            <td>4<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1511737357,"question":"What's the output of the code snippet?","code":"int[][] matrix = {\r\n    { 0, 1, 2 },\r\n    { 3, 4, 5 },\r\n    { 6, 7, 8 }\r\n};\r\n\r\nfor(int i = 0; i < 3; i++)\r\n{\r\n    System.out.print(matrix[i][i] + \" \");\r\n}","answers":["0 4 8","0 3 6","0 1 2"],"correct_answer":"0 4 8","explanation":"Via the for loop the row-col positions of the matrix are: <br>\r\n[0][0],  [1][1], [2][2].\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td>6<\/td>\r\n            <td>7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":482896842,"question":"What's the output of the code snippet?","code":"int[][] matrix = {\r\n    { 0, 1, 2 },\r\n    { 3, 4, 5 },\r\n    { 6, 7, 8 }\r\n};\r\n\r\nfor(int i = 0; i < 3; i++)\r\n{\r\n    for (int j = 0; j < 3; j++)\r\n    {\r\n        if (i == 2 || j == 2)\r\n        {\r\n            System.out.print(matrix[i][j] + \" \");\r\n        }\r\n    }\r\n}","answers":["0 1 3 4","2 5 6 7 8","6 7 8"],"correct_answer":"2 5 6 7 8","explanation":"In this case <code>i<\/code> represents the row index and <code>j<\/code> - the column.<br><br>\r\nBasically the elements of the last column and row are printed.\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td class=\"btn-primary\">6<\/td>\r\n            <td class=\"btn-primary\">7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1434225547,"question":"What's the output of the code snippet?","code":"int[][] matrix = {\r\n    { 0, 1, 0, 1, 0 },\r\n    { 1, 0, 1, 0, 1 },\r\n    { 0, 1, 0, 1, 0 },\r\n    { 1, 0, 1, 0, 1 },\r\n};\r\n\r\nint sum = 0;\r\nfor(int i = 0; i < 4; i++) {\r\n    for (int j = 0; j < 5; j++) {\r\n        if ((i + j) % 2 == 0) {\r\n            sum += matrix[i][j];\r\n        }\r\n    }\r\n}\r\nSystem.out.print(sum);","answers":["0","10","6"],"correct_answer":"0","explanation":"The elements which have even sum of row and column index are sumed.  It's like a chessboard field.\r\n<br><br>\r\nAll of the summed elements are 0s which makes the\r\nvalue of the <code>sum<\/code>  variable 0.\r\n<br><br>\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n            <th>[3]<\/td>\r\n            <th>[4]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[3]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":630480526,"text":"Fill the missing words to match the output.","code":"int[][] matrix = {\r\n        {4, 1, 6, 3 },\r\n        {2, 8, 0, 7 }\r\n};\r\n\r\nSystem.out.print(matrix[fillword][fillword] + \" \");\r\nSystem.out.print(matrix[fillword][fillword]);","result":"3 0","words":{"operators":[],"values":["0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","3","1","2"]]},{"id":507084367,"text":"Fill the missing words to match the output.","code":"int[][] matrix = {\r\n        { 4, 1, 6 },\r\n        { 3, 8, 0 },\r\n        { 7, 2, 5 }\r\n};\r\nfor(int i = 0; i < fillword; i++) {\r\n    System.out.print(matrix[fillword][fillword] + \" \");\r\n}","result":"1 8 2","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i"],"others":[]},"correct_patterns":[["3","i","1"]]},{"id":1357749772,"text":"Fill the missing words to match the output.","code":"int[][] matrix = {\r\n        { 5, 2, 8 },\r\n        { 1, 3, 6 },\r\n        { 4, 0, 7 }\r\n};\r\n\r\nfor (int i = 0; i < 3; i++) {\r\n    for (int j = 0; j < 3; j++) {\r\n        if (i == fillword || j == fillword) {\r\n            System.out.print(matrix[fillword][j] + \" \");\r\n        }\r\n    }\r\n}","result":"5 1 4 0 7","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i","j"],"others":[]},"correct_patterns":[["2","0","i"]]}]},{"id":489134218,"name":"Reference Passing","tests":[{"id":237087560,"question":"What's the output of the code snippet?","code":"static void main(String[] args) {\r\n    int num = 5;\r\n    decrement(num);\r\n    System.out.print(num);\r\n}\r\n\r\nstatic void decrement(int num) {\r\n    num--;\r\n}","answers":["0","4","5"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 5 in the main function."},{"id":1087818505,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    int num = 7;\r\n    printDecremented(num);\r\n    System.out.print(num);\r\n}\r\n\r\nstatic void printDecremented(int num)\r\n{\r\n    num--;\r\n    System.out.print(num + \" \");\r\n}","answers":["6 6","6 7","7 7"],"correct_answer":"6 7","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 7 in the main function.\r\n<br><br>\r\nDespite that, the value gets decremented inside the <code>printDecremented<\/code> function."},{"id":964422358,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    int[] arr = { 0, 1 };\r\n    add1ToArray(arr);\r\n    System.out.print(arr[0] + \" \" + arr[1]);\r\n}\r\n\r\nstatic void add1ToArray(int[] arr)\r\n{\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n}","answers":["0 1","1 1","1 2"],"correct_answer":"1 2","explanation":"Array is always passed by reference so it's elements are modified in the main function."},{"id":1915226775,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    int[] arr = { 1, 1 };\r\n    add1ToArray(arr);\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n    System.out.print(arr[0] + \" \" + arr[1]);\r\n}\r\n\r\nstatic void add1ToArray(int[] arr)\r\n{\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n}","answers":["1 1","2 2","3 3"],"correct_answer":"3 3","explanation":"Array is always passed by reference so it's elements are modified in the <code>add1ToArray<\/code> function.\r\n<br><br>\r\nAfterwards the elements are incremented by one again."},{"id":886909524,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    ArrayList<Integer> arrList = new ArrayList<>();\r\n    arrList.add(1);\r\n    arrList.add(2);\r\n\r\n    modifyArrList(arrList);\r\n\r\n    System.out.print(arrList.get(0));\r\n    System.out.print(\" \");\r\n    System.out.print(arrList.get(1));\r\n}\r\n\r\nstatic void modifyArrList(ArrayList<Integer> arrList)\r\n{\r\n    arrList.set(0, 3);\r\n    arrList.set(1, 4);\r\n}","answers":["1 2","2 3","3 4"],"correct_answer":"3 4","explanation":"Arrays and collections (such as ArrayList) are always passed by reference.\r\n<br><br>\r\n<code>modifyArrList<\/code> sets values of 3 and 4 at indexes 0 and 1.\r\n<br><br>\r\nStructure of the ArrayList:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">3<\/td>\r\n            <td class=\"table-primary\">4<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":160610765,"text":"Fill the missing words to match the output.","code":"public static void main(String[] args) {\r\n    int[] arr = { 9, 10 };\r\n    int number = 9;\r\n    add1(arr, number);\r\n\r\n    System.out.print(fillword + \" \");\r\n    System.out.print(fillword);\r\n}\r\npublic static void add1(int[] arr, int number) {\r\n    arr[0]++;\r\n    arr[1]++;\r\n    number++;\r\n}","result":"9 10","words":{"operators":[],"values":[],"variables_constants":["number","number - 1","arr[0]","arr[1]","arr[2]"],"others":[]},"correct_patterns":[["number","arr[0]"]]},{"id":1112005002,"text":"Fill the missing words to match the output.","code":"static void main(String[] args) {\r\n    int[] arr = { 0, 1, 2 };\r\n    add1ToArr(arr);\r\n\r\n    System.out.print(arr[fillword] + \" \");\r\n    System.out.print(arr[fillword]);\r\n}\r\nstatic void add1ToArr(int[] arr) {\r\n    arr[0]++;\r\n    arr[1]++;\r\n    arr[2]++;\r\n}","result":"1 2","words":{"operators":[],"values":["-1","0","1","2","3","4"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]},{"id":83163467,"text":"Fill the missing words to match the output.","code":"static void main(String[] args) {\r\n    ArrayList<Integer> arrList = new ArrayList<>();\r\n    arrList.add(1);\r\n    arrList.add(2);\r\n\r\n    int num = 2;\r\n    add1ToArr(arrList, num);\r\n\r\n    System.out.print(fillword + \" \" );\r\n    System.out.print(fillword);\r\n}\r\nstatic void add1ToArr(ArrayList<Integer> arrList, int number) {\r\n    arrList.add(1);\r\n    number++;\r\n}","result":"3 2","words":{"operators":[],"values":[],"variables_constants":["arrList","num"],"others":["arrList.size()","arrList.size() + 1"]},"correct_patterns":[["arrList.size()","num"]]}]},{"id":1473558603,"name":"Recursion","tests":[{"id":1837255189,"question":"What's the output of the code snippet?","code":"public static void main(String[] args)\r\n{\r\n    System.out.print(sum(4));\r\n}\r\n\r\nstatic int sum(int num)\r\n{\r\n    if (num == 1)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    return num + sum(num - 1);\r\n}","answers":["1","4","10"],"correct_answer":"10","explanation":"The <code>sum<\/code> function sums the numbers from n to 1.\r\n<br><br> \r\nIn this case 4 + 3 + 2 + 1 = 10.\r\n<br><br>\r\nThe recursion ends when the condition <code>num == 1<\/code> is met."},{"id":641160658,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    System.out.print(sum(3));\r\n}\r\n\r\nstatic int sum(int num)\r\n{\r\n    return num + sum(num - 1);\r\n}","answers":["3","6","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"There is no end condition of the recursion so  Stackoverflow Exception is thrown.\r\n<br><br>\r\nA suitable end condition could be: <br>\r\nif(num == 1) return 1;"},{"id":417625491,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    int[] arr = { 1, 2, 3, 4};\r\n    print(arr, 0);\r\n}\r\n\r\nstatic void print(int[] arr, int index)\r\n{\r\n    if(index < arr.length) {\r\n        System.out.print(arr[index] + \" \");\r\n        print(arr, index + 1);\r\n    }\r\n}","answers":["1","1 2 3 4","Stackoverflow Exception"],"correct_answer":"1 2 3 4","explanation":"The function prints all elements of the array by passing array and  index of element.\r\n<br><br>\r\nThe index gets incremented each time so the next element is printed.\r\n<br><br>\r\nThe recursion ends when the condition <code>index < arr.length<\/code> becomes false."},{"id":1367905616,"question":"What's the output of the code snippet?","code":"static void main(String[] args)\r\n{\r\n    int[] arr = { 1, 2, 3, 4, 5};\r\n    printUntilZero(arr, 0);\r\n}\r\n\r\nstatic void printUntilZero(int[] arr, int index)\r\n{\r\n    if(arr[index] != 0)\r\n    {\r\n        System.out.print(arr[index] + \" \");\r\n        printUntilZero(arr, index + 1);\r\n    }\r\n}","answers":["0","1 2 3 4 5","Exception"],"correct_answer":"Exception","explanation":"The recursion is supposed to end when element with value of zero is found.\r\n<br><br>\r\nThe passed array does not contain any 0s so the recursion repeats until the index gets out of the array's bounds."},{"id":171816209,"question":"What's the output of the code snippet?","code":"public static void main(String[] args) {\r\n    int sum = calculate(7);\r\n    System.out.print(sum);\r\n}\r\n\r\nstatic int calculate(int num) {\r\n    if(num == 0) {\r\n        return 0;\r\n    }\r\n\r\n    if(num % 2 == 1) {\r\n        num--;\r\n    }\r\n\r\n    return num + calculate(num - 2);\r\n}","answers":["7","12","16"],"correct_answer":"12","explanation":"The function <code>calculate<\/code> sums the numbers 6, 4, 2 and 0.\r\n<br><br>\r\n6 + 4 + 2 + 0 = 12"}],"puzzles":[{"id":2107185416,"text":"Fill the missing words to match the output.","code":"public static void main(String[] args) {\r\n    int sum = sumNums(fillword);\r\n    System.out.print(sum);\r\n}\r\npublic static int sumNums(int num) {\r\n    if (num > 1) {\r\n        return fillword + sumNums(fillword);\r\n    }\r\n\r\n    return fillword;\r\n}","result":"15","words":{"operators":[],"values":["-1","0","1","3","4","5"],"variables_constants":["num","num - 1","num + 1"],"others":[]},"correct_patterns":[["5","num","num - 1","1"]]},{"id":911096009,"text":"Fill the missing words to match the output.","code":"public static void main(String[] args) {\r\n    printUntil(2, fillword);\r\n}\r\npublic static void printUntil(int printNum, int stop) {\r\n    if (fillword <= stop) {\r\n        System.out.print(printNum + \" \");\r\n        printUntil(fillword, fillword);\r\n    }\r\n}","result":"2 4 8 16","words":{"operators":[],"values":["8","16","32"],"variables_constants":[],"others":["printNum","printNum + 2","printNum * 2","stop","stop * 2"]},"correct_patterns":[["16","printNum","printNum * 2","stop"]]},{"id":1760778390,"text":"Fill the missing words to match the output.","code":"public static void main(String[] args) {\r\n    int[] arr = { 1, 5, 6, 7, 9 };\r\n    printElems(arr, 0);\r\n}\r\npublic static void printElems(int[] arr, int index) {\r\n    if (index < arr.length) {\r\n        System.out.print(arr[fillword] + \" \");\r\n        printElems(fillword, index + fillword);\r\n    }\r\n}","result":"1 5 6 7 9","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["index","arr","arr.length"]},"correct_patterns":[["index","arr","1"]]}]}],"OOP":[{"id":1066359320,"name":"Classes And Objects","tests":[{"id":246064228,"question":"How many objects are created in the code segment?","code":"class Person {}\r\nclass Smartwatch {}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person jack = new Person();\r\n        Smartwatch sm = new Smartwatch();\r\n    }\r\n}","answers":["0","2","3"],"correct_answer":"2","explanation":"There are 2 objects - <code>jack<\/code> and <code>sm<\/code> .\r\n<br><br>\r\nAlso there  are 3 classes - <code>Person<\/code>, <code>Smartphone<\/code> and <code>Main<\/code>."},{"id":1197458469,"question":"How many classes are defined in the code segment?","code":"class PocketBook {}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        PocketBook pb1 = new PocketBook();\r\n        PocketBook pb2 = new PocketBook();\r\n        PocketBook pb3 = new PocketBook();\r\n    }\r\n}","answers":["1","2","3"],"correct_answer":"2","explanation":"There  are 2 classes - <code>PocketBook<\/code> and <code>Main<\/code> .\r\n<br><br>\r\nThere are 3 objects - <code>pb1<\/code>, \r\n <code>pb2<\/code> and <code>pb3<\/code> ."},{"id":940369890,"question":"Which of the following is a class field?","code":"class Cube {\r\n    public double a;\r\n    public double calcVolume() {\r\n        return a * a * a;\r\n    }\r\n}","answers":["a","Cube","calcVolume"],"correct_answer":"a","explanation":"<ul>\r\n<li><code>a<\/code> is a class field.<\/li>\r\n<li><code>calcVolume<\/code> is a class function.<\/li>\r\n<li><code>Cube<\/code> is the class name.<\/li>\r\n<\/ul>"},{"id":1924204451,"question":"What's the output of the code snippet?","code":"class Pet {}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Pet pet = new Pet();\r\n        pet.name = \"Chubby\";\r\n        System.out.print(pet.name);\r\n    }\r\n}","answers":["Chubby","name","Exception - name is not a class member"],"correct_answer":"Exception - name is not a class member","explanation":"The <code>Pet<\/code> class needs to have a class field name in order to avoid the exception.\r\n<br><br>\r\nSuch could be:\r\n<br>\r\n<code>public String name;<\/code>"},{"id":728115040,"question":"What's the output of the code snippet?","code":"class Headphones {\r\n    public double price;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Headphones obj = new Headphones();\r\n        double price = 50;\r\n        obj.price = price;\r\n\r\n        price++;\r\n        System.out.println(obj.price + \" \");\r\n        obj.price++;\r\n        System.out.println(obj.price);\r\n    }\r\n}","answers":["50 50","50 51","51 52"],"correct_answer":"50 51","explanation":"Modifying the <code>price<\/code> variable does not change  the value of the class member."}],"puzzles":[{"id":564164695,"text":"Fill the missing words to match the output.","code":"class Employee {\r\n    private fillword fillword;\r\n    fillword fillword age;\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["private","int","String","name","{","}"]},"correct_patterns":[["String","name","private","int"]]},{"id":441751572,"text":"Fill the missing words to match the output.","code":"class Smartphone {\r\n    private String model;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone fillword = fillword Smartphone();\r\n        fillword obj2 fillword new Smartphone();\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["obj1","obj2","Smartphone","new","="]},"correct_patterns":[["obj1","new","Smartphone","="]]},{"id":1559870421,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public String name;\r\n    public int age;\r\n    public void represent() {\r\n        System.out.print(\"My name is \" + name + \". \");\r\n        System.out.print(\"I am \" + age + \" years old.\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person fillword= new Person();\r\n        person.fillword = fillword;\r\n        person.fillword= 22;\r\n        person.represent();\r\n    }\r\n}","result":"My name is Joe. I am 22 years old.","words":{"operators":[],"values":["\"Joe\"","17","22"],"variables_constants":["person"],"others":["name","years","age"]},"correct_patterns":[["person","name","\"Joe\"","age"]]}]},{"id":1883006425,"name":"Public And Private","tests":[{"id":1812678433,"question":"What's the output of the code snippet?","code":"class Person {\r\n    private double height;\r\n    public void setHeight(double heightVal) {\r\n        height = heightVal;\r\n    }\r\n    public void printHeight() {\r\n        System.out.println(height);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person obj = new Person();\r\n        obj.setHeight(170);\r\n        obj.printHeight();\r\n    }\r\n}","answers":["0","170","Exception"],"correct_answer":"170","explanation":"All class members that are accessed in the main function (<code>setHeight<\/code> and <code>printHeight<\/code>) are declared <code>public<\/code>.\r\n<br><br>\r\nFor that reason no exception is thrown."},{"id":649619182,"question":"What's the output of the code snippet?","code":"class Processor {\r\n    private String manufacturer;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Processor obj = new Processor();\r\n        obj.manufacturer = \"Intel\";\r\n        System.out.print(obj.manufacturer);\r\n    }\r\n}","answers":["Intel","null","Exception"],"correct_answer":"Exception","explanation":"The <code>manufacturer<\/code> field is declared <code>private<\/code> but it's accessed outside of the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>manufacturer<\/code> needs to be declared as <code>public<\/code> member."},{"id":527206063,"question":"What's the output of the code snippet?","code":"class Smartwatch {\r\n    public double price;\r\n    private void printPrice() {\r\n        System.out.println(price);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartwatch obj = new Smartwatch();\r\n        obj.price = 100;\r\n        obj.printPrice();\r\n    }\r\n}","answers":["0","100","Exception"],"correct_answer":"Exception","explanation":"The <code>printPrice<\/code> function is declared <code>private<\/code> but it's accessed outside the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>printPrice<\/code> needs to be declared as <code>public<\/code> member."},{"id":1343333996,"question":"What's the output of the code snippet?","code":"class Programer {\r\n    public String name = \"\";\r\n    private String favLanguage = \"Java\";\r\n    public void printData() {\r\n        System.out.println(name + \" \" + favLanguage);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Programer programer = new Programer();\r\n        programer.name = \"Smith\";\r\n        programer.printData();\r\n    }\r\n}","answers":["Java","Smith Java","Exception"],"correct_answer":"Smith Java","explanation":"All of the members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason the code executes without errors."},{"id":180799021,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n    private double size = 0;\r\n    private String make = \"Default\";\r\n    public void printData() {\r\n        System.out.println(make + \" \" + size);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Tablet tablet = new Tablet();\r\n        tablet.size = 5;\r\n        tablet.printData();\r\n    }\r\n}","answers":["Default 0","Default 5","Exception"],"correct_answer":"Exception","explanation":"The <code>size<\/code> member is declared <code>private<\/code> but it's accessed outside of the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>size <\/code> needs to be declared as <code>public<\/code> member."}],"puzzles":[{"id":363781010,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    fillword double side;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Square obj = new Square();\r\n        fillword.fillword = 5;\r\n\r\n        System.out.print(\"Side = \" + obj.side);\r\n    }\r\n}","result":"Side = 5.0","words":{"operators":[],"values":["5","10"],"variables_constants":[],"others":["public","side","private","obj","square"]},"correct_patterns":[["public","obj","side"]]},{"id":1314126675,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword String name;\r\n    fillword void setName(String nameArg) {\r\n        name = nameArg;\r\n    }\r\n    fillword void printName() {\r\n        System.out.print(name);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person obj = new Person();\r\n        obj.setName(\"Candice\");\r\n        obj.printName();\r\n    }\r\n}","result":"Candice","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private"]},"correct_patterns":[["private","public","public"]]},{"id":117447440,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n    fillword int height;\r\n\r\n    fillword void setVal(int heightArg) {\r\n        this.height = heightArg;\r\n    }\r\n    fillword int getHeight() {\r\n        return this.height;\r\n    }\r\n    fillword void printHeight() {\r\n        System.out.print(this.height + \" meters\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Peak obj = new Peak();\r\n        obj.setVal(3000);\r\n        obj.printHeight();\r\n    }\r\n}","result":"3000 meters","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","public","private","public"]]}]},{"id":719357286,"name":"This Keyword","tests":[{"id":1131143658,"question":"What's the output of the code snippet?","code":"class Person {\r\n    public String name;\r\n    public int age;\r\n    public void printData() {\r\n        System.out.println(this.name + \" \" + this.age);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person person = new Person();\r\n        person.name = \"Emily\";\r\n        person.age = 20;\r\n        person.printData();\r\n    }\r\n}","answers":["Emily","20","Emily 20"],"correct_answer":"Emily 20","explanation":"The <code>printData<\/code> function prints the name and age members that are set to be \"Emily\" and 20."},{"id":68682155,"question":"What's the output of the code snippet?","code":"class Square {\r\n    public double side;\r\n    public double getArea() {\r\n        return this.side * this.side;\r\n    }\r\n    public void printData() {\r\n        System.out.println(\"Side = \" + this.side +\r\n                \" Area = \" + this.getArea());\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Square square = new Square();\r\n        square.side = 4;\r\n        square.printData();\r\n    }\r\n}","answers":["Side = 0 Area = 0","Side = 4 Area = 8","Side = 4 Area = 16"],"correct_answer":"Side = 4 Area = 16","explanation":"The <code>printData<\/code> functions prints the <code>side<\/code> member (4) and the result of the <code>getArea<\/code> function (4x4 = 16)."},{"id":2127372648,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    public double a;\r\n    public double b;\r\n    public double getPerimeter() {\r\n        return 2 * (this.a + b);\r\n    }\r\n    public void printData() {\r\n        System.out.println(this.a + \" \" + b + \" \" + this.getPerimeter());\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Rectangle obj = new Rectangle();\r\n        obj.a = 4;\r\n        obj.b = 5;\r\n        obj.printData();\r\n    }\r\n}","answers":["4 5 18","0 5 0","4 5 9"],"correct_answer":"4 5 18","explanation":"The <code>printData<\/code> functions prints the <code>a<\/code> member (4), <code>b<\/code> member (5) and the result of the <code>getPerimeter<\/code> function (2 x (4 + 5) = 18)."},{"id":930234665,"question":"What's the output of the code snippet?","code":"class TV {\r\n    public double price;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        TV obj = new TV();\r\n        obj.price = 200;\r\n        System.out.println(this.price);\r\n    }\r\n}","answers":["0","200","Exception"],"correct_answer":"Exception","explanation":"<code>this<\/code> is used to access class members inside the class body.\r\n<br><br>\r\nIt makes no sense outside of the class body."},{"id":1747411190,"question":"What's the output of the code snippet?","code":"class Motorcycle {\r\n    private String color;\r\n    public void setColor(String color) {\r\n        this.color = color;\r\n    }\r\n    public String getColor() {\r\n        return this.color;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Motorcycle obj = new Motorcycle();\r\n        obj.setColor(\"red\");\r\n        System.out.println(obj.getColor());\r\n    }\r\n}","answers":["null","red","Exception"],"correct_answer":"red","explanation":"<code>setColor<\/code> sets the value of the <code>color<\/code> field.\r\n<br><br>\r\n<code>getColor<\/code> accesses the value of the <code>color<\/code> field."}],"puzzles":[{"id":2041920209,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    public int width;\r\n    public int height;\r\n    public void printResolution() {\r\n        System.out.print(fillword.fillword+ \"x\" + fillword.fillword);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Device obj = new Device();\r\n        obj.width = 1280;\r\n        obj.height = 720;\r\n\r\n        obj.printResolution();\r\n    }\r\n}","result":"1280x720","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","width","height","resolution"]},"correct_patterns":[["this","width","this","height"]]},{"id":844782238,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    public double side;\r\n    public double calcPerimeter() {\r\n        return fillword.fillword * 4;\r\n    }\r\n    public double calcSemiPerimeter() {\r\n        return fillword.fillword \/ 2;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Square obj = new Square();\r\n        obj.side = 3;\r\n        System.out.println(\"P = \" + obj.calcPerimeter());\r\n        System.out.print(\"p = \" + obj.calcSemiPerimeter());\r\n    }\r\n}","result":"P = 12\r\np = 6","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","side","perimeter","calcPerimeter()","calcSemiPerimeter()"]},"correct_patterns":[["this","side","this","calcPerimeter()"]]},{"id":1796176479,"text":"Fill the missing words to match the output.","code":"class Cube {\r\n    public double side;\r\n    public double calcVolume() {\r\n        return Math.pow(this.side, 3);\r\n    }\r\n    public void printDetails() {\r\n        System.out.println(\"Side = \" + fillword.fillword);\r\n        System.out.print(\"Volume = \" + fillword.fillword);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cube cube = new Cube();\r\n        cube.side = 3;\r\n        cube.printDetails();\r\n    }\r\n}","result":"Side = 3\r\nVolume = 27","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","side","printDetails()","calcVolume()","3"]},"correct_patterns":[["this","side","this","calcVolume()"]]}]},{"id":1670751527,"name":"Getters And Setters","tests":[{"id":583762103,"question":"What's the output of the code snippet?","code":"class Square {\r\n    public double side;\r\n    public double getArea() {\r\n        return side * side;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Square obj = new Square();\r\n        obj.side = 5;\r\n        System.out.println(obj.side + \" \" + obj.getArea());\r\n    }\r\n}","answers":["5 10","5 25","Exception"],"correct_answer":"5 25","explanation":"The <code>getArea<\/code> function returns the result of multiplication (5 x 5 = 25).\r\n<br><br>\r\nAll of the members have public access so there is no reason for exception to be thrown."},{"id":460890228,"question":"What's the output of the code snippet?","code":"class Building {\r\n    private int height;\r\n    public int getHeight() {\r\n        return height;\r\n    }\r\n    public void setHeight(int height) {\r\n        this.height = height + 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Building obj = new Building();\r\n        obj.setHeight(60);\r\n        System.out.println(obj.getHeight());\r\n    }\r\n}","answers":["60","61","Exception"],"correct_answer":"61","explanation":"The members <code>setHeight<\/code> and <code>getHeight<\/code> have <code>public<\/code> access so exception is not thrown.\r\n<br><br>\r\n<code>setHeight<\/code> sets the passed value incremented by one:\r\n<br>\r\n60 + 1 = 61"},{"id":1546502197,"question":"What's the output of the code snippet?","code":"class Apartment {\r\n    private int roomsCount;\r\n    public int getRoomsCount() {\r\n        return roomsCount + 1;\r\n    }\r\n    public void setRoomsCount(int roomsCount) {\r\n        this.roomsCount = roomsCount + 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Apartment obj = new Apartment();\r\n        obj.setRoomsCount(2);\r\n        System.out.println(obj.getRoomsCount());\r\n    }\r\n}","answers":["2","3","4"],"correct_answer":"4","explanation":"<code>setRoomsCount<\/code> adds 1 to the passed value.\r\n<br><br>\r\n<code>getRoomsCount<\/code> adds 1 to the <code>roomsCount<\/code> member.\r\n<br><br>\r\nThe end result is 4 (2 + 1 + 1)."},{"id":382919666,"question":"What's the output of the code snippet?","code":"class Product {\r\n    public double price;\r\n    private double getPrice() {\r\n        return price + 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Product product = new Product();\r\n        product.price = 15;\r\n        System.out.println(product.getPrice());\r\n    }\r\n}","answers":["15","16","Exception"],"correct_answer":"Exception","explanation":"<code>getPrice<\/code> is declared as <code>private<\/code> but it's accessed outside of the class body thus exception is thrown.\r\n<br><br>\r\n<code>getPrice<\/code> needs to be <code>public<\/code> in order to execute the code without errors."},{"id":1334248371,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n    public double price;\r\n    public void setPrice(double value) {\r\n        if(value < 0) {\r\n            price = 0;\r\n            return;\r\n        }\r\n        price = value;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone smartphone = new Smartphone();\r\n        smartphone.setPrice(-5);\r\n        System.out.println(smartphone.price);\r\n    }\r\n}","answers":["-5","0","null"],"correct_answer":"0","explanation":"<code>setPrice<\/code> sets value of 0 for the  \r\n <code>price <\/code> member  since -5 meets the condition <code>value < 0 <\/code>."}],"puzzles":[{"id":766745116,"text":"Fill the missing words to match the output.","code":"class TShirt {\r\n    private String color;\r\n    public void setColor(String colorVal) {\r\n        fillword fillword  fillword;\r\n    }\r\n    public String getColor() {\r\n        fillword fillword;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        TShirt obj = new TShirt();\r\n        obj.setColor(\"Orange\");\r\n        System.out.print(obj.getColor());\r\n    }\r\n}","result":"Orange","words":{"operators":[],"values":[],"variables_constants":[],"others":["color","color","colorVal","colorVal","return","return","=","="]},"correct_patterns":[["color","=","colorVal","return","color"]]},{"id":1717609949,"text":"Fill the missing words to match the output.","code":"class Planet {\r\n    private String name;\r\n    public void setName(String nameVal) {\r\n        name = nameVal;\r\n    }\r\n    public String getName() {\r\n        return name;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Planet obj = new Planet();\r\n        fillword.fillword(fillword);\r\n        System.out.print(fillword.fillword());\r\n    }\r\n}","result":"Earth","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj","obj","setName","setName","getName","getName","\"Earth\"","\"Earth\""]},"correct_patterns":[["obj","setName","\"Earth\"","obj","getName"]]},{"id":1595262362,"text":"Fill the missing words to match the output.","code":"class Laptop {\r\n    private double price;\r\n    public double getPrice(int discount) {\r\n        return price - (discount * price) \/ 100;\r\n    }\r\n    public void setPrice(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Laptop obj = new Laptop();\r\n        obj.fillword(2000);\r\n        System.out.print(obj.fillword(fillword));\r\n    }\r\n}","result":"1800","words":{"operators":[],"values":["5","10","20"],"variables_constants":[],"others":["setPrice","getPrice","price"]},"correct_patterns":[["setPrice","getPrice","10"]]}]},{"id":607831268,"name":"Constructors","tests":[{"id":3416944,"question":"What's the output of the code snippet?","code":"class Planet {\r\n    public Planet() {\r\n        System.out.println(\"Default\");\r\n    }\r\n    public Planet(double param) {\r\n        System.out.println(\"Parametrized\");\r\n    }\r\n    public Planet(Planet tablet) {\r\n        System.out.println(\"Copy\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Planet obj = new Planet();\r\n    }\r\n}","answers":["Default","Parametrized","Copy"],"correct_answer":"Default","explanation":"The object creation <code>new Planet()<\/code>\r\naccepts no arguments thus the default constructor is called.\r\n<br><br>\r\nThe default constructor is: <code>public Planet()<\/code>"},{"id":2061058865,"question":"What's the output of the code snippet?","code":"class Keyboard {\r\n    public double price;\r\n    public Keyboard() {\r\n        price = 0;\r\n    }\r\n    public Keyboard(double param) {\r\n        price = param;\r\n    }\r\n    public Keyboard(Keyboard kb) {\r\n        price = kb.price + 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Keyboard kb = new Keyboard(10);\r\n        System.out.println(kb.price);\r\n    }\r\n}","answers":["0","10","11"],"correct_answer":"10","explanation":"The object creation <code>new Keyboard(10)<\/code>\r\naccepts argument of type double.\r\n<br><br>\r\nFor that reason the <code>Keyboard(double param)<\/code> constructor is called."},{"id":864969470,"question":"What's the output of the code snippet?","code":"class Camera {\r\n    public Camera(double param1) {\r\n        System.out.println(\"1\");\r\n    }\r\n    public Camera(double param1, double param2) {\r\n        System.out.println(\"2\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Camera obj = new Camera(300, 400);\r\n    }\r\n}","answers":["0","1","2"],"correct_answer":"2","explanation":"The object creation <code>new Camera(300, 400)<\/code>\r\naccepts 2 arguments of type double.\r\n<br><br>\r\nFor that reason the <code>Camera(double param1, double param2)<\/code> constructor is called."},{"id":1949467327,"question":"What's the output of the code snippet?","code":"class Pet {\r\n    Pet() {\r\n        System.out.println(\"default\");\r\n    }\r\n    Pet(String name) {\r\n        System.out.println(\"parametrized\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Pet pet = new Pet(\"Tomy\", 4);\r\n    }\r\n}","answers":["default","parametrized","Exception"],"correct_answer":"Exception","explanation":"The object creation <code> new Pet(\"Tomy\", 4)<\/code>\r\ncalls a constructor with  2 arguments. \r\n<br><br>\r\nThere is no constructor that accepts two arguments.\r\n<br><br>\r\nFor that reason an exception is thrown."},{"id":786932348,"question":"What's the output of the code snippet?","code":"class Monitor {\r\n    public Monitor() { }\r\n    public Monitor(String param) {\r\n        System.out.println(\"parametrized\");\r\n    }\r\n    public Monitor(Monitor monitor) {\r\n        System.out.println(\"copy\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Monitor obj1 = new Monitor();\r\n        Monitor obj2 = new Monitor(obj1);\r\n    }\r\n}","answers":["parametrized","copy","parametrized copy"],"correct_answer":"copy","explanation":"The object creation <code>new Monitor()<\/code>\r\ncalls a constructor with  0 arguments: <code>public Monitor()<\/code>.  Nothing is printed.\r\n<br><br>\r\nThe object creation <code>new Monitor(obj1)<\/code>\r\ncalls a constructor that accepts Monitor instance: <code>Monitor(Monitor monitor)<\/code>. \"copy\" is printed."}],"puzzles":[{"id":297461083,"text":"Fill the missing words to match the output.","code":"class Country {\r\n    public String name;\r\n    public Country() {\r\n        name = \"Unknown\";\r\n    }\r\n    public Country(String nameVal) {\r\n        name = nameVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword fillword = fillword fillword fillword;\r\n        System.out.print(obj.name);\r\n    }\r\n}","result":"Unknown","words":{"operators":[],"values":[],"variables_constants":[],"others":["Country","Country","new","obj","( )","(\"Iceland\")"]},"correct_patterns":[["Country","obj","new","Country","( )"]]},{"id":1248789784,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public String name;\r\n    public int age;\r\n    public Person(String nameVal, int ageVal) {\r\n        name = nameVal;\r\n        age = ageVal;\r\n    }\r\n    public Person(String nameVal) {\r\n        name = nameVal;\r\n        age = 18;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person obj1 = fillword Person(fillword);\r\n        System.out.print(obj1.age + \" \");\r\n        Person obj2 = new fillword(fillword);\r\n        System.out.print(obj2.age);\r\n    }\r\n}","result":"19 18","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"Ally\", 19","\"Teo\"","new","new","Person","Person"]},"correct_patterns":[["new","\"Ally\", 19","Person","\"Teo\""]]},{"id":52176089,"text":"Fill the missing words to match the output.","code":"class Wallet {\r\n    public int pocketsCount;\r\n\r\n    public Wallet() { }\r\n    public Wallet(Wallet wallet) {\r\n        pocketsCount = wallet.pocketsCount;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Wallet obj1 = new fillword;\r\n        obj1.pocketsCount = 4;\r\n\r\n        Wallet obj2 = new fillword;\r\n        System.out.print(obj2.pocketsCount);\r\n    }\r\n}","result":"4","words":{"operators":[],"values":[],"variables_constants":[],"others":["Wallet(2, 2)","Wallet(4)","Wallet(obj1)","Wallet()","Wallet(2, \"blue\")"]},"correct_patterns":[["Wallet()","Wallet(obj1)"]]}]},{"id":519038117,"name":"Class Inheritance Basics","tests":[{"id":1737802301,"question":"What's the output of the code snippet?","code":"class MemomyDevice {\r\n    public void printPhysicalSize() {\r\n        System.out.print(\"small \");\r\n    }\r\n}\r\nclass FlashDrive extends MemomyDevice {\r\n    public void printPhysicalSize() {\r\n        System.out.print(\"medium \");\r\n    }\r\n}\r\nclass  SDCard extends MemomyDevice { }\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        FlashDrive flashDrive = new FlashDrive();\r\n        SDCard sdCard = new SDCard();\r\n\r\n        flashDrive.printPhysicalSize();\r\n        sdCard.printPhysicalSize();\r\n    }\r\n}","answers":["small small","medium medium","medium small"],"correct_answer":"medium small","explanation":"The <code>FlashDrive<\/code> class overwrites the <code>printPhysicalSize<\/code>  method.\r\n<br><br>\r\nFor that reason <code>flashDrive.printPhysicalSize()<\/code> prints \"medium\".\r\n<br><br>\r\nThe <code>SDCard<\/code> class inherits the <code>printPhysicalSize<\/code> method from the <code>MemomyDevice <\/code> class.\r\n<br><br>\r\nFor that reason <code>sdCard.printPhysicalSize()<\/code> prints \"small\"."},{"id":1480191482,"question":"What's the output of the code snippet?","code":"class Device {\r\n    public void printSize() {\r\n        System.out.print(\"extra \");\r\n    }\r\n}\r\nclass Smartphone extends Device {\r\n    public void printSize() {\r\n        super.printSize();\r\n        System.out.print(\"small\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone obj = new Smartphone();\r\n        obj.printSize();\r\n    }\r\n}","answers":["extra","small","extra small"],"correct_answer":"extra small","explanation":"<code>obj.printSize()<\/code> calls the method from the <code>Smartwatch<\/code> class.\r\n<br><br>\r\n<code>super.printSize()<\/code> calls the method from the parent class. For that reason \"extra-\" is printed.\r\n<br><br>\r\nAfterwards \"small\" is printed."},{"id":317590971,"question":"What's the output of the code snippet?","code":"class Product {\r\n    private double price;\r\n}\r\nclass Mouse extends Product {\r\n    public double getPrice() {\r\n        return price;\r\n    }\r\n    public void setPrice(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Mouse mouse = new Mouse();\r\n        mouse.setPrice(15);\r\n        System.out.println(mouse.getPrice());\r\n    }\r\n}","answers":["0","15","Exception"],"correct_answer":"Exception","explanation":"The class <code>Mouse<\/code> does not have a <code>price<\/code> member. For that reason an exception is thrown.\r\n<br><br>\r\nThe <code>price<\/code> member needs to be declared as <code>protected<\/code> so it can be inherited by the <code>Product<\/code> class."},{"id":1267936632,"question":"What's the output of the code snippet?","code":"class Fruit {\r\n    protected int calories;\r\n}\r\nclass Apple extends Fruit {\r\n    public void setCalories(int caloriesVal) {\r\n        calories = caloriesVal;\r\n    }\r\n    public int getCalories() {\r\n        return calories;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Apple apple = new Apple();\r\n        apple.setCalories(10);\r\n        System.out.println(apple.getCalories());\r\n    }\r\n}","answers":["0","10","Exception"],"correct_answer":"10","explanation":"The <code>setCalories<\/code> and <code>getCalories<\/code> methods access and modify the <code>calories<\/code> member .\r\n<br><br>\r\nException is not thrown since the <code>protected<\/code> member is inherited by the <code>Fruit<\/code> class."},{"id":205540665,"question":"What's the output of the code snippet?","code":"class Pet {\r\n    public Pet() {\r\n        System.out.print(\"pet \");\r\n    }\r\n}\r\nclass Fish extends Pet {\r\n    public Fish() {\r\n        super();\r\n        System.out.print(\"fish \");\r\n    }\r\n}\r\nclass Cat extends Pet {\r\n    public Cat() {\r\n        System.out.print(\"cat \");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cat cat = new Cat();\r\n        Fish fish = new Fish();\r\n    }\r\n}","answers":["cat fish","cat pet fish","pet cat pet fish"],"correct_answer":"pet cat pet fish","explanation":"The parent class constructor is always called by the child class constructor even if <code>super()<\/code> is not used."}],"puzzles":[{"id":1170293862,"text":"Fill the missing words to match the output.","code":"class Liquid {\r\n    public void printColor() {\r\n        System.out.println(\"Transparent\");\r\n    }\r\n}\r\nclass Coke extends Liquid {\r\n    public void printColor() {\r\n        System.out.println(\"Black\");\r\n    }\r\n}\r\nclass Water extends Liquid { }\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword obj1 = new fillword();\r\n        obj1.printColor();\r\n\r\n        fillword obj2 = new fillword();\r\n        obj2.printColor();\r\n    }\r\n}","result":"Transparent\r\nBlack","words":{"operators":[],"values":[],"variables_constants":[],"others":["Water","Water","Water","Water","Coke","Coke","Coke","Coke"]},"correct_patterns":[["Water","Water","Coke","Coke"]]},{"id":1047946279,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    public Animal() {\r\n        System.out.println(\"base\");\r\n    }\r\n}\r\nclass Cat extends fillword{\r\n    public Cat() {\r\n        System.out.println(\"child\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword obj = new fillword();\r\n    }\r\n}","result":"base\r\nchild","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Cat","Cat"]},"correct_patterns":[["Animal","Cat","Cat"]]},{"id":1998227428,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword String name;\r\n    public void printData() {\r\n        System.out.println(name);\r\n    }\r\n}\r\nclass Singer extends Person {\r\n    fillword int songsCount;\r\n    public Singer(String nameVal, int songsCountVal) {\r\n        name = nameVal;\r\n        songsCount = songsCountVal;\r\n    }\r\n    public void printData() {\r\n        fillword.printData();\r\n        System.out.println(songsCount);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Singer singer = new Singer(\"Ariana\", 26);\r\n        singer.printData();\r\n    }\r\n}","result":"Ariana\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","protected","super","base","parent","Singer","Person"]},"correct_patterns":[["protected","private","super"]]}]},{"id":1469842530,"name":"Class Inheritance Advanced","tests":[{"id":1190489286,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    public void print() {\r\n        System.out.print(\"a \");\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    public void print() {\r\n        super.print();\r\n        System.out.print(\"b \");\r\n    }\r\n}\r\nclass Car extends MotorVehicle {\r\n    public void print() {\r\n        super.print();\r\n        System.out.print(\"c\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Car car = new Car();\r\n        car.print();\r\n    }\r\n}","answers":["c","b c","a b c"],"correct_answer":"a b c","explanation":"<code>super.print()<\/code> calls the <code>print<\/code> method from the parent class.\r\n<br><br>\r\nBasically the <code>print<\/code> method is executed first in\r\n<code>Vehicle<\/code>, afterwards in <code>MotorVehicle <\/code> and finally in the <code>Car<\/code> class."},{"id":1067027591,"question":"What's the output of the code snippet?","code":"class Electronic {\r\n    public Electronic() {\r\n        System.out.print(\"1 \");\r\n    }\r\n}\r\nclass OSDevice extends Electronic {\r\n    public OSDevice() {\r\n        System.out.print(\"2 \");\r\n    }\r\n}\r\nclass Tablet extends OSDevice {\r\n    public Tablet() {\r\n        System.out.print(\"3 \");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Tablet obj= new Tablet();\r\n    }\r\n}","answers":["1","3","1 2 3"],"correct_answer":"1 2 3","explanation":"The parent class constructor is always called by the child class constructor even if the <code>super<\/code> keyword is not used.\r\n<br><br>\r\nThe code of <code>Electronic()<\/code> executes first, afterwards <code>OSDevice()<\/code> and finally <code>Tablet()<\/code>."},{"id":1884204100,"question":"Which are the members of Tablet class?","code":"class Product {\r\n    public double price;\r\n}\r\nclass Electronic extends Product {\r\n    public boolean usesCable;\r\n}\r\nclass Tablet extends Electronic {\r\n    public String os;\r\n}","answers":["os","os, usesCable","os, usesCable, price"],"correct_answer":"os, usesCable, price","explanation":"All members that are <code>public<\/code> or <code>protected<\/code> are inherited by the parent class.\r\n<br><br>\r\nFor that reason the class <code>Tablet<\/code> inherits all of the members from <code>Product<\/code> and <code>Electronic<\/code>."},{"id":720620549,"question":"What's the output of the code snippet?","code":"class Device {\r\n    public void print() {\r\n        System.out.print(\"device \");\r\n    }\r\n}\r\nclass MobileDevice extends Device {}\r\nclass Smartphone extends MobileDevice {\r\n    public void print() {\r\n        System.out.print(\"smartphone\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone sm = new Smartphone();\r\n        sm.print();\r\n    }\r\n}","answers":["device","smartphone","device smartphone"],"correct_answer":"smartphone","explanation":"The class <code>Smartphone<\/code> overwrites the <code>print<\/code> method and does not call the parent method via the <code>super<\/code> keyword."},{"id":1671491522,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    public String size;\r\n    public Animal() {\r\n        size = \"small \";\r\n    }\r\n}\r\nclass Mammal extends Animal{\r\n    public Mammal() {\r\n        size = \"large \";\r\n    }\r\n}\r\nclass Giraffe extends Mammal {}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Giraffe obj = new Giraffe();\r\n        System.out.print(obj.size);\r\n    }\r\n}","answers":["small","large","small large"],"correct_answer":"large","explanation":"The parent class constructor is always called by the child class constructor even if the <code>super<\/code> keyword is not used.\r\n<br><br>\r\nThe code of <code>Animal()<\/code> executes first, afterwards <code>Mammal()<\/code> .\r\n<br><br>\r\nThe final value of the <code>size<\/code> property is set in the <code>Mammal<\/code> class constructor."}],"puzzles":[{"id":701474725,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    public void print() { System.out.print(fillword); }\r\n}\r\nclass AudioDevice extends Device {\r\n    public void print() { super.print();\r\n        System.out.print(fillword); }\r\n}\r\nclass USBDevice extends Device {\r\n    public void print() { super.print();\r\n        System.out.print(fillword); }\r\n    }\r\nclass Headphones extends AudioDevice {\r\n    public void print() { super.print();\r\n        System.out.print(fillword); }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Headphones obj = new Headphones();\r\n        obj.print();\r\n    }\r\n}","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"0\"","\"1\"","\"a\"","\"b\"","\"c\""]},"correct_patterns":[["\"a\"","\"b\"","\"0\"","\"c\""],["\"a\"","\"b\"","\"1\"","\"c\""]]},{"id":1652344674,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    public void print() { System.out.print(fillword); }\r\n}\r\nclass Tiger extends Animal {\r\n    public void print() { super.print();\r\n        System.out.print(fillword); }\r\n}\r\nclass MarineAnimal extends Animal {\r\n    public void print() { super.print();\r\n        System.out.print(fillword); }\r\n}\r\nclass Whale extends MarineAnimal {\r\n    public void print() { super.print();\r\n        System.out.print(fillword); }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Whale obj = new Whale();\r\n        obj.print();\r\n    }\r\n}","result":"123","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"a\"","\"b\"","\"1\"","\"2\"","\"3\""]},"correct_patterns":[["\"1\"","\"a\"","\"2\"","\"3\""],["\"1\"","\"b\"","\"2\"","\"3\""]]},{"id":1528948515,"text":"Fill the missing words to match the output.","code":"class Drink {\r\n    public Drink() { System.out.print(\"a\"); }\r\n}\r\nclass fillword extends Drink {\r\n    public Water() { System.out.print(\"1\"); }\r\n}\r\nclass FizzyDrink extends Drink {\r\n    public FizzyDrink() { System.out.print(\"b\"); }\r\n}\r\nclass fillword extends fillword {\r\n    public Coke() { System.out.print(\"c\"); }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Coke obj = new Coke();\r\n    }\r\n}","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["Drink","Drink","Water","Water","FizzyDrink","Coke"]},"correct_patterns":[["Water","Coke","FizzyDrink"]]}]},{"id":138486819,"name":"Interfaces","tests":[{"id":609554307,"question":"What's the output of the code snippet?","code":"interface DeliveryService {\r\n    double calcDeliveryCost();\r\n}\r\nclass Smartphone implements DeliveryService {\r\n    public double price;\r\n    public double calcDeliveryCost() {\r\n        return (price \/ 100) + 2;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone sm = new Smartphone();\r\n        sm.price = 500;\r\n        System.out.println(sm.calcDeliveryCost());\r\n    }\r\n}","answers":["5","7","Exception"],"correct_answer":"7","explanation":"The method in the interface <code>DeliveryService<\/code> is defined in the class that implements it.\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations for <code>calcDeliveryCost<\/code>  are:\r\n<br>\r\n(500 \/ 100) + 2 =\r\n<br>\r\n5 + 2 = 7"},{"id":519712576,"question":"What's the output of the code snippet?","code":"interface FuelConsumation {\r\n    double estimatedFuelCostForKms(int km);\r\n}\r\nclass Car implements FuelConsumation {}\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Car car = new Car();\r\n        System.out.print(car.estimatedFuelCostForKms(50));\r\n    }\r\n}","answers":["0","50","Exception"],"correct_answer":"Exception","explanation":"The <code>Car<\/code> class implements <code>FuelConsumation<\/code> but does not define the <code>estimatedFuelCostForKms<\/code> method.\r\n<br><br>\r\nFor that reason exception is thrown."},{"id":1471106817,"question":"What's the output of the code snippet?","code":"interface SalaryPayment {\r\n    double calcSalary();\r\n}\r\ninterface InsurancePayment {\r\n    double calcMonthInsurance();\r\n}\r\nclass Employee implements SalaryPayment, InsurancePayment {\r\n    public double calcSalary() {\r\n        return 30;\r\n    }\r\n    public double calcMonthInsurance() {\r\n        return 7;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Employee emp = new Employee();\r\n        System.out.print(emp.calcSalary() + \" \");\r\n        System.out.print(emp.calcMonthInsurance());\r\n    }\r\n}","answers":["30 7","7 30","Cannot implement more than 1 interface"],"correct_answer":"30 7","explanation":"A class can implement more than 1 interface\r\n<br><br>\r\n\r\nThe <code>Employee<\/code> class implements 2 interfaces and defines all of the methods that the interfaces have.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":140275406,"question":"What's the output of the code snippet?","code":"interface ElectricCost {\r\n    double getCostPerHour();\r\n}\r\nclass Appliance implements ElectricCost {\r\n    public double getCostPerHour() {\r\n        return 7;\r\n    }\r\n}\r\nclass Cooker extends Appliance implements ElectricCost { }\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cooker cooker = new Cooker();\r\n        System.out.println(cooker.getCostPerHour());\r\n    }\r\n}","answers":["0","7","Exception"],"correct_answer":"7","explanation":"The interface <code>ElectricCost<\/code> requires the classes which implement it to define a <code>getCostPerHour<\/code> method.\r\n<br><br>\r\nThe class <code>Cooker<\/code> inherits such from the <code>Appliance<\/code> class so exception is not thrown.\r\n<br><br>\r\nThe code <code>cooker.getCostPerHour()<\/code> calls the method from the parent class - <code>Appliance<\/code>."},{"id":1090555535,"question":"What's the output of the code snippet?","code":"interface Cost {\r\n    double getMonthlyCost();\r\n}\r\nclass Restaurant extends Cost {\r\n    public int employeesCount;\r\n    public double getMonthlyCost() {\r\n        return employeesCount * 1000;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Restaurant obj = new Restaurant();\r\n        obj.employeesCount = 5;\r\n        System.out.println(obj.getMonthlyCost());\r\n    }\r\n}","answers":["0","5000","Exception"],"correct_answer":"Exception","explanation":"The statement <code>class Restaurant extends Cost<\/code>\r\nis incorrect.\r\n<br><br>\r\nIt needs to be replaced with  <br>\r\n<code>class Restaurant implements Cost<\/code>"}],"puzzles":[{"id":500565728,"text":"Fill the missing words to match the output.","code":"fillword fillword {\r\n    double fillword fillword;\r\n}\r\nclass AirConditioner implements Appliance {\r\n    public double calcConsumation(int hours) {\r\n        return hours * 2.5;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        AirConditioner obj = new AirConditioner();\r\n        System.out.print(obj.calcConsumation(2));\r\n    }\r\n}","result":"5.0","words":{"operators":[],"values":[],"variables_constants":[],"others":["class","interface","AirConditioner","calcConsumation","Appliance","()","(int hours)"]},"correct_patterns":[["interface","Appliance","calcConsumation","(int hours)"]]},{"id":1450911393,"text":"Fill the missing words to match the output.","code":"interface BatteryLifespan {\r\n    int calcBatteryLifespan(int hours);\r\n}\r\nclass Smartphone fillword fillword {\r\n    public int fillword fillword {\r\n        return 100 - 2 * hours;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone obj = new Smartphone();\r\n        System.out.print(obj.calcBatteryLifespan(12));\r\n    }\r\n}","result":"76","words":{"operators":[],"values":[],"variables_constants":[],"others":[":","implements","( )","(int hours)","Smartphone","calcBatteryLifespan","BatteryLifespan"]},"correct_patterns":[["implements","BatteryLifespan","calcBatteryLifespan","(int hours)"]]},{"id":254297710,"text":"Fill the missing words to match the output.","code":"interface Insurance {\r\n    double calcInsurance(int months);\r\n}\r\ninterface FuelConsumation {\r\n    double calcCostPer100Km();\r\n}\r\nclass Car implements fillword, fillword {\r\n    private int engineSize;\r\n    public double fillword(int months) {\r\n        return  30 * months;\r\n    }\r\n    public double fillword() {\r\n        return engineSize \/ 1000 + 3;\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Insurance","interface","FuelConsumation","calcCostPer100Km","calcInsurance"]},"correct_patterns":[["Insurance","FuelConsumation","calcInsurance","calcCostPer100Km"],["FuelConsumation","Insurance","calcInsurance","calcCostPer100Km"]]}]},{"id":1123436512,"name":"Abstract Classes","tests":[{"id":1001762380,"question":"What's the output of the code snippet?","code":"abstract class SpaceObject {\r\n    SpaceObject() {\r\n        System.out.println(\"space object\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        SpaceObject obj = new SpaceObject();\r\n    }\r\n}","answers":["space object","Null","Exception"],"correct_answer":"Exception","explanation":"<code>SpaceObject obj = new SpaceObject()<\/code> creates object of an abstract class.\r\n<br><br>\r\nCreating object of an abstract class results in exception."},{"id":2086325773,"question":"What's the output of the code snippet?","code":"abstract class Component {\r\n    public String name;\r\n    public String getName() {\r\n        return name;\r\n    }\r\n}\r\nclass VideoCard extends Component {\r\n    public VideoCard() {\r\n        name = \"Video Card\";\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        VideoCard obj = new VideoCard();\r\n        System.out.println(obj.name);\r\n    }\r\n}","answers":["Video Card","Null","Exception"],"correct_answer":"Video Card","explanation":"The <code>VideoCard<\/code> class is not abstract.\r\n<br><br>\r\nFor that reason creating <code>VideoCard<\/code> object does not result in exception."},{"id":890235338,"question":"What's the output of the code snippet?","code":"abstract class Enterprise {\r\n    public abstract double calcYearExpenses();\r\n}\r\nclass Coffeeshop extends Enterprise {\r\n    public Coffeeshop() {\r\n        System.out.println(\"coffee\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Coffeeshop obj = new Coffeeshop();\r\n    }\r\n}","answers":["coffee","Null","Exception"],"correct_answer":"Exception","explanation":"The parent class <code>Enterprise<\/code> has an abstract method - <code>calcYearExpenses<\/code>.\r\n<br><br>\r\nThe  inheritor - <code>Coffeeshop<\/code> does not define a\r\n<code>calcYearExpenses<\/code> which results in exception."},{"id":1874594187,"question":"What's the output of the code snippet?","code":"abstract class Shop {\r\n    public abstract double calcRevenue();\r\n}\r\nclass ClothesShop extends Shop {\r\n    public int sellsCount;\r\n    public  double calcRevenue() {\r\n        return sellsCount * 10;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        ClothesShop obj = new ClothesShop();\r\n        obj.sellsCount = 10;\r\n        System.out.println(obj.calcRevenue());\r\n    }\r\n}","answers":["0","100","Exception"],"correct_answer":"100","explanation":"The class <code>ClothesShop<\/code> extends the abstract class <code>Shop<\/code> and defines it's abstract method - <code>calcRevenue<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations for the <code>calcRevenue<\/code> method are:\r\n<br>\r\n10 * 10 = 100"},{"id":543238472,"question":"What's the output of the code snippet?","code":"abstract class Animal {\r\n    public abstract void makeSound();\r\n}\r\nclass MarineAnimal extends Animal {\r\n    public void makeSound() {\r\n        System.out.println(\"No Sound\");\r\n    }\r\n}\r\nclass Fish extends MarineAnimal { }\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Fish fish = new Fish();\r\n        fish.makeSound();\r\n    }\r\n}","answers":["No Sound","Null","Exception"],"correct_answer":"No Sound","explanation":"The <code>MarineAnimal<\/code> class inherits the abstract <code>Animal<\/code> class  and defines it's abstract method - <code>makeSound<\/code> .\r\n<br><br>\r\nThe <code>Fish<\/code> class inherits the <code>makeSound<\/code> method from the <code>MarineAnimal<\/code> class.\r\n<br><br>\r\nFor that reason exception is not thrown."}],"puzzles":[{"id":1105028655,"text":"Fill the missing words to match the output.","code":"abstract class Device { }\r\nclass Tablet extends Device { }\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword obj = new fillword();\r\n        System.out.print(\"Code that won't throw exception.\");\r\n    }\r\n}","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Device","Tablet","Tablet"]},"correct_patterns":[["Tablet","Tablet"]]},{"id":981565932,"text":"Fill the missing words to match the output.","code":"abstract class Pet {\r\n    public fillword void fillword();\r\n}\r\nclass Cat extends Pet {\r\n    public void fillword() {\r\n        System.out.print(\"meow\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cat obj = new Cat();\r\n        obj.makeSound();\r\n    }\r\n}","result":"meow","words":{"operators":[],"values":[],"variables_constants":[],"others":["abstract","printSound","makeSound","makeSound","override"]},"correct_patterns":[["abstract","makeSound","makeSound"]]},{"id":1932960173,"text":"Fill the missing words.","code":"abstract class Polygon {\r\n    public fillword void printAnglesCount();\r\n}\r\nabstract class Shape {\r\n    public fillword void printArea();\r\n}\r\nclass Circle extends Shape {\r\n    private double radius;\r\n    public void fillword() {\r\n        System.out.print(3.14 * radius * radius);\r\n    }\r\n}\r\nclass Pentagon extends Polygon {\r\n    public void fillword() {\r\n        System.out.print(5);\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["radius","abstract","abstract","printAnglesCount","printArea","override"]},"correct_patterns":[["abstract","abstract","printArea","printAnglesCount"]]}]},{"id":1000040353,"name":"Static Members","tests":[{"id":420890889,"question":"What's the output of the code snippet?","code":"class User {\r\n    public static int count;\r\n    public User() {\r\n        count++;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        User.count = 0;\r\n        User obj1 = new User();\r\n        User obj2 = new User();\r\n        System.out.println(User.count);\r\n    }\r\n}","answers":["0","1","2"],"correct_answer":"2","explanation":"The static member <code>count<\/code> increments each time when object is created.\r\n<br><br>\r\nIt's incremented in the class constructor - <code>count++;<\/code>"},{"id":1404790998,"question":"What's the output of the code snippet?","code":"class Circle {\r\n    public static double pi;\r\n    public Circle() {\r\n        pi = 3.14;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Circle.pi = 3.141;\r\n        Circle obj = new Circle();\r\n        System.out.println(Circle.pi);\r\n    }\r\n}","answers":["3.14","3.141","3.1415"],"correct_answer":"3.14","explanation":"The static member <code>pi<\/code> is last modified at the class constructor - 3.14."},{"id":342853783,"question":"What's the output of the code snippet?","code":"class Tiger {\r\n    public static void makeSound() {\r\n        System.out.println(\"Roar\");\r\n    }\r\n}\r\nclass Cat {\r\n    public static void makeSound() {\r\n        System.out.println(\"Meow\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Tiger.makeSound();\r\n    }\r\n}","answers":["Roar","Meow","Exception"],"correct_answer":"Roar","explanation":"<code>Tiger.makeSound()<\/code> calls the <code>makeSound<\/code> function of the <code>Tiger<\/code> class.\r\n<br><br>\r\n<code>makeSound<\/code> does not access any non-static class members.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":1293723732,"question":"What's the output of the code snippet?","code":"class Applience {\r\n    public static void printConsumation() {\r\n        System.out.println(\"medium\");\r\n    }\r\n}\r\nclass Cattle extends Applience { }\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cattle.printConsumation();\r\n    }\r\n}","answers":["Null","medium","Exception"],"correct_answer":"medium","explanation":"<code>Cattle<\/code> inherits the <code>printConsumation<\/code> method from it's parent - <code>Applience<\/code>.\r\n<br><br>\r\nBasically <code>Cattle.printConsumation()<\/code> calls the method <code>printConsumation<\/code> of the parent class - <code>Applience<\/code>."},{"id":130140181,"question":"What's the output of the code snippet?","code":"class Cat {\r\n    public String name;\r\n    public static void printName() {\r\n        System.out.println(name);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cat cat = new Cat();\r\n        cat.name = \"Leo\";\r\n        Cat.printName();\r\n    }\r\n}","answers":["Null","Leo","Exception"],"correct_answer":"Exception","explanation":"The static <code>printName<\/code> function accesses non-static member - <code>name<\/code> which results in exception."}],"puzzles":[{"id":903594346,"text":"Fill the missing words.","code":"class Circle {\r\n    public fillword pi;\r\n    public fillword radius;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Circle.pi = 3.14;\r\n        Circle obj = new Circle();\r\n        obj.radius = 5;\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Circle","double","static double","pi","radius"]},"correct_patterns":[["static double","double"]]},{"id":1854464299,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public String name;\r\n    public fillword present() {\r\n        System.out.println(\"My name is \" + name + \".\");\r\n    }\r\n    public fillword sayHi() {\r\n        System.out.println(\"Hi!\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword.sayHi();\r\n        Person obj = new Person();\r\n        obj.name = \"Jake\";\r\n        obj.present();\r\n    }\r\n}","result":"Hi!\r\nMy name is Jake.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Person","name","present","void","static void"]},"correct_patterns":[["void","static void","Person"]]},{"id":658309352,"text":"Fill the missing words to match the output.","code":"class Building {\r\n    public double height;\r\n    public static int objCount;\r\n    public void printHeight() {\r\n        System.out.println(height);\r\n    }\r\n    public static void printCount() {\r\n        System.out.println(objCount);\r\n    }\r\n    public Building(double height) {\r\n        fillword.height = height;\r\n        fillword.objCount++;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword.objCount = 0;\r\n        Building obj1 = new Building(100);\r\n        Building obj2 = new Building(120);\r\n        System.out.println(fillword.objCount);\r\n        System.out.println(fillword.height);\r\n    }\r\n}","result":"2\r\n120","words":{"operators":[],"values":[],"variables_constants":[],"others":["Building","Building","Building","Building","obj1","obj2","this"]},"correct_patterns":[["this","Building","Building","Building","obj2"]]}]},{"id":2085586798,"name":"Encapsulation Principle","tests":[{"id":2021059538,"question":"What's the output of the code snippet?","code":"class Jacket {\r\n    private String color;\r\n    public Jacket(String colorVal) {\r\n        color = colorVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Jacket obj = new Jacket(\"black\");\r\n        System.out.println(obj.color);\r\n    }\r\n}","answers":["black","Null","Exception"],"correct_answer":"Exception","explanation":"<code>System.out.println(obj.color)<\/code> accesses the <code>private<\/code> <code>color<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>color<\/code> needs to be defined as <code>public<\/code> member."},{"id":823856019,"question":"What's the output of the code snippet?","code":"class Product {\r\n    private double price;\r\n    public double getPrice() {\r\n        return price;\r\n    }\r\n    public void setPrice(double price) {\r\n        this.price = price;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Product obj = new Product();\r\n        obj.setPrice(120);\r\n        System.out.println(obj.getPrice());\r\n    }\r\n}","answers":["0","120","Exception"],"correct_answer":"120","explanation":"All <code>Product<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":1808280400,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n    public String model;\r\n    public Smartphone(String modelVal) {\r\n        model = modelVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone obj = new Smartphone(\"My Model\");\r\n        System.out.println(obj.model);\r\n    }\r\n}","answers":["My Model","Null","Exception"],"correct_answer":"My Model","explanation":"All <code>Smartphone<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":746408721,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n    private double price;\r\n    public void setPrice(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Tablet obj = new Tablet();\r\n        obj.setPrice(230);\r\n        System.out.println(obj.price);\r\n    }\r\n}","answers":["230","Null","Exception"],"correct_answer":"Exception","explanation":"<code> System.out.println(obj.price)<\/code> accesses the <code>private<\/code> <code>price<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>price<\/code> needs to be defined as <code>public<\/code> member."},{"id":1696754398,"question":"What's the output of the code snippet?","code":"class Book {\r\n    private String title;\r\n    public void setTitle(String titleVal) {\r\n        title = titleVal;\r\n    }\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Book obj = new Book();\r\n        obj.setTitle(\"Sample\");\r\n        System.out.println(obj.getTitle());\r\n    }\r\n}","answers":["Sample","Null","Exception"],"correct_answer":"Sample","explanation":"All <code>Book<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."}],"puzzles":[{"id":434249897,"text":"Fill the missing words to match the output.","code":"class Car {\r\n    fillword String make;\r\n    fillword String model;\r\n    fillword void setData(String makeVal, String modelVal) {\r\n        this.make = makeVal;\r\n        this.model = modelVal;\r\n    }\r\n    fillword void printData() {\r\n        System.out.print(this.make + \" \" + this.model);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Car car = new Car();\r\n        car.setData(\"Ford\", \"Fiesta\");\r\n        car.printData();\r\n    }\r\n}","result":"Ford Fiesta","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","private","public","public"]]},{"id":1385644150,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword String id;\r\n    fillword String name;\r\n    fillword int age;\r\n    fillword Person(String id, String name, int age) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person person = new Person(\"s9f1sf95\", \"Thomas\", 22);\r\n        System.out.print(person.name + \" \");\r\n        System.out.print(person.age);\r\n    }\r\n}","result":"Thomas 22","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public","public"]},"correct_patterns":[["private","public","public","public"]]},{"id":189030455,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    fillword double side;\r\n    fillword Square(double sideVal) {\r\n        side = sideVal;\r\n    }\r\n    fillword double calcArea() {\r\n        return side * side;\r\n    }\r\n    fillword double calcPerimeter() {\r\n        return 4 * side;\r\n    }\r\n    fillword void printData() {\r\n        System.out.println(\"Area = \" + calcArea());\r\n        System.out.println(\"Perimeter = \" + calcPerimeter());\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Square obj = new Square(3);\r\n        obj.printData();\r\n    }\r\n}","result":"Area = 9.0\r\nPerimeter = 12.0","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private","private","private"]},"correct_patterns":[["private","public","private","private","public"]]}]},{"id":922527535,"name":"Abstraction Principle","tests":[{"id":1607895711,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    private double a;\r\n    private double b;\r\n    public Rectangle(double aVal, double bVal) {\r\n        a = aVal;\r\n        b = bVal;\r\n    }\r\n    public double calcArea() {\r\n        return a * b;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Rectangle obj = new Rectangle(3, 4);\r\n        System.out.println(obj.calcArea());\r\n    }\r\n}","answers":["7","10","12"],"correct_answer":"12","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n3 x 4 = 12"},{"id":276539996,"question":"What's the output of the code snippet?","code":"class Cube {\r\n    private double side;\r\n    public Cube(double sideVal) {\r\n        side = sideVal;\r\n    }\r\n    public double calcVolume() {\r\n        return Math.pow(side, 3);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Cube obj = new Cube(4);\r\n        System.out.println(obj.calcVolume());\r\n    }\r\n}","answers":["16","32","64"],"correct_answer":"64","explanation":"Calculations behind <code>calcVolume<\/code> method:\r\n<br><br>\r\n4 ^ 3 = <br>\r\n4 x 4 x 4 = <br>\r\n16 x 4 = 64"},{"id":1227409949,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    private double a;\r\n    private double b;\r\n    public Rectangle(double aVal, double bVal) {\r\n        a = aVal;\r\n        b = bVal;\r\n    }\r\n    public double calcDiagonal() {\r\n        return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Rectangle obj = new Rectangle(4, 3);\r\n        System.out.println(obj.calcDiagonal());\r\n    }\r\n}","answers":["5","7","25"],"correct_answer":"5","explanation":"Calculations behind <code>calcDiagonal<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">4 ^ 2 + 3 ^ 2<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">4 * 4 + 3 * 3<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">16 + 9<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">25<\/span> = <br>\r\n5"},{"id":64869850,"question":"What's the output of the code snippet?","code":"class Trapezoid {\r\n    private double a, b, h;\r\n    public Trapezoid(double aVal, double bVal, double hVal) {\r\n        a = aVal;\r\n        b = bVal;\r\n        h = hVal;\r\n    }\r\n    public double calcArea() {\r\n        return (a + b) \/ 2 * h;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Trapezoid obj = new Trapezoid(1, 1, 3);\r\n        System.out.println(obj.calcArea());\r\n    }\r\n}","answers":["3","4","5"],"correct_answer":"3","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n(1 + 1) \/ 2 * 3 = <br>\r\n2 \/ 2 * 3 = <br>\r\n1 * 3 = <br>\r\n3"},{"id":1149433243,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    private double a;\r\n    private double b;\r\n    public Rectangle(double aVal, double bVal) {\r\n        a = aVal;\r\n        b = bVal;\r\n    }\r\n    public double calcPerimeter() {\r\n        return 2 * a + 2 * b;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Rectangle obj = new Rectangle(1, 4);\r\n        System.out.println(obj.calcPerimeter());\r\n    }\r\n}","answers":["5","6","10"],"correct_answer":"10","explanation":"Calculations behind <code>calcPerimeter<\/code> method:\r\n<br><br>\r\n2 * 1 + 2 * 4 = <br>\r\n2 + 8 = <br>\r\n10 <br>"}],"puzzles":[{"id":1307083764,"text":"Fill the missing words to match the output.","code":"class Rectangle {\r\n    private double a;\r\n    private double b;\r\n    public Rectangle(double aVal, double bVal) {\r\n        a = aVal;\r\n        b = bVal;\r\n    }\r\n    public double calcArea() {\r\n        return a * b;\r\n    }\r\n    public double calcPerimeter() {\r\n        return 2 * (a + b);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Rectangle obj = new Rectangle(1, 3);\r\n        System.out.println(fillword.fillword);\r\n        System.out.println(fillword.fillword);\r\n    }\r\n}","result":"3\r\n8","words":{"operators":[],"values":[],"variables_constants":["obj","obj"],"others":["a","b","calcArea()","calcPerimeter()","Rectangle"]},"correct_patterns":[["obj","calcArea()","obj","calcPerimeter()"]]},{"id":110994357,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    private double side;\r\n    public Square(double side) {\r\n        this.side = side;\r\n    }\r\n    public double calcArea() {\r\n        return side * side;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Square obj1 = new Square(fillword);\r\n        Square obj2 = new Square(fillword);\r\n        System.out.println(obj1.calcArea());\r\n        System.out.println(obj2.calcArea());\r\n    }\r\n}","result":"9\r\n16","words":{"operators":[],"values":["2","3","4","5","6","9","16"],"variables_constants":[],"others":[]},"correct_patterns":[["3","4"]]},{"id":2135081842,"text":"Fill the missing words to match the output.","code":"class Shape {\r\n    private int angles;\r\n    public Shape(int angles) {\r\n        this.angles = angles;\r\n    }\r\n    public int calcDiagonalsCount() {\r\n        int diagonalsCount = 0;\r\n        int step = 2;\r\n\r\n        for (int i = 4; i <= this.angles; i++) {\r\n            diagonalsCount += step;\r\n            step++;\r\n        }\r\n        return diagonalsCount;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Shape obj1 = new Shape(fillword);\r\n        Shape obj2 = new Shape(fillword);\r\n        System.out.print(obj1.calcDiagonalsCount());\r\n        System.out.print(obj2.calcDiagonalsCount());\r\n    }\r\n}","result":"2 9","words":{"operators":[],"values":["2","3","4","5","6","7","8","9"],"variables_constants":[],"others":[]},"correct_patterns":[["4","6"]]}]},{"id":1872873196,"name":"Inheritance Principle","tests":[{"id":1027020120,"question":"Which are the members of Employee class?","code":"class Person {\r\n    protected int age;\r\n}\r\nclass Employee extends Person {\r\n    protected double salary;\r\n}\r\nclass Teacher extends Employee {\r\n    protected String[] subjects;\r\n}","answers":["salary","age, salary","age, salary, subjects"],"correct_answer":"age, salary","explanation":"The <code>Employee<\/code> class inherits the <code>protected<\/code> member <code>name<\/code> from it's parent - <code>Person<\/code>."},{"id":2011444505,"question":"What's the output of the code snippet?","code":"class Device {\r\n    public void printSize() {\r\n        System.out.println(\"medium\");\r\n    }\r\n}\r\nclass Smartphone extends Device {};\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone smartphone = new Smartphone();\r\n        smartphone.printSize();\r\n    }\r\n}","answers":["medium","Null","Exception"],"correct_answer":"medium","explanation":"<code>Smartphone<\/code> inherits the <code>printSize<\/code> function from it's parent - <code>Device<\/code>."},{"id":680088742,"question":"What's the output of the code snippet?","code":"class Glasses {\r\n    public void printShadeIndex() {\r\n        System.out.println(\"low \");\r\n    }\r\n}\r\nclass Sunglasses extends Glasses {\r\n    public void printShadeIndex() {\r\n        System.out.println(\"high\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Sunglasses obj = new Sunglasses();\r\n        obj.printShadeIndex();\r\n    }\r\n}","answers":["high","low","low high"],"correct_answer":"high","explanation":"<code>Sunglasses<\/code> inherits the <code>Glasses <\/code>  class.\r\n<br><br>\r\nIt overwrites the <code>printShadeIndex<\/code> method to print \"high\"."},{"id":1631482983,"question":"What's the output of the code snippet?","code":"class Bird {\r\n    public void printSize() {\r\n        System.out.print(\"small \");\r\n    }\r\n}\r\nclass Eagle extends Bird {\r\n    public void printSize() {\r\n        System.out.print(\"large \");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Bird obj = new Bird();\r\n        obj.printSize();\r\n    }\r\n}","answers":["large","small","small large"],"correct_answer":"small","explanation":"The <code>Bird<\/code> class has <code>printSize<\/code> method which prints \"small\"."},{"id":1541575716,"question":"What's the output of the code snippet?","code":"class Car {\r\n    public void printSize() {\r\n        System.out.print(\"medium \");\r\n    }\r\n}\r\nclass Sedan extends Car {\r\n    public void printSize() {\r\n        super.printSize();\r\n        System.out.print(\"long\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Sedan obj = new Sedan();\r\n        obj.printSize();\r\n    }\r\n}","answers":["medium","long","medium long"],"correct_answer":"medium long","explanation":"The <code>Sedan<\/code> class has <code>printSize<\/code> function which calls it's parent method (via <code>super.printSize()<\/code>) and afterwards prints \"long\"."}],"puzzles":[{"id":838329139,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    public void printSizeCategory() {\r\n        System.out.print(\"Small\");\r\n    }\r\n}\r\nclass Laptop extends Device {\r\n    public void printSizeCategory() {\r\n        System.out.print(\"Large\");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword obj = new fillword();\r\n        obj.printSizeCategory();\r\n    }\r\n}","result":"Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Laptop","Device","Device"]},"correct_patterns":[["Laptop","Laptop"]]},{"id":1789133552,"text":"Fill the missing words to match the output.","code":"class Electronic {\r\n    public void printConsumation() {\r\n        System.out.println(\"Low\");\r\n    }\r\n}\r\nclass fillword fillword fillword {}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Smartphone obj = new Smartphone();\r\n        obj.printConsumation();\r\n    }\r\n}","result":"Low","words":{"operators":[],"values":[],"variables_constants":[],"others":["Electronic","Smartphone","extends",":"]},"correct_patterns":[["Smartphone","extends","Electronic"]]},{"id":591995569,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword String name;\r\n    public void printData() {\r\n        System.out.println(name);\r\n    }\r\n}\r\nclass Employee extends Person {\r\n    fillword double salary;\r\n    public Employee(String nameVal, double salaryVal) {\r\n        name = nameVal;\r\n        salary = salaryVal;\r\n    }\r\n    public void printData() {\r\n        fillword.printData();\r\n        System.out.println(salary);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Employee obj = new Employee(\"Jim\", 26);\r\n        obj.printData();\r\n    }\r\n}","result":"Jim\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["Employee","Person","super","private","protected"]},"correct_patterns":[["protected","private","super"]]}]},{"id":542566061,"name":"Polymorphism Principle","tests":[{"id":479705061,"question":"What's the output of the code snippet?","code":"class Calculator {\r\n    public double solve(double a, double b) {\r\n        return a * b;\r\n    }\r\n    public double solve(double a, double b, double c) {\r\n        return a + b + c;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Calculator obj = new Calculator();\r\n        System.out.print(obj.solve(2, 1) + \" \");\r\n        System.out.print(obj.solve(2, 2, 2));\r\n    }\r\n}","answers":["3 8","2 8","2 6"],"correct_answer":"2 6","explanation":"There are 2 <code>solve<\/code> functions. Which one of them is called depends on the passed parameters.\r\n<br><br>\r\n<code>obj.solve(2, 1)<\/code> calls <code>solve(double a, double b)<\/code> .\r\n<br><br>\r\n<code>obj.solve(2, 2, 2)<\/code> calls <code>solve(double a, double b, double c)<\/code> ."},{"id":1430575010,"question":"What's the output of the code snippet?","code":"class Display {\r\n    public void printRatio(String size) {\r\n        System.out.print(size + \" \");\r\n    }\r\n    public void printRatio(int size) {\r\n        System.out.print(size + \"x\" + size);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Display display = new Display();\r\n        display.printRatio(\"2\u00d73\");\r\n        display.printRatio(1);\r\n    }\r\n}","answers":["2\u00d73 1","2\u00d73 1x1","2 1"],"correct_answer":"2\u00d73 1x1","explanation":"There are 2 <code>printRatio<\/code> functions. Which one of them is called depends on the passed parameter.\r\n<br><br>\r\n<code>display.printRatio(\"2\u00d73\")<\/code> calls <code>printRatio(String size)<\/code> .\r\n<br><br>\r\n<code>display.printRatio(1)<\/code> calls <code>printRatio(int size)<\/code> ."},{"id":266991459,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    public void printConsumation() {\r\n        System.out.print(\"medium \");\r\n    }\r\n}\r\nclass Scooter extends Vehicle {\r\n    public void printConsumation() {\r\n        System.out.print(\"low \");\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Vehicle vehicle = new Vehicle();\r\n        vehicle.printConsumation();\r\n\r\n        Scooter scooter = new Scooter();\r\n        scooter.printConsumation();\r\n    }\r\n}","answers":["medium medium","low low","medium low"],"correct_answer":"medium low","explanation":"The <code>Scooter<\/code> class overwrites the <code>printConsumation<\/code> method that's inherited by it's parent - <code>Vehicle<\/code>.\r\n<br><br>\r\n<code>vehicle.printConsumation()<\/code> prints \"medium\".\r\n<br><br>\r\n<code>scooter.printConsumation()<\/code> prints \"low\"."},{"id":1084102432,"question":"The following code snipet is","code":"class Printer {\r\n    public void listArgs(double arg) {\r\n        System.out.print(arg);\r\n    }\r\n    public void listArgs(double arg1, double arg2) {\r\n        System.out.print(arg1 + \" \" + arg2);\r\n    }\r\n}","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Compile Time Polymorphism","explanation":"Compile Time Polymorphism occurs in function overloading.\r\n<br><br>\r\nFunction overloading - many functions with the same name accept different arguments."},{"id":960706273,"question":"The following code snipet is","code":"class PolarAnimal {\r\n    public void printSize() {\r\n        System.out.print(\"small\");\r\n    }\r\n}\r\nclass Penguin extends PolarAnimal  {\r\n    public void printSize() {\r\n        System.out.print(\"medium\");\r\n    }\r\n}","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Runtime Polymorphism","explanation":"Runtime Polymorphism occurs in function overriding .\r\n<br><br>\r\nfunction overriding - base class ( <code>PolarAnimal<\/code> ) has a function that's being overwritten in a child class ( <code>Penguin<\/code> )."}],"puzzles":[{"id":1711161982,"text":"Fill the missing words to match the output.","code":"class Sumator {\r\n    public int sum(int a, int b) {\r\n        return a + b;\r\n    }\r\n    public int sum(int a, int b, int c) {\r\n        return a + b + c;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Sumator sumator = new Sumator();\r\n        System.out.println(sumator.sum(fillword));\r\n        System.out.println(sumator.sum(fillword));\r\n    }\r\n}","result":"6\r\n7","words":{"operators":[],"values":[],"variables_constants":[],"others":["1, 1","3, 2","1, 5","1, 1, 1","2, 1, 1","2, 3, 2"]},"correct_patterns":[["1, 5","2, 3, 2"]]},{"id":1587765823,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    public void printSize() {\r\n        System.out.println(\"Small\");\r\n    }\r\n}\r\nclass Whale extends Animal {\r\n    public void printSize() {\r\n        System.out.println(\"Large\");\r\n    }\r\n}\r\nclass Cat extends Animal { }\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword obj1 = new fillword();\r\n        obj1.printSize();\r\n        fillword obj2 = new fillword();\r\n        obj2.printSize();\r\n    }\r\n}","result":"Small\r\nLarge","words":{"operators":[],"values":[],"variables_constants":[],"others":["Whale","Whale","Whale","Whale","Cat","Cat","Cat","Cat"]},"correct_patterns":[["Cat","Cat","Whale","Whale"]]},{"id":391613948,"text":"Fill the missing words to match the output.","code":"class Vehicle {\r\n    public void printFuelCost() {\r\n        System.out.println(\"none\");\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    public void printFuelCost() {\r\n        System.out.println(\"medium\");\r\n    }\r\n}\r\nclass Car extends MotorVehicle {}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        fillword obj = new fillword();\r\n        obj.printFuelCost();\r\n    }\r\n}","result":"medium","words":{"operators":[],"values":[],"variables_constants":[],"others":["Vehicle","Vehicle","Car","Car"]},"correct_patterns":[["Car","Car"]]}]},{"id":452658794,"name":"Collections Of Classes","tests":[{"id":1945130670,"question":"What's the output of the code snippet?","code":"ArrayList<Integer> nums = new ArrayList<>();\r\nnums.add(7);\r\nnums.add(8);\r\nnums.add(9);\r\nSystem.out.println(nums.size());","answers":["2","3","9"],"correct_answer":"3","explanation":"The <code>size<\/code> function returns the count of ArrayList's  elements.\r\n<br><br>\r\n<code>nums<\/code> contains 3 elements (7, 8, 9) thus 3 is printed."},{"id":883258991,"question":"What's the output of the code snippet?","code":"class Product {\r\n    public double price;\r\n    public Product(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        ArrayList<Product> prods = new ArrayList<>();\r\n        for(int i = 1; i <= 5; i++) {\r\n            Product prod = new Product(i * 7);\r\n            prods.add(prod);\r\n        }\r\n\r\n        System.out.println(prods.get(3).price);\r\n    }\r\n}","answers":["21","28","35"],"correct_answer":"28","explanation":"After the elements are added, the ArrayList has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td class=\"table-primary\">3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>7<\/td>\r\n            <td>14<\/td>\r\n            <td>21<\/td>\r\n            <td class=\"table-primary\">28<\/td>\r\n            <td>35<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1833539116,"question":"What's the output of the code snippet?","code":"class Employee {\r\n    public String name;\r\n    public Employee(String nameVal) {\r\n        name = nameVal;\r\n    }\r\n}\r\nclass Company {\r\n    public ArrayList<Employee> employees;\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Company company = new Company();\r\n        company.employees = new ArrayList<>();\r\n        String[] names = new String[] { \"Ferb\", \"John\", \"Matthew\", \"Jaden\" };\r\n\r\n        for(int i = 0; i < names.length; i++) {\r\n            Employee emp = new Employee(names[i]);\r\n            company.employees.add(emp);\r\n        }\r\n        System.out.println(company.employees.get(1).name);\r\n    }\r\n}","answers":["Ferb","John","Matthew"],"correct_answer":"John","explanation":"After the elements are added, the ArrayList has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>Ferb<\/td>\r\n            <td class=\"table-primary\">John<\/td>\r\n            <td>Matthew<\/td>\r\n            <td>Jaden<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":671003117,"question":"What's the output of the code snippet?","code":"class Student {\r\n    public int age;\r\n    public Student(int ageVal) {\r\n        age = ageVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Student> list = new ArrayList<>();\r\n        list.add(new Student(10));\r\n        list.add(new Student(15));\r\n        list.add(new Student(16));\r\n        list.add(new Student(17));\r\n\r\n        for(int i = 0; i < list.size(); i++) {\r\n            Student stud = list.get(i);\r\n            if(stud.age % 2 == 0) {\r\n                System.out.print(stud.age + \" \");\r\n            }\r\n        }\r\n    }\r\n}","answers":["10 16","15 17","10 15"],"correct_answer":"10 16","explanation":"From all  student ages - 10, 15, 16, 17, only 2 meet the condition <code>stud.age % 2 == 0<\/code> - 10 and 16.\r\n<br><br>\r\nThe condition <code>stud.age % 2 == 0<\/code> is true if the age is an even number."},{"id":413389226,"question":"What's the output of the code snippet?","code":"class Car {\r\n    public int hp;\r\n    public Car(int hpVal) {\r\n        hp = hpVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Car> cars = new ArrayList<>();\r\n        cars.add(new Car(65));\r\n        cars.add(new Car(75));\r\n        cars.add(new Car(85));\r\n        cars.add(new Car(95));\r\n\r\n        for (Car car : cars) {\r\n            if(car.hp >= 80) {\r\n                System.out.print(car.hp + \" \");\r\n            }\r\n        }\r\n    }\r\n}","answers":["65 75","75 85","85 95"],"correct_answer":"85 95","explanation":"From all hps - 65, 75, 85, 95, only 2 meet the condition <code>car.hp >= 80<\/code> - 85 and 95."}],"puzzles":[{"id":1208266173,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n    public double height;\r\n    public Peak(double heightVal) {\r\n        height = heightVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        ArrayList<Peak> peaks = new ArrayList<>();\r\n        peaks.add(new Peak(2000));\r\n        peaks.add(new Peak(3000));\r\n        peaks.add(new Peak(4000));\r\n        peaks.add(new Peak(5000));\r\n\r\n        for(Peak peak : peaks) {\r\n            if(peak.height fillword fillword) {\r\n                System.out.print(peak.height + \" \");\r\n            }\r\n        }\r\n    }\r\n}","result":"4000 5000","words":{"operators":[">=","<="],"values":["4000","3000"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","4000"]]},{"id":44682618,"text":"Fill the missing words to match the output.","code":"class Student {\r\n    public int age;\r\n    public Student(int ageVal) {\r\n        age = ageVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        ArrayList<fillword> fillword = new ArrayList<>();\r\n        for (int i = 10; i <= 20; i++) {\r\n            students.add(new Student(i));\r\n        }\r\n        for (Student student : students) {\r\n            if(student.age > fillword) {\r\n                System.out.print(student.age + \" \");\r\n            }\r\n        }\r\n    }\r\n}","result":"16 17 18 19 20","words":{"operators":[],"values":["15","16"],"variables_constants":["students","students"],"others":["Student","Student"]},"correct_patterns":[["Student","students","15"]]},{"id":2069818683,"text":"Fill the missing words to match the output.","code":"class Product {\r\n    public double price;\r\n    public Product(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Product> prods = new ArrayList<>();\r\n        for (int i = 11; i <= 17; i++) {\r\n            prods.add(fillword fillword fillword);\r\n        }\r\n        for (Product prod : prods) {\r\n            if(prod.price >= 150) {\r\n                System.out.print(prod.price + \" \");\r\n            }\r\n        }\r\n    }\r\n}","result":"150 160 170","words":{"operators":[],"values":[],"variables_constants":[],"others":["Product","prods","(i)","(i * 10)","List","new"]},"correct_patterns":[["new","Product","(i * 10)"]]}]},{"id":1403528747,"name":"Compareto Method","tests":[{"id":1364259179,"question":"What's the output of the code snippet?","code":"class Car implements Comparable<Car> {\r\n    public int hp;\r\n    public Car(int hpVal) {\r\n        hp = hpVal;\r\n    }\r\n    public int compareTo(Car car) {\r\n        if(car.hp > this.hp) {\r\n            return -1;\r\n        }\r\n        else if (car.hp == this.hp) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Car> cars = new ArrayList<>();\r\n        cars.add(new Car(100));\r\n        cars.add(new Car(110));\r\n        cars.add(new Car(120));\r\n        Collections.sort(cars);\r\n        System.out.print(cars.get(0).hp);\r\n    }\r\n}","answers":["100","110","120"],"correct_answer":"100","explanation":"After sorting the list, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">100<\/td>\r\n            <td>110<\/td>\r\n            <td>120<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":168104232,"question":"What's the output of the code snippet?","code":"class Person implements Comparable<Person> {\r\n    public String name;\r\n    public Person(String nameVal) {\r\n        name = nameVal;\r\n    }\r\n    public int compareTo(Person person) {\r\n        if(person.name.length() > this.name.length()) {\r\n            return -1;\r\n        }\r\n        else if (person.name.length() == this.name.length()) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Person> persons = new ArrayList<>();\r\n        persons.add(new Person(\"Johnson\"));\r\n        persons.add(new Person(\"Jo\"));\r\n        persons.add(new Person(\"John\"));\r\n        Collections.sort(persons);\r\n        System.out.print(persons.get(2).name);\r\n    }\r\n}","answers":["Jo","John","Johnson"],"correct_answer":"Johnson","explanation":"After sorting the list by length of names, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Jo<\/td>\r\n            <td>John<\/td>\r\n            <td class=\"table-primary\">Johnson<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1286222057,"question":"What's the output of the code snippet?","code":"class Building implements Comparable<Building> {\r\n    public int height;\r\n    public Building(int heightVal) {\r\n        height = heightVal;\r\n    }\r\n    public int compareTo(Building obj) {\r\n        if(obj.height < this.height) {\r\n            return -1;\r\n        }\r\n        else if (obj.height == this.height) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Building> buildings = new ArrayList<>();\r\n        buildings.add(new Building(15));\r\n        buildings.add(new Building(50));\r\n        buildings.add(new Building(30));\r\n        Collections.sort(buildings);\r\n        System.out.print(buildings.get(0).height);\r\n    }\r\n}","answers":["15","30","50"],"correct_answer":"50","explanation":"After sorting the list, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">50<\/td>\r\n            <td>30<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":90132662,"question":"What's the output of the code snippet?","code":"class City implements Comparable<City> {\r\n    public String name;\r\n    public City(String nameVal) {\r\n        name = nameVal;\r\n    }\r\n    public int compareTo(City obj) {\r\n        if(obj.name.length() < this.name.length()) {\r\n            return -1;\r\n        }\r\n        else if (obj.name.length() == this.name.length()) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<City> cities = new ArrayList<>();\r\n        cities.add(new City(\"Rome\"));\r\n        cities.add(new City(\"Moscow\"));\r\n        cities.add(new City(\"Texas\"));\r\n        Collections.sort(cities);\r\n        System.out.print(cities.get(2).name);\r\n    }\r\n}","answers":["Rome","Texas","Moscow"],"correct_answer":"Rome","explanation":"After sorting the list, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Moscow<\/td>\r\n            <td>Texas<\/td>\r\n            <td class=\"table-primary\">Rome<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2114744439,"question":"What's the output of the code snippet?","code":"class Product implements Comparable<Product> {\r\n    public double price;\r\n    public Product(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n    public int compareTo(Product obj) {\r\n        return 0;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Product> prods = new ArrayList<>();\r\n        prods.add(new Product(10));\r\n        prods.add(new Product(5));\r\n        prods.add(new Product(15));\r\n        Collections.sort(prods);\r\n        System.out.print(prods.get(0).price);\r\n    }\r\n}","answers":["5","10","15"],"correct_answer":"10","explanation":"The <code>compareTo<\/code> method returns 0 which doesn't sort the list.\r\n<br>\r\nStructure of the list:\r\n<br>\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>5<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1006832888,"text":"Fill the missing words to match the output.","code":"class Person implements fillword <fillword> {\r\n    public int height;\r\n    public Person(int height) {\r\n        this.height = height;\r\n    }\r\n    public int fillword(Person person) {\r\n        if(person.height > this.height) {\r\n            return -1;\r\n        }\r\n        else if (this.height == person.height) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        ArrayList<Person> people = new ArrayList<>();\r\n        people.add(new Person(160));\r\n        people.add(new Person(180));\r\n        people.add(new Person(170));\r\n        fillword.fillword(fillword);\r\n        for(Person person : people) {\r\n            System.out.print(person.height + \" \");\r\n        }\r\n    }\r\n}","result":"160 170 180","words":{"operators":[],"values":[],"variables_constants":[],"others":["people","compare","compareTo","Comparable","sort","order","Collections","Person"]},"correct_patterns":[["Comparable","Person","compareTo","Collections","sort","people"]]},{"id":1991257273,"text":"Fill the missing words to match the output.","code":"class Tablet implements Comparable<Tablet> {\r\n    public double size;\r\n    public Tablet(double size) {\r\n        this.size = size;\r\n    }\r\n    public int compareTo(Tablet tablet) {\r\n        if(tablet.size > this.size) {\r\n            return fillword;\r\n        }\r\n        else if (tablet.size == this.size) {\r\n            return fillword;\r\n        }\r\n        return fillword;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Tablet> list = new ArrayList<>();\r\n        list.add(new Tablet(10));\r\n        list.add(new Tablet(7));\r\n        list.add(new Tablet(8));\r\n        Collections.sort(list);\r\n        for (Tablet tablet : list) {\r\n            System.out.print(tablet.size + \" \");\r\n        }\r\n    }\r\n}","result":"7 8 10","words":{"operators":[],"values":["-1","-1","0","0","1","1"],"variables_constants":[],"others":[]},"correct_patterns":[["-1","0","1"]]},{"id":795167814,"text":"Fill the missing words to match the output.","code":"class Product implements Comparable<Product> {\r\n    public double price;\r\n    public Product(double price) {\r\n        this.price = price;\r\n    }\r\n    public int compareTo(Product product) {\r\n        if(product.price < this.price) {\r\n            return fillword;\r\n        }\r\n        else if (product.price == this.price) {\r\n            return fillword;\r\n        }\r\n        return fillword;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Product> list = new ArrayList<>();\r\n        list.add(new Product(15));\r\n        list.add(new Product(50));\r\n        list.add(new Product(30));\r\n        Collections.sort(list);\r\n        for(Product prod : list) {\r\n            System.out.print(prod.price + \" \");\r\n        }\r\n    }\r\n}","result":"50 30 15","words":{"operators":[],"values":["-1","-1","0","0","1","1"],"variables_constants":[],"others":[]},"correct_patterns":[["-1","0","1"]]}]},{"id":341656040,"name":"Equals Method","tests":[{"id":816877620,"question":"What's the output of the code snippet?","code":"class Keyboard {\r\n    public String color;\r\n    public Keyboard(String colorVal) {\r\n        color = colorVal;\r\n    }\r\n    public boolean equals(Object obj) {\r\n        Keyboard keyboard = (Keyboard) obj;\r\n        return color.equals(keyboard.color);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Keyboard> list = new ArrayList<>();\r\n        list.add(new Keyboard(\"Black\"));\r\n        list.add(new Keyboard(\"Blue\"));\r\n        System.out.println(list.contains(new Keyboard(\"Blue\")));\r\n    }\r\n}","answers":["true","false","Blue"],"correct_answer":"true","explanation":"The rule whether an object is contained in the list is specified in the <code>equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match the color of list's element.\r\n<br><br>\r\n\"Blue\" is a color that's contained in the list thus \"true\" is printed."},{"id":1768272885,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n    public double price;\r\n    public Smartphone(double priceVal) {\r\n        price = priceVal;\r\n    }\r\n    public boolean Equals(Smartphone smartphone) {\r\n        return price == smartphone.price;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Smartphone> list = new ArrayList<>();\r\n        list.add(new Smartphone(300));\r\n        list.add(new Smartphone(400));\r\n        System.out.println(list.contains(new Smartphone(500)));\r\n    }\r\n}","answers":["true","false","500"],"correct_answer":"false","explanation":"The rule whether an object is contained in the list is specified in the <code>equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match the price of list's element.\r\n<br><br>\r\n\"500\" is a price that's not contained in the list thus \"false\" is printed."},{"id":571134898,"question":"What's the output of the code snippet?","code":"class Car {\r\n    public String make;\r\n    public String model;\r\n    public Car(String makeVal, String modelVal) {\r\n        make = makeVal;\r\n        model = modelVal;\r\n    }\r\n    public boolean equals(Object obj) {\r\n        Car car = (Car) obj;\r\n        return make.equals(car.make) && model.equals(car.model);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Car> list = new ArrayList<>();\r\n        list.add(new Car(\"Volkswagen\", \"Golf\"));\r\n        list.add(new Car(\"Volkswagen\", \"Passat\"));\r\n        System.out.print(list.contains(new Car(\"Volkswagen\", \"Polo\")));\r\n        System.out.print(\" \");\r\n        System.out.print(list.contains(new Car(\"Volkswagen\", \"Golf\")));\r\n    }\r\n}","answers":["true true","false true","true false"],"correct_answer":"false true","explanation":"The rule whether an object is contained in the list is specified in the <code>equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match both make and model of list's element.\r\n<br><br>\r\n\"Volkswagen\" - \"Polo\" is a combination of make and model that is not contained in the list thus \"false\" is printed.\r\n<br><br>\r\n\"Volkswagen\" - \"Golf\" is a combination of make and model that is contained in the list thus \"true\" is printed."},{"id":1690301299,"question":"What's the output of the code snippet?","code":"class Processor {\r\n    public String manufacturer;\r\n    public String model;\r\n    public Processor(String manufacturerVal, String modelVal) {\r\n        manufacturer = manufacturerVal;\r\n        model = modelVal;\r\n    }\r\n    public boolean equals(Object obj) {\r\n        Processor processor = (Processor) obj;\r\n        return manufacturer.equals(processor.manufacturer);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Processor> list = new ArrayList<>();\r\n        list.add(new Processor(\"Intel\", \"I3\"));\r\n        list.add(new Processor(\"Intel\", \"I5\"));\r\n        list.add(new Processor(\"AMD\", \"Ryzen\"));\r\n\r\n        System.out.print(list.contains(new Processor(\"AMD\", \"Ryzen\")));\r\n        System.out.print(\" \");\r\n        System.out.print(list.contains(new Processor(\"Intel\", \"I7\")));\r\n    }\r\n}","answers":["true true","true false","false true"],"correct_answer":"true true","explanation":"The rule whether an object is contained in the list is specified in the <code>equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match the manufacturer of list's element.\r\n<br><br>\r\nBoth \"Intel\" and \"AMD\" are manufacturers that are contained in the list thus \"true\" is printed."},{"id":1567363888,"question":"What's the output of the code snippet?","code":"class Person {\r\n    public String name;\r\n    public Person(String nameVal) {\r\n        name = nameVal;\r\n    }\r\n    public boolean equals(Object obj) {\r\n        return true;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Person person1 = new Person(\"James\");\r\n        List<Person> list = new ArrayList<>();\r\n        list.add(person1);\r\n\r\n        Person person2 = new Person(\"Smith\");\r\n        System.out.println(list.contains(person2));\r\n    }\r\n}","answers":["true","false","Smith"],"correct_answer":"true","explanation":"The rule whether an object is contained in the list is specified in the <code>equals<\/code> method.\r\n<br><br>\r\nThe <code>equals<\/code> method returns true.\r\n<br><br>\r\nFor that reason the <code>contains<\/code> method always returns true no matter the passed argument."}],"puzzles":[{"id":1611295751,"text":"Fill the missing words to match the output.","code":"class Product {\r\n    public double price;\r\n    public String name;\r\n    public Product(double priceVal) {\r\n        price = priceVal;\r\n        name = \"Unknown\";\r\n    }\r\n    public boolean equals(Object obj) {\r\n        Product product = (Product)obj;\r\n        return fillword == fillword.fillword;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Product> list = new ArrayList<>();\r\n        list.add(new Product(15));\r\n        list.add(new Product(50));\r\n\r\n        Product prod = new Product(50);\r\n        System.out.print(list.contains(prod));\r\n    }\r\n}","result":"true","words":{"operators":[],"values":[],"variables_constants":[],"others":["price","price","name","name","product"]},"correct_patterns":[["price","product","price"]]},{"id":1522438084,"text":"Fill the missing words to match the output.","code":"class Mouse {\r\n    public String make;\r\n    public double price;\r\n    public Mouse(String make, double price) {\r\n        this.make = make;\r\n        this.price = price;\r\n    }\r\n    public boolean equals(Object obj) {\r\n        Mouse mouse = (Mouse)obj;\r\n        return make.equals(mouse.make) fillword\r\n        price == mouse.price;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Mouse> list = new ArrayList<>();\r\n        Mouse obj1 = new Mouse(\"hp\", 15);\r\n        Mouse obj2 = new Mouse(\"hp\", 20);\r\n\r\n        list.add(new Mouse(\"ASUS\", 15));\r\n        list.add(new Mouse(\"hp\", 20));\r\n\r\n        System.out.print(list.fillword(obj1) + \" \");\r\n        System.out.print(list.fillword(obj2));\r\n    }\r\n}","result":"false true","words":{"operators":["&&","||"],"values":[],"variables_constants":[],"others":["contains","contains","has","has"]},"correct_patterns":[["&&","contains","contains"]]},{"id":325300101,"text":"Fill the missing words to match the output.","code":"class HeadPhones {\r\n    public String make;\r\n    public double price;\r\n    public HeadPhones(String make, double price) {\r\n        this.make = make;\r\n        this.price = price;\r\n    }\r\n    public boolean equals(Object obj) {\r\n        HeadPhones hp = (HeadPhones)obj;\r\n        return fillword.equals(hp.fillword) fillword\r\n        fillword == hp.fillword;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<HeadPhones> list = new ArrayList<>();\r\n        HeadPhones obj1 = new HeadPhones(\"X\", 75);\r\n        HeadPhones obj2 = new HeadPhones(\"Z\", 80);\r\n\r\n        list.add(new HeadPhones(\"X\", 75));\r\n        list.add(new HeadPhones(\"Z\", 50));\r\n\r\n        System.out.print(list.contains(obj1) + \" \");\r\n        System.out.print(list.contains(obj2));\r\n    }\r\n}","result":"true false","words":{"operators":["&&","||"],"values":[],"variables_constants":[],"others":["make","make","price","price"]},"correct_patterns":[["make","make","&&","price","price"]]}]},{"id":1292001705,"name":"Try Catch","tests":[{"id":370225905,"question":"What's the output of the code snippet?","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        System.out.print(\"a \");\r\n        try {\r\n            System.out.print(\"b \");\r\n        } catch(Exception ex) {\r\n            System.out.print(\"c \");\r\n        }\r\n    }\r\n}","answers":["a b","b c","a b c"],"correct_answer":"a b","explanation":"No exception is thrown so the catch  block is not executed and \"c\" is not printed."},{"id":1220956862,"question":"What's the output of the code snippet?","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            System.out.print(\"1 \");\r\n            throw new Exception();\r\n        } catch(Exception ex) {\r\n            System.out.print(\"2 \");\r\n        }\r\n        System.out.print(\"3\");\r\n    }\r\n}","answers":["1 2","2","1 2 3"],"correct_answer":"1 2 3","explanation":"Since exception is thrown the catch block is executed thus \"2\" is printed."},{"id":23818879,"question":"What's the output of the code snippet?","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            System.out.print(\"1 \");\r\n            throw new Exception(\"2 \");\r\n        }\r\n        catch (Exception ex) {\r\n            System.out.print(ex.getMessage());\r\n            System.out.print(\"3\");\r\n        }\r\n    }\r\n}","answers":["1 2","2 3","1 2 3"],"correct_answer":"1 2 3","explanation":"Since exception is thrown the catch block executes.\r\n<br><br>\r\n<code>ex.getMessage()<\/code> is the message that's passed to the thrown exception - \"2\"."},{"id":2048889404,"question":"What's the output of the code snippet?","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            System.out.print(\"1 \");\r\n            double num = 5 \/ 0;\r\n            System.out.print(\"2 \");\r\n        }\r\n        catch (Exception ex) {\r\n            System.out.print(\"3 \");\r\n        }\r\n    }\r\n}","answers":["1 2","1 3","1 2 3"],"correct_answer":"1 3","explanation":"<code>5 \/ 0<\/code> throws exception thus the catch block is executed.\r\n<br><br>\r\nWhen exception is thrown the try block execution is terminated and the catch block runs.\r\n<br><br>\r\nFor that reason \"2\" is not printed."},{"id":1020050941,"question":"What's the output of the code snippet?","code":"public class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            double num = 21 \/ 0;\r\n            System.out.print(\"1 \");\r\n        }\r\n        catch (Exception ex) {\r\n            System.out.print(ex.getMessage());\r\n            System.out.print(\" 2\");\r\n        }\r\n    }\r\n}","answers":["\/ by zero 2","1 2","1 \/ by zero 2"],"correct_answer":"\/ by zero 2","explanation":"<code>21 \/ 0<\/code> throws exception thus the catch block is executed.\r\n<br><br>\r\nWhen exception is thrown the try block execution is terminated and the catch block runs.\r\n<br><br>\r\nFor that reason \"1\" is not printed."}],"puzzles":[{"id":1410387778,"text":"Fill the missing words to match the output.","code":"try {\r\n    throw new Exception(fillword);\r\n} catch(Exception ex) {\r\n    System.out.print(ex.getMessage());\r\n    System.out.print(fillword);\r\n}\r\nSystem.out.print(fillword);","result":"A B C","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"A \"","\"B \"","\"C\"","\"D \""]},"correct_patterns":[["\"A \"","\"B \"","\"C\""]]},{"id":247852803,"text":"Fill the missing words to match the output.","code":"try {\r\n    System.out.print(fillword);\r\n    throw new Exception(fillword);\r\n} catch(Exception ex) {\r\n    System.out.print(fillword);\r\n    System.out.print(fillword);\r\n}","result":"1 2 3","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"1 \"","\"2 \"","\"3 \"","ex.getMessage()"]},"correct_patterns":[["\"1 \"","\"2 \"","ex.getMessage()","\"3 \""]]},{"id":1198132928,"text":"Fill the missing words to match the output.","code":"class Calculator {\r\n    public double divide(double a, double b) throws Exception {\r\n        if (b == 0) {\r\n            throw new Exception(\"Cannot divide by zero\");\r\n        }\r\n        return a \/ b;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            Calculator calc = new Calculator();\r\n            calc.divide(fillword, fillword);\r\n        } catch(Exception ex) {\r\n            System.out.print(fillword);\r\n        }\r\n    }\r\n}","result":"Cannot divide by zero","words":{"operators":[],"values":["0","3"],"variables_constants":[],"others":["ex.getMessage()","ex"]},"correct_patterns":[["3","0","ex.getMessage()"]]}]}]},"projects":[{"id":972143943,"name":"Rectangle Calculator","description":"<p>Create a rectangle calculator on your desktop \/ laptop.<\/p>\r\n\r\n<p>The program must read two parameters:<\/p>\r\n<ul>\r\n    <li><b>rectangle's width<\/b> - positive floating point number.<\/li>\r\n    <li><b>rectangle's height<\/b> - another positive floating point number.<\/li>\r\n<\/ul>\r\n\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula: 2 x (width + height).<\/li>\r\n    <li><b>Area<\/b>. It's calculated via the formula: width x height.<\/li>\r\n    <li ><b>Diagonal<\/b>. It's calculated via the formula:<img src=\"imgs\/projects\/diagonal-formula.png\" style=\"\r\n    height: 45px;\r\n    display: block;\"><\/li>\r\n<\/ul>\r\n\r\n<p>Hint: You may use the function Math.sqrt to calculate square root and Math.pow to calculate power for the diagonal formula.<\/p>\r\n\r\n<p>Test your code using the inputs and outputs specified below:<\/p>","inputs":["3<br>4","2.2<br>3.5","6<br>8"],"outputs":["Perimeter = 14.0 <br> Area = 12.0 <br> Diagonal = 5.0","Perimeter = 11.4 <br> Area = 7.700000000000001 <br> Diagonal = 4.1340053217188775","Perimeter = 28.0 <br> Area = 48.0 <br> Diagonal = 10.0"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\nimport java.lang.Math; \/\/ So square root and power are used.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input and cast it to double:\r\n        Scanner scanner = new Scanner(System.in);\r\n        double width = Double.parseDouble(scanner.next());\r\n        double height = Double.parseDouble(scanner.next());\r\n\r\n        \/\/ Basic calculations:\r\n        double perimeter = 2 * (width + height);\r\n        double area = width * height;\r\n\r\n        \/\/ Use Math.sqrt to calculate square root and Math.pow to calculate power.\r\n        double diagonal = Math.sqrt( Math.pow(width, 2) + Math.pow(height, 2) );\r\n\r\n        \/\/ Print calculations:\r\n        System.out.println(\"Perimeter = \" + perimeter);\r\n        System.out.println(\"Area = \" + area);\r\n        System.out.println(\"Diagonal = \" + diagonal);\r\n    }\r\n}","stars":1,"requirements":["Calculations"]},{"id":1923538180,"name":"Digitized Time","description":"<p>Many timers show time in the format mm:ss (minutes, seconds) but keep track only on the seconds. <p>\r\n<p>Write a program on your desktop \/ laptop which reads a seconds parameter (positive integer that's between 0 and 3600) and prints the time in the format mm:ss.<\/p>\r\n\r\n<p>For example 130 seconds is equivalent to 2 minute and 10 seconds (2 * 60 + 10 = 130) which is formated as \"02:10\".<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["30","120","65","695","1","3599"],"outputs":["00:30","02:00","01:05","11:35","00:01","59:59"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input and cast it to integer:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int totalSeconds = Integer.parseInt(scanner.next()); \/\/ Read input and convert it to int.\r\n\r\n        int minutes = totalSeconds \/ 60; \/\/ If totalSeconds \/ 60 has value of 2.90 it's parsed to int as 2.\r\n        int seconds = totalSeconds - minutes * 60; \/\/ Extract seconds from minutes and total seconds.\r\n\r\n        String output = \"\";\r\n        if (minutes < 10)\r\n        {\r\n            output += \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n        }\r\n        output += minutes + \":\";\r\n\r\n        if (seconds < 10)\r\n        {\r\n            output += \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n        }\r\n        output += seconds;\r\n\r\n        System.out.println(output);\r\n    }\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":726400197,"name":"Price Management","description":"<p>Penny has groceries stores in multiple Italian cities. Some of the cities are more expensive than others so the price is different for every city.<\/p>\r\n<p>Help Penny to manage her groceries prices by creating a program on your desktop \/ laptop which accepts two arguments:<\/p>\r\n<ul>\r\n     <li> <b>City<\/b> - string which has one of three values - \"Milan\", \"Rome\", \"Florence\".<\/li>\r\n     <li> <b>Fruit<\/b> - string which has one of three values - \"Orange\", \"Apple\", \"Cherry\".<\/li>\r\n<\/ul>\r\n<p>The program must print the cost of the fruit per kilogram in the specified city.<\/p>\r\n\r\n<p>The prices for fruits per kilogram are displayed in the following table:<\/p>\r\n\r\n<table>\r\n    <thead>\r\n           <tr>\r\n                 <td><\/td>\r\n                 <td>Milan<\/td>\r\n                 <td>Rome<\/td>\r\n                 <td>Florence<\/td>\r\n           <\/tr>\r\n    <\/thead>\r\n    <tbody>\r\n           <tr>\r\n                  <td>Orange<\/td>\r\n                  <td>2.56<\/td>\r\n                  <td>3.20<\/td>\r\n                  <td>4.23<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Apple<\/td>\r\n                  <td>2.86<\/td>\r\n                  <td>3.60<\/td>\r\n                  <td>4.56<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Cherry<\/td>\r\n                  <td>2.00<\/td>\r\n                  <td>2.80<\/td>\r\n                  <td>3.64<\/td>\r\n           <\/tr>\r\n  <\/tbody>\r\n<\/table>\r\n\r\n<p>For example the price per kilogram for orange in Rome is 3.20 and the price per kilogram for cherry in Florence is 3.64.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["Milan<br>Orange","Florence<br>Orange","Florence<br>Cherry","Rome<br>Cherry"],"outputs":["2.56","4.23","3.64","2.80"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        String city = scanner.next();\r\n        String fruit = scanner.next();\r\n\r\n        if (city.equals(\"Milan\")) {\r\n\r\n            if (fruit.equals(\"Orange\")) {\r\n                System.out.println(\"2.56\");\r\n            }\r\n            else if (fruit.equals(\"Apple\")) {\r\n                System.out.println(\"2.86\");\r\n            }\r\n            else if (fruit.equals(\"Cherry\")) {\r\n                System.out.println(\"2.00\");\r\n            }\r\n        }\r\n        else if (city.equals(\"Rome\")) {\r\n\r\n            if (fruit.equals(\"Orange\")) {\r\n                System.out.println(\"3.20\");\r\n            }\r\n            else if (fruit.equals(\"Apple\")) {\r\n                System.out.println(\"3.60\");\r\n            }\r\n            else if (fruit.equals(\"Cherry\")) {\r\n                System.out.println(\"2.80\");\r\n            }\r\n        }\r\n        else if (city.equals(\"Florence\")) {\r\n            if (fruit.equals(\"Orange\")) {\r\n                System.out.println(\"4.23\");\r\n            }\r\n            else if (fruit.equals(\"Apple\")) {\r\n                System.out.println(\"4.56\");\r\n            }\r\n            else if (fruit.equals(\"Cherry\")) {\r\n                System.out.println(\"3.64\");\r\n            }\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Condition Statements"]},{"id":1844976770,"name":"Currency Converter","description":"<p>Write a currency converter on your desktop \/ laptop which accepts 3 arguments:<\/p>\r\n<ul>\r\n    <li><b>Amount<\/b> - positive floating point number<\/li>\r\n    <li><b>Input currency<\/b> - string representing currency<\/li>\r\n    <li><b>Output currency<\/b> - another string representing currency<\/li>\r\n<\/ul>\r\n\r\n<p>The supported currencies are: USD, EUR and GBP. For the sake of simplicity it's assumed that their exchange rate is always the following:<\/p>\r\n\r\n<table class=\"table\">\r\n<tbody>\r\n<tr>\r\n\t<td rowspan=\"2\">1 USD<\/td>\r\n\t<td>0.84 EUR<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>&nbsp;0.72&nbsp;GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 EUR<\/td>\r\n\t<td>1.18 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>0.86 GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 GBP<\/td>\r\n\t<td>1.38 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>1.16 EUR<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>For example 2 EUR are 2.36 USD (2 * 1.18 = 2.36).<\/p>\r\n<p>Also the output needs to be rounded up to two digits after decimal point.<\/p>\r\n\r\n<p>Make sure it's printed \"Invalid Input\" if an unsupported currency is entered.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["2<br>EUR<br>GBP","1.12<br>USD<br>EUR","2.54<br>GBP<br>EUR","3.56<br>ABC<br>EUR","3.56<br>USD<br>ABC"],"outputs":["1.72","0.94","2.95","Invalid input.","Invalid input."],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input and cast it to double:\r\n        Scanner scanner = new Scanner(System.in);\r\n        double amount = Double.parseDouble(scanner.next());\r\n\r\n        String currencyFrom = scanner.next();\r\n        String currencyTo = scanner.next();\r\n\r\n        double multiplier = 0;\r\n\r\n        if (currencyFrom.equals(\"USD\")) {\r\n\r\n            if (currencyTo.equals(\"EUR\")) {\r\n                multiplier = 0.84;\r\n            }\r\n            else if (currencyTo.equals(\"GBP\")) {\r\n                multiplier = 0.72;\r\n            }\r\n        }\r\n        else if (currencyFrom.equals(\"EUR\")) {\r\n\r\n            if (currencyTo.equals(\"USD\")) {\r\n                multiplier = 1.18;\r\n            }\r\n            else if (currencyTo.equals(\"GBP\")) {\r\n                multiplier = 0.86;\r\n            }\r\n        }\r\n        else if (currencyFrom.equals(\"GBP\")) {\r\n\r\n            if (currencyTo.equals(\"USD\")) {\r\n                multiplier = 1.38;\r\n            }\r\n            else if (currencyTo.equals(\"EUR\")) {\r\n                multiplier = 1.16;\r\n            }\r\n        }\r\n\r\n        if (multiplier == 0) {\r\n            \/\/ Neither of the checks has modified it's value.\r\n            \/\/ So inform user about invalid input.\r\n            System.out.print(\"Invalid input.\");\r\n        }\r\n        else\r\n        {\r\n            \/\/ Valid Input\r\n            \/\/ Calculate and round output up to two digits after decimal point.\r\n\r\n            double output = amount * multiplier;\r\n            System.out.print(String.format(\"%.2f\", output));\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":648887363,"name":"Multiplication Table","description":"<p>Write a program on your desktop \/ laptop that prints multiplication table.<\/p>\r\n<p>The program must accept 1 argument:<\/p>\r\n<ul>\r\n    <li><b>number<\/b> - positive integer.<\/li>\r\n<\/ul>\r\n<p>The multiplication table must contain information about the multiplications for the input number and the numbers from 1 to 10.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["3","5","0"],"outputs":["3 x 3 = 3 <br> 3 x 2 = 6 <br> 3 x 3 = 9 <br> 3 x 4 = 12 <br> 3 x 5 = 15 <br> 3 x 6 = 18 <br> 3 x 7 = 21 <br> 3 x 8 = 24 <br> 3 x 9 = 27 <br> 3 x 10 = 30","5 x 1 = 5 <br> 5 x 2 = 10 <br> 5 x 3 = 15 <br> 5 x 4 = 20 <br> 5 x 5 = 25 <br> 5 x 6 = 30 <br> 5 x 7 = 35 <br> 5 x 8 = 40 <br> 5 x 9 = 45 <br> 5 x 10 = 50","0 x 1 = 0 <br> 0 x 2 = 0 <br> 0 x 3 = 0 <br> 0 x 4 = 0 <br> 0 x 5 = 0 <br> 0 x 6 = 0 <br> 0 x 7 = 0 <br> 0 x 8 = 0 <br> 0 x 9 = 0 <br> 0 x 10 = 0"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input and cast it to double:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int number = Integer.parseInt(scanner.next());\r\n\r\n        for(int i = 1; i <= 10; i++)\r\n        {\r\n            System.out.println(number + \" x \" + i + \" = \" + number * i);\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Calculations","Loops"]},{"id":525491200,"name":"Play Button","description":"<p>Write a program on your desktop \/ laptop that prints a play button made of stars.<\/p>\r\n\r\n<p>The program must accept one argument:<\/p>\r\n<ul>\r\n    <li><b>rows<\/b> - positive integer<\/li>\r\n<\/ul>\r\n<p>If the input number is even (like 0, 2, 4, 6 etc...) or negative print the message \"Invalid input.\".<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["1","3","5","7","2","0","-1"],"outputs":["<div style=\"letter-spacing: 5px;\">*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>****<br>***<br>**<br>*<\/div>","Invalid input.","Invalid input.","Invalid input."],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input and cast it to double:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        \/\/ Read user's input:\r\n        int number = Integer.parseInt(scanner.next());\r\n\r\n        if(number % 2 == 0 || number <= 0) {\r\n            \/\/ Inform user that input is negative.\r\n            System.out.println(\"Invalid input.\");\r\n\r\n            return; \/\/ Terminate the program.\r\n        }\r\n\r\n        \/\/ Print the upper part:\r\n        for(int i = 1; i <= number \/ 2; i++)\r\n        {\r\n            \/\/ repeat '*' i times.\r\n            for(int j = 1; j <= i; j++) {\r\n                System.out.print(\"*\");\r\n            }\r\n\r\n            System.out.println(); \/\/ Print new row.\r\n        }\r\n\r\n        \/\/ Print the middle row:\r\n        for(int i = 1; i <= number \/ 2 + 1; i++) {\r\n            System.out.print(\"*\");\r\n        }\r\n\r\n        System.out.println(); \/\/ Print new row.\r\n\r\n        \/\/ Print the below part:\r\n        for (int i = number \/ 2; i >= 1; i--)\r\n        {\r\n            \/\/ repeat '*' i times.\r\n            for(int j = 1; j <= i; j++) {\r\n                System.out.print(\"*\");\r\n            }\r\n\r\n            System.out.println(); \/\/ Print new row.\r\n        }\r\n    }\r\n}","stars":3,"requirements":["Loops"]},{"id":1342668737,"name":"Digits Counter","description":"<p>Write a program on your desktop \/ laptop which prints the occurrences of digits in input number.<\/p>\r\n<p>The program must read a positive integer.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details:<\/p>","inputs":["112266863","15968929","01230"],"outputs":["0 -> 0 <br> 1 -> 2 <br> 2 -> 2 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 3 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 0","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 0 <br> 4 -> 0 <br> 5 -> 1 <br> 6 -> 1 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 3","0 -> 1 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 0 <br> 7 -> 0 <br> 8 -> 0 <br> 9 -> 0"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        \/\/ Integer parsing removes the leading 0s.\r\n        \/\/ For example 00123 is parsed as 123.\r\n        int number = Integer.parseInt(scanner.next());\r\n        String inputNumeric = number + \"\"; \/\/ cast it to string.\r\n\r\n        for (int i = 0; i <= 9; i++) \/\/ For numbers in range [0, 9].\r\n        {\r\n            int occurrences = 0;\r\n\r\n            for (int j = 0; j < inputNumeric.length(); j++) \/\/ For each digit of the input number.\r\n            {\r\n                char digit = inputNumeric.charAt(j);\r\n\r\n                \/\/ Converting both i and digit to string allows for easier comparison.\r\n                String intToString = i + \"\";\r\n                String digitToString = digit + \"\";\r\n\r\n                if (intToString.equals(digitToString)) {\r\n                    occurrences++;\r\n                }\r\n            }\r\n\r\n            System.out.println(i + \" -> \" + occurrences);\r\n        }\r\n    }\r\n}","stars":3,"requirements":["Loops"]},{"id":179019662,"name":"Chess Tournament","description":"<p>Write a program on your desktop \/ laptop which prints data about the ages of the participant in chess tournament.<\/p>\r\n<p>The program should read the following parameters:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - positive integer representing the count of the participant.<\/li>\r\n    <li><b>ages<\/b> - positive integers, each typed on a new line, representing the ages of the participant.<\/li>\r\n<\/ul>\r\n\r\nThe output of the program must provide data about:\r\n<ul>\r\n    <li><b>Minimum age<\/b> - the age of the youngest participant.<\/li>\r\n    <li><b>Maximum age<\/b> - the age of the oldest participant.<\/li>\r\n    <li><b>Average age<\/b><\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: you may use array for storing the participants ages.<\/p>","inputs":["3<br> 19<br> 21<br>20","2<br>18<br>19","3<br>15<br>15<br>18"],"outputs":["Min: 19 <br> Max: 21 <br> Average: 20","Min: 18 <br> Max: 19 <br> Average: 18","Min: 15 <br> Max: 18 <br> Average: 16"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int count = Integer.parseInt(scanner.next());\r\n\r\n        \/\/ Create array and set values to it's elements:\r\n        int[] ages = new int[count];\r\n\r\n        for(int i = 0; i < count; i++)\r\n        {\r\n            ages[i] = Integer.parseInt(scanner.next());\r\n        }\r\n\r\n        \/\/ Loop array and find output data:\r\n        int minAge = ages[0];\r\n        int maxAge = ages[0];\r\n        int sum = 0; \/\/ Used to calculate average age.\r\n\r\n        for (int age : ages)\r\n        {\r\n            if(age < minAge)\r\n            {\r\n                minAge = age;\r\n            }\r\n\r\n            if(age > maxAge)\r\n            {\r\n                maxAge = age;\r\n            }\r\n\r\n            sum += age;\r\n        }\r\n\r\n        int averageAge = sum \/ count;\r\n\r\n        System.out.println(\"Min: \" + minAge);\r\n        System.out.println(\"Max: \" + maxAge);\r\n        System.out.println(\"Average: \" + averageAge);\r\n    }\r\n}","stars":3,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":1129889615,"name":"Gaming Shop","description":"<p>Steve has a gaming shop and needs your help with inserting games and recording sells.<\/p>\r\n\r\n<p>Write a program on your desktop \/ laptop which reads commands.<\/p>\r\n<p>There are 3 types of commands:<\/p>\r\n<ul>\r\n    <li>\r\n        <b>Product Insertion<\/b> - it's in the format: <br>\r\n          \"insert-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It creates new game with the specified quantity or increases the quantity if the game is already added.\r\n    <\/li>\r\n    <li>\r\n        <b>Product Sell<\/b> - it's in the format: <br>\r\n          \"sell-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It decreases the quantity of the specified game. You can assume that the sold quantity will always be less or equal to the available one.\r\n    <\/li>\r\n    <li>\r\n        <b>Terminate program<\/b> - if a command with value \"end\" is entered, then a report of available games sorted alphabetically and their quantity is printed. Afterwards the program is terminated.\r\n    <\/li>\r\n<\/ul> \r\n\r\n<p>Notice that sold out games (with quantity of 0) must not be included in the end report.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: since game names are considered unique, the best practice would be to use HashMap for storing data with key - the game name and value - it's quantity.<\/p>","inputs":["insert-Minecraft-5<br>insert-Rocket League-10<br>end","insert-Counter Strike-10<br>sell-Counter Strike-3<br>end","insert-Fortnite-10<br>insert-pubg-10<br>sell-Fortnite-10<br>sell-pubg-7<br>end"],"outputs":["Rocket League: 10<br>Minecraft: 5","Counter Strike: 7","pubg: 3"],"solution":"import java.util.HashMap;\r\nimport java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        HashMap<String, Integer> gamesData = new HashMap<>();\r\n\r\n        while(true) \/\/ Infinite loop which repeats until it's forcefully stopped via the break keyword.\r\n        {\r\n            String command = scanner.nextLine();\r\n\r\n            \/\/ Get command components by spliting.\r\n            \/\/ Example: if command has value \"insert-game-15\" then parameters would be array with 3 elements - \"insert\", \"game\" and \"15\"\r\n            String[] parameters = command.split(\"-\");\r\n\r\n            String commandName = parameters[0];\r\n\r\n            if(commandName.equals(\"end\"))\r\n            {\r\n                break; \/\/ Forcefully terminate the loop and proceed with the report.\r\n            }\r\n\r\n            String gameName = parameters[1];\r\n            int quantity = Integer.parseInt(parameters[2]);\r\n\r\n            if (commandName.equals(\"insert\"))\r\n            {\r\n                \/\/ The insert command is used for:\r\n                \/\/ - Adding new game to the store with the specified quantity.\r\n                \/\/ - Increasing quantity to already added game.\r\n                \/\/ Both cases need to be handled separately.\r\n\r\n                if (gamesData.containsKey(gameName))\r\n                {\r\n                    \/\/ Increase quantity to already added game\r\n                    gamesData.put(gameName, gamesData.get(gameName) + quantity);\r\n                }\r\n                else\r\n                {\r\n                    \/\/ Adding new game to the store with the specified quantity.\r\n                    gamesData.put(gameName, quantity);\r\n                }\r\n            }\r\n            else if(commandName.equals(\"sell\")) \/\/ Handle selling:\r\n            {\r\n                \/\/ Decrease quantity when game is sold.\r\n                gamesData.put(gameName, gamesData.get(gameName) - quantity);\r\n\r\n                if(gamesData.get(gameName) == 0)\r\n                {\r\n                    \/\/ Don't store data for games that have been sold out.\r\n                    gamesData.remove(gameName);\r\n                }\r\n            }\r\n        }\r\n\r\n        \/\/ Print report:\r\n        for (String name : gamesData.keySet()) {\r\n            System.out.println(name + \": \" + gamesData.get(name));\r\n        }\r\n    }\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":68017932,"name":"Tic Tac Toe","description":"<p>Write a program on your desktop \/ laptop which checks who wins on in tic tac toe match.<\/p>\r\n<p>If you don't know how to play tic tac toe, you can learn the rules from\r\n<a href=\"https:\/\/www.wikihow.com\/Play-Tic-Tac-Toe\">here<\/a>.<\/p>\r\n\r\n<p>The input parameters of the program are 3. Each represents a line of the tic tac toe board.<\/p>\r\n<p>The program prints one of the following:<\/p>\r\n<ul>\r\n    <li><b>\"X wins\"<\/b> if X wins<\/li>\r\n    <li><b>\"O wins\"<\/b> if O wins<\/li>\r\n    <li><b>\"Tie\"<\/b> if neither of the players wins.<\/li>\r\n<\/ul>\r\n<p>You can assume that the input will always represent a legit tic tac toe endgame so you don't have to validate it.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: the best data structure that represents a tic tac toe board would be matrix with 3 rows and 3 columns.<\/p>","inputs":["ooo<br>xx-<br>---","xo-<br>oxo<br>x-x","xox<br>oox<br>xxo"],"outputs":["O wins","X wins","Tie"],"solution":"import java.util.Scanner; \/\/ Used for reading data.\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        char[][] board = new char[3][3];\r\n\r\n        for(int i = 0; i < 3; i++)\r\n        {\r\n            String line = scanner.nextLine();\r\n\r\n            board[i][0] = line.charAt(0);\r\n            board[i][1] = line.charAt(1);\r\n            board[i][2] = line.charAt(2);\r\n        }\r\n\r\n        if(winsTicTacToe(board, 'x'))\r\n        {\r\n            System.out.println(\"X wins\");\r\n        }\r\n        else if (winsTicTacToe(board, 'o'))\r\n        {\r\n            System.out.println(\"O wins\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Tie\");\r\n        }\r\n    }\r\n\r\n    public static boolean winsTicTacToe(char[][] board, char symbol)\r\n    {\r\n        for(int i = 0; i < 3; i++)\r\n        {\r\n            if ((board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol) ||  \/\/ If line is filled only with x or o.\r\n            board[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol) \/\/ If column is filled only with x or o.\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        \/\/ Check if one of the diagonals is filled only with x or o\r\n        if(board[1][1] == symbol &&\r\n            ((board[0][0] == symbol && board[2][2] == symbol) ||\r\n            (board[0][2] == symbol && board[2][0] == symbol))\r\n            )\r\n        {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","stars":4,"requirements":["Condition Statements","Data Structures","Functions"]},{"id":2125659853,"name":"Car Dealership","description":"<p>Write a program on your desktop \/ laptop which reads data for cars and print data only for those which make is the same as the specified one.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of cars which will be entered.<\/li>\r\n    <li><b>car's data<\/b> - the data for a single car in the format:<br>\r\n&lt;make&gt; &lt;model&gt; &lt;hp&gt;  &lt;price&gt; .<\/li>\r\n    <li><b>filter make<\/b> - string.<\/li>\r\n<\/ul>\r\n<p>The data for each car is entered on a separate line.<\/p>\r\n<p>The car dealership offers a 10 % discount for people who've bought a car from the same warehouse in the last 6 years. That discount must be included in the output. Also the prices of the cars must be printed as numbers with 2 digits after the decimal point.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Car<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to calculate discount<\/li>\r\n    <li>toString method<\/li>\r\n    <li>Collection for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000<br>Volkswagen<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000.00 (22500 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Toyotta Corolla 120 23000<br>Ford Fiesta 80 18000<br>Toyotta Aygo 75 16000<br>Toyotta<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Toyotta Corolla 120 23000.00 (20700.00 for loyal customers)<br>Toyotta Aygo 75 16000.00 (14400.00 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"import java.util.ArrayList; \/\/ Needed so ArrayList can be used\r\nimport java.util.Scanner; \/\/ Used for reading data.\r\n\r\nclass Car\r\n{\r\n    \/\/ Private members accessed via getters and setters:\r\n    private String make;\r\n    private String model;\r\n    private int hp;\r\n    private double price;\r\n\r\n    public String getMake()\r\n    {\r\n        return make;\r\n    }\r\n\r\n    public void setMake(String make)\r\n    {\r\n        this.make = make;\r\n    }\r\n\r\n    public String getModel()\r\n    {\r\n        return model;\r\n    }\r\n\r\n    public void setModel(String model)\r\n    {\r\n        this.model = model;\r\n    }\r\n\r\n    public int getHp()\r\n    {\r\n        return hp;\r\n    }\r\n\r\n    public void setHp(int hp)\r\n    {\r\n        this.hp = hp;\r\n    }\r\n\r\n    public double getPrice()\r\n    {\r\n        return price;\r\n    }\r\n\r\n    public void setPrice(double price)\r\n    {\r\n        this.price = price;\r\n    }\r\n\r\n    \/\/ Parameterized constructor for creating objects:\r\n    public Car(String make, String model, int hp, double price)\r\n    {\r\n        this.setMake(make);\r\n        this.setModel(model);\r\n        this.setHp(hp);\r\n        this.setPrice(price);\r\n    }\r\n\r\n    public double calculateDiscount()\r\n    {\r\n        \/\/ Calculate price with 10 % discount (90 % of the ordinary price):\r\n        return price * 9 \/ 10;\r\n    }\r\n\r\n    \/\/ String representation of the class object:\r\n    public String toString()\r\n    {\r\n        return this.getMake() + \" \" + this.getModel() + \" \" + this.getHp() + \" \" +\r\n            String.format(\"%.2f\", this.getPrice()) + \/\/ Rounds number to 2 digits after decimal point\r\n            \" (\" + String.format(\"%.2f\", this.calculateDiscount())+ \" for loyal customers)\";\r\n    }\r\n}\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int count = Integer.parseInt(scanner.nextLine());\r\n\r\n        ArrayList<Car> cars = new ArrayList<>();\r\n\r\n        for (int i = 0; i < count; i++)\r\n        {\r\n            String[] carData = scanner.nextLine().split(\" \");\r\n\r\n            String make = carData[0];\r\n            String model = carData[1];\r\n            int hp = Integer.parseInt(carData[2]);\r\n            double price = Double.parseDouble(carData[3]);\r\n\r\n            \/\/ Create object based on the input data and add it to list\r\n            Car obj = new Car(make, model, hp, price);\r\n            cars.add(obj);\r\n        }\r\n\r\n        String filterMake = scanner.nextLine();\r\n\r\n        for (Car car : cars)\r\n        {\r\n            \/\/ Filter cars by make:\r\n            if (car.getMake().equals(filterMake))\r\n            {\r\n                \/\/ Print the string representations specified with the ToString method:\r\n                System.out.println(car);\r\n            }\r\n        }\r\n    }\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures","Functions","OOP"]},{"id":929504906,"name":"Students Scores","description":"<p>Write a program on your desktop \/ laptop which reads data for students scores on exam and prints it back sorted.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of student's scores which will be entered.<\/li>\r\n    <li><b>exam data<\/b> - the data for a single exam score in the format:<br>\r\n&lt;student's first name&gt; &lt;student's last name&gt; &lt;exam score&gt; .<\/li>\r\n<\/ul>\r\n<p>The data for each student score is entered on a separate line.<\/p>\r\n<p>The output must include grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Student<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to get grade<\/li>\r\n    <li>toString method<\/li>\r\n    <li>List (not ArrayList) collection for storing class objects<\/li>\r\n     <li>Sorting via the <b>compareTo<\/b> method<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>John Smith 81<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>John Smith 81 B<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>2<br>Alex  Ethan 77<br> Joe Hawke 82<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Joe Hawke 82 B<br>Alex  Ethan 77 C<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Olivia Smith 88<br> Jack DiIlan 88 <br> Gabriel Doe 93<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Gabriel Doe 93 A <br> Olivia Smith 88 B <br> Jack DiIlan 88 B<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"import java.util.ArrayList; \/\/ Both ArrayList and List need to be imported for creating List.\r\nimport java.util.Collections; \/\/ So list can be sorted via Collections.sort\r\nimport java.util.List;\r\nimport java.util.Scanner; \/\/ Used for reading data.\r\n\r\nclass Student implements Comparable<Student>\r\n{\r\n    \/\/ Private members accessed via getters and setters:\r\n    private String firstName;\r\n    private String lastName;\r\n    private int examScore;\r\n\r\n    public String getFirstName()\r\n    {\r\n        return firstName;\r\n    }\r\n\r\n    public void setFirstName(String firstName)\r\n    {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public String getLastName()\r\n    {\r\n        return lastName;\r\n    }\r\n\r\n    public void setLastName(String lastName)\r\n    {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public int getExamScore()\r\n    {\r\n        return examScore;\r\n    }\r\n\r\n    public void setExamScore(int examScore)\r\n    {\r\n        this.examScore = examScore;\r\n    }\r\n\r\n    public char getGrade()\r\n    {\r\n        \/\/ Find out grade based on points:\r\n        if (examScore < 50)\r\n            return 'F';\r\n        if (examScore < 60)\r\n            return 'E';\r\n        if (examScore < 70)\r\n            return 'D';\r\n        if (examScore < 80)\r\n            return 'C';\r\n        if (examScore < 90)\r\n            return 'B';\r\n\r\n        return 'A';\r\n    }\r\n\r\n    \/\/ Parameterized constructor for creating objects:\r\n    public Student(String firstName, String lastName, int examScore)\r\n    {\r\n        this.setFirstName(firstName);\r\n        this.setLastName(lastName);\r\n        this.setExamScore(examScore);\r\n    }\r\n\r\n    \/\/ String representation of the class object:\r\n    public String toString()\r\n    {\r\n        return getFirstName() + \" \" + getLastName() + \" \" + getExamScore() + \" \" + getGrade();\r\n    }\r\n\r\n    \/\/ Method which sorts list of student by exam score descendingly.\r\n    \/\/ It's used via Collections.sort method .\r\n    public int compareTo(Student student)\r\n    {\r\n        if (student.getExamScore() < this.getExamScore())\r\n        {\r\n            return -1;\r\n        }\r\n        else if (student.getExamScore() == this.getExamScore())\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n}\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        \/\/ Read user's input:\r\n        Scanner scanner = new Scanner(System.in);\r\n        int count = Integer.parseInt(scanner.nextLine());\r\n\r\n        \/\/ Sorting via the compareTo method can be applied only for List.\r\n        \/\/ For that reason a List is created instead of ArrayList.\r\n        List<Student> students = new ArrayList<>();\r\n\r\n        for (int i = 0; i < count; i++)\r\n        {\r\n            String[] studentsData = scanner.nextLine().split(\" \");\r\n\r\n            String firstName = studentsData[0];\r\n            String lastName = studentsData[1];\r\n            int examScores = Integer.parseInt(studentsData[2]);\r\n\r\n            \/\/ Create object based on the input data and add it to list:\r\n            Student obj = new Student(firstName, lastName, examScores);\r\n            students.add(obj);\r\n        }\r\n\r\n        \/\/ Sort list via the compareTo method:\r\n        Collections.sort(students);\r\n\r\n        for(Student student : students)\r\n        {\r\n            \/\/ Prints the string representation specified with the toString method:\r\n            System.out.println(student);\r\n        }\r\n    }\r\n}","stars":5,"requirements":["Condition Statements","Loops","Data Structures","Functions","OOP"]}],"challenges":[]},"JavaScript":{"urlName":"javascript","mode":"text\/javascript","tutorials":{"Basics":[{"id":129401206,"name":"Data Types","tests":[{"id":151628977,"question":"Which type is suitable for describing car's model?","code":null,"answers":["int","string","bool"],"correct_answer":"string","explanation":"<ul>\r\n<li>string is suitable for describing a sequence of symbols.<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1136577662,"question":"Which type is suitable for describing person's age?","code":null,"answers":["string","double","int"],"correct_answer":"int","explanation":"<ul>\r\n<li>int - whole numbers (like 5, 6, 10).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"},{"id":73657407,"question":"Which type is suitable for describing distance?","code":null,"answers":["string","double","char"],"correct_answer":"double","explanation":"<ul>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>char - a single symbol.<\/li>\r\n<\/ul>"},{"id":2098204668,"question":"Which type is suitable for describing a single symbol?","code":null,"answers":["char","int","boolean"],"correct_answer":"char","explanation":"<ul>\r\n<li>char - a single symbol.<\/li>\r\n<li>Int - whole number.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":935669693,"question":"Which type is suitable for describing if person is famous (true or false)?","code":null,"answers":["boolean","int","double"],"correct_answer":"boolean","explanation":"<ul>\r\n<li>boolean - true or false (famous or not famous).<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"}],"puzzles":[{"id":1863156533,"text":"Define a variable.","code":"fillword name = fillword;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["name","Alex","let","'Alex'"]},"correct_patterns":[["let","'Alex'"]]},{"id":565355250,"text":"Define variables about person's name and age.","code":"let fillword = fillword;\r\nlet fillword = 19;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["name","age","'Jim'"]},"correct_patterns":[["name","'Jim'","age"]]},{"id":443007667,"text":"Print the variable.","code":"let color = 'blue';\r\nfillword.fillword(fillword);","result":"blue","words":{"operators":[],"values":[],"variables_constants":[],"others":["log","console","color","blue"]},"correct_patterns":[["console","log","color"]]}]},{"id":2019270967,"name":"Calculations","tests":[{"id":1751797626,"question":"What's the output of the code snippet?","code":"let number = 5 + 6 - 2;\r\nconsole.log(number);","answers":["9","10","11"],"correct_answer":"9","explanation":"5 + 6 - 2 =  <br>\r\n11 - 2 =  <br>\r\n9"},{"id":555708219,"question":"What's the output of the code snippet?","code":"let number = 6 * 3 - 1;\r\nconsole.log(number);","answers":["12","17","18"],"correct_answer":"17","explanation":"6 * 3 - 1 = <br>\r\n18 - 1 = <br>\r\n17"},{"id":465800952,"question":"What's the output of the code snippet?","code":"let number = 18 \/ 3 + 3;\r\nconsole.log(number);","answers":["3","6","9"],"correct_answer":"9","explanation":"18 \/ 3 + 3 = <br>\r\n6 + 3 = <br>\r\n9"},{"id":1550888633,"question":"What's the output of the code snippet?","code":"let number = (14 + 7) \/ 7;\r\nconsole.log(number);","answers":["3","15","22"],"correct_answer":"3","explanation":"(14 + 7) \/ 7 = <br>\r\n21 \/ 7 = <br>\r\n3"},{"id":354799174,"question":"What's the output of the code snippet?","code":"let number = 14 % 3;\r\nconsole.log(number);","answers":["2","3","4"],"correct_answer":"2","explanation":"14 : 3 = <b>4<\/b>.67 <br><br>\r\n14 - 3 * 4 = <br>\r\n14 - 12 =<br>\r\n2"}],"puzzles":[{"id":1393877616,"text":"Fill the missing words to match the output.","code":"let number = 6 fillword 2;\r\nconsole.log(number);","result":"12","words":{"operators":["+","%","*","\/"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["*"]]},{"id":364446257,"text":"Fill the missing words to match the output.","code":"let combine = \"Blue \" fillword \"Sky\";\r\nconsole.log(combine);","result":"Blue Sky","words":{"operators":[".","*","-","+","%"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["+"]]},{"id":1315843582,"text":"Fill the missing words to match the output.","code":"let division = 12 fillword 4;\r\nlet remainder = 17 fillword  5;\r\n\r\nconsole.log(division);\r\nconsole.log(remainder);","result":"3\r\n2","words":{"operators":["+","\/","%","^"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["\/","%"]]}]},{"id":710903882,"name":"Assignments","tests":[{"id":876205725,"question":"What's the output of the code snippet?","code":"let val = 8;\r\nval = 2;\r\nconsole.log(val);","answers":["2","8","10"],"correct_answer":"2","explanation":"The last value set to the variable <code>val<\/code> is 2.\r\n<br><br>\r\nSo <code>val<\/code> has value of 2 when it's printed."},{"id":1861154394,"question":"What's the output of the code snippet?","code":"let num = 2;\r\nnum = num + 3;\r\nconsole.log(num);","answers":["2","3","5"],"correct_answer":"5","explanation":"num = 2\r\n<br>\r\nnum = 2 + 3\r\n<br>\r\nnum = 5"},{"id":663950875,"question":"What's the output of the code snippet?","code":"let num = 4;\r\nnum *= 3;\r\n\r\nconsole.log(num);","answers":["3","9","12"],"correct_answer":"12","explanation":"num = 4 <br>\r\nnum *= 3\r\n<br>\r\nnum = num * 3\r\n<br>\r\nnum = 4 * 3<br>\r\nnum = 12"},{"id":406860248,"question":"What's the output of the code snippet?","code":"let num = 4 + 6;\r\nnum \/= 2;\r\nnum *= 3;\r\n\r\nconsole.log(num);","answers":["5","15","60"],"correct_answer":"15","explanation":"num = 4 + 6; <br>\r\nnum = 10 <br>\r\n<br>\r\nnum \/= 2; <br>\r\nnum = num \/ 2; <br>\r\nnum = 10 \/ 2; <br>\r\nnum = 5 <br>\r\n<br>\r\nnum *= 3; <br>\r\nnum = num * 3; <br>\r\nnum = 5 * 3; <br>\r\nnum = 15"},{"id":1391808921,"question":"What's the output of the code snippet?","code":"let a = 3;\r\nlet b = 2;\r\n\r\na *= b;\r\nb *= a;\r\n\r\nconsole.log(b);","answers":["6","12","72"],"correct_answer":"12","explanation":"a = 3 <br>\r\nb = 2 <br>\r\n<br>\r\na *= b <br>\r\na = a * b <br>\r\na = 3 * 2 <br>\r\na = 6 <br>\r\n<br>\r\nb *= a <br>\r\nb = b * a <br>\r\nb = 2 * 6 <br>\r\nb = 12"}],"puzzles":[{"id":1927920520,"text":"Fill the missing words to match the output.","code":"let num = fillword;\r\nnum = fillword;\r\n\r\nconsole.log(num);\r\nnum = fillword;","result":"8","words":{"operators":[],"values":["1","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["1","8","7"],["7","8","1"]]},{"id":731831113,"text":"Fill the missing words to match the output.","code":"let num = 5;\r\nnum fillword fillword;\r\nconsole.log(num);","result":"15","words":{"operators":[],"values":["1","2","3"],"variables_constants":["+=","*=","\/="],"others":[]},"correct_patterns":[["*=","3"]]},{"id":1816394518,"text":"Fill the missing words to match the output.","code":"let num fillword 10;\r\nnum fillword 5;\r\nnum fillword 2;\r\nnum fillword 1;\r\n\r\nconsole.log(num);","result":"29","words":{"operators":["=","+=","-=","*=","\/="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","+=","*=","-="]]}]},{"id":822657268,"name":"If Statement","tests":[{"id":1338699271,"question":"What's the output of the code snippet?","code":"let age = 18;\r\n\r\nif(age >= 21) {\r\n    console.log(\"a \");\r\n}\r\nif(age < 30) {\r\n    console.log(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>age = 18<\/code>\r\n<br><br>\r\n<code>age >= 21<\/code> is false.\r\n<br><br>\r\n<code>age < 30<\/code> is true so \"b\" is printed."},{"id":8325572,"question":"What's the output of the code snippet?","code":"let pagesCount = 100;\r\n\r\nif(pagesCount > 100) {\r\n    console.log(\"a \");\r\n}\r\nif(pagesCount >= 100) {\r\n    console.log(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>pagesCount = 100<\/code>\r\n<br><br>\r\n\r\n<code>pagesCount > 100<\/code> is false. <br><br>\r\n<code>pagesCount >= 100<\/code> is true so \"b\" is printed."},{"id":2032937349,"question":"What's the output of the code snippet?","code":"let num = 3;\r\n\r\nif(num === 3) {\r\n    console.log(\"a \");\r\n}\r\nif(num !== 3) {\r\n    console.log(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"a","explanation":"<code>num = 3<\/code>\r\n<br><br>\r\n\r\n<code>num === 3<\/code> is true so \"a\" is printed.\r\n<br><br>\r\n<code>num !== 3<\/code> is false (because num is equal to 3)."},{"id":869353794,"question":"What's the output of the code snippet?","code":"let score = 87;\r\n\r\nif(score <= 87) {\r\n    console.log(\"1\");\r\n}\r\nif(score === 87) {\r\n    console.log(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>score = 87<\/code>\r\n<br><br>\r\n\r\n<code>score <= 87<\/code> is true so \"1\" is printed.\r\n<br><br>\r\n<code>score === 87<\/code> is true so \"2\" is printed."},{"id":1954965763,"question":"What's the output of the code snippet?","code":"let num = 77;\r\nlet rem = num % 2;\r\n\r\nif (rem === 0) {\r\n    console.log(\"even\");\r\n}\r\nif(rem === 1) {\r\n    console.log(\"odd\");\r\n}","answers":["even","odd","even odd"],"correct_answer":"odd","explanation":"77 % 2 is equal to 1 (rem is 1) so odd is printed.\r\n<br><br>\r\nThe only condition that's true is <code>rem === 1<\/code> ."}],"puzzles":[{"id":118705599,"text":"Fill the missing words to match the output.","code":"let price = 300;\r\n\r\nif(price fillword 500) {\r\n   console.log(\"High\");\r\n}","result":"High","words":{"operators":["<","==",">"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["<"]]},{"id":2042654076,"text":"Fill the missing words to match the output.","code":"let number = 7;\r\nif(number fillword 7) {\r\n    console.log(\"Special Number\");\r\n}\r\n\r\nlet volume = 101;\r\nif(volume fillword 100) {\r\n    console.log(\"Large\");\r\n}","result":"Special Number\r\nLarge","words":{"operators":["<",">","=="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["==",">"]]},{"id":846499133,"text":"Fill the missing words to match the output.","code":"let number = 5;\r\n\r\nif(number fillword 0) {\r\n    console.log(\"Different\");\r\n}","result":"Different","words":{"operators":["==","!=","<","<="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!="]]}]},{"id":795899621,"name":"Logical Operators","tests":[{"id":757762240,"question":"What's the output of the code snippet?","code":"let num = 7;\r\n\r\nif (num > 7 || num < 21) {\r\n    console.log(\"1\");\r\n}\r\nif(num > 10 || num < 15) {\r\n    console.log(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>num = 7<\/code>\r\n<br><br>\r\n<code>num > 7 || num < 21<\/code> is true because <code>num < 21<\/code> is true .\r\n<br><br>\r\n<code>num > 10 || num < 15<\/code> is true because <code>num < 15<\/code> is true.\r\n<br><br>\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1742710913,"question":"What's the output of the code snippet?","code":"let age = 17;\r\n\r\nif (age > 13 && age < 21) {\r\n    console.log(\"1\");\r\n}\r\nif(age > 21 && age < 60) {\r\n    console.log(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n<code>age > 13 && age < 21<\/code> is true because both operands are true.\r\n<br><br>\r\n<code>age > 21 && age < 60<\/code> is false because <code>age > 21<\/code> is false.\r\n<br><br>\r\n\r\nUsing && means that If any of the two operands is false, then  the condition becomes false."},{"id":1485621326,"question":"What's the output of the code snippet?","code":"let level = 5;\r\n\r\nif (level > 0 && level < 11) {\r\n    console.log(\"valid\");\r\n}\r\nif(level === 5 || level === 7) {\r\n    console.log(\"special\");\r\n}","answers":["valid","special","valid special"],"correct_answer":"valid special","explanation":"<code>level = 5<\/code>\r\n<br><br>\r\n<code>level > 0 && level < 11<\/code> is true because both operands are true (level is between 0 and 11).\r\n<br><br>\r\n<code>level == 5 || level == 7<\/code> is true because <code>level == 5<\/code> is true.\r\n<br><br>\r\nUsing && means that If any of the two operands is false, then  the condition becomes false.\r\n<br><br>\r\n\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":288483343,"question":"What's the output of the code snippet?","code":"let height = 165;\r\n\r\nif (!(height === 160)) {\r\n    console.log(\"1\");\r\n}\r\nif(!(height > 150 && height < 200)) {\r\n    console.log(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>height = 165<\/code>\r\n<br><br>\r\n<code>height == 160<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>height > 150 && height < 200<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."},{"id":1273367500,"question":"What's the output of the code snippet?","code":"let code = 301;\r\n\r\nif (!(code >= 100 && code <= 200)) {\r\n    console.log(\"1 \");\r\n}\r\nif(!(code >= 400 || code == 301)) {\r\n    console.log(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>code = 301<\/code>\r\n<br><br>\r\n<code>code >= 100 && code <= 200<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>code >= 400 || code == 301<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."}],"puzzles":[{"id":1796844794,"text":"Fill the missing words to match the output.","code":"let num = 1;\r\n\r\nif(num == 1 fillword num == 2) {\r\n    console.log(\"1 or 2\");\r\n}","result":"1 or 2","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["||"]]},{"id":768527547,"text":"Fill the missing words to match the output.","code":"let num = 4;\r\n\r\nif(num >= 1 fillword num <= 9) {\r\n    console.log(\"Between 1 and 9\");\r\n}\r\n\r\nif(num == 3 fillword  num == 4) {\r\n    console.log(\"3 or 4\");\r\n}","result":"Between 1 and 9\r\n3 or 4","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["&&","||"]]},{"id":1718873208,"text":"Fill the missing words to match the output.","code":"let num = 1;\r\nif(fillword(num != 1)) {\r\n    console.log(\"Equal To One\");\r\n}","result":"Equal To One","words":{"operators":["&","|","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!"]]}]},{"id":1807605941,"name":"If Else Statements","tests":[{"id":210447245,"question":"What's the output of the code snippet?","code":"let age = 17;\r\n\r\nif (age === 17) {\r\n    console.log(\"1 \");\r\n}\r\nelse {\r\n    console.log(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n\r\n<code>age == 17<\/code> is true so the code inside if clause is executed.\r\n<br><br>\r\nThe code inside the else block is not executed."},{"id":1161317194,"question":"What's the output of the code snippet?","code":"let num = 5;\r\n\r\nif (num === 3) {\r\n    console.log(\"1 \");\r\n}\r\nelse {\r\n    console.log(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>num = 5<\/code>\r\n<br><br>\r\n<code>num == 3<\/code> is false so the code inside the else clause is executed.\r\n<br><br>\r\nThe code inside the if block is not executed."},{"id":1072524043,"question":"What's the output of the code snippet?","code":"let num = 15;\r\n\r\nif (num === 14) {\r\n    console.log(\"1\");\r\n}\r\nelse if (num === 15) {\r\n    console.log(\"2\");\r\n}\r\nelse {\r\n    console.log(\"3\");\r\n}","answers":["2","2 3","1 3"],"correct_answer":"2","explanation":"<code>num = 15<\/code>\r\n<br><br>\r\n\r\n<code>num == 14<\/code> is false but <code>num == 15<\/code> is true so the code inside the else if clause is executed.\r\n<br><br>\r\nThe code inside the if and else blocks is not executed."},{"id":1888586440,"question":"What's the output of the code snippet?","code":"let score = 90;\r\n\r\nif (score <= 50) {\r\n   console.log(\"low\");\r\n}\r\nelse if (score <= 75) {\r\n    console.log(\"medium\");\r\n}\r\nelse {\r\n    console.log(\"high\");\r\n}","answers":["low","medium","high"],"correct_answer":"high","explanation":"<code>score = 90<\/code>\r\n<br><br>\r\nBoth <code>score <= 50<\/code> and <code>score <= 75<\/code> are false. \r\n<br><br>\r\nThat's the reason why the code inside the else block is executed."},{"id":692497033,"question":"What's the output of the code snippet?","code":"let num = 75;\r\n\r\nif (num <= 50) {\r\n\r\n}\r\nelse if (num <= 75) {\r\n    console.log(\"1 \");\r\n}\r\nelse if (num <= 80) {\r\n    console.log(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>num = 75<\/code>\r\n<br><br>\r\n<code>num <= 50<\/code> is false and <code>num <= 75<\/code> is true thus \"1\" is printed.\r\n<br><br>\r\nSince  the condition of the first else-if block is true, the next one (<code>num <= 80<\/code>) is not checked."}],"puzzles":[{"id":1595935801,"text":"Fill the missing words to match the output.","code":"let num = 5;\r\nif(num fillword 10) {\r\n    console.log(\"More than 10\");\r\n}\r\nfillword  {\r\n    console.log(\"Less than 10\");\r\n}","result":"Less than 10","words":{"operators":["<","<=",">",">="],"values":[],"variables_constants":[],"others":["else","if"]},"correct_patterns":[[">=","else"],[">","else"]]},{"id":299184070,"text":"Fill the missing words to match the output.","code":"let num = 1;\r\n\r\nif(num == fillword) {\r\n    console.log(\"Equal to 0\");\r\n}\r\nfillword fillword (num == fillword) {\r\n    console.log(\"Equal to 1\");\r\n}","result":"Equal to 1","words":{"operators":[],"values":["0","1"],"variables_constants":[],"others":["if","else","=="]},"correct_patterns":[["0","else","if","1"]]},{"id":1249529735,"text":"Fill the missing words to match the output.","code":"let num = 7;\r\n\r\nif(num == fillword) {\r\n    console.log(\"A\");\r\n}\r\nelse if(num == fillword) {\r\n    console.log(\"B\");\r\n}\r\nfillword {\r\n    console.log(\"C\");\r\n}","result":"C","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["if","else","else if"]},"correct_patterns":[["5","6","else"],["6","5","else"]]}]},{"id":248517038,"name":"Switch Statement","tests":[{"id":1676397142,"question":"What's the output of the code snippet?","code":"let num = 2;\r\n\r\nswitch(num) {\r\n    case 1:\r\n        console.log(\"a\");\r\n        break;\r\n    case 2:\r\n        console.log(\"b\");\r\n        break;\r\n    case 3:\r\n        console.log(\"c\");\r\n        break;\r\n}","answers":["a","b","c"],"correct_answer":"b","explanation":"<code>num<\/code> is equal to 2 so the case 2 block is executed."},{"id":614001175,"question":"What's the output of the code snippet?","code":"let num = 10;\r\n\r\nswitch(num) {\r\n    case 10:\r\n        console.log(\"a\");\r\n        break;\r\n    case 20:\r\n        console.log(\"b\");\r\n        break;\r\n    default:\r\n        console.log(\"c\");\r\n        break;\r\n}","answers":["a","b","a c"],"correct_answer":"a","explanation":"<code>num<\/code> is equal to 10 so the case 10 block is executed."},{"id":491648468,"question":"What's the output of the code snippet?","code":"let num = 5;\r\n\r\nswitch(num) {\r\n    case 3:\r\n        console.log(\"a \");\r\n        break;\r\n    case 4:\r\n        console.log(\"b \");\r\n        break;\r\n    default:\r\n        console.log(\"c\");\r\n        break;\r\n}","answers":["a","b","c"],"correct_answer":"c","explanation":"<code>num<\/code> is neither 3 nor 4 so the default block is executed."},{"id":1475483029,"question":"What's the output of the code snippet?","code":"let age = 15;\r\n\r\nswitch(age) {\r\n    case 10:\r\n    case 11:\r\n    case 12:\r\n    case 13:\r\n        console.log(\"Middle School \");\r\n        break;\r\n    case 14:\r\n    case 15:\r\n    case 16:\r\n    case 17:\r\n    case 18:\r\n        console.log(\"High School \");\r\n        break;\r\n    default:\r\n        console.log(\"Primary School\");\r\n        break;\r\n}","answers":["Primary School","Middle School","High School"],"correct_answer":"High School","explanation":"<code>age<\/code> is matched by case 15 so \"High School\" is printed."},{"id":145175890,"question":"What's the output of the code snippet?","code":"let level = 8;\r\n\r\nswitch(level) {\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n        console.log(\"Easy\");\r\n        break;\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n        console.log(\"Medium\");\r\n        break;\r\n    default:\r\n        console.log(\"Tricky\");\r\n        break;\r\n}","answers":["Easy","Medium","Tricky"],"correct_answer":"Tricky","explanation":"<code>level<\/code> is not matched by any of the cases (from 1 to 7) so the default block is executed."}],"puzzles":[{"id":53440324,"text":"Fill the missing words to match the output.","code":"let num = 2;\r\nswitch(num) {\r\n    case fillword:\r\n        console.log(\"a\");\r\n        break;\r\n    fillword fillword:\r\n        console.log(\"b\");\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2"],"variables_constants":[],"others":["case","switch"]},"correct_patterns":[["1","case","2"]]},{"id":1171492613,"text":"Fill the missing words to match the output.","code":"let num = 3;\r\nswitch(num) {\r\n    case fillword:\r\n        console.log(\"a\");\r\n        break;\r\n    case fillword:\r\n        console.log(\"b\");\r\n        break;\r\n    fillword :\r\n        console.log(\"c\");\r\n        break;\r\n}","result":"c","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","default"]},"correct_patterns":[["1","2","default"],["2","1","default"]]},{"id":1048620738,"text":"Fill the missing words to match the output.","code":"let num = fillword;\r\nswitch(num) {\r\n    case 1:\r\n        console.log(\"a\");\r\n        break;\r\n    fillword fillword :\r\n    case 3:\r\n        console.log(\"b\");\r\n        break;\r\n    default:\r\n        console.log(\"c\");\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","break"]},"correct_patterns":[["3","case","2"]]}]},{"id":744620146,"name":"While Loop","tests":[{"id":1096045843,"question":"What's the output of the code snippet?","code":"let num = 0;\r\nwhile(num < 3)\r\n{\r\n    console.log(num);\r\n    num++;\r\n}","answers":["1 2 3","0 1 2","0 1 2 3"],"correct_answer":"0 1 2","explanation":"<code>num = 0<\/code>\r\n<br><br>\r\nLoop ends when <code>num<\/code> reaches value of 3.\r\n<br><br>\r\n3 is the first value that's false for the condition <code>num < 3<\/code>.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":1006204112,"question":"What's the output of the code snippet?","code":"let num = 1;\r\nwhile(num < 5)\r\n{\r\n    console.log(num);\r\n}","answers":["1 2 3 4","1 2 3 4 5","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num = 1<\/code>\r\n<br><br>\r\nThe condition <code>num < 5<\/code> is always true since there is no modification like <code>num++<\/code>."},{"id":2091750545,"question":"What's the output of the code snippet?","code":"let num = 2;\r\nwhile(num < 7)\r\n{\r\n    num += 2;\r\n    console.log(num);\r\n}","answers":["2 4 6 8","4 6","4 6 8"],"correct_answer":"4 6 8","explanation":"<code>num = 2<\/code>\r\n<br><br>\r\n<code>num < 7<\/code> remains true until <code>num<\/code> reaches value of 8.\r\n<br><br>\r\nThe loop ends when <code>num < 7<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":894612574,"question":"What's the output of the code snippet?","code":"let num = 10;\r\nconsole.log(num);\r\n\r\nwhile(num < 10)\r\n{\r\n    console.log(num);\r\n    num++;\r\n}","answers":["10","10 10","10 11"],"correct_answer":"10","explanation":"<code>num < 10<\/code> is false and the loop doesn't execute."},{"id":1846006815,"question":"What's the output of the code snippet?","code":"let num = 20;\r\n\r\nwhile(num > 10)\r\n{\r\n    console.log(num);\r\n    num -= 5;\r\n}","answers":["20","20 15","20 15 10"],"correct_answer":"20 15","explanation":"<code>num > 10<\/code> remains true until <code>num<\/code> decrements to 10.\r\n<br><br>\r\nThe loop ends when <code>num > 10<\/code> becomes false.\r\n<br><br>\r\n<code>num -= 5<\/code> decrements the value by 5."}],"puzzles":[{"id":2000014979,"text":"Fill the missing words to match the output.","code":"let num = 1;\r\n\r\nwhile(num fillword fillword ) {\r\n    console.log(num);\r\n    num++;\r\n}","result":"1 2 3 4 5","words":{"operators":["<","<=",">",">="],"values":["4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","5"],["<","6"]]},{"id":702213696,"text":"Fill the missing words to match the output.","code":"let num = 12;\r\n\r\nwhile(num fillword fillword) {\r\n    console.log(num);\r\n    fillword;\r\n}","result":"12 14 16 18 20","words":{"operators":["<","<=",">",">="],"values":["18","20","21"],"variables_constants":[],"others":["num++","num += 2","num--"]},"correct_patterns":[["<=","20","num += 2"],["<","21","num += 2"]]},{"id":1653542401,"text":"Fill the missing words to match the output.","code":"let num = fillword;\r\n\r\nwhile(num > 0) {\r\n    fillword ;\r\n    console.log(num);\r\n}","result":"9 6 3 0","words":{"operators":[],"values":["9","10","12","13"],"variables_constants":[],"others":["num--","num += 3","num -= 3"]},"correct_patterns":[["12","num -= 3"]]}]},{"id":1696014387,"name":"Do While Loop","tests":[{"id":548730844,"question":"What's the output of the code snippet?","code":"let num = 1;\r\n\r\ndo\r\n{\r\n    console.log(num);\r\n    num++;\r\n} while (num < 4);","answers":["1 2 3","1 2 3 4","2 3"],"correct_answer":"1 2 3","explanation":"<code>num < 4<\/code> remains true until <code>num<\/code> increments to 4.\r\n<br><br>\r\nThe loop ends when <code>num < 4<\/code> becomes false.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":425269149,"question":"What's the output of the code snippet?","code":"let num = 1;\r\nconsole.log(\"0 \");\r\ndo\r\n{\r\n    console.log(num);\r\n    num--;\r\n} while (num > 1);","answers":["0","0 1","0 1 0"],"correct_answer":"0 1","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since <code>num > 1<\/code> is false."},{"id":1376663386,"question":"What's the output of the code snippet?","code":"let num = 1;\r\n\r\ndo\r\n{\r\n    console.log(num);\r\n    num++;\r\n} while (num > 1);","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num > 1<\/code> remains true and the loop repeats infinitely.\r\n<br><br>\r\n<code>num++<\/code> needs to be removed or replaced with <code>num--<\/code> in order to stop it."},{"id":347297563,"question":"What's the output of the code snippet?","code":"let num = 0;\r\n\r\ndo\r\n{\r\n    num += 2;\r\n    console.log(num);\r\n} while (num <= 5);","answers":["0 2 4","2 4 6","2 4 6 8"],"correct_answer":"2 4 6","explanation":"<code>num <= 5<\/code> remains true until <code>num<\/code> increments to 6.\r\n<br><br>\r\nThe loop ends when <code>num <= 5<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":1298167512,"question":"What's the output of the code snippet?","code":"console.log(\"1\");\r\ndo\r\n{\r\n    console.log(\"2\");\r\n} while (false);","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since it's condition is false."}],"puzzles":[{"id":1530669518,"text":"Fill the missing words to match the output.","code":"let num = 1;\r\ndo\r\n{\r\n    console.log(num);\r\n    num++;\r\n} while (num fillword fillword);","result":"1 2 3 4 5 6 7","words":{"operators":["<","<=",">",">="],"values":["6","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","7"],["<","8"]]},{"id":501303695,"text":"Fill the missing words to match the output.","code":"let num = fillword;\r\ndo\r\n{\r\n    console.log(num);\r\n    fillword;\r\n} while (num <= 25);","result":"10 15 20 25","words":{"operators":[],"values":["5","10","15"],"variables_constants":[],"others":["num++","num += 5"]},"correct_patterns":[["10","num += 5"]]},{"id":1452697932,"text":"Fill the missing words to match the output.","code":"let num = fillword;\r\ndo\r\n{\r\n    num++;\r\n    console.log(num);\r\n} while (num == fillword);","result":"1 2","words":{"operators":[],"values":["-1","0","1","2"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]}]},{"id":1606697968,"name":"For Loop","tests":[{"id":102012569,"question":"What's the output of the code snippet?","code":"for(let i = 1; i < 5; i++)\r\n{\r\n    console.log(i);\r\n}","answers":["1 2 3 4","1 2 3 4 5","1 1 1 1 1"],"correct_answer":"1 2 3 4","explanation":"The loop starts with <code>i = 1<\/code>.\r\n<br><br>\r\n<code>i < 5<\/code> remains true until <code>i<\/code> increments to 5.\r\n<br><br>\r\nThe loop ends when <code>i < 5<\/code> becomes false.\r\n<br><br>\r\n<code>i++<\/code> increments the value by 1 in the end of every loop iteration."},{"id":2025436710,"question":"What's the output of the code snippet?","code":"for(let i = 2; i <= 8; i+=2)\r\n{\r\n    console.log(i);\r\n}","answers":["2 4 6","2 4 6 8","2 3 4 5 6 7 8"],"correct_answer":"2 4 6 8","explanation":"The loop starts with <code>i = 2<\/code>.\r\n<br><br>\r\n<code>i <= 8<\/code> remains true until <code>i<\/code> increments to 10.\r\n<br><br>\r\nThe loop ends when <code>i <= 8<\/code> becomes false.\r\n<br><br>\r\n<code>i+=2<\/code> increments the value by 2 in the end of every loop iteration."},{"id":829346279,"question":"What's the output of the code snippet?","code":"for(let i = 1 ;; i++)\r\n{\r\n    console.log(i);\r\n}","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"The condition is not specified so the loop repeats infinitely.\r\n<br><br>\r\nA condition such as <code>i <= 5<\/code> could be added in order to stop it."},{"id":1779691940,"question":"What's the output of the code snippet?","code":"for(let i = 11; i >= 5; i -= 3)\r\n{\r\n    console.log(i);\r\n}","answers":["11 8 5 2","11 8 5","11 8"],"correct_answer":"11 8 5","explanation":"The loop starts with <code>i = 11<\/code>.\r\n<br><br>\r\n<code>i >= 5<\/code> remains true until <code>i<\/code> decrements to 2.\r\n<br><br>\r\nThe loop ends when <code>i >= 5<\/code> becomes false.\r\n<br><br>\r\n<code>i -= 3<\/code> decrements the value by 3 in the end of every loop iteration."},{"id":750784869,"question":"What's the output of the code snippet?","code":"console.log(\"0\");\r\nfor(let i = 1; i < 1 ; i++)\r\n{\r\n    console.log(i);\r\n}","answers":["0","0 1","0 1 2"],"correct_answer":"0","explanation":"The initialization is <code>i = 1<\/code>.\r\nThe condition <code>i < 1<\/code> is false so the loop doesnt't execute."}],"puzzles":[{"id":255494413,"text":"Fill the missing words to match the output.","code":"for(let i = fillword; i fillword fillword; i++) {\r\n\tconsole.log(i);\r\n}","result":"0 1 2 3 4","words":{"operators":["<","<=",">",">="],"values":["0","1","4","5"],"variables_constants":[],"others":[]},"correct_patterns":[["0","<","5"],["0","<=","4"]]},{"id":1106225354,"text":"Fill the missing words to match the output.","code":"for (let i = 1; i fillword 11; i fillword) {\r\n    console.log(i);\r\n}","result":"1 3 5 7 9 11","words":{"operators":["<","<=","=="],"values":[],"variables_constants":[],"others":["++","+= 2","+= 4"]},"correct_patterns":[["<=","+= 2"]]},{"id":983353483,"text":"Fill the missing words to match the output.","code":"for (let i = 5; i >= fillword; fillword) {\r\n    console.log(i);\r\n}","result":"5 4 3 2 1","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["i++","i--","i-=5","i+=5"]},"correct_patterns":[["1","i--"]]}]},{"id":1815130219,"name":"Break And Continue","tests":[{"id":1702179106,"question":"What's the output of the code snippet?","code":"for(let i = 1; i < 10; i += 3)\r\n{\r\n    console.log(i);\r\n\r\n    if(i === 4)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["1","1 4","1 4 7"],"correct_answer":"1 4","explanation":"The <code>break<\/code> keyword ends the loop when <code>i<\/code> reaches value of 4.\r\n\r\n<br><br>\r\n<code>i<\/code> is printed before terminating the loop via\r\n<code>break<\/code>."},{"id":1578782947,"question":"What's the output of the code snippet?","code":"let num = 10;\r\n\r\nwhile(num < 20)\r\n{\r\n    console.log(num);\r\n    num += 4;\r\n\r\n    if(num == 18)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["10 14","10 14 18","10 14 18 22"],"correct_answer":"10 14","explanation":"The <code>break<\/code> keyword ends the loop when <code>num<\/code> reaches value of 18.\r\n\r\n<br><br>\r\n<code>num<\/code> reaches value of 18 after \"14\" is printed."},{"id":282030240,"question":"What's the output of the code snippet?","code":"for(let i = 0; i < 6; i+= 2)\r\n{\r\n    if(i === 2)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    console.log(i);\r\n}","answers":["0 4","0 2 4","0 4 6"],"correct_answer":"0 4","explanation":"The loop executes for i = 0, 2 and  4.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."},{"id":1232310369,"question":"What's the output of the code snippet?","code":"let number = 0;\r\n\r\nwhile(number < 7)\r\n{\r\n    number += 3;\r\n\r\n    if(number == 6)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    console.log(number);\r\n}","answers":["3 6 9","3 9","3"],"correct_answer":"3 9","explanation":"The loop executes for number = 3, 6, 9.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for number = 6 so all values except 6 are printed."},{"id":35696686,"question":"What's the output of the code snippet?","code":"for(let i = 1; i <= 3; i++)\r\n{\r\n    if(i === 2)\r\n    {\r\n        continue;\r\n        break;\r\n    }\r\n\r\n    console.log(i);\r\n}","answers":["1","1 3","1 2 3"],"correct_answer":"1 3","explanation":"<code>continue<\/code> skips a loop iteration so the <code>break<\/code> keyword does not take any effect.\r\n<br><br>\r\nThe loop executes for i= 1, 2, 3.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."}],"puzzles":[{"id":1933699144,"text":"Fill the missing words to match the output.","code":"let sum = 0;\r\nfor (let i = 1; i <= 8; i++) {\r\n    console.log(i);\r\n    sum += i;\r\n\r\n    if(sum == fillword ) {\r\n        fillword ;\r\n    }                \r\n}","result":"1 2 3 4","words":{"operators":[],"values":["6","10","15","21"],"variables_constants":[],"others":["continue","break"]},"correct_patterns":[["10","break"]]},{"id":905316361,"text":"Fill the missing words to match the output.","code":"for (let i = 1; i <= 5; i++) {\r\n    if(i == fillword ) {\r\n        fillword;\r\n    }\r\n    console.log(i);\r\n}","result":"1 2 4 5","words":{"operators":[],"values":["2","3","4","5"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["3","continue"]]},{"id":1855663062,"text":"Fill the missing words to match the output.","code":"let sum = 0; \r\nfor (let i = fillword; i <= 100; i+= 2) {\r\n    console.log(i);\r\n    sum += i;\r\n\r\n    if (sum == fillword) {\r\n        console.log(sum);\r\n        fillword;\r\n    }\r\n}","result":"2 4 6 8 20","words":{"operators":[],"values":["0","1","2","20","30"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["2","20","break"]]}]},{"id":1133597492,"name":"Nested If","tests":[{"id":1154864111,"question":"What's the output of the code snippet?","code":"if(true)\r\n{\r\n    console.log(\"1\");\r\n\r\n    if(true)\r\n    {\r\n        console.log(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    console.log(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The code inside the outer if executes since it's condition is true thus \"1\" is printed.\r\n<br><br>\r\nBoth outer and inner if-s have true conditions, so \"2\" is printed too.\r\n<br><br>\r\nThe else block code does not execute because the outer if has true condition."},{"id":1031467948,"question":"What's the output of the code snippet?","code":"let number = 10;\r\nif(number >= 10)\r\n{\r\n    console.log(\"1\");\r\n\r\n    if(number < 10)\r\n    {\r\n        console.log(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    console.log(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1","explanation":"The condition <code>number >= 10<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nThe condition <code>number < 10<\/code> is false so \"2\" is not printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number >= 10<\/code> is true ."},{"id":1982796653,"question":"What's the output of the code snippet?","code":"let number = 5;\r\nif(number == 5)\r\n{\r\n    number++;\r\n    console.log(\"1 \");\r\n\r\n    if(number === 6)\r\n    {\r\n        console.log(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    console.log(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The condition <code>number == 5<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nAfter incrementing <code>number<\/code> the <code>number == 6<\/code> condition becomes true so \"2\" is printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number == 5<\/code> is true."},{"id":685519658,"question":"What's the output of the code snippet?","code":"let number = 5;\r\nif(number === 5) {\r\n    console.log(\"1\");\r\n\r\n    if(number > 0) {\r\n        console.log(\"2\");\r\n\r\n        if(number > 3) {\r\n            console.log(\"3\");\r\n        }\r\n    }\r\n}","answers":["1","1 2","1 2 3"],"correct_answer":"1 2 3","explanation":"All of the three conditions are true so \"1\", \"2\" and \"3\" are printed."},{"id":1635865323,"question":"What's the output of the code snippet?","code":"let number = 10;\r\nif(number === 5) {\r\n    console.log(\"1\");    \r\n}\r\nelse {\r\n    console.log(\"2\");\r\n    if(number === 10) {\r\n        console.log(\"3\");\r\n    }\r\n}","answers":["1","2","2 3"],"correct_answer":"2 3","explanation":"The condition <code>number === 5<\/code> is false so the else block is executed and \"2\" is printed.\r\n<br><br>\r\n<code>number === 5<\/code> is false and <code>number === 10<\/code> is true so \"3\" is printed too."}],"puzzles":[{"id":659049367,"text":"Fill the missing words to match the output.","code":"let score = 100;\r\n\r\nif(score > fillword) {\r\n    console.log(\"High\");\r\n\r\n    if(score fillword fillword) {\r\n        console.log(\"Max Score\");\r\n    }\r\n}","result":"High\r\nMax Score","words":{"operators":["=="],"values":["80","100","110"],"variables_constants":[],"others":[]},"correct_patterns":[["80","==","100"]]},{"id":436038484,"text":"Fill the missing words to match the output.","code":"let level = fillword;\r\n\r\nif(level > fillword && level <= 100 ) {\r\n    console.log(\"Valid Level\");\r\n\r\n    if(level fillword 10 == 0) {\r\n        console.log(\"Contains Boss\");\r\n    }\r\n}","result":"Valid Level\r\nContains Boss","words":{"operators":["-","+","\/","%"],"values":["40","0"],"variables_constants":[],"others":[]},"correct_patterns":[["40","0","%"]]},{"id":1386318613,"text":"Fill the missing words to match the output.","code":"let calories = 200;\r\n\r\nif(calories fillword 100) {\r\n    console.log(\"High\");\r\n    calories += fillword;\r\n\r\n    if(calories fillword 300) {\r\n        console.log(\"Very High\");\r\n    }\r\n}","result":"High\r\nVery High","words":{"operators":[">",">="],"values":["50","100"],"variables_constants":[],"others":[]},"correct_patterns":[[">","100",">="]]}]},{"id":586284529,"name":"Nested Loops","tests":[{"id":1513517736,"question":"What's the output of the code snippet?","code":"for(let i = 0; i < 1; i++) {\r\n    console.log(i);\r\n    for (let j = 0; j < 1; j++) {\r\n        console.log(j);\r\n    }\r\n}","answers":["0","0 0","0 0 1 1"],"correct_answer":"0 0","explanation":"Both inner and outer loop execute only once for <code>i = 0<\/code> and <code>j = 0<\/code> ."},{"id":484086377,"question":"What's the output of the code snippet?","code":"for(let i = 0; i < 2; i++) {\r\n    console.log(i);\r\n    for (let j = 0; j < 0; j++) {\r\n        console.log(j);\r\n    }\r\n}","answers":["0","0 0","0 1"],"correct_answer":"0 1","explanation":"The outer loop executes twice - for i = 0 and i = 1.\r\n<br><br>\r\nThe inner loop has false condition so it doesn't execute."},{"id":1435480630,"question":"What's the output of the code snippet?","code":"for(let i = 0; i < 3; i++) {\r\n    console.log(i);\r\n    for (let j = 0; j < 1; j++) {\r\n        console.log(j);\r\n    }\r\n}","answers":["0 0 1 0 2 0","0 0 1 0","0 1 2"],"correct_answer":"0 0 1 0 2 0","explanation":"The outer loop executes 3 times - for i = 0, 1 and 2.\r\n<br><br>\r\nThe inner loop executes once each time the outer loop iterates. \r\n<br><br>\r\nAll zeroes except for the first one are printed by the inner loop."},{"id":238870007,"question":"What's the output of the code snippet?","code":"for(let a = 0; a < 2; a++) {\r\n    console.log(a);\r\n    for (let b = 0; b < 1; b++)\r\n    {\r\n        console.log(b);\r\n        for (let c = 0; c < 1; c++)\r\n        {\r\n            console.log(c);\r\n        }\r\n    }\r\n}","answers":["0 0 0 1 1 1","0 0 1 0 0 0","0 0 0 1 0 0"],"correct_answer":"0 0 0 1 0 0","explanation":"The outer loop executes twice.\r\n<br><br>\r\nEach iteration of the outer loop makes the inner loops to execute once."},{"id":1088552372,"question":"What's the output of the code snippet?","code":"let i = 1;\r\nwhile(i <= 3)\r\n{\r\n    let j = 0;\r\n\r\n    while (j < 2)\r\n    {\r\n        console.log(j);\r\n        j++;\r\n    }\r\n}","answers":["0 1 0 1","0 1 0 1 0 1","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"Modification such as <code>i++<\/code> is missing for the outer loop."}],"puzzles":[{"id":190229202,"text":"Fill the missing words to match the output.","code":"for(let a = 1; a <= fillword; a++)\r\n{\r\n    for(let b = 1; b <= fillword; b++ )\r\n    {\r\n        console.log(fillword + \" \" + fillword);\r\n    }\r\n}","result":"1 1\r\n1 2\r\n2 1\r\n2 2\r\n3 1\r\n3 2","words":{"operators":[],"values":["1","2","3","4"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["3","2","a","b"]]},{"id":1308347027,"text":"Fill the missing words to match the output.","code":"for(let a = 1; a <= fillword; a++)\r\n{\r\n    let row = \"\";\r\n    for(let b = 1; b <= fillword; b++ )\r\n    {\r\n        row += fillword + \" \"\r\n    }\r\n    console.log(row);\r\n}","result":"1\r\n1 2\r\n1 2 3\r\n1 2 3 4","words":{"operators":[],"values":["3","4","5","6"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["4","a","b"]]},{"id":111733328,"text":"Fill the missing words to match the output.","code":"for(let row = 1; row <= 5; row++)\r\n{\r\n    let line = \"\";\r\n    for (let col = 1; col <= row; fillword)\r\n    {\r\n        if(row fillword col) {\r\n            line += fillword;\r\n        }\r\n        else {\r\n            line += \" \";\r\n        }\r\n    }\r\n    console.log(line);\r\n}","result":"1\r\n 2\r\n  3\r\n   4\r\n    5","words":{"operators":["<","==","!="],"values":[],"variables_constants":["col","row"],"others":["col++","row++"]},"correct_patterns":[["col++","==","row"],["col++","==","col"]]}]},{"id":5348538,"name":"Tricky Questions","tests":[{"id":966139253,"question":"What's the output of the code snippet?","code":"let a = 1;\r\nlet b = 1;\r\n\r\na++;\r\n++b;\r\nconsole.log(a + \" \" + b);","answers":["1 2","2 1","2 2"],"correct_answer":"2 2","explanation":"Both <code>a++<\/code> and <code>++b<\/code> increment the values by 1."},{"id":1916484914,"question":"What's the output of the code snippet?","code":"let a = 1;\r\nlet b = 1;\r\nconsole.log(++a + \" \" + b++);","answers":["1 1","2 1","2 2"],"correct_answer":"2 1","explanation":"<code>++a <\/code> returns the incremented result\r\n<br><br>\r\n<code>b++<\/code> returns the value before incrementation."},{"id":887643379,"question":"What's the output of the code snippet?","code":"let a = 2;\r\nlet b = 2;\r\n\r\n--a;\r\nb--;\r\n\r\nconsole.log(--a + \" \" + b--);","answers":["1 1","1 0","0 1"],"correct_answer":"0 1","explanation":"Both <code>--a<\/code> and <code>b--<\/code> decrement the value by 1.\r\n<br><br>\r\n<code>--a<\/code> returns the decremented value.\r\n<br><br>\r\n<code>b--<\/code> returns the value before decrementation."},{"id":1839037616,"question":"What's the output of the code snippet?","code":"let i = 0;\r\nfor (; i < 100; i++) ;\r\n\r\nconsole.log(i);","answers":["0","1","100"],"correct_answer":"100","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 100.\r\n<br><br>\r\n100 is the first value of <code>i<\/code> which breaks the condition <code>i < 100<\/code>."},{"id":641834097,"question":"What's the output of the code snippet?","code":"let i = 0;\r\nfor (; i <= 10; i+=2) ;\r\n\r\nconsole.log(i);","answers":["0","10","12"],"correct_answer":"12","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 12.\r\n<br><br>\r\n12 is the first value of <code>i<\/code> which breaks the condition <code>i <= 10<\/code>."}],"puzzles":[{"id":2136803857,"text":"Fill the missing words to match the output.","code":"let a = 3;\r\nlet b = 7;\r\n\r\nconsole.log(fillword + \" \" + fillword);","result":"3 8","words":{"operators":[],"values":[],"variables_constants":[],"others":["a++","++a","b++","++b"]},"correct_patterns":[["a++","++b"]]},{"id":805443038,"text":"Fill the missing words to match the output.","code":"let i = 0;\r\nfor (; i fillword fillword; i++) ;\r\n\r\nconsole.log(i);","result":"101","words":{"operators":["<","<=",">",">="],"values":["99","100"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","100"]]},{"id":1790391711,"text":"Fill the missing words to match the output.","code":"let i = 0;\r\nfor (; i fillword 10; i++);\r\n\r\nconsole.log(fillword);","result":"10","words":{"operators":[">",">=","<","<="],"values":[],"variables_constants":[],"others":["i++","++i"]},"correct_patterns":[["<","i++"]]}]},{"id":1661773835,"name":"Strings","tests":[{"id":194670886,"question":"What's the output of the code snippet?","code":"let str = \"Hello\";\r\nconsole.log(str[1]);","answers":["H","e","o"],"correct_answer":"e","explanation":"The string has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>H<\/td>\r\n            <td class=\"table-primary\">e<\/td>\r\n            <td>l<\/td>\r\n            <td>l<\/td>\r\n            <td>o<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1280217319,"question":"What's the output of the code snippet?","code":"let str1 = \"abc\";\r\nlet str2 = \"defg\";\r\n\r\nconsole.log(str1.length + str2.length);","answers":["7","8","9"],"correct_answer":"7","explanation":"The <code>length<\/code> property returns the count of the symbols:\r\n<br><br>\r\n<code>str1.length<\/code> is 3\r\n<br>\r\n<code>str2.length<\/code> is 4\r\n<br>\r\n3 + 4 = 7"},{"id":116633764,"question":"What's the output of the code snippet?","code":"let color = \"green\";\r\n\r\nconsole.log(color[4]);\r\nconsole.log(color[5]);","answers":["e n","n undefined","Exception"],"correct_answer":"n undefined","explanation":"<code>color<\/code> has the following structure:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>g<\/td>\r\n            <td>r<\/td>\r\n            <td>e<\/td>\r\n            <td>e<\/td>\r\n            <td class=\"btn-primary\">n<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br><br>\r\n<code>color[5]<\/code> accesses index that's outside of the bound (0 - 4) which returns undefined.\r\n<br><br>\r\nUnlike other languages accessing index outside of range in JavaScript returns undefined and does not cause exception."},{"id":2141245541,"question":"What's the output of the code snippet?","code":"let word = \"Arena\";\r\n\r\nconsole.log(word.includes(\"na\"));\r\nconsole.log(word.includes(\"A\"));","answers":["true true","true false","false true"],"correct_answer":"true true","explanation":"'na' is contained in 'Arena' so <br>\r\n<code>word.includes(\"na\")<\/code> returns true.\r\n<br><br>\r\n'A' is contained in 'Arena' (it's first symbol) so <br>\r\n<code>word.includes(\"A\")<\/code> returns true."},{"id":810938402,"question":"What's the output of the code snippet?","code":"let equation = \"160 + 135 = 295\";\r\n\r\nfor (let i = 0; i < equation.length; i++) {\r\n    let symbol = equation[i];\r\n\r\n    if(!'12'.includes(symbol)) {\r\n        console.log(symbol)\r\n    }\r\n}","answers":["160 + 135 = 295","60 + 35 = 95","1 1 2"],"correct_answer":"60 + 35 = 95","explanation":"The for loop iterates over each symbol of the equation.\r\n<br><br>\r\nOnly symbols that are not '1' and '2' are printed. That's specified via <code>!'12'.includes(symbol)<\/code>.\r\n<br><br>\r\n\r\nBasically <code>1<\/code>60 + <code>1<\/code>35 = <code>2<\/code>95 is simplified to: <br>\r\n60 + 35 = 95"}],"puzzles":[{"id":653269719,"text":"Fill the missing words to match the output.","code":"let str = 'clarity';\r\nconsole.log(str[fillword]);\r\nconsole.log(str[fillword]);\r\nconsole.log(str[fillword]);","result":"c a t","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","5"]]},{"id":530922132,"text":"Fill the missing words to match the output.","code":"let str = \"jacket\";\r\nconsole.log(str.fillword + fillword);","result":"10","words":{"operators":[],"values":["1","2","3","4","5","6","7","8"],"variables_constants":[],"others":["size","count","length"]},"correct_patterns":[["length","4"]]},{"id":184515090,"text":"Fill the missing words to match the output.","code":"let str = \"readability\";\r\n\r\nfor (let i = 0; i < str.length; i++)\r\n{\r\n    let symbol = str[i];\r\n    if (fillword.fillword(fillword))\r\n    {\r\n        console.log(symbol);\r\n    }\r\n}","result":"a a b","words":{"operators":[],"values":["\"readability\"","\"redility\"","\"ab\""],"variables_constants":[],"others":["contains","includes","length","symbol","str"]},"correct_patterns":[["\"ab\"","includes","symbol"]]}]}],"Advanced":[{"id":275342257,"name":"Arrays","tests":[{"id":418823230,"question":"What's the output of the code snippet?","code":"let arr = [5, 10, 15];\r\nconsole.log(arr[1]);","answers":["5","10","15"],"correct_answer":"10","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1369169919,"question":"What's the output of the code snippet?","code":"let colors = [\"blue\", \"green\", \"pink\"];\r\n\r\nfor(let i = 0; i < 2; i++)\r\n{\r\n    console.log(colors[i]);\r\n}","answers":["blue green","blue green pink","green pink"],"correct_answer":"blue green","explanation":"The loop executes for i = 0 and i = 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">blue<\/td>\r\n            <td class=\"table-primary\">green<\/td>\r\n            <td>pink<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":172556220,"question":"What's the output of the code snippet?","code":"let ages = [10, 15, 20, 25, 30];\r\nconsole.log(ages.length);","answers":["5","4","30"],"correct_answer":"5","explanation":"The <code>length<\/code> property is the count of the array elements.\r\n<br><br>\r\nThe array has 5 elements."},{"id":1291657085,"question":"What's the output of the code snippet?","code":"let numbers = [];\r\nconsole.log(numbers[0]);","answers":["undefined","null","Exception"],"correct_answer":"undefined","explanation":"The array does not contain any elements.\r\n<br><br>\r\nAccessing indexes that are out of array's bounds returns \"undefined\"."},{"id":94519098,"question":"What's the output of the code snippet?","code":"let numbers = [1, 2, 3];\r\nconsole.log(numbers[3]);","answers":["3","1","undefined"],"correct_answer":"undefined","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nAccessing index that's outside of it's bounds returns \"undefined\"."}],"puzzles":[{"id":593778012,"text":"Fill the missing words to match the output.","code":"let arr = [8, 4, 5, 6, 3];\r\n\r\nconsole.log(arr[fillword]);\r\nconsole.log(arr[fillword]);\r\nconsole.log(arr[fillword]);","result":"8 5 3","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","4"]]},{"id":1678341405,"text":"Fill the missing words to match the output.","code":"let arr = [5, 7, 9, 3];\r\n\r\nfor(let i = fillword; i < fillword; i++)\r\n{\r\n    console.log(arr[fillword]);\r\n}","result":"5 7 9 3","words":{"operators":[],"values":["0","1","2","3","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["0","4","i"]]},{"id":1589482714,"text":"Fill the missing words to match the output.","code":"let arr = [1, 2, 9, 8, 6];\r\n\r\nfor(let i = 0; i < fillword; i++)\r\n{\r\n    if(i % 2 == fillword) {\r\n        console.log(arr[fillword]);\r\n    }\r\n}","result":"1 9 6","words":{"operators":[],"values":["0","1","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","i"]]}]},{"id":1811252378,"name":"Functions","tests":[{"id":2119655163,"question":"What's the output of the code snippet?","code":"a();\r\n\r\nfunction a() {\r\n\tconsole.log(\"1\");\r\n}\r\nfunction b() {\r\n\tconsole.log(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>a();<\/code> calls the <code>a<\/code> function thus \"1\" is printed."},{"id":923041464,"question":"What's the output of the code snippet?","code":"let sum = getSum(2,4,3);\r\nconsole.log(sum);\r\n\r\nfunction getSum(a, b, c) {\r\n    return a + b + c;\r\n}","answers":["0","9","243"],"correct_answer":"9","explanation":"The <code>getSum<\/code> function is called with 3 parameters - 2, 4 and 3 which sum is 9."},{"id":1772658297,"question":"What's the output of the code snippet?","code":"printArg();\r\n\r\nfunction printArg(number) {\r\n    console.log(number);\r\n}","answers":["null","Exception","undefined"],"correct_answer":"undefined","explanation":"The function <code>printArg<\/code> accepts 1 argument but none are passed to it thus <code>number<\/code> takes a default value - undefined."},{"id":576568838,"question":"What's the output of the code snippet?","code":"printName();\r\nprintName(\"Joe\");\r\n\r\nfunction printName(name = \"Unknown\") {\r\n    console.log(name);\r\n}","answers":["Unknown Unknown","Unknown Joe","Exception"],"correct_answer":"Unknown Joe","explanation":"A default value is set to the <code>name<\/code> argument - <code>\"Unknown\"<\/code>.\r\n<br><br>\r\nWhen <code>printName<\/code> is called without argument <code>name<\/code> takes it's default value - <code>Unknown<\/code>."},{"id":453171655,"question":"What's the output of the code snippet?","code":"console.log(getProd(3));\r\n\r\nfunction getProd(num1, num2 = 2) {\r\n    return num1 * num2;\r\n}","answers":["2","3","6"],"correct_answer":"6","explanation":"The <code>num2<\/code> argument has a default value - <code>2<\/code>.\r\n<br><br>\r\nSince <code>getProd(3)<\/code> does not pass value for  <code>num2<\/code>, it takes it's default value - <code>2<\/code>."}],"puzzles":[{"id":392344731,"text":"Fill the missing words to match the output.","code":"fillword;\r\nfillword;\r\n\r\nfunction a() {\r\n    console.log(1);\r\n}\r\nfunction b() {\r\n    console.log(2);\r\n}","result":"1\r\n2","words":{"operators":[],"values":[],"variables_constants":[],"others":["a","b","a()","b()"]},"correct_patterns":[["a()","b()"]]},{"id":1209521240,"text":"Fill the missing words to match the output.","code":"let sum = sumNums(fillword);\r\nconsole.log(sum);\r\n\r\nfillword sumNums(a, b) {\r\n    fillword a + b;\r\n}","result":"7","words":{"operators":[],"values":[],"variables_constants":[],"others":["function","return","get","2, 5","7"]},"correct_patterns":[["2, 5","function","return"]]},{"id":46461977,"text":"Fill the missing words to match the output.","code":"printArgs(fillword);\r\n\r\nfunction printArgs(a, b, fillword) {\r\n  console.log(a + \" \" + b + \" \" + c);\r\n}","result":"1 2 5","words":{"operators":[],"values":[],"variables_constants":[],"others":["c","c = 5","1, 2","1, 2, 3"]},"correct_patterns":[["1, 2","c = 5"]]}]},{"id":748332123,"name":"Objects","tests":[{"id":1572338052,"question":"What's the output of the code snippet?","code":"let clothes = [];\r\nclothes[\"Sweather\"] = 55;\r\nclothes[\"Jeans\"] = 45;\r\n\r\nconsole.log(clothes[\"Jeans\"]);","answers":["0","45","55"],"correct_answer":"45","explanation":"The object has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Sweather<\/td>\r\n            <td class=\"table-primary\">Jeans<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>55<\/td>\r\n            <td class=\"table-primary\">45<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe value 45 is accessed via the \"Jeans\" key."},{"id":375658821,"question":"What's the output of the code snippet?","code":"let fruits= [];\r\nfruits[\"strawberry\"] = 2.5;\r\nfruits[\"cherry\"] = 1.8;\r\n\r\nconsole.log(fruits[\"mango\"]);","answers":["null","2.5","undefined"],"correct_answer":"undefined","explanation":"The object doesn't contain \"mango\" key\r\nthus undefined is returned.\r\n<br><br>\r\nThe associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>strawberry<\/td>\r\n            <td>cherry<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>2.5<\/td>\r\n            <td>1.8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1326004482,"question":"What's the output of the code snippet?","code":"let personsAges = [];\r\n\r\npersonsAges[\"John\"] = 22;\r\npersonsAges[\"Alex\"] = 25;\r\n\r\nfor(const [key, value] of Object.entries(personsAges)) {\r\n  console.log(key);\r\n}","answers":["John Alex","Alex John","22 25"],"correct_answer":"John Alex","explanation":"The object has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>John<\/td>\r\n            <td>Alex<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>22<\/td>\r\n            <td>25<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe for loop prints only the keys."},{"id":29251779,"question":"What's the output of the code snippet?","code":"let playerScores = [];\r\n\r\nplayerScores[\"Snowy\"] = 123;\r\nplayerScores[\"Avian\"] = 130;\r\n\r\nfor(const [key, value] of Object.entries(playerScores)) {\r\n    if(value > 125) {\r\n        console.log(key);\r\n    }\r\n}","answers":["Snowy","Avian","Snowy Avian"],"correct_answer":"Avian","explanation":"2 key-value pairs are added.\r\n<br><br>\r\nThe for loop prints all keys which value meets the condition <code>value > 125<\/code> .\r\n<br><br>\r\nThe final structure of the object is:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Snowy<\/td>\r\n            <td>Avian<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>123<\/td>\r\n            <td>130<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2053339264,"question":"What's the output of the code snippet?","code":"let person = {\r\n    name: \"Alex\",\r\n    car: {\r\n        make: \"Ford\",\r\n        model: \"Fiesta\"\r\n    }\r\n};\r\n\r\nconsole.log(person.car.make);","answers":["undefined","Ford","Exception"],"correct_answer":"Ford","explanation":"<code>person.car<\/code> matches the following: <br><br><code>{<br>\r\n&nbsp; make: \"Ford\",<br>\r\n&nbsp; model: \"Fiesta\"<br>\r\n    }<\/code>\r\n<br><br>\r\n<code>person.car.make<\/code> matches <code>Ford<\/code>."}],"puzzles":[{"id":2070484902,"text":"Fill the missing words to match the output.","code":"let persons = {};\r\npersons.fillword = fillword;\r\npersons.fillword = fillword;\r\n\r\nconsole.log(persons.James);\r\nconsole.log(persons.Sophia);","result":"26 22","words":{"operators":[],"values":["20","22","26","Jake","James","Sophia"],"variables_constants":[],"others":[]},"correct_patterns":[["Sophia","22","James","26"],["James","26","Sophia","22"]]},{"id":1008613223,"text":"Fill the missing words to match the output.","code":"let device = {\r\n    width: 640,\r\n    height: 480,\r\n\r\n    printResolution() {\r\n      console.log(fillword.fillword+ 'x' + fillword.fillword);\r\n    }\r\n}\r\n\r\ndevice.printResolution();","result":"640x480","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","width","width","height","height","resolution","resolution"]},"correct_patterns":[["this","width","this","height"]]},{"id":1992513316,"text":"Fill the missing words to match the output.","code":"let colors = {\r\n  'White': '#ffffff',\r\n  'Black': '#000000',\r\n  'Green': '#00ff00'\r\n};\r\n\r\nfor (const [key, value] of fillword.fillword(colors)) {\r\n  console.log(fillword + ': ' + fillword);\r\n}","result":"White: #ffffff\r\nBlack: #000000\r\nGreen: #00ff00","words":{"operators":[],"values":[],"variables_constants":[],"others":["Object","entries","data","key","keys","value","values"]},"correct_patterns":[["Object","entries","key","value"]]}]},{"id":1699726360,"name":"Matrix","tests":[{"id":857184321,"question":"What's the output of the code snippet?","code":"let matrix = [\r\n    [2, 4, 6],\r\n    [1, 3, 5]\r\n];\r\n\r\nconsole.log(matrix[1][1]);","answers":["1","2","3"],"correct_answer":"3","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th class=\"btn-primary\">[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>2<\/td>\r\n            <td>4<\/td>\r\n            <td>6<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[1]<\/th>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1975826446,"question":"What's the output of the code snippet?","code":"let matrix = [\r\n    [5, 7, 8],\r\n    [2, 2, 3],\r\n    [4, 4, 9]\r\n];\r\n\r\nconsole.log(matrix[2][2]);","answers":["2","4","9"],"correct_answer":"9","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th class=\"btn-primary\">[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>5<\/td>\r\n            <td>7<\/td>\r\n            <td>8<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>2<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[2]<\/th>\r\n            <td>4<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":778689487,"question":"What's the output of the code snippet?","code":"let matrix = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n];\r\n\r\nfor(let i = 0; i < 3; i++)\r\n{\r\n    console.log(matrix[i][i]);\r\n}","answers":["0 4 8","0 3 6","0 1 2"],"correct_answer":"0 4 8","explanation":"Via the for loop the row-col positions of the matrix are: <br>\r\n[0][0],  [1][1], [2][2].\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td>6<\/td>\r\n            <td>7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1730083724,"question":"What's the output of the code snippet?","code":"let matrix = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n];\r\n\r\nfor(let i = 0; i < 3; i++)\r\n{\r\n    for (let j = 0; j < 3; j++)\r\n    {\r\n        if (i == 2 || j == 2)\r\n        {\r\n            console.log(matrix[i][j]);\r\n        }\r\n    }\r\n}","answers":["0 1 3 4","2 5 6 7 8","6 7 8"],"correct_answer":"2 5 6 7 8","explanation":"In this case <code>i<\/code> represents the row index and <code>j<\/code> - the column.<br><br>\r\nBasically the elements of the last column and row are printed.\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td class=\"btn-primary\">6<\/td>\r\n            <td class=\"btn-primary\">7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1505958733,"question":"What's the output of the code snippet?","code":"let matrix = [\r\n    [ 0, 1, 0, 1, 0 ],\r\n    [ 1, 0, 1, 0, 1 ],\r\n    [ 0, 1, 0, 1, 0 ],\r\n    [ 1, 0, 1, 0, 1 ],\r\n];\r\n\r\nlet sum = 0;\r\nfor(let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 5; j++) {\r\n        if ((i + j) % 2 == 0) {\r\n            sum += matrix[i][j];\r\n        }\r\n    }\r\n}\r\nconsole.log(sum);","answers":["0","10","6"],"correct_answer":"0","explanation":"The elements which have even sum of row and column index are sumed.  It's like a chessboard field.\r\n<br><br>\r\nAll of the summed elements are 0s which makes the\r\nvalue of the <code>sum<\/code>  variable 0.\r\n<br><br>\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n            <th>[3]<\/td>\r\n            <th>[4]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[3]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":795899621,"text":"Fill the missing words to match the output.","code":"let matrix = [\r\n    [4, 1, 6, 3 ],\r\n    [2, 8, 0, 7 ]\r\n];\r\n\r\nconsole.log(matrix[fillword][fillword]);\r\nconsole.log(matrix[fillword][fillword]);","result":"3 0","words":{"operators":[],"values":["0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","3","1","2"]]},{"id":1613010594,"text":"Fill the missing words to match the output.","code":"let matrix = [\r\n    [ 4, 1, 6 ],\r\n    [ 3, 8, 0 ],\r\n    [ 7, 2, 5 ]\r\n];\r\nfor(i = 0; i < fillword; i++) {\r\n    console.log(matrix[fillword][fillword]);\r\n}","result":"1 8 2","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i"],"others":[]},"correct_patterns":[["3","i","1"]]},{"id":1523168867,"text":"Fill the missing words to match the output.","code":"let matrix = [\r\n    [ 5, 2, 8 ],\r\n    [ 1, 3, 6 ],\r\n    [ 4, 0, 7 ]\r\n];\r\n\r\nfor (let i = 0; i < 3; i++) {\r\n    for (let j = 0; j < 3; j++) {\r\n        if (i == fillword || j == fillword) {\r\n            console.log(matrix[fillword][j]);\r\n        }\r\n    }\r\n}","result":"5 1 4 0 7","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i","j"],"others":[]},"correct_patterns":[["2","0","i"]]}]},{"id":1610409945,"name":"Reference Passing","tests":[{"id":309345034,"question":"What's the output of the code snippet?","code":"let num = 5;\r\ndecrement(num);\r\nconsole.log(num);\r\n\r\nfunction decrement(num) {\r\n    num--;\r\n}","answers":["0","4","5"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 5 outside of the <code>decrement<\/code> function.\r\n<br><br>\r\nArrays and objects are passed by reference, numbers are not."},{"id":1260739275,"question":"What's the output of the code snippet?","code":"let num = 7;\r\nprintDecremented(num);\r\nconsole.log(num);\r\n\r\nfunction printDecremented(num)\r\n{\r\n    num--;\r\n    console.log(num);\r\n}","answers":["6 6","6 7","7 7"],"correct_answer":"6 7","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 7 outside of the <code>printDecremented<\/code> function.\r\n<br><br>\r\nDespite that, the value gets decremented inside the <code>printDecremented<\/code> function.\r\n<br><br>\r\nArrays and objects are passed by reference, numbers are not."},{"id":231373448,"question":"What's the output of the code snippet?","code":"let arr = [0, 1];\r\nadd1ToArray(arr);\r\nconsole.log(arr[0] + \" \" + arr[1]);\r\n\r\nfunction add1ToArray(arr)\r\n{\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n}","answers":["0 1","1 1","1 2"],"correct_answer":"1 2","explanation":"Array is always passed by reference so it's elements are modified outside the <code>add1ToArray<\/code> function."},{"id":1182702153,"question":"What's the output of the code snippet?","code":"let arr = [1, 1];\r\nadd1ToArray(arr);\r\narr[0] += 1;\r\narr[1] += 1;\r\nconsole.log(arr[0] + \" \" + arr[1]);\r\n\r\nfunction add1ToArray(arr)\r\n{\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n}","answers":["1 1","2 2","3 3"],"correct_answer":"3 3","explanation":"Array is always passed by reference so it's elements are modified in the <code>add1ToArray<\/code> function.\r\n<br><br>\r\nAfterwards the elements are incremented by one again."},{"id":1059306006,"question":"What's the output of the code snippet?","code":"let person = {\r\n  age: 17\r\n}\r\nincrementAge(person);\r\nconsole.log(person.age);\r\n\r\nfunction incrementAge(obj) {\r\n    obj.age++;\r\n}","answers":["0","17","18"],"correct_answer":"18","explanation":"Objects are always passed by reference.\r\n<br><br>\r\nFor that reason the age property is modified outside the <code>incrementAge<\/code> function."}],"puzzles":[{"id":327079456,"text":"Fill the missing words to match the output.","code":"let arr = [9, 10];\r\nlet number = 9;\r\n\r\nadd1(arr, number);\r\n\r\nconsole.log(fillword);\r\nconsole.log(fillword);\r\n\r\nfunction add1(arr, number) {\r\n    arr[0]++;\r\n    arr[1]++;\r\n    number++;\r\n}","result":"9 10","words":{"operators":[],"values":[],"variables_constants":["number","number - 1","arr[0]","arr[1]","arr[2]"],"others":[]},"correct_patterns":[["number","arr[0]"]]},{"id":1411641825,"text":"Fill the missing words to match the output.","code":"let arr = [0, 1, 2];\r\nadd1ToArr(arr);\r\n\r\nconsole.log(arr[fillword]);\r\nconsole.log(arr[fillword]);\r\n\r\nfunction add1ToArr(arr) {\r\n    arr[0]++;\r\n    arr[1]++;\r\n    arr[2]++;\r\n}","result":"1 2","words":{"operators":[],"values":["-1","0","1","2","3","4"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]},{"id":248517038,"text":"Fill the missing words to match the output.","code":"let person = {\r\n  age: 17\r\n};\r\nlet num = 17;\r\nchangeVarAndObj(num, person, 18);\r\n\r\nconsole.log(fillword, fillword);\r\n\r\nfunction changeVarAndObj(num, obj, val) {\r\n    obj.age = val;\r\n    num = val;\r\n}","result":"17 18","words":{"operators":[],"values":[],"variables_constants":[],"others":["num","num - 1","person","person.age","person.age - 1","person.age +1"]},"correct_patterns":[["num","person.age"]]}]},{"id":278988646,"name":"Sets","tests":[{"id":1909507543,"question":"What's the output of the code snippet?","code":"let cities = new Set([\"Rome\", \"Rome\", \"Beljing\"]);\r\n\r\ncities.forEach(function(city) {\r\n  console.log(city);\r\n});","answers":["Rome Rome","Rome Rome Beljing","Rome Beljing"],"correct_answer":"Rome Beljing","explanation":"Set holds only unique values. \r\n<br><br>\r\nFor that reason \"Rome\" is contained only once."},{"id":713418132,"question":"What's the output of the code snippet?","code":"let names = new Set([\"Michelle\", \"Emily\", \"Ally\", \"Ally\"]);\r\nconsole.log(names.size);","answers":["2","3","4"],"correct_answer":"3","explanation":"Set holds only unique values. \r\n<br><br>\r\nThe \"Ally\" value is contained only once.\r\n<br><br>\r\nThe Set holds 3 values - \"Michelle\", \"Emily\" and \"Ally\"."},{"id":1663698261,"question":"What's the output of the code snippet?","code":"let socialMedias = new Set();\r\n\r\nsocialMedias.add(\"Instagram\");\r\nsocialMedias.add(\"Snapchat\");\r\n\r\nsocialMedias.add(\"Facebook\");\r\nsocialMedias.add(\"Facebook\");\r\nsocialMedias.delete(\"Facebook\");\r\n\r\nconsole.log(socialMedias.size);","answers":["2","3","4"],"correct_answer":"2","explanation":"The Set holds only unique values.\r\n<br><br>\r\nWhen \"Facebook\" value is removed only 2 values remain - \"Instagram\" and \"Snapchat\"."},{"id":635381010,"question":"What's the output of the code snippet?","code":"let colors = new Set([\"gray\", \"blue\"]);\r\nconsole.log(colors.has(\"blue\"));","answers":["pink","false","true"],"correct_answer":"true","explanation":"The Set contains 2 values - \"gray\" and \"blue\".\r\n<br><br>\r\n\"blue\" is contained in the Set thus the <code>has<\/code> method returns true."},{"id":512509139,"question":"What's the output of the code snippet?","code":"let devices = new Set([\"smartphone\", \"tablet\"]);\r\ndevices.delete(\"tablet\");\r\n\r\nconsole.log(devices.has(\"tablet\"));","answers":["tablet","true","false"],"correct_answer":"false","explanation":"The tablet value is removed from the Set thus the <code>has<\/code> method returns false."}],"puzzles":[{"id":1199911279,"text":"Fill the missing words to match the output.","code":"let names = new Set();\r\n\r\nnames.add(\"Mia\");\r\nnames.add(\"Lucas\");\r\nnames.add(fillword);\r\nnames.add(fillword);\r\n\r\nconsole.log(names.size);","result":"2","words":{"operators":[],"values":["\"Jo\"","\"Mia\"","\"Joe\"","\"Lucas\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Mia\"","\"Lucas\""],["\"Lucas\"","\"Mia\""]]},{"id":942297388,"text":"Fill the missing words to match the output.","code":"let numbers = new Set();\r\n\r\nnumbers.add(fillword);\r\nnumbers.add(5);\r\nnumbers.add(fillword);\r\n\r\nnumbers.delete(fillword);\r\n\r\nnumbers.forEach(function(num) {\r\n  console.log(num);\r\n});","result":"1 7","words":{"operators":[],"values":["1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["1","7","5"]]},{"id":1927246061,"text":"Fill the missing words to match the output.","code":"let cities = new Set();\r\n\r\ncities.add(fillword);\r\ncities.add(\"London\");\r\ncities.add(fillword);\r\n\r\nconsole.log(cities.fillword(fillword));","result":"true","words":{"operators":[],"values":["\"Moscow\"","\"Wellington\"","\"London\""],"variables_constants":[],"others":["has","equals","indexOf"]},"correct_patterns":[["\"Moscow\"","\"Wellington\"","has","\"London\""],["\"Wellington\"","\"Moscow\"","has","\"London\""]]}]},{"id":1230382887,"name":"Recursion","tests":[{"id":1462854800,"question":"What's the output of the code snippet?","code":"console.log(sum(4));\r\n\r\nfunction sum(num)\r\n{\r\n    if (num === 1)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    return num + sum(num - 1);\r\n}","answers":["1","4","10"],"correct_answer":"10","explanation":"The <code>sum<\/code> function sums the numbers from n to 1.\r\n<br><br> \r\nIn this case 4 + 3 + 2 + 1 = 10.\r\n<br><br>\r\nThe recursion ends when the condition <code>num === 1<\/code> is met."},{"id":166036561,"question":"What's the output of the code snippet?","code":"console.log(sum(3));\r\n\r\nfunction sum(num)\r\n{\r\n    return num + sum(num - 1);\r\n}","answers":["3","6","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"There is no end condition of the recursion so  Stackoverflow Exception is thrown.\r\n<br><br>\r\nA suitable end condition could be: <br>\r\nif(num == 1) return 1;"},{"id":1116382238,"question":"What's the output of the code snippet?","code":"let arr = [1, 2, 3, 4];\r\nprint(arr, 0);\r\n\r\nfunction print(arr, index)\r\n{\r\n    if(index < arr.length) {\r\n        console.log(arr[index]);\r\n        print(arr, index + 1);\r\n    }\r\n}","answers":["1","1 2 3 4","Stackoverflow Exception"],"correct_answer":"1 2 3 4","explanation":"The function prints all elements of the array by passing array and  index of element.\r\n<br><br>\r\nThe index gets incremented each time so the next element is printed.\r\n<br><br>\r\nThe recursion ends when the condition <code>index < arr.length<\/code> becomes false."},{"id":994035679,"question":"What's the output of the code snippet?","code":"let arr = [ 1, 2, 3, 4, 5];\r\nprintUntilZero(arr, 0);\r\n\r\nfunction printUntilZero(arr, index)\r\n{\r\n    if(arr[index] !== 0) {\r\n        console.log(arr[index]);\r\n        printUntilZero(arr, index + 1);\r\n    }\r\n}","answers":["0","1 2 3 4 5","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"The recursion is supposed to end when element with value of zero is found.\r\n<br><br>\r\nThe passed array does not contain any 0s so the recursion repeats itself infinitely."},{"id":2112677788,"question":"What's the output of the code snippet?","code":"let sum = calculate(7);\r\nconsole.log(sum);\r\n\r\nfunction calculate(num) {\r\n    if(num === 0) {\r\n        return 0;\r\n    }\r\n\r\n    if(num % 2 === 1) {\r\n        num--;\r\n    }\r\n\r\n    return num + calculate(num - 2);\r\n}","answers":["7","12","16"],"correct_answer":"12","explanation":"The function <code>calculate<\/code> sums the numbers 6, 4, 2 and 0.\r\n<br><br>\r\n6 + 4 + 2 + 0 = 12"}],"puzzles":[{"id":730042538,"text":"Fill the missing words to match the output.","code":"let sum = sumNums(fillword);\r\nconsole.log(sum);\r\n\r\nfunction sumNums(num) {\r\n    if (num > 1) {\r\n        return fillword + sumNums(fillword);\r\n    }\r\n\r\n    return fillword;\r\n}","result":"15","words":{"operators":[],"values":["-1","0","1","3","4","5"],"variables_constants":["num","num - 1","num + 1"],"others":[]},"correct_patterns":[["5","num","num - 1","1"]]},{"id":1815130219,"text":"Fill the missing words to match the output.","code":"printUntil(2, fillword);\r\n\r\nfunction printUntil(printNum, stop) {\r\n    if (fillword <= stop) {\r\n        console.log(printNum);\r\n        printUntil(fillword, fillword);\r\n    }\r\n}","result":"2 4 8 16","words":{"operators":[],"values":["8","16","32"],"variables_constants":[],"others":["printNum","printNum + 2","printNum * 2","stop","stop * 2"]},"correct_patterns":[["16","printNum","printNum * 2","stop"]]},{"id":652595240,"text":"Fill the missing words to match the output.","code":"let arr = [1, 5, 6, 7, 9];\r\nprintElems(arr, 0);\r\n\r\nfunction printElems(arr, index) {\r\n    if (index < arr.length) {\r\n        console.log(arr[fillword]);\r\n        printElems(fillword, index + fillword);\r\n    }\r\n}","result":"1 5 6 7 9","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["index","arr","arr.length"]},"correct_patterns":[["index","arr","1"]]}]}],"OOP":[{"id":1226670974,"name":"Classes And Objects","tests":[{"id":1970396602,"question":"How many objects are created in the code segment?","code":"class PC {}\r\nclass Headphones {}\r\n\r\nlet pc1 = new PC();\r\nlet pc2 = new PC();\r\nlet headphones = new Headphones();","answers":["1","2","3"],"correct_answer":"3","explanation":"There are 3 objects - <code>pc1<\/code>, <code>pc2 <\/code> and <code>headphones<\/code>.\r\n<br><br>\r\nAlso there  are 2 classes - <code>PC<\/code> and <code>Headphones<\/code>."},{"id":774307195,"question":"How many classes are defined in the code segment?","code":"class Tablet {};\r\n\r\nlet tablet1 = new Tablet();\r\nlet tablet2 = new Tablet();","answers":["0","1","2"],"correct_answer":"1","explanation":"There is 1 class - <code>Tablet<\/code> .\r\n<br><br>\r\nThere are 2 objects - <code>tablet1<\/code> and <code>tablet2<\/code> ."},{"id":1623924024,"question":"Which of the following is a class member?","code":"class Square {\r\n    calcArea() {\r\n        return this.a * this.a;\r\n    }\r\n}\r\n\r\nvar sq = new Square();\r\nsq.a = 3;\r\nconsole.log(sq.calcArea());","answers":["sq","calcArea","Square"],"correct_answer":"calcArea","explanation":"<ul>\r\n<li><code>calcArea<\/code> is a class member.<\/li>\r\n<li><code>Square <\/code> is the class name.<\/li>\r\n<li><code>sq<\/code> is a class object.<\/li>\r\n<\/ul>"},{"id":1501052153,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    calcPerimeter() {\r\n        return 2 * (this.a + this.b);\r\n    }\r\n}\r\n\r\nvar rect = new Rectangle;\r\nrect.a = 2;\r\nrect.b = 3;\r\nconsole.log(rect.calcPerimeter());","answers":["5","6","10"],"correct_answer":"10","explanation":"Calculations behind <code>calcPerimeter<\/code>:\r\n<br>\r\n2 * (2 + 3) = <br>\r\n2 * 5 = <br>\r\n10"},{"id":304962694,"question":"What's the output of the code snippet?","code":"class Headphones {}\r\n\r\nlet obj = new Headphones();\r\nlet price = 35;\r\nobj.price = price;\r\n\r\nprice++;\r\nconsole.log(obj.price);\r\nobj.price++;\r\nconsole.log(obj.price);","answers":["35 35","35 36","36 37"],"correct_answer":"35 36","explanation":"Modifying the <code>price<\/code> variable does not change  the value of the class member."}],"puzzles":[{"id":529200105,"text":"Define a class.","code":"fillword fillword fillword fillword","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Employee","class","(",")","{","}"]},"correct_patterns":[["class","Employee","{","}"]]},{"id":1346311094,"text":"Create Objects.","code":"class Smartphone {}\r\n\r\nlet obj1 = fillword fillword();\r\nlet obj2 = new fillword fillword ;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Smartphone","Smartphone","new","new","()","()"]},"correct_patterns":[["new","Smartphone","Smartphone","()"]]},{"id":183251831,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    represent() {\r\n        console.log(\"My name is \" + this.name + \". \");\r\n        console.log(\"I am \" + this.age + \" years old.\");\r\n    }\r\n}\r\n\r\nlet fillword = new Person();\r\nperson.fillword = fillword;\r\nperson.fillword= 22;\r\nperson.represent();","result":"My name is Joe. I am 22 years old.","words":{"operators":[],"values":["\"Joe\"","17","22"],"variables_constants":["person"],"others":["name","years","age"]},"correct_patterns":[["person","name","\"Joe\"","age"]]}]},{"id":63087423,"name":"This Keyword","tests":[{"id":1423080519,"question":"What's the output of the code snippet?","code":"class Person {\r\n    printData() {\r\n        console.log(this.name + \" \" + this.age);\r\n    }\r\n}\r\n\r\nvar person = new Person();\r\nperson.name = \"Jane\";\r\nperson.age = 20;\r\nperson.printData();","answers":["Jane 20","Jane","20"],"correct_answer":"Jane 20","explanation":"The <code>printData<\/code> function prints the name and age members that are set to be \"Jane\" and 20."},{"id":226925572,"question":"What's the output of the code snippet?","code":"class Square {\r\n    getArea() {\r\n        return this.side * this.side;\r\n    }\r\n    printData() {\r\n        console.log(\"Side = \" + this.side +\r\n                \" Area = \" + this.getArea());\r\n    }\r\n}\r\n\r\nvar square = new Square();\r\nsquare.side = 5;\r\nsquare.printData();","answers":["Side = 0 Area = 0","Side = 5 Area = 25","Side = 5 Area = 10"],"correct_answer":"Side = 5 Area = 25","explanation":"The <code>printData<\/code> functions prints the <code>side<\/code> member (5) and the result of the <code>getArea<\/code> function (5x5 = 25)."},{"id":1177272261,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    getPerimeter() {\r\n        return 2 * (this.a + this.b);\r\n    }\r\n    printData() {\r\n        console.log(this.a + \" \" + this.b + \" \" + this.getPerimeter());\r\n    }\r\n}\r\n\r\nvar obj = new Rectangle();\r\nobj.a = 6;\r\nobj.b = 2;\r\nobj.printData();","answers":["6 2 16","2 6 8","6 2 8"],"correct_answer":"6 2 16","explanation":"The <code>printData<\/code> functions prints the <code>a<\/code> member (6), <code>b<\/code> member (2) and the result of the <code>getPerimeter<\/code> function (2 x (6 + 2) = 16)."},{"id":953737090,"question":"What's the output of the code snippet?","code":"class TV {}\r\n\r\nvar obj = new TV();\r\nobj.price = 200;\r\nconsole.log(this.price);","answers":["0","200","undefined"],"correct_answer":"undefined","explanation":"<code>this<\/code> is used to access class members inside the class body.\r\n<br><br>\r\nIt's meaning is totally different outside the class body."},{"id":1905131331,"question":"What's the output of the code snippet?","code":"class Truck {\r\n    setColor(color) {\r\n        this.color = color;\r\n    }\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n}\r\nvar obj = new Truck();\r\nobj.setColor(\"white\");\r\nconsole.log(obj.getColor());","answers":["null","white","undefined"],"correct_answer":"white","explanation":"<code>setColor<\/code> sets the value of the <code>color<\/code> property.\r\n<br><br>\r\n<code>getColor<\/code> accesses the value of the <code>color<\/code> property."}],"puzzles":[{"id":1133597492,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    printResolution() {\r\n        console.log(fillword.fillword + \"x\" + fillword.fillword);\r\n    }\r\n}\r\n\r\nlet obj = new Device();\r\nobj.width = 1280;\r\nobj.height = 720;\r\n\r\nobj.printResolution();","result":"1280x720","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","width","height","resolution"]},"correct_patterns":[["this","width","this","height"]]},{"id":71725813,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    calcPerimeter() {\r\n        return fillword.fillword * 4;\r\n    }\r\n    calcSemiPerimeter() {\r\n        return fillword.fillword \/ 2;\r\n    }\r\n}\r\n\r\nlet obj = new Square();\r\nobj.side = 3;\r\nconsole.log(\"P = \" + obj.calcPerimeter());\r\nconsole.log(\"p = \" + obj.calcSemiPerimeter());","result":"P = 12\r\np = 6","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","side","perimeter","calcPerimeter()","calcSemiPerimeter()"]},"correct_patterns":[["this","side","this","calcPerimeter()"]]},{"id":2129302194,"text":"Fill the missing words to match the output.","code":"class Cube {\r\n    calcVolume() {\r\n        return Math.pow(this.side, 3);\r\n    }\r\n    printDetails() {\r\n        console.log(\"Side = \" + fillword.fillword);\r\n        console.log(\"Volume = \" + fillword.fillword);\r\n    }\r\n}\r\n\r\nlet cube = new Cube();\r\ncube.side = 3;\r\ncube.printDetails();","result":"Side = 3\r\nVolume = 27","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","side","printDetails()","calcVolume()","3"]},"correct_patterns":[["this","side","this","calcVolume()"]]}]},{"id":1148699388,"name":"Getters And Setters","tests":[{"id":707927808,"question":"What's the output of the code snippet?","code":"class Square {\r\n    get area() {\r\n        return this.side * this.side;\r\n    }\r\n}\r\n\r\nvar obj = new Square();\r\nobj.side = 3;\r\nconsole.log(obj.area);","answers":["3","9","undefined"],"correct_answer":"9","explanation":"<code>obj.area<\/code> calls the <code>get area()<\/code> function.\r\n<br><br>\r\n<code>get area()<\/code>  calculations:\r\n<br>\r\n3 x 3 = <br>\r\n9"},{"id":1827094209,"question":"What's the output of the code snippet?","code":"class Building {\r\n    set height(value) {\r\n        this._height = value + 1;\r\n    }\r\n}\r\n\r\nlet obj = new Building();\r\nobj.height = 16;\r\nconsole.log(obj.height);","answers":["16","17","undefined"],"correct_answer":"undefined","explanation":"<code>obj.height = 16<\/code> calls the <code>set height(value)<\/code> function.\r\n<br><br>\r\nIt sets value to the <code>_height<\/code> property.\r\n<br><br>\r\nNo value is set for the propety <code>height<\/code>.\r\n<br><br>\r\nThe <code>height<\/code> property remains with it's default value - undefined."},{"id":630480526,"question":"What's the output of the code snippet?","code":"class Apartment {\r\n    get roomsCount() {\r\n        return this._roomsCount + 1;\r\n    }\r\n    set roomsCount(value) {\r\n        this._roomsCount = value + 1\r\n    }\r\n}\r\n\r\nvar obj = new Apartment();\r\nobj.roomsCount = 2;\r\nconsole.log(obj.roomsCount);","answers":["2","3","4"],"correct_answer":"4","explanation":"<code>obj.roomsCount = 2<\/code> calls <code>set roomsCount(value)<\/code>.\r\n<br><br>\r\n<code>console.log(obj.roomsCount)<\/code> calls <code>get roomsCount(value)<\/code>.\r\n<br><br>\r\nThe setter increments the passed value by 1.\r\n<br><br>\r\nThe getter returns the incremented value of the <code>_roomsCount<\/code> property.\r\n<br><br>\r\nCalculations: <br>\r\n2 + 1 + 1 = 4"},{"id":507084367,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n    set price(value) {\r\n        if(value < 0) {\r\n            this._price = 0;\r\n            return;\r\n        }\r\n        this._price = value;\r\n    }\r\n    get price() {\r\n        return this._price;\r\n    }\r\n}\r\n\r\nvar obj = new Smartphone();\r\nobj.price = -2;\r\nconsole.log(obj.price);","answers":["-2","0","undefined"],"correct_answer":"0","explanation":"<code>obj.price = -2<\/code> calls the <code>set price(value)<\/code> method.\r\n<br><br>\r\nThe passed value (-2) meets the condition <code>value < 0<\/code> so a value of 0 is set to the property <code>_price<\/code>.\r\n<br><br>\r\n<code>console.log(obj.price)<\/code> calls the <code>get price()<\/code> method.\r\n<br><br>"},{"id":1357749772,"question":"What's the output of the code snippet?","code":"class Product {\r\n    get price() {\r\n        return this.price;\r\n    }\r\n}\r\n\r\nlet obj = new Product();\r\nobj.price = 15;\r\nconsole.log(obj.price);","answers":["undefined","15","Exception"],"correct_answer":"Exception","explanation":"<code>console.log(obj.price)<\/code> calls the <code>get price()<\/code> method.\r\n<br><br>\r\n<code>this.price<\/code> calls the <code>get price()<\/code> method and forms an infinite recursion.\r\n<br><br>\r\n<code>this.price<\/code> needs to be replaced with <code>this._price<\/code> to avoid the exception.\r\n<br><br>\r\nAfterwards a setter should be added."}],"puzzles":[{"id":933212787,"text":"Fill the missing words to match the output.","code":"class Rectangle {\r\n    get perimeter() {\r\n        return 2 * (this.width + this.height);\r\n    }\r\n    get area() {\r\n        return this.width * this.height;\r\n    }\r\n}\r\n\r\nlet obj = new Rectangle();\r\nobj.width = 5;\r\nobj.height = 6;\r\nconsole.log(fillword.fillword);","result":"30","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj","obj","area","perimeter","getArea()","getPerimeter()"]},"correct_patterns":[["obj","area"]]},{"id":1749865008,"text":"Fill the missing words to match the output.","code":"class Cube {\r\n    get side() {\r\n        return this.fillword;\r\n    }\r\n    set side(val) {\r\n        this.fillword= val;\r\n    }\r\n\r\n    get volume() {\r\n        return Math.pow(this.fillword, 3);\r\n    }\r\n}\r\n\r\nlet obj = new Cube();\r\nobj.side = 3;\r\nconsole.log(obj.fillword+ ' ' +obj.fillword);","result":"3 27","words":{"operators":[],"values":[],"variables_constants":[],"others":["_side","_side","side","side","side","volume","_volume"]},"correct_patterns":[["_side","_side","side","side","volume"]]},{"id":586284529,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword name() {\r\n        return this._name;\r\n    }\r\n    fillword name(val) {\r\n        this._name = val;\r\n    }\r\n    fillword age() {\r\n        return this._age;\r\n    }\r\n    fillword age(val) {\r\n        this._age = val;\r\n    }\r\n}\r\n\r\nlet obj = new Person();\r\nobj.name = \"Ian\";\r\nobj.age = 19;\r\nconsole.log(obj.name + \" \" + obj.age);","result":"Ian 19","words":{"operators":[],"values":[],"variables_constants":[],"others":["get","get","get","get","set","set","set","set"]},"correct_patterns":[["get","set","get","set"]]}]},{"id":1025827517,"name":"Getters And Setters Customization","tests":[{"id":160610765,"question":"What's the output of the code snippet?","code":"class Website {\r\n    setDomain(domain) {\r\n        this.domain = domain\r\n    }\r\n}\r\n\r\nvar obj = new Website();\r\nobj.setDomain(\"example.com\");\r\nconsole.log(obj.domain);","answers":["example.com","undefined","null"],"correct_answer":"example.com","explanation":"<code>obj.setDomain<\/code> sets value to the <code>domain<\/code> property.\r\n<br><br>\r\n<code>obj.domain<\/code> accesses the <code>domain<\/code> property."},{"id":1112005002,"question":"What's the output of the code snippet?","code":"class Processor {\r\n    setData(value) {\r\n        [this.manufacturer, this.model] = value.split(' ')\r\n    }\r\n    getManufacturer() {\r\n        return this.manufacturer;\r\n    }\r\n}\r\n\r\nvar obj = new Processor();\r\nobj.setData(\"Intel I7\");\r\nconsole.log(obj.getManufacturer());","answers":["Intel","I7","Exception"],"correct_answer":"Intel","explanation":"<code>setData<\/code> function sets value to the <code>manufacturer<\/code> and <code>model<\/code> properties.\r\n<br><br>\r\n<code>value.split(' ')<\/code> returns the following array: <code>[\"Intel\", \"I7\"]<\/code>.\r\n<br><br>\r\nBasically <code>[this.manufacturer, this.model] = [\"Intel\", \"I7\"]<\/code> is the same as: <br>\r\n<code>this.manufacturer = \"Intel\"<\/code><br>\r\n<code>this.model= \"I7\"<\/code><br>"},{"id":83163467,"question":"What's the output of the code snippet?","code":"class Square {\r\n    getSide(format) {\r\n        var result = this.side;\r\n        if(format) {\r\n            result = result.toFixed(2);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet obj = new Square();\r\nobj.side = 1.567;\r\nconsole.log(obj.getSide(true) + \" \" + obj.getSide());","answers":["1.567 1.567","1.57 1.567","1.57 1.57"],"correct_answer":"1.57 1.567","explanation":"<code>getSide(true)<\/code> rounds the <code>side<\/code> to 2 digits after the decimal point.\r\n<br><br>\r\n<code>getSide()<\/code> (without passed parameters) returns the raw value of the <code>side<\/code> property."},{"id":2107185416,"question":"What's the output of the code snippet?","code":"class Person {\r\n    setData(name, age) {\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n}\r\n\r\nlet obj = new Person();\r\nobj.setData(\"John\", 18);\r\nconsole.log(obj.name);","answers":["null","undefined","John"],"correct_answer":"John","explanation":"<code>obj.setData(\"John\", 18)<\/code> sets <code>\"John\"<\/code> value to the <code>name<\/code> property."},{"id":911096009,"question":"What's the output of the code snippet?","code":"class Teacher{\r\n    getSubject(index) {\r\n        return this.subjects[index];\r\n    }\r\n}\r\n\r\nvar obj = new Teacher();\r\nobj.subjects = ['Mathematics', 'Informatics', 'English'];\r\nconsole.log(obj.getSubject(1));","answers":["Mathematics","Informatics","a"],"correct_answer":"Informatics","explanation":"<code>obj.getSubject(1)<\/code> accesses the element of array located at index 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Mathematics<\/td>\r\n            <td class=\"table-primary\">Informatics<\/td>\r\n            <td>English<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":463871422,"text":"Fill the missing words to match the output.","code":"class TShirt {\r\n    setColor(colorVal) {\r\n        this.fillword fillword fillword;\r\n    }\r\n    getColor() {\r\n        fillword this.fillword;\r\n    }\r\n}\r\nlet obj = new TShirt();\r\nobj.setColor(\"Orange\");\r\nconsole.log(obj.getColor());","result":"Orange","words":{"operators":[],"values":[],"variables_constants":[],"others":["color","color","colorVal","colorVal","return","return","=","="]},"correct_patterns":[["color","=","colorVal","return","color"]]},{"id":1548434815,"text":"Fill the missing words to match the output.","code":"class Planet {\r\n    setName(nameVal) {\r\n        this.name = nameVal;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n}\r\nlet obj = new Planet();\r\nfillword.fillword(fillword);\r\nconsole.log(fillword.fillword());","result":"Earth","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj","obj","setName","setName","getName","getName","\"Earth\"","\"Earth\""]},"correct_patterns":[["obj","setName","\"Earth\"","obj","getName"]]},{"id":385375548,"text":"Fill the missing words to match the output.","code":"class Laptop {\r\n    getPrice(discount) {\r\n        return this.price - (discount * this.price) \/ 100;\r\n    }\r\n    setPrice(priceVal) {\r\n        this.price = priceVal;\r\n    }\r\n}\r\n\r\nlet obj = new Laptop();\r\nobj.fillword(2000);\r\nconsole.log(obj.fillword(fillword));","result":"1800","words":{"operators":[],"values":["5","10","20"],"variables_constants":[],"others":["setPrice","getPrice","price"]},"correct_patterns":[["setPrice","getPrice","10"]]}]},{"id":2009662074,"name":"Constructors","tests":[{"id":1760778390,"question":"What's the output of the code snippet?","code":"class Planet {\r\n    constructor() {\r\n        this.name = \"Unknown\"\r\n    }\r\n}\r\n\r\nlet obj = new Planet();\r\nconsole.log(obj.name);","answers":["Null","Unknown","Undefined"],"correct_answer":"Unknown","explanation":"<code>let obj = new Planet()<\/code> calls the <code>constructor<\/code> function which sets value to the <code>name<\/code> property."},{"id":564164695,"question":"What's the output of the code snippet?","code":"class Keyboard {\r\n    constructor() {\r\n        this.price = 0;\r\n    }\r\n}\r\n\r\nlet obj = new Keyboard();\r\nobj.price = 15;\r\nconsole.log(obj.price);","answers":["0","15","undefined"],"correct_answer":"15","explanation":"<code>let obj = new Keyboard()<\/code> calls the <code>constructor<\/code> function which sets value to the <code>price<\/code> property.\r\n<br><br>\r\nAfterwards <code>obj.price = 15<\/code> overwrites the value of the <code>price<\/code> property."},{"id":441751572,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    calcArea() {\r\n        return this.width * this.height\r\n    }\r\n}\r\n\r\nvar rect = new Rectangle(3, 5);\r\nconsole.log(rect.calcArea());","answers":["15","16","8"],"correct_answer":"15","explanation":"<code>let obj = new  Rectangle(3, 5)<\/code> calls the <code>constructor<\/code> function which sets value to the <code>width<\/code> and <code>height<\/code> properties.\r\n<br><br>\r\nThe <code>rect<\/code> object has <code>width<\/code> equal to 3 and <code>height<\/code> equal to <code>5<\/code>.\r\n<br><br>\r\nCalculations behind <code>calcArea<\/code> method:\r\n<br>\r\n3 x 5 = 15"},{"id":1559870421,"question":"What's the output of the code snippet?","code":"class Computer {\r\n    constructor() {\r\n        console.log('1 ');\r\n    }\r\n}\r\nconsole.log('2 ');\r\nnew Computer();","answers":["2 1","1 2","2"],"correct_answer":"2 1","explanation":"First <code>console.log('2 ')<\/code> executes which prints \"2\".\r\n<br><br>\r\nAfterwards <code>new Computer()<\/code> runs. It calls the <code>constructor<\/code> method which prints \"1\"."},{"id":363781010,"question":"What's the output of the code snippet?","code":"class Planet {\r\n    constructor() {\r\n        console.log('1');\r\n    }\r\n    constructor(arg) {\r\n        console.log('2');\r\n    }\r\n}\r\nlet planet = new Planet();","answers":["1","2","Exception"],"correct_answer":"Exception","explanation":"A class cannot have more than 1 constructor."}],"puzzles":[{"id":1336769789,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    constructor(nameVal, ageVal) {\r\n        this.name = nameVal;\r\n        this.age = ageVal;\r\n    }\r\n}\r\nlet obj = fillword fillword fillword;\r\nconsole.log(obj.name + ' ' + obj.age);","result":"Teo 21","words":{"operators":[],"values":[],"variables_constants":[],"others":["(\"Ally\", 19)","(\"Teo\", 21)","new","new","Person","Person"]},"correct_patterns":[["new","Person","(\"Teo\", 21)"]]},{"id":5348538,"text":"Fill the missing words to match the output.","code":"class Wallet {\r\n    fillword fillword {\r\n        this.pocketsCount = pocketsCount;\r\n    }\r\n}\r\nlet obj = new Wallet(4);\r\nconsole.log(obj.pocketsCount);","result":"4","words":{"operators":[],"values":[],"variables_constants":[],"others":["construct","constructor","__construct","()","(pocketsCount)"]},"correct_patterns":[["constructor","(pocketsCount)"]]},{"id":2030484603,"text":"Fill the missing words to match the output.","code":"class Country {\r\n    constructor(name = 'Unknown') {\r\n        this.name = name;\r\n    }\r\n}\r\nlet obj1 = fillword fillword fillword;\r\nconsole.log(obj1.name)\r\n\r\nlet obj2 = fillword fillword fillword;\r\nconsole.log(obj2.name)","result":"Unknown Iceland","words":{"operators":[],"values":[],"variables_constants":[],"others":["Country","Country","new","new","()","()","(\"Iceland\")","(\"Iceland\")"]},"correct_patterns":[["new","Country","()","new","Country","(\"Iceland\")"]]}]},{"id":679354939,"name":"Class Inheritance Basics","tests":[{"id":1314126675,"question":"What's the output of the code snippet?","code":"class MemomyDevice {\r\n    printPhysicalSize() {\r\n        console.log(\"medium \");\r\n    }\r\n}\r\nclass SDCard extends MemomyDevice {\r\n    printPhysicalSize() {\r\n        console.log(\"small \");\r\n    }\r\n}\r\n\r\nvar sdCard = new SDCard();\r\nsdCard.printPhysicalSize();","answers":["medium","small","medium small"],"correct_answer":"small","explanation":"<code>SDCard<\/code> inherits the <code>MemomyDevice <\/code> class.\r\n<br><br>\r\nThe <code>SDCard<\/code> class overwrites the <code>printPhysicalSize<\/code> method.\r\n<br><br>\r\nFor that reason <code>sdCard.printPhysicalSize()<\/code> prints \"small\"."},{"id":117447440,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    printConsumation() {\r\n        console.log(\"low \");\r\n    }\r\n}\r\nclass Scooter extends Vehicle {}\r\n\r\nvar scooter = new Scooter();\r\nscooter.printConsumation();","answers":["low","high","exception"],"correct_answer":"low","explanation":"<code>Scooter<\/code> inherits the <code>printConsumation<\/code> from it's parent - <code>Vehicle <\/code>.\r\n<br><br>\r\nFor that reason <code>scooter.printConsumation()<\/code> prints \"low\"."},{"id":2041920209,"question":"What's the output of the code snippet?","code":"class Device {\r\n    printSize() {\r\n        console.log(\"extra \");\r\n    }\r\n}\r\nclass Tablet extends Device {\r\n    printSize() {\r\n        super.printSize();\r\n        console.log(\"large\");\r\n    }\r\n}\r\n\r\nlet obj = new Tablet();\r\nobj.printSize()","answers":["extra","large","extra large"],"correct_answer":"extra large","explanation":"<code>obj.printSize()<\/code> calls the method from the <code>Tablet<\/code> class.\r\n<br><br>\r\n<code>super.printSize()<\/code> calls the method from the parent class. For that reason \"extra \" is printed.\r\n<br><br>\r\nAfterwards \"large\" is printed."},{"id":844782238,"question":"What's the output of the code snippet?","code":"class Fruit {\r\n    constructor() {\r\n        console.log('1 ');\r\n    }\r\n}\r\nclass Apple extends Fruit {\r\n    constructor() {\r\n        super();\r\n        console.log('2 ');\r\n    }\r\n}\r\n\r\nlet obj = new Apple();","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"The <code>Apple<\/code> constructor calls the parent class constructor (<code>Fruit<\/code>) via <code>super()<\/code>."},{"id":1796176479,"question":"What's the output of the code snippet?","code":"class Food {\r\n    constructor() {\r\n        this.taste = 'salty';\r\n    }\r\n}\r\nclass Chocolate extends Food {\r\n    constructor() {\r\n        super()\r\n        this.taste = 'sweet';\r\n    }\r\n}\r\nclass Pasta extends Food {}\r\n\r\nlet choc = new Chocolate();\r\nlet pasta = new Food();\r\n\r\nconsole.log(choc.taste + ' ' + pasta.taste)","answers":["salty salty","sweet sweet","sweet salty"],"correct_answer":"sweet salty","explanation":"The <code>Food<\/code> class constructor sets <code>salty<\/code> value for the <code>taste<\/code> property.\r\n<br><br>\r\nThe <code>Chocolate<\/code> class constructor overwrites the <code>taste<\/code> property with <code>sweet<\/code> value.\r\n<br><br>\r\nThe <code>Pasta<\/code> class inherits it's constructor from the <code>Food<\/code> class which sets 'salty' value to the <code>taste<\/code> property."}],"puzzles":[{"id":866901048,"text":"Fill the missing words to match the output.","code":"class Liquid {\r\n    printColor() {\r\n        console.log(\"Transparent\");\r\n    }\r\n}\r\nclass Coke extends Liquid {\r\n    printColor() {\r\n        console.log(\"Black\");\r\n    }\r\n}\r\nclass Water extends Liquid { }\r\n\r\nlet obj1 = new fillword();\r\nobj1.printColor();\r\n\r\nlet obj2 = new fillword();\r\nobj2.printColor();","result":"Transparent Black","words":{"operators":[],"values":[],"variables_constants":[],"others":["Coke","Coke","Water","Water"]},"correct_patterns":[["Water","Coke"]]},{"id":1951989753,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    constructor() {\r\n        console.log(\"base \");\r\n    }\r\n}\r\nclass Cat extends fillword{\r\n    constructor() {\r\n        super();\r\n        console.log(\"child\");\r\n    }\r\n}\r\n\r\nlet obj = new fillword();","result":"base\r\nchild","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Cat","Cat"]},"correct_patterns":[["Animal","Cat"]]},{"id":755834758,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    printData() {\r\n        console.log(this.name);\r\n    }\r\n}\r\nclass Singer extends Person {\r\n    constructor(nameVal, songsCountVal) {\r\n        super()\r\n        this.name = nameVal;\r\n        this.songsCount = songsCountVal;\r\n    }\r\n    printData() {\r\n        fillword.fillword;\r\n        console.log(this.fillword);\r\n    }\r\n}\r\n\r\nlet singer = new Singer(\"Ariana\", 26);\r\nsinger.printData();","result":"Ariana\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["super","base","Singer","Person","printData()","songsCount"]},"correct_patterns":[["super","printData()","songsCount"]]}]},{"id":1629703672,"name":"Class Inheritance Advanced","tests":[{"id":766745116,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    print() {\r\n        console.log(\"1 \");\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    print() {\r\n        super.print();\r\n        console.log(\"2 \");\r\n    }\r\n}\r\nclass Car extends MotorVehicle {\r\n    print() {\r\n        super.print();\r\n        console.log(\"3\");\r\n    }\r\n}\r\n\r\nlet obj = new Car();\r\nobj.print()","answers":["3","2 3","1 2 3"],"correct_answer":"1 2 3","explanation":"<code>super.print()<\/code> calls the <code>print<\/code> method from the parent class.\r\n<br><br>\r\nBasically the <code>print<\/code> method is executed first in\r\n<code>Vehicle<\/code>, afterwards in <code>MotorVehicle <\/code> and finally in the <code>Car<\/code> class."},{"id":1717609949,"question":"What's the output of the code snippet?","code":"class Electronic {\r\n    constructor() {\r\n        console.log(\"1 \");\r\n    }\r\n}\r\nclass OSDevice extends Electronic {\r\n    constructor() {\r\n        super();\r\n        console.log(\"2 \");\r\n    }\r\n}\r\nclass Smartphone extends OSDevice {\r\n    constructor() {\r\n        super();\r\n        console.log(\"3 \");\r\n    }\r\n}\r\n\r\nvar sm = new Smartphone();","answers":["3","2 3","1 2 3"],"correct_answer":"1 2 3","explanation":"The parent class constructor is called by the child class constructor via the <code>super<\/code> keyword.\r\n<br><br>\r\nThe code of <code>Electronic<\/code> constructor executes first, afterwards <code>OSDevice<\/code> constructor and finally <code>Smartphone<\/code> constructor."},{"id":1595262362,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    constructor() {\r\n        this.size = 'small';\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    constructor() {\r\n        super();\r\n        this.size = 'medium'\r\n    }\r\n}\r\nclass Truck extends MotorVehicle {\r\n    constructor() {\r\n        super();\r\n        this.size = 'large'\r\n    }\r\n}\r\n\r\nvar truck = new Truck();\r\nconsole.log(truck.size);","answers":["small","medium","large"],"correct_answer":"large","explanation":"The parent class constructor is called by the child class constructor via the <code>super<\/code> keyword.\r\n<br><br>\r\nThe code of <code>Vehicle<\/code> constructor executes first, afterwards <code>MotorVehicle<\/code> constructor and finally <code>Truck<\/code> constructor.\r\n<br><br>\r\nThe <code>size<\/code> property value is set for the last time at the <code>Truck<\/code> class constructor."},{"id":297461083,"question":"What's the output of the code snippet?","code":"class Device {\r\n    printSize() {\r\n        console.log('large ');\r\n    }\r\n}\r\nclass MobileDevice extends Device {}\r\nclass Smartphone extends MobileDevice {\r\n    printSize() {\r\n        console.log('small ');\r\n    }\r\n}\r\nvar sm = new Smartphone();\r\nvar md = new MobileDevice();\r\n\r\nsm.printSize();\r\nmd.printSize();","answers":["small small","small large","large large"],"correct_answer":"small large","explanation":"The <code>Smartphone<\/code> class overwrites the <code>printSize<\/code> method.\r\n<br>\r\nFor that reason <code>sm.printSize()<\/code> prints \"small\".\r\n<br><br>\r\nThe <code>MobileDevice<\/code> class inherits the <code>printSize<\/code> method from it's parent - <code>Device<\/code>.\r\n<br>\r\nFor that reason <code>md.printSize()<\/code> prints \"large\"."},{"id":1248789784,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    constructor() {\r\n        this.size = 'small';\r\n    }\r\n}\r\nclass Mammal extends Animal {}\r\nclass Cat extends Mammal {}\r\n\r\nvar obj = new Cat();\r\nconsole.log(obj.size);","answers":["small","null","undefined"],"correct_answer":"small","explanation":"<code>Cat<\/code> inherits it's constructor from the <code>Animal<\/code> class.\r\n<br><br>\r\nFor that reason the <code>Cat<\/code> object has a <code>size<\/code> property with value of \"small\"."}],"puzzles":[{"id":1739734855,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    print() { console.log(fillword); }\r\n}\r\nclass AudioDevice extends Device {\r\n    print() { super.print();\r\n        console.log(fillword); }\r\n}\r\nclass USBDevice extends Device {\r\n    print() { super.print();\r\n        console.log(fillword); }\r\n    }\r\nclass Headphones extends AudioDevice {\r\n    print() { super.print();\r\n        console.log(fillword); }\r\n}\r\n\r\nlet obj = new Headphones();\r\nobj.print();","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"0\"","\"1\"","\"a\"","\"b\"","\"c\""]},"correct_patterns":[["\"a\"","\"b\"","\"0\"","\"c\""],["\"a\"","\"b\"","\"1\"","\"c\""]]},{"id":1483169540,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    print() { console.log(fillword); }\r\n}\r\nclass Tiger extends Animal {\r\n    print() { super.print();\r\n        console.log(fillword); }\r\n}\r\nclass MarineAnimal extends Animal {\r\n    print() { super.print();\r\n        console.log(fillword); }\r\n}\r\nclass Whale extends MarineAnimal {\r\n    print() { super.print();\r\n        console.log(fillword); }\r\n}\r\n\r\nlet obj = new Whale();\r\nobj.print();","result":"123","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"a\"","\"b\"","\"1\"","\"2\"","\"3\""]},"correct_patterns":[["\"1\"","\"a\"","\"2\"","\"3\""],["\"1\"","\"b\"","\"2\"","\"3\""]]},{"id":286555845,"text":"Fill the missing words to match the output.","code":"class Drink {\r\n    constructor() { console.log(\"a\"); }\r\n}\r\nclass fillword extends Drink {\r\n    constructor() { super(); \r\n        console.log(\"1\"); }\r\n}\r\nclass FizzyDrink extends Drink {\r\n    constructor() { super(); \r\n      console.log(\"b\"); }\r\n}\r\nclass fillword extends fillword {\r\n    constructor() { super(); \r\n      console.log(\"c\"); }\r\n}\r\n\r\nlet obj = new Coke();","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["Drink","Drink","Water","Water","FizzyDrink","Coke"]},"correct_patterns":[["Water","Coke","FizzyDrink"]]}]},{"id":1540386233,"name":"Abstract Classes","tests":[{"id":52176089,"question":"What's the output of the code snippet?","code":"class SpaceObject {\r\n    constructor() {\r\n        if(this.constructor === SpaceObject) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('object creation');\r\n    }\r\n}\r\n\r\nvar obj = new SpaceObject();","answers":["object creation","null","Exception"],"correct_answer":"Exception","explanation":"The condition <code>this.constructor === SpaceObject<\/code> is met when object of the <code>SpaceObject<\/code> class is created.\r\n<br><br>\r\nThis causes error to be thrown."},{"id":1170293862,"question":"What's the output of the code snippet?","code":"class Component {\r\n    constructor() {\r\n        if(this.constructor === Component) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('object creation');\r\n    }\r\n}\r\nclass Processor extends Component {}\r\n\r\nvar obj = new Processor();","answers":["object creation","Exception","null"],"correct_answer":"object creation","explanation":"Creating <code>Component<\/code> class will throw exception due to the condition <code>this.constructor === Component<\/code>.\r\n<br><br>\r\nCreating object of the child class (<code>Processor<\/code>) does not cause exception."},{"id":1047946279,"question":"What's the output of the code snippet?","code":"class Shop {\r\n    constructor() {\r\n        if(this.constructor === Shop) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('object creation');\r\n    }\r\n}\r\nclass CoffeeShop extends Shop {}\r\nvar obj = new Shop();","answers":["object creation","null","Exception"],"correct_answer":"Exception","explanation":"The condition <code>this.constructor === Shop<\/code> is met when object of the <code>Shop<\/code> class is created.\r\n<br><br>\r\nThis causes error to be thrown.\r\n<br><br>\r\nIf object of the <code>CoffeeShop<\/code> was created instead error wouldn't be thrown."},{"id":1998227428,"question":"What's the output of the code snippet?","code":"class Electronic {\r\n    constructor() {\r\n        if(this.constructor === Electronic) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('1 ');\r\n    }\r\n}\r\nclass AudioDevice extends Electronic {\r\n    constructor() {\r\n        super();\r\n\r\n        if(this.constructor === AudioDevice) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('2 ');\r\n    }\r\n}\r\nclass Headphones extends  AudioDevice {}\r\n\r\nvar obj = new Headphones();","answers":["Exception","2","1 2"],"correct_answer":"1 2","explanation":"Due to <code>this.constructor === Electronic<\/code> and <code>this.constructor === AudioDevice<\/code> exceptions would be thrown if object of the <code>Electronic<\/code>  or <code>AudioDevice<\/code> classes was created.\r\n<br><br>\r\nCreating <code>Headphones<\/code> class does not cause exception.\r\n<br><br>\r\nAlso the <code>Headphones <\/code> class inherits it's constructor from the <code>Electronic<\/code> and <code>AudioDevice<\/code> classes."},{"id":701474725,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    constructor() {\r\n        if(this.constructor === Animal) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('1 ');\r\n    }\r\n}\r\nclass MarineAnimal extends Animal {\r\n    constructor() {\r\n        super();\r\n\r\n        if(this.constructor === MarineAnimal) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n\r\n        console.log('2 ');\r\n    }\r\n}\r\nclass Fish extends MarineAnimal {}\r\n\r\nvar obj = new MarineAnimal();","answers":["2","1 2","Exception"],"correct_answer":"Exception","explanation":"Due to <code>this.constructor === Animal<\/code> and <code>this.constructor === MarineAnimal<\/code> exceptions would be thrown if object of the <code>Animal<\/code>  or <code>MarineAnimal<\/code> classes was created.\r\n<br><br>\r\n<code>var obj = new MarineAnimal();<\/code> creates object of the <code>MarineAnimal<\/code> class thus exception is thrown."}],"puzzles":[{"id":1270390402,"text":"Fill the missing words to match the output.","code":"class Device  {\r\n    constructor() {\r\n        if(this.constructor === Device ) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n    }\r\n}\r\nclass Tablet extends Device { }\r\n\r\nvar obj = new fillword();\r\nconsole.log(\"Code that won't throw exception.\");","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Tablet"]},"correct_patterns":[["Tablet"]]},{"id":208518723,"text":"Fill the missing words to match the output.","code":"class Pet   {\r\n    constructor() {\r\n        if(this.constructor === fillword) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n    }\r\n    makeSound() {\r\n         if(this.constructor === fillword) {\r\n            throw new Error('Cannot be called for pet object.');\r\n         }\r\n    }\r\n}\r\nclass Cat extends Pet {\r\n    makeSound() {\r\n        console.log(\"meow\");\r\n    }\r\n}\r\n\r\nvar obj = new Cat();\r\nobj.makeSound();","result":"meow","words":{"operators":[],"values":[],"variables_constants":[],"others":["Pet","Pet","Cat","Cat"]},"correct_patterns":[["Pet","Pet"]]},{"id":1158864384,"text":"Fill the missing words to match the output.","code":"class Polygon {\r\n    constructor() {\r\n        if(fillword.fillword === fillword) {\r\n            throw new Error('Cannot be instanced.');\r\n        }\r\n    }\r\n}\r\nclass Square extends Polygon {}\r\n\r\nvar obj = new Square();\r\nconsole.log(\"Code that won't throw exception.\");","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","constructor","Square","Polygon"]},"correct_patterns":[["this","constructor","Polygon"]]}]},{"id":478448966,"name":"Static Members","tests":[{"id":1652344674,"question":"What's the output of the code snippet?","code":"class User {\r\n    static count;\r\n    constructor() {\r\n        User.count++;\r\n    }\r\n}\r\n\r\nUser.count = 0;\r\n\r\nlet obj1 = new User();\r\nlet obj2 = new User();\r\nlet obj3 = new User();\r\n\r\nconsole.log(User.count);","answers":["0","2","3"],"correct_answer":"3","explanation":"The static member <code>count<\/code> increments each time when object is created.\r\n<br><br>\r\nIt's incremented in the class constructor - <code>User.count++;<\/code>"},{"id":1528948515,"question":"What's the output of the code snippet?","code":"class Circle {\r\n    static pi;\r\n}\r\n\r\nCircle.pi = 3.14;\r\nconsole.log(Circle.pi);\r\nCircle.pi = 3.1415;","answers":["3.14","3.1415","undefined"],"correct_answer":"3.14","explanation":"The value for the static member <code>pi<\/code> is set to be 3.14 via the line: <code>Circle.pi = 3.14<\/code>.\r\n<br><br>\r\nIt's value is later modified to <code>3.1415<\/code> but that's after the output."},{"id":500565728,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    static getSound() {\r\n        return 'roar';\r\n    }\r\n}\r\nclass Cat extends Animal {}\r\n\r\nconsole.log(Cat.getSound());","answers":["roar","undefined","Exception"],"correct_answer":"roar","explanation":"<code>Cat<\/code> inherits the <code>getSound<\/code> method from it's parent - <code>Animal <\/code>.\r\n<br><br>\r\nBasically <code>Cat.getSound()<\/code> calls the method <code>getSound<\/code> of the parent class - <code>Animal<\/code>."},{"id":1450911393,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n    static printModel() {\r\n        console.log(this.model);\r\n    }\r\n}\r\n\r\nlet tablet = new Tablet();\r\ntablet.model = 'Sample';\r\nTablet.printModel()","answers":["Sample","undefined","null"],"correct_answer":"undefined","explanation":"Static functions cannot access non-static members.\r\n<br><br>\r\nFor that reason <code>this.model<\/code> is undefined inside the context of the static function <code>printModel<\/code>."},{"id":254297710,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    static count;\r\n\r\n    constructor() {\r\n        this.constructor.count++\r\n    }\r\n}\r\n\r\nclass Tiger extends Animal {}\r\nclass Lion extends Animal {}\r\n\r\nLion.count = 0;\r\nTiger.count = 0;\r\n\r\nnew Tiger();\r\nnew Tiger();\r\nnew Lion();\r\n\r\nconsole.log(Tiger.count + ' ' + Lion.count);","answers":["2 1","0 0","3 3"],"correct_answer":"2 1","explanation":"The <code>Tiger<\/code> and <code>Lion<\/code> classes inherit the static <code>count<\/code> member from their parent - <code>Animal<\/code>.\r\n<br><br>\r\nCreating <code>Tiger<\/code> or <code>Lion<\/code> object calls the <code>Animal<\/code> class constructor which increments the <code>count<\/code> property.\r\n<br><br>\r\nIn this case <code>this.constructor<\/code> is either <code>Tiger<\/code> or <code>Lion<\/code>."}],"puzzles":[{"id":1070070209,"text":"Fill the missing words to match the output.","code":"class Circle {\r\n    fillword;\r\n    printArea() {\r\n       console.log(Circle.pi * this.radius * this.radius);\r\n    }\r\n}\r\nCircle.pi = 3.14;\r\nvar obj = new Circle();\r\nfillword.radius = 5;\r\nfillword.printArea();","result":"78.5","words":{"operators":[],"values":[],"variables_constants":[],"others":["static pi","pi","obj","obj","Circle","Circle"]},"correct_patterns":[["static pi","obj","obj"]]},{"id":1886656910,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword() {\r\n        console.log(\"My name is \" + this.name + \".\");\r\n    }\r\n    fillword() {\r\n        console.log(\"Hi!\");\r\n    }\r\n}\r\n\r\nfillword.sayHi();\r\nlet obj = new Person();\r\nobj.name = \"Jake\";\r\nobj.present();","result":"Hi!\r\nMy name is Jake.","words":{"operators":[],"values":[],"variables_constants":[],"others":["present","static present","sayHi","static sayHi","Person","Person"]},"correct_patterns":[["present","static sayHi","Person"]]},{"id":689518927,"text":"Fill the missing words to match the output.","code":"class Building {\r\n    static objCount;\r\n    printHeight() {\r\n        console.log(height);\r\n    }\r\n    static printCount() {\r\n        console.log(objCount);\r\n    }\r\n    constructor(height) {\r\n        fillword.height = height;\r\n        fillword.objCount++;\r\n    }\r\n}\r\n\r\nfillword.objCount = 0;\r\nlet obj1 = new Building(100);\r\nlet obj2 = new Building(120);\r\nconsole.log(fillword.objCount);\r\nconsole.log(fillword.height);","result":"2 120","words":{"operators":[],"values":[],"variables_constants":[],"others":["Building","Building","Building","Building","obj1","obj2","this"]},"correct_patterns":[["this","Building","Building","Building","obj2"]]}]},{"id":1428794631,"name":"Encapsulation Principle","tests":[{"id":1105028655,"question":"What's the output of the code snippet?","code":"class Jacket {\r\n    get color() {\r\n        let colors = {\r\n            '#ffffff': 'white',\r\n            '#000000': 'black'\r\n        };\r\n        \r\n        return colors[this._color]\r\n    }\r\n    set color(val) {\r\n        this._color = val;\r\n    }\r\n}\r\n\r\nvar obj = new Jacket();\r\nobj.color = '#ffffff';\r\nconsole.log(obj.color);","answers":["#ffffff","white","black"],"correct_answer":"white","explanation":"<code>obj.color = '#ffffff'<\/code> calls the <code>set color(val)<\/code> method.\r\n<br><br>\r\n<code>console.log(obj.color)<\/code> calls the <code>get color()<\/code> method.\r\n<br><br>\r\nThe <code>get color()<\/code> method converts the hex code into a color's name."},{"id":981565932,"question":"What's the output of the code snippet?","code":"class Product {\r\n    get price() {\r\n        return this._price;\r\n    }\r\n    set price(val) {\r\n        if(val < 0) {\r\n            this._price = 0;\r\n            return\r\n        }\r\n\r\n        this._price = val;\r\n    }\r\n}\r\n\r\nvar obj = new Product();\r\nobj.price = -15;\r\nconsole.log(obj.price);","answers":["0","-15","undefined"],"correct_answer":"0","explanation":"<code>obj.price = -15<\/code> calls the <code>set price(val)<\/code> method.\r\n<br><br>\r\n<code>console.log(obj.price)<\/code> calls the <code>get price()<\/code> method.\r\n<br><br>\r\n-15 meets the condition <code>val < 0<\/code> so value of 0 is set to the <code>_price<\/code> property."},{"id":1932960173,"question":"What's the output of the code snippet?","code":"class Square {\r\n    getSide (roundUp) {\r\n        if(roundUp) {\r\n            return this._side.toFixed(2);\r\n        }\r\n    }\r\n    set side(val) {\r\n        this._side = val; \r\n    }\r\n}\r\n\r\nlet obj = new Square();\r\nobj.side = 1.234;\r\nconsole.log(obj.getSide(true));","answers":["1.23","1.234","undefined"],"correct_answer":"1.23","explanation":"<code>obj.getSide(true)<\/code> rounds the <code>_side<\/code> property to 2 digits after the decimal point.\r\n<br><br>\r\n<code>console.log(obj.getSide(true))<\/code> prints 1.23.\r\n<br><br> \r\n<code>console.log(obj.getSide())<\/code> would print 1.234."},{"id":903594346,"question":"What's the output of the code snippet?","code":"class Person {\r\n    set name(value) {\r\n        if(!value) {\r\n            this._name = 'Unknown';\r\n            return;\r\n        }\r\n        this._name = value;\r\n    \r\n    }\r\n    get name () {\r\n        return this._name;\r\n    }\r\n}\r\n\r\nlet obj = new Person();\r\nobj.name = null;\r\nconsole.log(obj.name);","answers":["null","undefined","Unknown"],"correct_answer":"Unknown","explanation":"<code>obj.name = null<\/code> calls the <code>set name (value)<\/code> method.\r\n<br><br>\r\n<code>console.log(obj.name)<\/code> calls the <code>get name()<\/code> method.\r\n<br><br>\r\nSince null meets the condition <code>!value<\/code> \"Unknown\" value is set to the <code>_name<\/code> property."},{"id":1854464299,"question":"What's the output of the code snippet?","code":"class Book {\r\n    set title(val) {\r\n        this._title = val;\r\n    }\r\n    get title() {\r\n        return this.title;\r\n    }\r\n}\r\n\r\nvar obj = new Book();\r\nobj.title = 'Sample';\r\nconsole.log(obj.title);","answers":["Sample","undefined","Exception"],"correct_answer":"Exception","explanation":"<code>obj.title =  'Sample'<\/code> calls the <code>set title(val)<\/code> method.\r\n<br><br>\r\n<code>console.log(obj.title)<\/code> calls the <code>get title()<\/code> method.\r\n<br><br>\r\n<code>this.title<\/code> calls the <code>get title()<\/code> function and an infinite recursion is formed.\r\n<br><br>\r\n<code>this.title<\/code> needs to be replaced with <code>this._title<\/code>."}],"puzzles":[{"id":1674467596,"text":"Fill the missing words to match the output.","code":"class Car {\r\n    setData(makeVal, modelVal) {\r\n        this._make = makeVal;\r\n        this._model = modelVal;\r\n    }\r\n    get make() {\r\n        return this._make.charAt(0).toUpperCase() + this._make.slice(1);\r\n    }\r\n    get model() {\r\n        return this._model.charAt(0).toUpperCase() + this._model.slice(1);\r\n    }\r\n}\r\n\r\nlet car = new Car();\r\ncar.setData(\"ford\", \"fiesta\");\r\nconsole.log(car.fillword+ \" \" + car.fillword);","result":"Ford Fiesta","words":{"operators":[],"values":[],"variables_constants":[],"others":["make","_make","model","_model"]},"correct_patterns":[["make","model"]]},{"id":611547341,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    constructor(name, age) {\r\n        this.name = name;\r\n        this._age = age;\r\n    }\r\n    set age(ageVal) {\r\n        this._age = ageVal;\r\n    }\r\n    get age() {\r\n        if(this.fillword < 0) {\r\n            return 0;\r\n        }\r\n        return this.fillword;\r\n    }\r\n}\r\n\r\nlet person = new Person(\"Thomas\", -3);\r\nconsole.log(person.fillword);","result":"0","words":{"operators":[],"values":[],"variables_constants":[],"others":["age","age","age","_age","_age","_age"]},"correct_patterns":[["_age","_age","age"]]},{"id":489134218,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    get side() {\r\n        return this.fillword;\r\n    }\r\n    set side(val) {\r\n        this.fillword= val;\r\n    }\r\n    printArea() {\r\n        console.log(this.fillword* this.fillword);\r\n    }\r\n}\r\n\r\nlet obj = new Square();\r\nobj.side = 3;\r\nobj.printArea();","result":"9","words":{"operators":[],"values":[],"variables_constants":[],"others":["side","side","_side","_side"]},"correct_patterns":[["_side","_side","side","side"]]}]},{"id":266259652,"name":"Abstraction Principle","tests":[{"id":658309352,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    constructor(aVal, bVal) {\r\n        this.a = aVal;\r\n        this.b = bVal;\r\n    }\r\n    calcArea() {\r\n        return this.a * this.b;\r\n    }\r\n}\r\n\r\nvar rect = new Rectangle(2, 5);\r\nconsole.log(rect.calcArea());","answers":["7","10","14"],"correct_answer":"10","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n2 x 5 = 10"},{"id":434249897,"question":"What's the output of the code snippet?","code":"class Cube {\r\n    constructor(a) {\r\n        this.a = a;\r\n    }\r\n    calcVolume() {\r\n        return Math.pow(this.a, 3);\r\n    }\r\n}\r\n\r\nvar obj = new Cube(5);\r\nconsole.log(obj.calcVolume());","answers":["125","25","5"],"correct_answer":"125","explanation":"Calculations behind <code>calcVolume<\/code> method:\r\n<br><br>\r\n5 ^ 3 = <br>\r\n5 x 5 x 5 = <br>\r\n25 x 5 = 125"},{"id":1385644150,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    constructor(aVal, bVal) {\r\n        this.a = aVal;\r\n        this.b = bVal;\r\n    }\r\n    calcDiagonal() {\r\n        return Math.sqrt(Math.pow(this.a, 2) + Math.pow(this.b, 2));\r\n    }\r\n}\r\n\r\nvar obj = new Rectangle(3, 4);\r\nconsole.log(obj.calcDiagonal());","answers":["5","7","25"],"correct_answer":"5","explanation":"Calculations behind <code>calcDiagonal<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">3 ^ 2 + 4 ^ 2<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">3 * 3 + 4 * 4<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">9 + 16<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">25<\/span> = <br>\r\n5"},{"id":189030455,"question":"What's the output of the code snippet?","code":"class Trapezoid {\r\n    constructor(aVal, bVal, hVal) {\r\n        this.a = aVal;\r\n        this.b = bVal;\r\n        this.h = hVal;\r\n    }\r\n    calcArea() {\r\n        return (this.a + this.b) \/ 2 * this.h;\r\n    }\r\n}\r\n\r\nvar obj = new Trapezoid(8, 10, 2);\r\nconsole.log(obj.calcArea());","answers":["9","18","36"],"correct_answer":"18","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n(8 + 10) \/ 2 * 2 = <br>\r\n18 \/ 2 * 2 = <br>\r\n9 * 2 = <br>\r\n18"},{"id":1307083764,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n    constructor(aVal, bVal) {\r\n        this.a = aVal;\r\n        this.b = bVal;\r\n    }\r\n    calcPerimeter() {\r\n        return 2 * this.a + 2 * this.b;\r\n    }\r\n}\r\n\r\nvar obj = new Rectangle(1, 5);\r\nconsole.log(obj.calcPerimeter());","answers":["6","10","12"],"correct_answer":"12","explanation":"Calculations behind <code>calcPerimeter<\/code> method:\r\n<br><br>\r\n2 * 1 + 2 * 5 = <br>\r\n2 + 10 = <br>\r\n12 <br>"}],"puzzles":[{"id":1473558603,"text":"Fill the missing words to match the output.","code":"class Rectangle {\r\n    constructor(aVal, bVal) {\r\n        this.a = aVal;\r\n        this.b = bVal;\r\n    }\r\n    calcArea() {\r\n        return this.a * this.b;\r\n    }\r\n    calcPerimeter() {\r\n        return 2 * (this.a + this.b);\r\n    }\r\n}\r\nlet obj = new Rectangle(2, 3);\r\nconsole.log(fillword.fillword);\r\nconsole.log(fillword.fillword);","result":"6 10","words":{"operators":[],"values":[],"variables_constants":["obj","obj"],"others":["a","b","calcArea()","calcPerimeter()","Rectangle"]},"correct_patterns":[["obj","calcArea()","obj","calcPerimeter()"]]},{"id":142202888,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    constructor(side) {\r\n        this.side = side;\r\n    }\r\n    calcArea() {\r\n        return this.side * this.side;\r\n    }\r\n}\r\n\r\nlet obj1 = new Square(fillword);\r\nlet obj2 = new Square(fillword);\r\nconsole.log(obj1.calcArea());\r\nconsole.log(obj2.calcArea());","result":"9 16","words":{"operators":[],"values":["2","3","4","5","6","9","16"],"variables_constants":[],"others":[]},"correct_patterns":[["3","4"]]},{"id":1093598153,"text":"Fill the missing words to match the output.","code":"class Shape {\r\n    constructor(angles) {\r\n        this.angles = angles;\r\n    }\r\n    calcDiagonalsCount() {\r\n        let diagonalsCount = 0;\r\n        let step = 2;\r\n\r\n        for (let i = 4; i <= this.angles; i++) {\r\n            diagonalsCount += step;\r\n            step++;\r\n        }\r\n        return diagonalsCount;\r\n    }\r\n}\r\nlet obj1 = new Shape(fillword);\r\nlet obj2 = new Shape(fillword);\r\nconsole.log(obj1.calcDiagonalsCount());\r\nconsole.log(obj2.calcDiagonalsCount());","result":"2 9","words":{"operators":[],"values":["2","3","4","5","6","7","8","9"],"variables_constants":[],"others":[]},"correct_patterns":[["4","6"]]}]},{"id":1082387589,"name":"Inheritance Principle","tests":[{"id":110994357,"question":"What's the output of the code snippet?","code":"class Device {\r\n    printSize() {\r\n        console.log(\"medium\");\r\n    }\r\n}\r\nclass Smartphone extends Device {}\r\n\r\nvar smartphone = new Smartphone();\r\nsmartphone.printSize();","answers":["medium","Exception","undefined"],"correct_answer":"medium","explanation":"The <code>Smartphone<\/code> class inherits the <code>printSize<\/code> method from it's parent - <code>Device<\/code>.\r\n<br><br>\r\n<code>smartphone.printSize()<\/code> prints \"medium\"."},{"id":2135081842,"question":"What's the output of the code snippet?","code":"class Glasses {\r\n    printShadeIndex() {\r\n        console.log(\"low \");\r\n    }\r\n}\r\nclass Sunglasses extends Glasses {\r\n    printShadeIndex() {\r\n        console.log(\"high\");\r\n    }\r\n}\r\nlet obj = new Sunglasses();\r\nobj.printShadeIndex();","answers":["low","high","low high"],"correct_answer":"high","explanation":"The <code>Sunglasses<\/code> class inherits the <code>Glasses<\/code> class and overwrites the <code>printShadeIndex<\/code> method.\r\n<br><br>\r\n<code>obj.printShadeIndex()<\/code> prints \"high\"."},{"id":838329139,"question":"What's the output of the code snippet?","code":"class Car {\r\n    printSize() {\r\n        console.log(\"medium \");\r\n    }\r\n}\r\nclass Sedan extends Car {\r\n    printSize() {\r\n        super.printSize();\r\n        console.log(\"long\");\r\n    }\r\n}\r\nvar obj = new Sedan();\r\nobj.printSize();","answers":["medium","long","medium long"],"correct_answer":"medium long","explanation":"The <code>Sedan<\/code> class has <code>printSize<\/code> function which calls it's parent method (via <code>super.printSize()<\/code>) and afterwards prints \"long\"."},{"id":1789133552,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    constructor() {\r\n        this.size = 'medium';\r\n    }\r\n}\r\nclass Parrot extends Animal {\r\n    constructor(color) {\r\n        super();\r\n        this.size = 'small';\r\n        this.color = color;\r\n    }\r\n}\r\n\r\nvar obj = new Parrot('blue');\r\nconsole.log(obj.size + ' ' + obj.color);","answers":["small undefined","small blue","medium blue"],"correct_answer":"small blue","explanation":"<code>new Parrot('blue')<\/code> calls the <code>constructor<\/code> of the <code>Parrot<\/code> class.\r\n<br><br>\r\n<code>super()<\/code> calls the parent constructor and afterwards the <code>size<\/code> and <code>color<\/code> properties are overwriten."},{"id":591995569,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    printConsumation() {\r\n        console.log('low ');\r\n    }\r\n}\r\nclass Car extends Vehicle {}\r\nclass Truck extends Vehicle {\r\n    printConsumation() {\r\n        console.log('high ');\r\n    }\r\n}\r\n\r\nlet car = new Car();\r\ncar.printConsumation();\r\n\r\nlet truck = new Truck();\r\ntruck.printConsumation();","answers":["low high","low low","high high"],"correct_answer":"low high","explanation":"The <code>Car<\/code> class inherits <code>printConsumation<\/code> from it's parent - <code>Vehicle<\/code>.\r\n<br>\r\n<code>car.printConsumation()<\/code> prints \"low\".\r\n<br><br>\r\nThe <code>Truck<\/code> class overwrites the <code>printConsumation<\/code> method.\r\n<br>\r\n<code>truck.printConsumation()<\/code> prints \"high\"."}],"puzzles":[{"id":1003690902,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    printSizeCategory() {\r\n        console.log(\"Small\");\r\n    }\r\n}\r\nclass Laptop extends Device {\r\n    printSizeCategory() {\r\n        console.log(\"Large\");\r\n    }\r\n}\r\nlet obj = new fillword();\r\nobj.printSizeCategory();","result":"Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Device"]},"correct_patterns":[["Laptop"]]},{"id":2088778583,"text":"Fill the missing words to match the output.","code":"class Electronic {\r\n    printConsumation() {\r\n        console.log(\"Low\");\r\n    }\r\n}\r\nclass fillword fillword fillword {}\r\n\r\nlet obj = new Smartphone();\r\nobj.printConsumation();","result":"Low","words":{"operators":[],"values":[],"variables_constants":[],"others":["Electronic","Smartphone","extends",":"]},"correct_patterns":[["Smartphone","extends","Electronic"]]},{"id":892689172,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    constructor(nameVal) {\r\n        this.name = nameVal;\r\n    }\r\n    printData() {\r\n        console.log(this.name);\r\n    }\r\n}\r\nclass Employee extends Person {\r\n    constructor(nameVal, salaryVal) {\r\n        fillword;\r\n        this.salary = salaryVal;\r\n    }\r\n    printData() {\r\n        fillword.printData();\r\n        console.log(this.salary);\r\n    }\r\n}\r\nlet obj = new Employee(\"Jim\", 26);\r\nobj.printData();","result":"Jim 26","words":{"operators":[],"values":[],"variables_constants":[],"others":["super","super()","super(nameVal)","super(salaryVal)"]},"correct_patterns":[["super(nameVal)","super"]]}]},{"id":959450178,"name":"Polymorphism Principle","tests":[{"id":1711161982,"question":"What's the output of the code snippet?","code":"class OSDevice {\r\n    printSize() {\r\n        console.log('medium ');\r\n    }\r\n}\r\nclass SmartTV extends OSDevice  {\r\n    printSize() {\r\n        console.log('large ');\r\n    }\r\n}\r\n\r\nvar obj = new SmartTV();\r\nobj.printSize();","answers":["medium","large","medium large"],"correct_answer":"large","explanation":"<code>SmartTV<\/code> inherits <code>OSDevice<\/code> and overwrites the <code>printSize<\/code> method.\r\n<br><br>\r\n<code>obj.printSize()<\/code> prints \"large\"."},{"id":1587765823,"question":"What's the output of the code snippet?","code":"class Bird {\r\n    printSize() {\r\n        console.log('small ');\r\n    }\r\n}\r\nclass Eagle extends Bird  {\r\n    printSize() {\r\n        console.log('large');\r\n    }\r\n}\r\nvar bird = new Bird();\r\nbird.printSize();","answers":["small","large","small large"],"correct_answer":"small","explanation":"The <code>Bird<\/code> class has it's own <code>printSize<\/code> method.\r\n<br><br>\r\n<code>bird.printSize()<\/code> prints \"small\"."},{"id":391613948,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n    printConsumation() {\r\n        console.log('none ');\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    printConsumation() {\r\n        console.log('medium ');\r\n    }\r\n}\r\nclass Car extends MotorVehicle {}\r\n\r\nlet car = new Car();\r\ncar.printConsumation();","answers":["none","medium","none medium"],"correct_answer":"medium","explanation":"The <code>Car<\/code> class inherits the  <code>printConsumation<\/code> method from it's parent - <code>MotorVehicle<\/code>.\r\n<br><br>\r\n<code>car.printConsumation()<\/code> prints \"medium \"."},{"id":1208266173,"question":"What's the output of the code snippet?","code":"class Animal {\r\n    printSize() {\r\n        console.log('very ');\r\n    }\r\n}\r\nclass Hamster extends Animal {\r\n    printSize() {\r\n        super.printSize();\r\n        console.log('small');\r\n    }\r\n}\r\n\r\nlet obj = new Hamster();\r\nobj.printSize();","answers":["very","small","very small"],"correct_answer":"very small","explanation":"<code>obj.printSize()<\/code> calls the method from the <code>Hamster<\/code> class.\r\n<br><br>\r\n<code>super.printSize()<\/code> calls the method from the parent class. For that reason \"very \" is printed.\r\n<br><br>\r\nAfterwards \"small\" is printed."},{"id":44682618,"question":"What kind of polymorphism is the code snippet?","code":"class PolarAnimal {\r\n    public void printWeight() {\r\n        System.out.print(\"light\");\r\n    }\r\n}\r\nclass Penguin extends PolarAnimal  {\r\n    public void printWeight() {\r\n        System.out.print(\"heavy\");\r\n    }\r\n}","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Runtime Polymorphism","explanation":"Runtime polymorphism occurs in function overriding .\r\n<br><br>\r\nfunction overriding - base class ( <code>PolarAnimal<\/code> ) has a function that's being overwritten in a child class ( <code>Penguin<\/code> ).\r\n<br><br>\r\nCompile time polymorphism does not occur in JS."}],"puzzles":[{"id":1876589269,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    printSize() {\r\n        console.log(\"Small\");\r\n    }\r\n}\r\nclass Whale extends Animal {\r\n    printSize() {\r\n        console.log(\"Large\");\r\n    }\r\n}\r\nclass Cat extends Animal { }\r\n\r\nlet obj1 = new fillword();\r\nobj1.printSize();\r\nlet obj2 = new fillword();\r\nobj2.printSize();","result":"Small Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Whale","Whale","Cat","Cat"]},"correct_patterns":[["Cat","Whale"]]},{"id":546216594,"text":"Fill the missing words to match the output.","code":"class Vehicle {\r\n    printFuelCost() {\r\n        console.log(\"none\");\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    printFuelCost() {\r\n        console.log(\"medium\");\r\n    }\r\n}\r\nclass Car extends MotorVehicle {}\r\n\r\nlet obj = new fillword();\r\nobj.printFuelCost();","result":"medium","words":{"operators":[],"values":[],"variables_constants":[],"others":["Vehicle","Car"]},"correct_patterns":[["Car"]]},{"id":422820435,"text":"Fill the missing words to match the output.","code":"class App {\r\n    categorizeDevice() {\r\n        return \"any\";\r\n    }\r\n}\r\nclass MobileApp extends App {\r\n    categorizeDevice() {\r\n        return \"small\";\r\n    }\r\n}\r\nclass DesktopApp extends App {\r\n    categorizeDevice() {\r\n        return \"large\";\r\n    }\r\n}\r\nclass WebApp extends App {}\r\n\r\nlet arr = [new fillword, new fillword, new fillword];\r\nfor(let i = 0; i < arr.length; i++) {\r\n    let obj = arr[i];\r\n    console.log(obj.categorizeDevice());\r\n}","result":"any small large","words":{"operators":[],"values":[],"variables_constants":[],"others":["MobileApp","MobileApp","DesktopApp","DesktopApp","WebApp","WebApp"]},"correct_patterns":[["WebApp","MobileApp","DesktopApp"]]}]},{"id":1944398851,"name":"Array Of Class Objects","tests":[{"id":2069818683,"question":"What's the output of the code snippet?","code":"class Product {}\r\nlet prods = [];\r\n\r\nfor(let i = 1; i <= 3; i++) {\r\n    let obj = new Product();\r\n    obj.price = i * 6;\r\n    prods.push(obj);\r\n}\r\n\r\nprods.forEach(function(prod) {\r\n    if(prod.price > 10) {\r\n        console.log(prod.price + ' ');\r\n    }\r\n})","answers":["18","6 12","12 18"],"correct_answer":"12 18","explanation":"After the elements are added, the array has the following prices:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>6<\/td>\r\n            <td>12<\/td>\r\n            <td>18<\/td>\r\n    <\/tr>\r\n<\/table>\r\nOnly two of them meet the condition <code>prod.price > 10<\/code> - 12 and 18"},{"id":1006832888,"question":"What's the output of the code snippet?","code":"class Company {}\r\nclass Employee {}\r\n\r\nlet names = ['Smith', 'CJ', 'Ian', 'Benny', 'Gabe'];\r\nlet company = new Company();\r\ncompany.employees = [];\r\n\r\nfor(let i = 0; i < names.length; i++) {\r\n    let employee = new Employee();\r\n    employee.name = names[i];\r\n    company.employees.push(employee);\r\n}\r\n\r\nconsole.log(company.employees[2].name);","answers":["CJ","Ian","Benny"],"correct_answer":"Ian","explanation":"After the elements are added, the array has the following names:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>Smith<\/td>\r\n            <td>CJ<\/td>\r\n            <td class=\"table-primary\">Ian<\/td>\r\n            <td>Benny<\/td>\r\n            <td>Gabe<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1991257273,"question":"What's the output of the code snippet?","code":"class Car {\r\n    constructor(hp) {\r\n        this.hp = hp;\r\n    }\r\n}\r\n\r\nlet cars = [ new Car(75), new Car(100), \r\n    new Car(115), new Car(135) ];\r\n\r\ncars.forEach(function(car) {\r\n    if(car.hp > 111) {\r\n        console.log(car.hp + ' ');\r\n    }\r\n});","answers":["75 100","100 115","115 135"],"correct_answer":"115 135","explanation":"From all hps - 75, 100, 115, 135, only 2 meet the condition <code>car.hp > 111<\/code> - 115 and 135."},{"id":795167814,"question":"What's the output of the code snippet?","code":"class Student {\r\n    constructor(age) {\r\n        this.age = age;\r\n    }\r\n}\r\n\r\nlet students = [ new Student(15), new Student(17),\r\nnew Student(12), new Student(14) ];\r\n\r\nstudents.sort(function(a, b) {\r\n    if(a.age < b.age) {\r\n        return -1;\r\n    }\r\n    else if (a.age === b.age) {\r\n        return 0;\r\n    }\r\n    return 1;\r\n});\r\n\r\nconsole.log(students[1].age);","answers":["12","14","15"],"correct_answer":"14","explanation":"After sorting the array by student's age it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>12<\/td>\r\n            <td class=\"table-primary\">14<\/td>\r\n            <td>15<\/td>\r\n            <td>17<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1611295751,"question":"What's the output of the code snippet?","code":"class Product {\r\n    constructor(price) {\r\n        this.price = price;\r\n    }\r\n}\r\n\r\nlet prods = [ new Product(10), new Product(15),\r\nnew Product(20), new Product(25) ];\r\n\r\nprods.sort(function(a, b) {\r\n    if(a.price > b.price) {\r\n        return -1;\r\n    }\r\n    else if (a.price === b.price) {\r\n        return 0;\r\n    }\r\n    return 1;\r\n});\r\n\r\nconsole.log(prods[1].price);","answers":["20","15","10"],"correct_answer":"20","explanation":"After sorting the array by product's price it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>25<\/td>\r\n            <td class=\"table-primary\">20<\/td>\r\n            <td>15<\/td>\r\n            <td>10<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1407244816,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n    constructor(heightVal) {\r\n        this.height = heightVal;\r\n    }\r\n}\r\nlet peaks = [new Peak(2000), new Peak(3000),\r\n    new Peak(4000), new Peak(5000)];\r\n    \r\nfor(let i = 0; i < peaks.length; i++) {\r\n    let peak = peaks[i];\r\n    if(peak.height fillword fillword) {\r\n        console.log(peak.height);\r\n    }\r\n}","result":"4000 5000","words":{"operators":[">=","<="],"values":["4000","3000"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","4000"]]},{"id":345368017,"text":"Fill the missing words to match the output.","code":"class Student {\r\n    constructor(ageVal) {\r\n        this.age = ageVal;\r\n    }\r\n}\r\n\r\nlet fillword = [];\r\nfor (let i = 10; i <= 20; i++) {\r\n    students.push(new Student(i));\r\n}\r\nfor(let i = 0; i < students.length; i++) {\r\n    let student = students[i];\r\n\r\n    if(student.age > fillword) {\r\n        console.log(student.age);\r\n    }\r\n}","result":"16 17 18 19 20","words":{"operators":[],"values":["15","16"],"variables_constants":["students","students"],"others":["Student","Student"]},"correct_patterns":[["students","15"]]},{"id":1295648158,"text":"Fill the missing words to match the output.","code":"class Product {\r\n    constructor(priceVal) {\r\n        this.price = priceVal;\r\n    }\r\n}\r\n\r\nlet prods = [];\r\nfor (let i = 11; i <= 17; i++) {\r\n    prods.push(fillword fillword fillword);\r\n}\r\nfor (let i = 0; i < prods.length; i++) {\r\n    let prod = prods[i];\r\n    if(prod.price >= 150) {\r\n        console.log(prod.price);\r\n    }\r\n}","result":"150 160 170","words":{"operators":[],"values":[],"variables_constants":[],"others":["Product","prods","(i)","(i * 10)","[]","new"]},"correct_patterns":[["new","Product","(i * 10)"]]}]},{"id":881479616,"name":"Try Catch","tests":[{"id":1522438084,"question":"What's the output of the code snippet?","code":"try {\r\n    console.log(\"1 \");\r\n} catch(ex) {\r\n    console.log(\"2 \");\r\n}\r\nconsole.log(\"3\");","answers":["1 2 3","1 2","1 3"],"correct_answer":"1 3","explanation":"No exception is thrown so the catch  block is not executed and \"2\" is not printed."},{"id":325300101,"question":"What's the output of the code snippet?","code":"try {\r\n    console.log('1 ');\r\n    throw new Exception();\r\n} \r\ncatch(ex) {\r\n    console.log('2 ');\r\n}","answers":["1 2","1","2"],"correct_answer":"1 2","explanation":"Since exception is thrown the catch block is executed thus \"2\" is printed."},{"id":1410387778,"question":"What's the output of the code snippet?","code":"try {\r\n    console.log('1 ');\r\n    throw new Error('2 ');\r\n    console.log('3 ');\r\n}\r\ncatch (ex) {\r\n    console.log(ex.message);\r\n    console.log('4');\r\n}","answers":["1 2 3","1 2 4","1 2 3 4"],"correct_answer":"1 2 4","explanation":"Since exception is thrown the catch block executes.\r\n<br><br>\r\n<code>ex.message<\/code> is the message that's passed to the thrown exception - \"2\"."},{"id":247852803,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tget price() {\r\n\t\treturn this._price;\r\n\t}\r\n\tset price(num) {\r\n\t\tif (num <= 0) {\r\n\t\t\tthrow new Error('Invalid Price');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconsole.log('1 ');\r\ntry {\r\n    let smartphone = new Smartphone();\r\n    smartphone.price = -5;\r\n}\r\ncatch (ex) {\r\n   console.log(ex.message);\r\n}","answers":["1","Invalid Price 1","1 Invalid Price"],"correct_answer":"1 Invalid Price","explanation":"The passed price (-5) meets the condition <code>num <= 0<\/code> thus exception is thrown and the catch block executes.\r\n<br><br>\r\n<code>ex.message<\/code> is the message that's passed to the thrown exception - \"Invalid Price\"."},{"id":1198132928,"question":"What's the output of the code snippet?","code":"class Person {};\r\n\r\ntry {\r\n    var p = new Person();\r\n    p.sayHi();\r\n    console.log(' 123');\r\n}\r\ncatch(ex) {\r\n    console.log(ex.message);\r\n}","answers":["123","p.sayHi is not a function","p.sayHi is not a function 123"],"correct_answer":"p.sayHi is not a function","explanation":"The class <code>Person<\/code> does not have a function <code>sayHi<\/code>.\r\n<br><br>\r\nThis causes an exception. <br><br>\r\n\"123\" is not printed since the execution of the try block terminates when exception is thrown."}],"puzzles":[{"id":133113183,"text":"Fill the missing words to match the output.","code":"try {\r\n    throw new Error(fillword);\r\n} catch(ex) {\r\n    console.log(ex.message);\r\n    console.log(fillword);\r\n}\r\nconsole.log(fillword);","result":"A B C","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"A \"","\"B \"","\"C\"","\"D \""]},"correct_patterns":[["\"A \"","\"B \"","\"C\""]]},{"id":2023507228,"text":"Fill the missing words to match the output.","code":"try {\r\n    console.log(fillword);\r\n    throw new Exception(fillword);\r\n} catch(ex) {\r\n    console.log(fillword);\r\n    console.log(fillword);\r\n}","result":"1 2 3","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"1 \"","\"2 \"","\"3 \"","ex.message"]},"correct_patterns":[["\"1 \"","\"2 \"","ex.message","\"3 \""]]},{"id":826369245,"text":"Fill the missing words to match the output.","code":"class Calculator {\r\n    divide(a, b) {\r\n        if (b == 0) {\r\n            throw new Error(\"Cannot divide by zero\");\r\n        }\r\n        return a \/ b;\r\n    }\r\n}\r\n\r\ntry {\r\n    let calc = new Calculator();\r\n    calc.divide(fillword, fillword);\r\n} catch(ex) {\r\n    console.log(fillword);\r\n}","result":"Cannot divide by zero","words":{"operators":[],"values":["0","3"],"variables_constants":[],"others":["ex","ex.message"]},"correct_patterns":[["3","0","ex.message"]]}]}]},"projects":[{"id":719357286,"name":"Rectangle Calculator","description":"<p>Create a rectangle calculator on your desktop \/ laptop.<\/p>\r\n\r\n<p>The input of the programs are the values of the following variables:<\/p>\r\n<ul>\r\n    <li><b>width<\/b> - positive floating point number representing rectangle's width.<\/li>\r\n    <li><b>height<\/b> - positive floating point number representing rectangle's height..<\/li>\r\n<\/ul>\r\n\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula: 2 x (width + height).<\/li>\r\n    <li><b>Area<\/b>. It's calculated via the formula: width x height.<\/li>\r\n    <li ><b>Diagonal<\/b>. It's calculated via the formula:<img src=\"imgs\/projects\/diagonal-formula.png\" style=\"\r\n    height: 45px;\r\n    display: block;\"><\/li>\r\n<\/ul>\r\n\r\n<p>Hint: You may use the function Math.sqrt to calculate square root and Math.pow to calculate power for the diagonal formula.<\/p>\r\n\r\n<p>Test your code using the inputs and outputs specified below:<\/p>","inputs":["let width = 3;<br>let height = 4;","let width = 2.2;<br>let height = 3.5;","let width = 6;<br>let height = 8;"],"outputs":["Perimeter = 14 <br> Area = 12 <br> Diagonal = 5","Perimeter = 11.4 <br> Area = 7.700000000000001 <br> Diagonal = 4.1340053217188775","Perimeter = 28 <br> Area = 48 <br> Diagonal = 10"],"solution":"let width = 3; \/\/ Replace it with other test value.\r\nlet height = 4; \/\/ Replace it with other test value.\r\n\r\n\/\/ Basic calculations:\r\nlet perimeter = 2 * (width + height);\r\nlet area = width * height;\r\n\r\n\/\/ Use Math.sqrt to calculate square root and Math.pow to calculate power.\r\nlet diagonal = Math.sqrt( Math.pow(width, 2) + Math.pow(height, 2) );\r\n\r\n\/\/ Print calculations:\r\nconsole.log(\"Perimeter = \" + perimeter);\r\nconsole.log(\"Area = \" + area);\r\nconsole.log(\"Diagonal = \" + diagonal);","stars":1,"requirements":["Calculations"]},{"id":1670751527,"name":"Digitized Time","description":"<p>Many timers show time in the format mm:ss (minutes, seconds) but keep track only on the seconds. <p>\r\n<p>Write a program on your desktop \/ laptop which converts seconds (positive integer that's between 0 and 3600) in the format mm:ss.<\/p>\r\n<p>The seconds are specified via the totalSeconds variable.<\/p>\r\n\r\n<p>For example 130 seconds is equivalent to 2 minute and 10 seconds (2 * 60 + 10 = 130) which is formated as \"02:10\".<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["let totalSeconds = 30;","let totalSeconds = 120;","let totalSeconds = 65;","let totalSeconds = 695;","let totalSeconds = 1;","let totalSeconds = 3599;"],"outputs":["00:30","02:00","01:05","11:35","00:01","59:59"],"solution":"let totalSeconds = 30; \/\/ Replace it with other test value.\r\n\r\nminutes = parseInt(totalSeconds \/ 60); \/\/ If totalSeconds \/ 60 has value of 2.90 it's parsed to int as 2.\r\nseconds = totalSeconds - minutes * 60; \/\/ Extract seconds from minutes and total seconds.\r\n\r\nlet output = \"\";\r\nif (minutes < 10)\r\n{\r\n\toutput += \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n}\r\noutput += minutes + \":\";\r\n\r\nif (seconds < 10)\r\n{\r\n\toutput += \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n}\r\n\r\noutput += seconds;\r\n\r\nconsole.log(output);","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":607831268,"name":"Price Management","description":"<p>Penny has groceries stores in multiple Italian cities. Some of the cities are more expensive than others so the price is different for every city.<\/p>\r\n<p>Help Penny to manage her groceries prices by creating a program on your desktop \/ laptop.<br>\r\nThe input is specified via the following variables:<\/p>\r\n<ul>\r\n     <li> <b>city<\/b> - string which has one of three values - \"Milan\", \"Rome\", \"Florence\".<\/li>\r\n     <li> <b>fruit<\/b> - string which has one of three values - \"Orange\", \"Apple\", \"Cherry\".<\/li>\r\n<\/ul>\r\n<p>The program must print the cost of the fruit per kilogram in the specified city.<\/p>\r\n\r\n<p>The prices for fruits per kilogram are displayed in the following table:<\/p>\r\n\r\n<table>\r\n    <thead>\r\n           <tr>\r\n                 <td><\/td>\r\n                 <td>Milan<\/td>\r\n                 <td>Rome<\/td>\r\n                 <td>Florence<\/td>\r\n           <\/tr>\r\n    <\/thead>\r\n    <tbody>\r\n           <tr>\r\n                  <td>Orange<\/td>\r\n                  <td>2.56<\/td>\r\n                  <td>3.20<\/td>\r\n                  <td>4.23<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Apple<\/td>\r\n                  <td>2.86<\/td>\r\n                  <td>3.60<\/td>\r\n                  <td>4.56<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Cherry<\/td>\r\n                  <td>2.00<\/td>\r\n                  <td>2.80<\/td>\r\n                  <td>3.64<\/td>\r\n           <\/tr>\r\n  <\/tbody>\r\n<\/table>\r\n\r\n<p>For example the price per kilogram for orange in Rome is 3.20 and the price per kilogram for cherry in Florence is 3.64.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["let city='Milan';<br>let fruit='Orange';","let city='Florence';<br>let fruit = 'Orange';","let city='Florence';<br>let fruit='Cherry';","let city='Rome';<br>let fruit='Cherry';"],"outputs":["2.56","4.23","3.64","2.80"],"solution":"let city = \"Milan\"; \/\/ Replace it with other test value.\r\nlet fruit = \"Orange\"; \/\/ Replace it with other test value.\r\n\r\nif (city == \"Milan\")\r\n{\r\n    if (fruit == \"Orange\")\r\n    {\r\n        console.log(\"2.56\");\r\n    }\r\n    else if (fruit == \"Apple\")\r\n    {\r\n        console.log(\"2.86\");\r\n    }\r\n    else if (fruit == \"Cherry\")\r\n    {\r\n        console.log(\"2.00\");\r\n    }\r\n}\r\nelse if (city == \"Rome\")\r\n{\r\n    if (fruit == \"Orange\")\r\n    {\r\n        console.log(\"3.20\");\r\n    }\r\n    else if (fruit == \"Apple\")\r\n    {\r\n        console.log(\"3.60\");\r\n    }\r\n    else if (fruit == \"Cherry\")\r\n    {\r\n        console.log(\"2.80\");\r\n    }\r\n}\r\nelse if (city == \"Florence\")\r\n{\r\n    if (fruit == \"Orange\")\r\n    {\r\n        console.log(\"4.23\");\r\n    }\r\n    else if (fruit == \"Apple\")\r\n    {\r\n        console.log(\"4.56\");\r\n    }\r\n    else if (fruit == \"Cherry\")\r\n    {\r\n        console.log(\"3.64\");\r\n    }\r\n}","stars":2,"requirements":["Condition Statements"]},{"id":2085586798,"name":"Currency Converter","description":"<p>Write a currency converter on your desktop \/ laptop which prints the amount of the currency exchange.\r\n<br> The input of the program is set via the following variables:<\/p>\r\n<ul>\r\n    <li><b>amount<\/b> - positive floating point number<\/li>\r\n    <li><b>inputCurrency<\/b> - string representing currency<\/li>\r\n    <li><b>outputCurrency<\/b> - another string representing currency<\/li>\r\n<\/ul>\r\n\r\n<p>The supported currencies are: USD, EUR and GBP. For the sake of simplicity it's assumed that their exchange rate is always the following:<\/p>\r\n\r\n<table class=\"table\">\r\n<tbody>\r\n<tr>\r\n\t<td rowspan=\"2\">1 USD<\/td>\r\n\t<td>0.84 EUR<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>&nbsp;0.72&nbsp;GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 EUR<\/td>\r\n\t<td>1.18 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>0.86 GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 GBP<\/td>\r\n\t<td>1.38 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>1.16 EUR<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>For example 2 EUR are 2.36 USD (2 * 1.18 = 2.36).<\/p>\r\n<p>Also the output needs to be rounded up to two digits after decimal point.<\/p>\r\n\r\n<p>Make sure it's printed \"Invalid Input\" if an unsupported currency is entered.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["let amount = 2;<br>let inputCurrency = \"EUR\";<br>let outputCurrency = \"GBP\";","let amount = 1.12;<br>let inputCurrency = \"USD\";<br>let outputCurrency=\"EUR\";","let amount =2.54;<br>let inputCurrency = \"GBP\";<br>let outputCurrency = \"EUR\";","let amount = 3.56;<br>let inputCurrency = \"ABC\";<br>let outputCurrency = \"EUR\";","let amount = 3.56;<br>let inputCurrency = \"USD\";<br>let outputCurrency=\"ABC\";"],"outputs":["1.72","0.94","2.95","Invalid input.","Invalid input."],"solution":"let amount = 2; \/\/ Replace it with other test value.\r\nlet inputCurrency = 'EUR'; \/\/ Replace it with other test value.\r\nlet outputCurrency = 'GBP'; \/\/ Replace it with other test value.\r\n\r\nlet multiplier = 0;\r\n\r\nif (inputCurrency == \"USD\")\r\n{\r\n    if (outputCurrency == \"EUR\")\r\n    {\r\n        multiplier = 0.84;\r\n    }\r\n    else if (outputCurrency == \"GBP\")\r\n    {\r\n        multiplier = 0.72;\r\n    }\r\n}\r\nelse if (inputCurrency == \"EUR\")\r\n{\r\n    if (outputCurrency == \"USD\") {\r\n        multiplier = 1.18;\r\n    }\r\n    else if (outputCurrency == \"GBP\")\r\n    {\r\n        multiplier = 0.86;\r\n    }\r\n}\r\nelse if (inputCurrency == \"GBP\")\r\n{\r\n    if (outputCurrency == \"USD\")\r\n    {\r\n        multiplier = 1.38;\r\n    }\r\n    else if (outputCurrency == \"EUR\")\r\n    {\r\n        multiplier = 1.16;\r\n    }\r\n}\r\n\r\nif (multiplier == 0)\r\n{\r\n    \/\/ Neither of the checks has modified it's value.\r\n    \/\/ So inform user about invalid input.\r\n    console.log(\"Invalid input.\");\r\n}\r\nelse\r\n{\r\n    \/\/ Valid Input\r\n    \/\/ Calculate and round output up to two digits after decimal point.\r\n\r\n    let output = amount * multiplier;\r\n    console.log(parseFloat(output).toFixed(2));\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":922527535,"name":"Multiplication Table","description":"<p>Write a program on your desktop \/ laptop that prints multiplication table.<\/p>\r\n<p>The input is specified via one variable:<\/p>\r\n<ul>\r\n    <li><b>number<\/b> - positive integer.<\/li>\r\n<\/ul>\r\n<p>The multiplication table must contain information about the multiplications for the input number and the numbers from 1 to 10.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["let number = 3;","let number = 5;","let number = 0;"],"outputs":["3 x 3 = 3 <br> 3 x 2 = 6 <br> 3 x 3 = 9 <br> 3 x 4 = 12 <br> 3 x 5 = 15 <br> 3 x 6 = 18 <br> 3 x 7 = 21 <br> 3 x 8 = 24 <br> 3 x 9 = 27 <br> 3 x 10 = 30","5 x 1 = 5 <br> 5 x 2 = 10 <br> 5 x 3 = 15 <br> 5 x 4 = 20 <br> 5 x 5 = 25 <br> 5 x 6 = 30 <br> 5 x 7 = 35 <br> 5 x 8 = 40 <br> 5 x 9 = 45 <br> 5 x 10 = 50","0 x 1 = 0 <br> 0 x 2 = 0 <br> 0 x 3 = 0 <br> 0 x 4 = 0 <br> 0 x 5 = 0 <br> 0 x 6 = 0 <br> 0 x 7 = 0 <br> 0 x 8 = 0 <br> 0 x 9 = 0 <br> 0 x 10 = 0"],"solution":"let number = 3; \/\/ Replace with other input value.\r\n\r\nfor(let i = 1; i <= 10; i++)\r\n{\r\n    console.log(number + \" x \" + i + \" = \" + number * i);\r\n}","stars":2,"requirements":["Calculations","Loops"]},{"id":1872873196,"name":"Play Button","description":"<p>Write a program on your desktop \/ laptop that prints a play button made of stars.<\/p>\r\n\r\n<p>The input is set via one variable:<\/p>\r\n<ul>\r\n    <li><b>number<\/b> - positive integer representing the count of figure rows.<\/li>\r\n<\/ul>\r\n<p>If the input number is even (like 0, 2, 4, 6 etc...) or negative print the message \"Invalid input.\".<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: You don't have to write nested loops if you don't want to. You can repeat a string like this: <br>\r\n<code>let row = '*'.repeat(4);<\/code> which creates the following string: \"****\".<\/p>","inputs":["let number= 1;","let number = 3;","let number = 5;","let number = 7;","let number = 2;","let number = 0;","let number = -1;"],"outputs":["<div style=\"letter-spacing: 5px;\">*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>****<br>***<br>**<br>*<\/div>","Invalid input.","Invalid input.","Invalid input."],"solution":"let number = 7; \/\/ Replace it with other test values.\r\n\r\nif(number % 2 == 0 || number <= 0)\r\n{\r\n    \/\/ Inform user that input is negative.\r\n    console.log(\"Invalid input.\");\r\n}\r\nelse {\r\n    \/\/ Print the upper part:\r\n    for(let i = 1; i <= number \/ 2; i++)\r\n    {\r\n        \/\/ repeat '*' i times.\r\n        \/\/ Example: '*'.repeat(3) would create the string \"***\".\r\n        let row =  '*'.repeat(i)\r\n        console.log(row);\r\n    }\r\n\r\n    \/\/ Print the middle row:\r\n    let middleRow = '*'.repeat(number \/ 2 + 1);\r\n    console.log(middleRow);\r\n\r\n    \/\/ Print the below part:\r\n    for (let i = number \/ 2; i >= 1; i--)\r\n    {\r\n        let row = '*'.repeat(i);\r\n        console.log(row);\r\n    }\r\n}","stars":3,"requirements":["Loops"]},{"id":542566061,"name":"Digits Counter","description":"<p>Write a program on your desktop \/ laptop which prints the occurrences of digits in input number.<\/p>\r\n<p>The input is set via the variable number - a positive integer.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details.<\/p>","inputs":["let number = 112266863;","let number = 15968929;","let number = 123;"],"outputs":["0 -> 0 <br> 1 -> 2 <br> 2 -> 2 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 3 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 0","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 0 <br> 4 -> 0 <br> 5 -> 1 <br> 6 -> 1 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 3","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 0 <br> 7 -> 0 <br> 8 -> 0 <br> 9 -> 0"],"solution":"let number = 112266863; \/\/ Replace it with other test value.\r\n\r\nfor(let i = 0; i <= 9; i++) \/\/ For numbers in range [0, 9].\r\n{\r\n    let occurrences = 0;\r\n    let numberToString = number + '';\r\n\r\n    \/\/ Iterate over each digit in the number\r\n    for (let digit of numberToString) {\r\n        if(digit == i) {\r\n            occurrences++;\r\n        }\r\n    }\r\n\r\n    console.log(i + \" -> \" + occurrences);\r\n}","stars":3,"requirements":["Loops"]},{"id":452658794,"name":"Chess Tournament","description":"<p>Write a program on your desktop \/ laptop which prints data about the ages of the participant in chess tournament.<\/p>\r\n<p>The input is set via the variable:<\/p>\r\n<ul>\r\n    <li><b>ages<\/b> - array containing positive integers, representing the ages of the participant.<\/li>\r\n<\/ul>\r\n\r\nThe output of the program must provide data about:\r\n<ul>\r\n    <li><b>Minimum age<\/b> - the age of the youngest participant.<\/li>\r\n    <li><b>Maximum age<\/b> - the age of the oldest participant.<\/li>\r\n    <li><b>Average age<\/b><\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["let ages = [19, 21, 20];","let ages = [18, 19];","let ages = [15, 15, 18];"],"outputs":["Min: 19 <br> Max: 21 <br> Average: 20","Min: 18 <br> Max: 19 <br> Average: 18","Min: 15 <br> Max: 18 <br> Average: 16"],"solution":"let ages = [19, 21, 20]; \/\/ Replace it with other test value.\r\n\r\n\/\/ Loop array and find output data:\r\nlet minAge = ages[0];\r\nlet maxAge = ages[0];\r\nlet sum = 0; \/\/ Used to calculate average age.\r\n\r\nfor (let i = 0; i < ages.length; i++)\r\n{\r\n    let age = ages[i];\r\n\r\n    if(age < minAge)\r\n    {\r\n        minAge = age;\r\n    }\r\n\r\n    if(age > maxAge)\r\n    {\r\n        maxAge = age;\r\n    }\r\n\r\n    sum += age;\r\n}\r\n\r\nlet averageAge = parseInt(sum \/ ages.length);\r\n\r\nconsole.log(\"Min: \" + minAge);\r\nconsole.log(\"Max: \" + maxAge);\r\nconsole.log(\"Average: \" + averageAge);","stars":3,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":1403528747,"name":"Gaming Shop","description":"<p>Steve has a gaming shop and needs your help with inserting games and recording sells.<\/p>\r\n\r\n<p>Write a program on your desktop \/ laptop which processes commands.<\/p>\r\n<p>The input is set via the variable commands - array containing strings representing commands.<\/p>\r\n\r\n<p>There are 3 types of commands:<\/p>\r\n<ul>\r\n    <li>\r\n        <b>Product Insertion<\/b> - it's in the format: <br>\r\n          \"insert-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It creates new game with the specified quantity or increases the quantity if the game is already added.\r\n    <\/li>\r\n    <li>\r\n        <b>Product Sell<\/b> - it's in the format: <br>\r\n          \"sell-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It decreases the quantity of the specified game. You can assume that the sold quantity will always be less or equal to the available one.\r\n    <\/li>\r\n<\/ul> \r\n<p>After the commands are processed, a report of available games and their quantity is printed.<\/p>\r\n\r\n<p>Notice that sold out games (with quantity of 0) must not be included in the end report.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: since game names are considered unique, the best practice would be to use dictionary for storing data with key - the game name and value - it's quantity.<\/p>","inputs":["let commands = [\"insert-Minecraft-5\", \"insert-Rocket League-10\"];","let commands = [\"insert-Counter Strike-10\", \"sell-Counter Strike-3\"];","let commands  = [\"insert-Fortnite-10\", \"insert-pubg-10\", \"sell-Fortnite-10\", \"sell-pubg-7\"];"],"outputs":["Minecraft: 5<br> Rocket League: 10","Counter Strike: 7","pubg: 3"],"solution":"let commands =[\"insert-Minecraft-5\", \"insert-Rocket League-10\"]; \/\/ Replace it with other test values.\r\nlet gamesData = {};\r\n\r\ncommands.forEach(command => {\r\n    \/\/ Get command components by spliting.\r\n    \/\/ Example: if command has value \"insert-game-15\" then parameters would be array with 3 elements - \"insert\", \"game\" and \"15\"\r\n    let parameters = command.split('-');\r\n\r\n    let commandName = parameters[0];\r\n    let gameName = parameters[1];\r\n    let quantity = parseInt(parameters[2]);\r\n\r\n    if (commandName == \"insert\")\r\n    {\r\n        \/\/ The insert command is used for:\r\n        \/\/ - Adding new game to the store with the specified quantity.\r\n        \/\/ - Increasing quantity to already added game.\r\n        \/\/ Both cases need to be handled separately.\r\n\r\n        if ((gamesData[gameName]))\r\n        {\r\n            \/\/ Increase quantity to already added game\r\n            gamesData[gameName] += $quantity;\r\n        }\r\n        else\r\n        {\r\n            \/\/ Adding new game to the store with the specified quantity.\r\n            gamesData[gameName] = quantity;\r\n        }\r\n    }\r\n    else if(commandName == \"sell\") \/\/ Handle selling:\r\n    {\r\n        \/\/ Decrease quantity when game is sold.\r\n        gamesData[gameName] -= quantity;\r\n\r\n        if(gamesData[gameName] == 0)\r\n        {\r\n            \/\/ Don't store data for games that have been sold out.\r\n            delete gamesData[gameName];\r\n        }\r\n    }\r\n});\r\n\r\n\/\/ Print report:\r\nfor (const [gameName, quantity] of Object.entries(gamesData)) {\r\n  console.log(gameName + ': ' + quantity);\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":341656040,"name":"Tic Tac Toe","description":"<p>Write a program on your desktop \/ laptop which checks who wins on in tic tac toe match.<\/p>\r\n<p>If you don't know how to play tic tac toe, you can learn the rules from\r\n<a href=\"https:\/\/www.wikihow.com\/Play-Tic-Tac-Toe\">here<\/a>.<\/p>\r\n\r\n<p>The input parameters of the program is set via the variables row1, row2, row3. Each represents a line of the tic tac toe board.<\/p>\r\n<p>The program prints one of the following:<\/p>\r\n<ul>\r\n    <li><b>\"X wins\"<\/b> if X wins<\/li>\r\n    <li><b>\"O wins\"<\/b> if O wins<\/li>\r\n    <li><b>\"Tie\"<\/b> if neither of the players wins.<\/li>\r\n<\/ul>\r\n<p>You can assume that the input will always represent a legit tic tac toe endgame so you don't have to validate it.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: the best data structure that represents a tic tac toe board would be matrix with 3 rows and 3 columns.<\/p>","inputs":["let row1 = \"ooo\";<br>let row2 = \"xx-\";<br>let row3 = \"---\";","let row1 = \"xo-\";<br>let row2 = \"oxo\";<br>let row3 = \"x-x\";","let row1 = \"xox\";<br>let row2 = \"oox\";<br>let row3 = \"xxo\";"],"outputs":["O wins","X wins","Tie"],"solution":"let board = [];\r\n\r\nlet row1 = \"ooo\";\r\nlet row2 = \"xx-\";\r\nlet row3 = \"---\";\r\n\r\n\/\/ Convert lines to arrays and add them to the board.\r\nboard[0] = row1.split('');\r\nboard[1] = row2.split('');\r\nboard[2] = row3.split('');\r\n\r\nif(winsTicTacToe(board, 'x'))\r\n{\r\n    console.log(\"X wins\");\r\n}\r\nelse if (winsTicTacToe(board, 'o'))\r\n{\r\n    console.log(\"O wins\");\r\n}\r\nelse\r\n{\r\n    console.log(\"Tie\");\r\n}\r\n\r\nfunction winsTicTacToe(board, symbol)\r\n{\r\n    for(let i = 0; i < 3; i++)\r\n    {\r\n        if ((board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol) ||  \/\/ If line is filled only with x or o.\r\n            board[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol) \/\/ If column is filled only with x or o.\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        \/\/ Check if one of the diagonals is filled only with x or o\r\n        if(board[1][1] == symbol && \r\n                ((board[0][0] == symbol && board[2][2] == symbol) ||\r\n                (board[0][2] == symbol && board[2][0] == symbol))\r\n        )\r\n        {\r\n            return true;\r\n        }\r\n\r\n    return false;\r\n}","stars":4,"requirements":["Condition Statements","Loops","Data Structures","Functions"]},{"id":1292001705,"name":"Car Dealership","description":"<p>Write a program on your desktop \/ laptop which reads data for cars and print data only for those which make is the same as the specified one.<\/p>\r\n<p>The input is specified via the following variables:<\/p>\r\n<ul>\r\n    <li><b>carsData<\/b> - the data for all cars in which each element represents a single car in the format:<br>\r\n&lt;make&gt; &lt;model&gt; &lt;hp&gt;  &lt;price&gt; .<\/li>\r\n    <li><b>filterMake<\/b> - string.<\/li>\r\n<\/ul>\r\n\r\n<p>The car dealership offers a 10 % discount for people who've bought a car from the same warehouse in the last 6 years. That discount must be included in the output. Also the prices of the cars must be printed as numbers with 2 digits after the decimal point.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Car<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to calculate discount<\/li>\r\n    <li>array for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>let carsData = ['Volkswagen Golf 95 25000'];<br>let filterMake = 'Volkswagen';<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000.00 (22500 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>let carsData = ['Toyotta Corolla 120 23000', 'Ford Fiesta 80 18000', 'Toyotta Aygo 75 16000'];<br>let filterMake = 'Toyotta';<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Toyotta Corolla 120 23000.00 (20700.00 for loyal customers)<br>Toyotta Aygo 75 16000.00 (14400.00 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"class Car\r\n{\r\n    \/\/ Access via getters and setters:\r\n    get make()\r\n    {\r\n        return this._make;\r\n    }\r\n    \r\n    set make(makeVal)\r\n    {\r\n        this._make = makeVal;\r\n    }\r\n    \r\n    get model()\r\n    {\r\n        return this._model;\r\n    }\r\n    \r\n    set model(modelVal)\r\n    {\r\n        this._model = modelVal;\r\n    }\r\n    \r\n    get hp()\r\n    {\r\n        return this._hp;\r\n    }\r\n    \r\n    set hp(hpVal)\r\n    {\r\n        this._hp = hpVal;\r\n    }\r\n    \r\n    get price()\r\n    {\r\n        return this._price;\r\n    }\r\n    \r\n    set price(priceVal)\r\n    {\r\n        this._price = priceVal;\r\n    }\r\n\r\n    \/\/ Parameterized constructor for creating objects:\r\n    constructor(make, model, hp, price)\r\n    {\r\n        this.make = make;\r\n        this.model = model;\r\n        this.hp = hp;\r\n        this.price = price;\r\n    }\r\n\r\n    calculateDiscount()\r\n    {\r\n        \/\/ Calculate price with 10 % discount (90 % of the ordinary price):\r\n        return this.price * 9 \/ 10;\r\n    }\r\n\r\n    printData()\r\n    {\r\n        console.log(this.make + \" \" + this.model + \" \" + this.hp + \" \" +\r\n        this.price.toFixed(2) + \" \" + this.calculateDiscount().toFixed(2) + \" for loyal customers)\");\r\n    }\r\n}\r\n\r\nlet cars = [];\r\nlet carsData = ['Toyotta Corolla 120 23000', 'Ford Fiesta 80 18000', 'Toyotta Aygo 75 16000']; \/\/ Replace it with others test values.\r\nlet filterMake = 'Toyotta'; \/\/ Replace it with others test values.\r\n\r\ncarsData.forEach(function(carData)\r\n{\r\n    let carParameters = carData.split(' ');\r\n\r\n    let make = carParameters[0];\r\n    let model = carParameters[1];\r\n    let hp = parseInt(carParameters[2]);\r\n    let price = parseFloat(carParameters[3]);\r\n\r\n    \/\/ Create object based on the input data and add it to the array.\r\n    let obj = new Car(make, model, hp, price);\r\n    cars.push(obj);\r\n});\r\n\r\ncars.forEach(function(car) {\r\n    \/\/ Filter cars by make:\r\n    if (car.make == filterMake)\r\n    {\r\n        \/\/ Print the string representations specified with the toString method:\r\n        car.printData();\r\n    }\r\n});","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures","Functions","OOP"]},{"id":129401206,"name":"Students Scores","description":"<p>Write a program on your desktop \/ laptop which reads data for students scores on exam and prints it back sorted.<\/p>\r\n<p>The input is via the following variable:<\/p>\r\n<ul>\r\n    <li><b>examData<\/b> - the data for a single exam score in the format:<br>\r\n&lt;student's first name&gt; &lt;student's last name&gt; &lt;exam score&gt; .<\/li>\r\n<\/ul>\r\n<p>Each element of the examData variable represent student's info and his\/her exam grade.<\/p>\r\n<p>The output must include grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Student<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to get grade<\/li>\r\n    <li>array collection for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>let examData = ['John Smith 81'];<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>John Smith 81 B<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>let examData = ['Alex  Ethan 77', 'Joe Hawke 82'];<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Joe Hawke 82 B<br>Alex  Ethan 77 C<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>let examData = ['Olivia Smith 88', 'Jack DiIlan 88', 'Gabriel Doe 93'];<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Gabriel Doe 93 A <br>Olivia Smith 88 B<br>Jack DiIlan 88 B<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"class Student\r\n{\r\n    \/\/ access via getters and setters:\r\n    get firstName()\r\n    {\r\n        return this._firstName;\r\n    }\r\n\r\n    set firstName(value)\r\n    {\r\n        this._firstName = value;\r\n    }\r\n\r\n    get lastName()\r\n    {\r\n        return this._lastName;\r\n    }\r\n\r\n    set lastName(value)\r\n    {\r\n        this._lastName = value;\r\n    }\r\n    \r\n    get examScore()\r\n    {\r\n        return this._examScore;\r\n    }\r\n\r\n    set examScore(value)\r\n    {\r\n        this._examScore = value;\r\n    }\r\n\r\n    get grade()\r\n    {\r\n        let examScore = this.examScore;\r\n        \r\n        \/\/ Find out grade based on points:\r\n        if (examScore < 50)\r\n            return 'F';\r\n        if (examScore < 60)\r\n            return 'E';\r\n        if (examScore < 70)\r\n            return 'D';\r\n        if (examScore < 80)\r\n            return 'C';\r\n        if (examScore < 90)\r\n            return 'B';\r\n\r\n        return 'A';\r\n    }\r\n\r\n     \/\/ Parameterized constructor for creating objects:\r\n    constructor(firstName, lastName, examScore)\r\n    {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.examScore = examScore;\r\n    }\r\n    \r\n    printData()\r\n    {\r\n        console.log(this.firstName + \" \" + this.lastName + \" \" + \r\n            this.examScore + \" \" + this.grade);\r\n    }\r\n}\r\n\r\nlet examData  = ['Olivia Smith 88', 'Jack DiIlan 88', 'Gabriel Doe 93']; \/\/ Replace it with other values.\r\nlet students  = [];\r\n\r\nexamData.forEach(function(studentData)\r\n{\r\n    let studentDataParams = studentData.split(' ');\r\n\r\n    let firstName = studentDataParams[0];\r\n    let lastName = studentDataParams[1];\r\n    let examScores = parseInt(studentDataParams[2]);\r\n\r\n    \/\/ Create object based on the input data and add it to array:\r\n    let obj = new Student(firstName, lastName, examScores);\r\n    students.push(obj);\r\n});\r\n\r\n\/\/ Sort students by exam score descendingly.\r\nstudents.sort(function (a, b) {\r\n    if(a.examScore > b.examScore)\r\n    {\r\n        return -1;\r\n    }\r\n    else if (a.examScore === b.examScore)\r\n    {\r\n        return 0;\r\n    }\r\n    return 1;\r\n});\r\n\r\nstudents.forEach(function(student) {\r\n    student.printData();\r\n});","stars":5,"requirements":["Condition Statements","Loops","Data Structures","Functions","OOP"]}],"challenges":[]},"C++":{"urlName":"c-plus-plus","mode":"text\/x-c++src","tutorials":{"Basics":[{"id":497587622,"name":"Data Types","tests":[{"id":1158864384,"question":"Which type is suitable for describing car's model?","code":null,"answers":["int","string","bool"],"correct_answer":"string","explanation":"<ul>\r\n<li>string is suitable for describing a sequence of symbols.<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1070070209,"question":"Which type is suitable for describing person's age?","code":null,"answers":["int","double","string"],"correct_answer":"int","explanation":"<ul>\r\n<li>int - whole numbers (like 5, 6, 10).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"},{"id":1886656910,"question":"Which type is suitable for describing distance?","code":null,"answers":["char","double","string"],"correct_answer":"double","explanation":"<ul>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>char - a single symbol.<\/li>\r\n<\/ul>"},{"id":689518927,"question":"Which type is suitable for describing a single symbol?","code":null,"answers":["boolean","int","char"],"correct_answer":"char","explanation":"<ul>\r\n<li>char - a single symbol.<\/li>\r\n<li>Int - whole number.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1674467596,"question":"Which type is suitable for describing if person is famous (true or false)?","code":null,"answers":["boolean","double","int"],"correct_answer":"boolean","explanation":"<ul>\r\n<li>boolean - true or false (famous or not famous).<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"}],"puzzles":[{"id":2047699857,"text":"Fill the missing words to match the output.","code":"fillword name = \"Alex\";\r\nfillword age = 20;","result":null,"words":{"operators":[],"values":[],"variables_constants":["int","string","char"],"others":[]},"correct_patterns":[["string","int"]]},{"id":1018268510,"text":"Fill the missing words to match the output.","code":"fillword salesCount = 150;\r\nfillword height = 180.52;","result":null,"words":{"operators":[],"values":[],"variables_constants":["int","boolean","char","double"],"others":[]},"correct_patterns":[["int","double"]]},{"id":1969662751,"text":"Fill the missing words to match the output.","code":"fillword city = \"Madrid\";\r\nfillword letter = 'M';\r\nfillword isSunny = true;","result":null,"words":{"operators":[],"values":[],"variables_constants":["bool","char","string","double","float"],"others":[]},"correct_patterns":[["string","char","bool"]]}]},{"id":1448981863,"name":"Calculations","tests":[{"id":611547341,"question":"What's the output of the code snippet?","code":"int number = 5 + 6 - 2;\r\ncout << number;","answers":["9","10","11"],"correct_answer":"9","explanation":"5 + 6 - 2 =  <br>\r\n11 - 2 =  <br>\r\n9"},{"id":489134218,"question":"What's the output of the code snippet?","code":"int number = 6 * 3 - 1;\r\ncout << number;","answers":["12","17","18"],"correct_answer":"17","explanation":"6 * 3 - 1 = <br>\r\n18 - 1 = <br>\r\n17"},{"id":1473558603,"question":"What's the output of the code snippet?","code":"int number = 18 \/ 3 + 3;\r\ncout << number;","answers":["3","6","9"],"correct_answer":"9","explanation":"18 \/ 3 + 3 = <br>\r\n6 + 3 = <br>\r\n9"},{"id":142202888,"question":"What's the output of the code snippet?","code":"int number = (14 + 7) \/ 7;\r\ncout << number;","answers":["3","15","22"],"correct_answer":"3","explanation":"(14 + 7) \/ 7 = <br>\r\n21 \/ 7 = <br>\r\n3"},{"id":1093598153,"question":"What's the output of the code snippet?","code":"int number = 14 % 3;\r\ncout << number;","answers":["2","3","4"],"correct_answer":"2","explanation":"14 : 3 = <b>4<\/b>.67 <br><br>\r\n14 - 3 * 4 = <br>\r\n14 - 12 =<br>\r\n2"}],"puzzles":[{"id":772524764,"text":"Fill the missing words to match the output.","code":"int number = 6 fillword 2;\r\ncout << number;","result":"12","words":{"operators":["+","%","*","\/"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["*"]]},{"id":1622731421,"text":"Fill the missing words to match the output.","code":"string color = \"Blue \";\r\nstring combine = color fillword \"Sky\";\r\ncout << combine;","result":"Blue Sky","words":{"operators":[".","*","-","+","%"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["+"]]},{"id":1500318298,"text":"Fill the missing words to match the output.","code":"int division = 12 fillword 4;\r\nint remainder = 17 fillword  5;\r\n\r\ncout << division << endl;\r\ncout << remainder;","result":"3\r\n2","words":{"operators":["+","\/","%","^"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["\/","%"]]}]},{"id":1057376460,"name":"Assignments","tests":[{"id":2004391191,"question":"What's the output of the code snippet?","code":"int val = 8;\r\nval = 2;\r\ncout << val;","answers":["2","8","10"],"correct_answer":"2","explanation":"The last value set to the variable <code>val<\/code> is 2.\r\n<br><br>\r\nSo <code>val<\/code> has value of 2 when it's printed."},{"id":674084052,"question":"What's the output of the code snippet?","code":"int num = 2;\r\nnum = num + 3;\r\ncout << num;","answers":["2","3","5"],"correct_answer":"5","explanation":"num = 2\r\n<br>\r\nnum = 2 + 3\r\n<br>\r\nnum = 5"},{"id":1657984149,"question":"What's the output of the code snippet?","code":"int num = 4;\r\nnum *= 3;\r\n\r\ncout << num;","answers":["3","9","12"],"correct_answer":"12","explanation":"num = 4 <br>\r\nnum *= 3\r\n<br>\r\nnum = num * 3\r\n<br>\r\nnum = 4 * 3<br>\r\nnum = 12"},{"id":1535636562,"question":"What's the output of the code snippet?","code":"int num = 4 + 6;\r\nnum \/= 2;\r\nnum *= 3;\r\n\r\ncout << num;","answers":["5","15","60"],"correct_answer":"15","explanation":"num = 4 + 6; <br>\r\nnum = 10 <br>\r\n<br>\r\nnum \/= 2; <br>\r\nnum = num \/ 2; <br>\r\nnum = 10 \/ 2; <br>\r\nnum = 5 <br>\r\n<br>\r\nnum *= 3; <br>\r\nnum = num * 3; <br>\r\nnum = 5 * 3; <br>\r\nnum = 15"},{"id":473175059,"question":"What's the output of the code snippet?","code":"int a = 3;\r\nint b = 2;\r\n\r\na *= b;\r\nb *= a;\r\n\r\ncout << b;","answers":["6","12","72"],"correct_answer":"12","explanation":"a = 3 <br>\r\nb = 2 <br>\r\n<br>\r\na *= b <br>\r\na = a * b <br>\r\na = 3 * 2 <br>\r\na = 6 <br>\r\n<br>\r\nb *= a <br>\r\nb = b * a <br>\r\nb = 2 * 6 <br>\r\nb = 12"}],"puzzles":[{"id":1524955406,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\nnum = fillword;\r\n\r\ncout << num;\r\nnum = fillword;","result":"8","words":{"operators":[],"values":["1","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["1","8","7"],["7","8","1"]]},{"id":327751887,"text":"Fill the missing words to match the output.","code":"int num = 5;\r\nnum fillword fillword;\r\ncout << num;","result":"15","words":{"operators":[],"values":["1","2","3"],"variables_constants":["+=","*=","\/="],"others":[]},"correct_patterns":[["*=","3"]]},{"id":1413363852,"text":"Fill the missing words to match the output.","code":"int num fillword 10;\r\nnum fillword 5;\r\nnum fillword 2;\r\nnum fillword 1;\r\n\r\ncout << num;","result":"29","words":{"operators":["=","+=","-=","*=","\/="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","+=","*=","-="]]}]},{"id":251843876,"name":"If Statement","tests":[{"id":1003690902,"question":"What's the output of the code snippet?","code":"int age = 18;\r\n\r\nif (age >= 21) {\r\n\tcout << \"a \";\r\n}\r\nif (age < 30) {\r\n\tcout << \"b\";\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>age = 18<\/code>\r\n<br><br>\r\n<code>age >= 21<\/code> is false.\r\n<br><br>\r\n<code>age < 30<\/code> is true so \"b\" is printed."},{"id":2088778583,"question":"What's the output of the code snippet?","code":"int pagesCount = 100;\r\n\r\nif (pagesCount > 100) {\r\n\tcout << \"a \";\r\n}\r\nif (pagesCount >= 100) {\r\n\tcout << \"b\";\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>pagesCount = 100<\/code>\r\n<br><br>\r\n\r\n<code>pagesCount > 100<\/code> is false. <br><br>\r\n<code>pagesCount >= 100<\/code> is true so \"b\" is printed."},{"id":892689172,"question":"What's the output of the code snippet?","code":"int num = 3;\r\n\r\nif (num == 3) {\r\n\tcout << \"a \";\r\n}\r\nif (num != 3) {\r\n\tcout << \"b\";\r\n}","answers":["a","b","a b"],"correct_answer":"a","explanation":"<code>num = 3<\/code>\r\n<br><br>\r\n\r\n<code>num == 3<\/code> is true so \"a\" is printed.\r\n<br><br>\r\n<code>num != 3<\/code> is false (because num is equal to 3)."},{"id":1876589269,"question":"What's the output of the code snippet?","code":"int score = 87;\r\n\r\nif (score <= 87) {\r\n\tcout << \"1 \";\r\n}\r\nif (score == 87) {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>score = 87<\/code>\r\n<br><br>\r\n\r\n<code>score <= 87<\/code> is true so \"1\" is printed.\r\n<br><br>\r\n<code>score == 87<\/code> is true so \"2\" is printed."},{"id":546216594,"question":"What's the output of the code snippet?","code":"int num = 77;\r\nint rem = num % 2;\r\n\r\nif (rem == 0) {\r\n\tcout << \"even \";\r\n}\r\nif (rem == 1) {\r\n\tcout << \"odd \";\r\n}","answers":["even","odd","even odd"],"correct_answer":"odd","explanation":"77 % 2 is equal to 1 (rem is 1) so odd is printed.\r\n<br><br>\r\nThe only condition that's true is <code>rem == 1<\/code> ."}],"puzzles":[{"id":303180315,"text":"Fill the missing words to match the output.","code":"double price = 300;\r\n\r\nif(price fillword 500)\r\n{\r\n    cout << \"High\";\r\n}","result":"High","words":{"operators":["<","==",">"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["<"]]},{"id":1422341592,"text":"Fill the missing words to match the output.","code":"int number = 7;\r\nif(number fillword 7) {\r\n    cout << \"Special Number\" << endl;\r\n}\r\n\r\ndouble volume = 101;\r\nif(volume fillword 100)\r\n{\r\n    cout << \"Large\";\r\n}","result":"Special Number\r\nLarge","words":{"operators":["<",">","=="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["==",">"]]},{"id":225727897,"text":"Fill the missing words to match the output.","code":"int number = 5;\r\n\r\nif(number fillword 0) {\r\n    cout << \"Different\";\r\n}","result":"Different","words":{"operators":["==","!=","<","<="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!="]]}]},{"id":1992513316,"name":"Logical Operators","tests":[{"id":422820435,"question":"What's the output of the code snippet?","code":"int num = 7;\r\n\r\nif (num > 7 || num < 21) {\r\n\tcout << \"1 \";\r\n}\r\nif (num > 10 || num < 15) {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>num = 7<\/code>\r\n<br><br>\r\n<code>num > 7 || num < 21<\/code> is true because <code>num < 21<\/code> is true .\r\n<br><br>\r\n<code>num > 10 || num < 15<\/code> is true because <code>num < 15<\/code> is true.\r\n<br><br>\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1407244816,"question":"What's the output of the code snippet?","code":"int age = 17;\r\n\r\nif (age > 13 && age < 21) {\r\n\tcout << \"1 \";\r\n}\r\nif (age > 21 && age < 60) {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n<code>age > 13 && age < 21<\/code> is true because both operands are true.\r\n<br><br>\r\n<code>age > 21 && age < 60<\/code> is false because <code>age > 21<\/code> is false.\r\n<br><br>\r\n\r\nUsing && means that If any of the two operands is false, then  the condition becomes false."},{"id":345368017,"question":"What's the output of the code snippet?","code":"int level = 5;\r\n\r\nif (level > 0 && level < 11) {\r\n\tcout << \"valid \";\r\n}\r\nif (level == 5 || level == 7) {\r\n\tcout << \"special \";\r\n}","answers":["valid","special","valid special"],"correct_answer":"valid special","explanation":"<code>level = 5<\/code>\r\n<br><br>\r\n<code>level > 0 && level < 11<\/code> is true because both operands are true (level is between 0 and 11).\r\n<br><br>\r\n<code>level == 5 || level == 7<\/code> is true because <code>level == 5<\/code> is true.\r\n<br><br>\r\nUsing && means that If any of the two operands is false, then  the condition becomes false.\r\n<br><br>\r\n\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1295648158,"question":"What's the output of the code snippet?","code":"double height = 165;\r\n\r\nif (!(height == 160)) {\r\n\tcout << \"1 \";\r\n}\r\nif (!(height > 150 && height < 200)) {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>height = 165<\/code>\r\n<br><br>\r\n<code>height == 160<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>height > 150 && height < 200<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."},{"id":133113183,"question":"What's the output of the code snippet?","code":"int code = 301;\r\n\r\nif (!(code >= 100 && code <= 200)) {\r\n\tcout << \"1 \";\r\n}\r\nif (!(code >= 400 || code == 301)) {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>code = 301<\/code>\r\n<br><br>\r\n<code>code >= 100 && code <= 200<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>code >= 400 || code == 301<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."}],"puzzles":[{"id":1176073510,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nif(num == 1 fillword num == 2) {\r\n    cout << \"1 or 2\";\r\n}","result":"1 or 2","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["||"]]},{"id":952997095,"text":"Fill the missing words to match the output.","code":"int num = 4;\r\n\r\nif(num >= 1 fillword num <= 9) {\r\n    cout << \"Between 1 and 9\";\r\n}\r\n\r\nif(num == 3 fillword  num == 4) {\r\n    cout << \"3 or 4\";\r\n}","result":"Between 1 and 9\r\n3 or 4","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["&&","||"]]},{"id":1903342756,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\nif(fillword(num != 1)) {\r\n    cout << \"Equal To One\";\r\n}","result":"Equal To One","words":{"operators":["&","|","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!"]]}]},{"id":1102574821,"name":"If Else Statements","tests":[{"id":2023507228,"question":"What's the output of the code snippet?","code":"int age = 17;\r\n\r\nif (age == 17) {\r\n\tcout << \"1 \";\r\n}\r\nelse {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n\r\n<code>age == 17<\/code> is true so the code inside if clause is executed.\r\n<br><br>\r\nThe code inside the else block is not executed."},{"id":826369245,"question":"What's the output of the code snippet?","code":"int num = 5;\r\n\r\nif (num == 3) {\r\n\tcout << \"1 \";\r\n}\r\nelse {\r\n\tcout << \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>num = 5<\/code>\r\n<br><br>\r\n<code>num == 3<\/code> is false so the code inside the else clause is executed.\r\n<br><br>\r\nThe code inside the if block is not executed."},{"id":1811252378,"question":"What's the output of the code snippet?","code":"int num = 15;\r\n\r\nif (num == 14) {\r\n\tcout << \"1 \";\r\n}\r\nelse if (num == 15) {\r\n\tcout << \"2 \";\r\n}\r\nelse {\r\n\tcout << \"3 \";\r\n}","answers":["2","2 3","1 3"],"correct_answer":"2","explanation":"<code>num = 15<\/code>\r\n<br><br>\r\n\r\n<code>num == 14<\/code> is false but <code>num == 15<\/code> is true so the code inside the else if clause is executed.\r\n<br><br>\r\nThe code inside the if and else blocks is not executed."},{"id":748332123,"question":"What's the output of the code snippet?","code":"int score = 90;\r\n\r\nif (score <= 50) {\r\n\tcout << \"low\";\r\n}\r\nelse if (score <= 75) {\r\n\tcout << \"medium\";\r\n}\r\nelse {\r\n\tcout << \"high\";\r\n}","answers":["low","medium","high"],"correct_answer":"high","explanation":"<code>score = 90<\/code>\r\n<br><br>\r\nBoth <code>score <= 50<\/code> and <code>score <= 75<\/code> are false. \r\n<br><br>\r\nThat's the reason why the code inside the else block is executed."},{"id":1699726360,"question":"What's the output of the code snippet?","code":"int num = 75;\r\n\r\nif (num <= 50) {\r\n\r\n}\r\nelse if (num <= 75) {\r\n\tcout << \"1 \";\r\n}\r\nelse if (num <= 80) {\r\n\tcout << \"2\";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>num = 75<\/code>\r\n<br><br>\r\n<code>num <= 50<\/code> is false and <code>num <= 75<\/code> is true thus \"1\" is printed.\r\n<br><br>\r\nSince  the condition of the first else-if block is true, the next one (<code>num <= 80<\/code>) is not checked."}],"puzzles":[{"id":707253349,"text":"Fill the missing words to match the output.","code":"int num = 5;\r\nif(num fillword 10) {\r\n    cout << \"More than 10\";\r\n}\r\nfillword  {\r\n    cout << \"Less than 10\";\r\n}","result":"Less than 10","words":{"operators":["<","<=",">",">="],"values":[],"variables_constants":[],"others":["else","if"]},"correct_patterns":[[">=","else"],[">","else"]]},{"id":1825895458,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nif(num == fillword) {\r\n    cout << \"Equal to 0\";\r\n}\r\nfillword fillword(num == fillword) {\r\n    cout << \"Equal to 1\";\r\n}","result":"Equal to 1","words":{"operators":[],"values":["0","1"],"variables_constants":[],"others":["if","else","=="]},"correct_patterns":[["0","else","if","1"]]},{"id":628692963,"text":"Fill the missing words to match the output.","code":"int num = 7;\r\n\r\nif(num == fillword) {\r\n    cout << \"A\";\r\n}\r\nelse if(num == fillword) {\r\n    cout << \"B\";\r\n}\r\nfillword {\r\n    cout << \"C\";\r\n}","result":"C","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["if","else","else if"]},"correct_patterns":[["5","6","else"],["6","5","else"]]}]},{"id":1411641825,"name":"Switch Statement","tests":[{"id":1610409945,"question":"What's the output of the code snippet?","code":"int num = 2;\r\n\r\nswitch (num) {\r\n\tcase 1:\r\n\t\tcout << \"a\";\r\n\t\tbreak;\r\n\tcase 2:\r\n\t\tcout << \"b\";\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tcout << \"c\";\r\n\t\tbreak;\r\n}","answers":["a","b","c"],"correct_answer":"b","explanation":"<code>num<\/code> is equal to 2 so the case 2 block is executed."},{"id":278988646,"question":"What's the output of the code snippet?","code":"int num = 10;\r\n\r\nswitch (num) {\r\n\tcase 10:\r\n\t\tcout << \"a \";\r\n\t\tbreak;\r\n\tcase 20:\r\n\t\tcout << \"b \";\r\n\t\tbreak;\r\n\tdefault:\r\n\t\tcout << \"c\";\r\n\t\tbreak;\r\n}","answers":["a","b","a c"],"correct_answer":"a","explanation":"<code>num<\/code> is equal to 10 so the case 10 block is executed."},{"id":1230382887,"question":"What's the output of the code snippet?","code":"int num = 5;\r\n\r\nswitch (num) {\r\n\tcase 3:\r\n\t\tcout << \"a \";\r\n\t\tbreak;\r\n\tcase 4:\r\n\t\tcout << \"b \";\r\n\t\tbreak;\r\n\tdefault:\r\n\t\tcout << \"c\";\r\n\t\tbreak;\r\n}","answers":["a","b","c"],"correct_answer":"c","explanation":"<code>num<\/code> is neither 3 nor 4 so the default block is executed."},{"id":66799332,"question":"What's the output of the code snippet?","code":"int age = 15;\r\n\r\nswitch (age) {\r\n\tcase 10:\r\n\tcase 11:\r\n\tcase 12:\r\n\tcase 13:\r\n\t\tcout << \"Middle School \";\r\n\t\tbreak;\r\n\tcase 14:\r\n\tcase 15:\r\n\tcase 16:\r\n\tcase 17:\r\n\tcase 18:\r\n\t\tcout << \"High School \";\r\n\t\tbreak;\r\n\tdefault:\r\n\t\tcout << \"Primary School\";\r\n\t\tbreak;\r\n}","answers":["Primary School","Middle School","High School"],"correct_answer":"High School","explanation":"<code>age<\/code> is matched by case 15 so \"High School\" is printed."},{"id":1151887013,"question":"What's the output of the code snippet?","code":"int level = 8;\r\n\r\nswitch (level) {\r\n\tcase 1:\r\n\tcase 2:\r\n\tcase 3:\r\n\tcase 4:\r\n\t\tcout << \"Easy\";\r\n\t\tbreak;\r\n\tcase 5:\r\n\tcase 6:\r\n\tcase 7:\r\n\t\tcout << \"Medium \";\r\n\t\tbreak;\r\n\tdefault:\r\n\t\tcout << \"Tricky\";\r\n\t\tbreak;\r\n}","answers":["Easy","Medium","Tricky"],"correct_answer":"Tricky","explanation":"<code>level<\/code> is not matched by any of the cases (from 1 to 7) so the default block is executed."}],"puzzles":[{"id":506345376,"text":"Fill the missing words to match the output.","code":"int num = 2;\r\nswitch(num) {\r\n    case fillword:\r\n        cout << \"a\";\r\n        break;\r\n    fillword fillword:\r\n        cout << \"b\";\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2"],"variables_constants":[],"others":["case","switch"]},"correct_patterns":[["1","case","2"]]},{"id":1356027745,"text":"Fill the missing words to match the output.","code":"int num = 3;\r\nswitch(num) {\r\n    case fillword:\r\n        cout <<\"a\";\r\n        break;\r\n    case fillword:\r\n        cout << \"b\";\r\n        break;\r\n    fillword :\r\n        cout << \"c\";\r\n        break;\r\n}","result":"c","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","default"]},"correct_patterns":[["1","2","default"],["2","1","default"]]},{"id":159414062,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\nswitch(num) {\r\n    case 1:\r\n        cout << \"a\";\r\n        break;\r\n    fillword fillword :\r\n    case 3:\r\n        cout << \"b\";\r\n        break;\r\n    default:\r\n        cout << \"c\";\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","break"]},"correct_patterns":[["3","case","2"]]}]},{"id":979637410,"name":"While Loop","tests":[{"id":1029473890,"question":"What's the output of the code snippet?","code":"int num = 0;\r\nwhile (num < 3)\r\n{\r\n\tcout << num << \" \";\r\n\tnum++;\r\n}","answers":["1 2 3","0 1 2","0 1 2 3"],"correct_answer":"0 1 2","explanation":"Loop starts with <code>num = 0<\/code> and ends when <code>num<\/code> reaches value of 3.\r\n<br><br>\r\n3 is the first value that's false for the condition <code>num < 3<\/code>.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1"},{"id":1979819555,"question":"What's the output of the code snippet?","code":"int num = 1;\r\nwhile (num < 5)\r\n{\r\n\tcout << num << \" \";\r\n}","answers":["1 2 3 4","1 2 3 4 5","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"The condition <code>num < 5<\/code> is always true since there is no modification like <code>num++<\/code>."},{"id":683065824,"question":"What's the output of the code snippet?","code":"int num = 2;\r\nwhile (num < 7)\r\n{\r\n\tnum += 2;\r\n\tcout << num << \" \";\r\n}","answers":["2 4 6 8","4 6","4 6 8"],"correct_answer":"4 6 8","explanation":"<code>num < 7<\/code> remains true until <code>num<\/code> reaches value of 8.\r\n<br><br>\r\nThe loop ends when <code>num < 7<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":1633411489,"question":"What's the output of the code snippet?","code":"int num = 10;\r\ncout << num << \" \";\r\n\r\nwhile (num < 10)\r\n{\r\n\tcout << num << \" \";\r\n\tnum++;\r\n}","answers":["10","10 10","10 11"],"correct_answer":"10","explanation":"<code>num < 10<\/code> is false and the loop doesn't execute."},{"id":1510474094,"question":"What's the output of the code snippet?","code":"int num = 20;\r\n\r\nwhile (num > 10)\r\n{\r\n\tcout << num << \" \";\r\n\tnum -= 5;\r\n}","answers":["20","20 15","20 15 10"],"correct_answer":"20 15","explanation":"<code>num > 10<\/code> remains true until <code>num<\/code> decrements to 10.\r\n<br><br>\r\nThe loop ends when <code>num > 10<\/code> becomes false.\r\n<br><br>\r\n<code>num -= 5<\/code> decrements the value by 5."}],"puzzles":[{"id":1110742767,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nwhile(num fillword fillword ) {\r\n    cout << num << \" \";\r\n    num++;\r\n}","result":"1 2 3 4 5","words":{"operators":["<","<=",">",">="],"values":["4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","5"],["<","6"]]},{"id":81376940,"text":"Fill the missing words to match the output.","code":"int num = 12;\r\n\r\nwhile(num fillword fillword) {\r\n    cout << num << \" \";\r\n    fillword ;\r\n}","result":"12 14 16 18 20","words":{"operators":["<","<=",">",">="],"values":["18","20","21"],"variables_constants":[],"others":["num++","num += 2","num--"]},"correct_patterns":[["<=","20","num += 2"],["<","21","num += 2"]]},{"id":2106513005,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\n\r\nwhile(num > 0) {\r\n    fillword ;\r\n    cout << num << \" \";\r\n}","result":"9 6 3 0","words":{"operators":["9","10","12","13"],"values":[],"variables_constants":[],"others":["num--","num += 3","num -= 3"]},"correct_patterns":[["12","num -= 3"]]}]},{"id":1929983075,"name":"Do While Loop","tests":[{"id":482156847,"question":"What's the output of the code snippet?","code":"int num = 1;\r\n\r\ndo\r\n{\r\n\tcout << num << \" \";\r\n\tnum++;\r\n} while (num < 4);","answers":["1 2 3","1 2 3 4","2 3"],"correct_answer":"1 2 3","explanation":"<code>num < 4<\/code> remains true until <code>num<\/code> increments to 4.\r\n<br><br>\r\nThe loop ends when <code>num < 4<\/code> becomes false.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":1432502508,"question":"What's the output of the code snippet?","code":"int num = 1;\r\ncout << \"0 \";\r\ndo\r\n{\r\n\tcout << num << \" \";\r\n\tnum--;\r\n} while (num > 1)","answers":["0","0 1","0 1 0"],"correct_answer":"0 1","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since <code>num > 1<\/code> is false."},{"id":236413101,"question":"What's the output of the code snippet?","code":"int num = 1;\r\n\r\ndo\r\n{\r\n\tcout << num << \" \";\r\n\tnum++;\r\n} while (num > 1);","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num > 1<\/code> remains true and the loop repeats infinitely.\r\n<br><br>\r\n<code>num++<\/code> needs to be removed or replaced with <code>num--<\/code> in order to stop it."},{"id":1086029930,"question":"What's the output of the code snippet?","code":"int num = 0;\r\n\r\ndo\r\n{\r\n\tnum += 2;\r\n\tcout << num << \" \";\r\n} while (num <= 5);","answers":["0 2 4","2 4 6","2 4 6 8"],"correct_answer":"2 4 6","explanation":"<code>num <= 5<\/code> remains true until <code>num<\/code> increments to 6.\r\n<br><br>\r\nThe loop ends when <code>num <= 5<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":963158059,"question":"What's the output of the code snippet?","code":"cout << \"1 \";\r\ndo\r\n{\r\n\tcout << \"2 \";\r\n} while (false);","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since it's condition is false."}],"puzzles":[{"id":909375018,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\ndo\r\n{\r\n    cout << num <<  \" \";\r\n    num++;\r\n} while (num fillword fillword);","result":"1 2 3 4 5 6 7","words":{"operators":["<","<=",">",">="],"values":["6","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","7"],["<","8"]]},{"id":1759515115,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\ndo\r\n{\r\n    cout << num << \" \";\r\n    fillword\r\n} while (num <= 25);","result":"10 15 20 25","words":{"operators":[],"values":["5","10","15"],"variables_constants":[],"others":["num++","num += 5"]},"correct_patterns":[["10","num += 5"]]},{"id":563425704,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\ndo\r\n{\r\n    num++;\r\n    cout << num << \" \";\r\n} while (num == fillword);","result":"1 2","words":{"operators":[],"values":["-1","0","1","2"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]}]},{"id":901665824,"name":"For Loop","tests":[{"id":1914553320,"question":"What's the output of the code snippet?","code":"for (int i = 1; i < 5; i++)\r\n{\r\n\tcout << i << \" \";\r\n}","answers":["1 2 3 4","1 2 3 4 5","1 1 1 1 1"],"correct_answer":"1 2 3 4","explanation":"The loop starts with <code>i = 1<\/code>.\r\n<br><br>\r\n<code>i < 5<\/code> remains true until <code>i<\/code> increments to 5.\r\n<br><br>\r\nThe loop ends when <code>i < 5<\/code> becomes false.\r\n<br><br>\r\n<code>i++<\/code> increments the value by 1 in the end of every loop iteration."},{"id":885187497,"question":"What's the output of the code snippet?","code":"for (int i = 2; i <= 8; i += 2)\r\n{\r\n\tcout << i << \" \";\r\n}","answers":["2 4 6","2 4 6 8","2 3 4 5 6 7 8"],"correct_answer":"2 4 6 8","explanation":"The loop starts with <code>i = 2<\/code>.\r\n<br><br>\r\n<code>i <= 8<\/code> remains true until <code>i<\/code> increments to 10.\r\n<br><br>\r\nThe loop ends when <code>i <= 8<\/code> becomes false.\r\n<br><br>\r\n<code>i+=2<\/code> increments the value by 2 in the end of every loop iteration."},{"id":1836516214,"question":"What's the output of the code snippet?","code":"for (int i = 1;; i++)\r\n{\r\n\tcout << i << \" \";\r\n}","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"The condition is not specified so the loop repeats infinitely.\r\n<br><br>\r\nA condition such as <code>i <= 5<\/code> could be added in order to stop it."},{"id":639902519,"question":"What's the output of the code snippet?","code":"for (int i = 11; i >= 5; i -= 3)\r\n{\r\n\tcout << i << \" \";\r\n}","answers":["11 8 5 2","11 8 5","11 8"],"correct_answer":"11 8 5","explanation":"The loop starts with <code>i = 11<\/code>.\r\n<br><br>\r\n<code>i >= 5<\/code> remains true until <code>i<\/code> decrements to 2.\r\n<br><br>\r\nThe loop ends when <code>i >= 5<\/code> becomes false.\r\n<br><br>\r\n<code>i -= 3<\/code> decrements the value by 3 in the end of every loop iteration."},{"id":415843060,"question":"What's the output of the code snippet?","code":"cout << \"0 \";\r\nfor (int i = 1; i < 1; i++)\r\n{\r\n\tcout << i + \" \";\r\n}","answers":["0","0 1","0 1 2"],"correct_answer":"0","explanation":"The initialization is <code>i = 1<\/code>.\r\nThe condition <code>i < 1<\/code> is false so the loop doesnt't execute."}],"puzzles":[{"id":440029545,"text":"Fill the missing words to match the output.","code":"for(int i = fillword; i fillword fillword; i++) {\r\n\tcout << i << \" \";\r\n}","result":"0 1 2 3 4","words":{"operators":["<","<=",">",">="],"values":["0","1","4","5"],"variables_constants":[],"others":[]},"correct_patterns":[["0","<","5"],["0","<=","4"]]},{"id":1559195958,"text":"Fill the missing words to match the output.","code":"for (int i = 1; i fillword 11; i fillword) {\r\n    cout << i << \" \";\r\n}","result":"1 3 5 7 9 11","words":{"operators":["<","<=","=="],"values":[],"variables_constants":[],"others":["++","+= 2","+= 4"]},"correct_patterns":[["<=","+= 2"]]},{"id":361992439,"text":"Fill the missing words to match the output.","code":"for (int i = 5; i >= fillword; fillword) {\r\n    cout << i << \" \";\r\n}","result":"5 4 3 2 1","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["i++","i--","i-=5","i+=5"]},"correct_patterns":[["1","i--"]]}]},{"id":730042538,"name":"Break And Continue","tests":[{"id":1367237301,"question":"What's the output of the code snippet?","code":"for (int i = 1; i < 10; i += 3)\r\n{\r\n\tcout << i << \" \";\r\n\r\n\tif (i == 4)\r\n\t{\r\n\t\tbreak;\r\n\t}\r\n}","answers":["1","1 4","1 4 7"],"correct_answer":"1 4","explanation":"The <code>break<\/code> keyword ends the loop when <code>i<\/code> reaches value of 4.\r\n\r\n<br><br>\r\n<code>i<\/code> is printed before terminating the loop via\r\n<code>break<\/code>."},{"id":170033778,"question":"What's the output of the code snippet?","code":"int num = 10;\r\n\r\nwhile (num < 20)\r\n{\r\n\tcout << num << \" \";\r\n\tnum += 4;\r\n\r\n\tif (num == 18)\r\n\t{\r\n\t\tbreak;\r\n\t}\r\n}","answers":["10 14","10 14 18","10 14 18 22"],"correct_answer":"10 14","explanation":"The <code>break<\/code> keyword ends the loop when <code>num<\/code> reaches value of 18.\r\n\r\n<br><br>\r\n<code>num<\/code> reaches value of 18 after \"14\" is printed."},{"id":1289200179,"question":"What's the output of the code snippet?","code":"for (int i = 0; i < 6; i += 2)\r\n{\r\n\tif (i == 2)\r\n\t{\r\n\t\tcontinue;\r\n\t}\r\n\r\n\tcout << i << \" \";\r\n}","answers":["0 4","0 2 4","0 4 6"],"correct_answer":"0 4","explanation":"The loop executes for i = 0, 2 and  4.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."},{"id":92589552,"question":"What's the output of the code snippet?","code":"int number = 0;\r\n\r\nwhile (number < 7)\r\n{\r\n\tnumber += 3;\r\n\r\n\tif (number == 6)\r\n\t{\r\n\t\tcontinue;\r\n\t}\r\n\r\n\tcout << number << \" \";\r\n}","answers":["3 6 9","3 9","3"],"correct_answer":"3 9","explanation":"The loop executes for number = 3, 6, 9.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for number = 6 so all values except 6 are printed."},{"id":2116677041,"question":"What's the output of the code snippet?","code":"for (int i = 1; i <= 3; i++)\r\n{\r\n\tif (i == 2)\r\n\t{\r\n\t\tcontinue;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tcout << i << \" \";\r\n}","answers":["1","1 3","1 2 3"],"correct_answer":"1 3","explanation":"<code>continue<\/code> skips a loop iteration so the <code>break<\/code> keyword does not take any effect.\r\n<br><br>\r\nThe loop executes for i= 1, 2, 3.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."}],"puzzles":[{"id":1312862388,"text":"Fill the missing words to match the output.","code":"int sum = 0;\r\nfor (int i = 1; i <= 8; i++) {\r\n    cout << i << \" \";\r\n    sum += i;\r\n\r\n    if(sum == fillword ) {\r\n        fillword ;\r\n    }                \r\n}","result":"1 2 3 4","words":{"operators":[],"values":["6","10","15","21"],"variables_constants":[],"others":["continue","break"]},"correct_patterns":[["10","break"]]},{"id":16109685,"text":"Fill the missing words to match the output.","code":"for (int i = 1; i <= 5; i++) {\r\n    if(i == fillword ) {\r\n        fillword;\r\n    }\r\n    cout << i << \" \";\r\n}","result":"1 2 4 5","words":{"operators":[],"values":["2","3","4","5"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["3","continue"]]},{"id":2040197170,"text":"Fill the missing words to match the output.","code":"int sum = 0; \r\nfor (int i = fillword; i <= 100; i+= 2) {\r\n    cout << i << \" \";\r\n    sum += i;\r\n\r\n    if (sum == fillword) {\r\n        cout << sum;\r\n        fillword;\r\n    }\r\n}","result":"2 4 6 8 20","words":{"operators":[],"values":["0","1","2","20","30"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["2","20","break"]]}]},{"id":183251831,"name":"Nested If","tests":[{"id":819858814,"question":"What's the output of the code snippet?","code":"if (true)\r\n{\r\n\tcout << \"1 \";\r\n\r\n\tif (true)\r\n\t{\r\n\t\tcout << \"2\";\r\n\t}\r\n}\r\nelse\r\n{\r\n\tcout << \"3\";\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The code inside the outer if executes since it's condition is true thus \"1\" is printed.\r\n<br><br>\r\nBoth outer and inner if-s have true conditions, so \"2\" is printed too.\r\n<br><br>\r\nThe else block code does not execute because the outer if has true condition."},{"id":1770204479,"question":"What's the output of the code snippet?","code":"int number = 10;\r\nif (number >= 10)\r\n{\r\n\tcout << \"1 \";\r\n\r\n\tif (number < 10)\r\n\t{\r\n\t\tcout << \"2\";\r\n\t}\r\n}\r\nelse\r\n{\r\n\tcout << \"3\";\r\n}","answers":["1","1 2","3"],"correct_answer":"1","explanation":"The condition <code>number >= 10<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nThe condition <code>number < 10<\/code> is false so \"2\" is not printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number >= 10<\/code> is true ."},{"id":573590780,"question":"What's the output of the code snippet?","code":"int number = 5;\r\nif (number == 5)\r\n{\r\n\tnumber++;\r\n\tcout << \"1 \";\r\n\r\n\tif (number == 6)\r\n\t{\r\n\t\tcout << \"2\";\r\n\t}\r\n}\r\nelse\r\n{\r\n\tcout << \"3\";\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The condition <code>number == 5<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nAfter incrementing <code>number<\/code> the <code>number == 6<\/code> condition becomes true so \"2\" is printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number == 5<\/code> is true."},{"id":1692757181,"question":"What's the output of the code snippet?","code":"int number = 5;\r\nif (number == 5) {\r\n\tcout << \"1 \";\r\n\r\n\tif (number > 0) {\r\n\t\tcout << \"2 \";\r\n\r\n\t\tif (number > 3) {\r\n\t\t\tcout << \"3\";\r\n\t\t}\r\n\t}\r\n}","answers":["1","1 2","1 2 3"],"correct_answer":"1 2 3","explanation":"All of the three conditions are true so \"1\", \"2\" and \"3\" are printed."},{"id":1569295482,"question":"What's the output of the code snippet?","code":"int number = 10;\r\nif (number == 5) {\r\n\tcout << \"1 \";\r\n}\r\nelse {\r\n\tcout << \"2 \";\r\n\tif (number == 10) {\r\n\t\tcout << \"3\";\r\n\t}\r\n}","answers":["1","2","2 3"],"correct_answer":"2 3","explanation":"The condition <code>number == 5<\/code> is false so the else block is executed and \"2\" is printed.\r\n<br><br>\r\n<code>number == 5<\/code> is false and <code>number == 10<\/code> is true so \"3\" is printed too."}],"puzzles":[{"id":844043251,"text":"Fill the missing words to match the output.","code":"int score = 100;\r\n\r\nif(score > fillword) {\r\n    cout << \"High\" << endl;\r\n\r\n    if(score fillword fillword) {\r\n        cout << \"Max Score\" << endl;\r\n    }\r\n}","result":"High\r\nMax Score","words":{"operators":["=="],"values":["80","100","110"],"variables_constants":[],"others":[]},"correct_patterns":[["80","==","100"]]},{"id":1962685360,"text":"Fill the missing words to match the output.","code":"int level = fillword;\r\n\r\nif(level > fillword && level <= 100 ) {\r\n    cout << \"Valid Level\" << endl;\r\n\r\n    if(level fillword 10 == 0) {\r\n        cout << \"Contains Boss\";\r\n    }\r\n}","result":"Valid Level\r\nContains Boss","words":{"operators":["-","+","\/","%"],"values":["40","0"],"variables_constants":[],"others":[]},"correct_patterns":[["40","0","%"]]},{"id":765547377,"text":"Fill the missing words to match the output.","code":"int calories = 200;\r\n\r\nif(calories fillword 100) {\r\n    cout << \"High\" << endl;\r\n    calories += fillword;\r\n\r\n    if(calories fillword 300) {\r\n        cout << \"Very High\";\r\n    }\r\n}","result":"High\r\nVery High","words":{"operators":[">",">="],"values":["50","100"],"variables_constants":[],"others":[]},"correct_patterns":[[">","100",">="]]}]},{"id":1749865008,"name":"Nested Loops","tests":[{"id":373206075,"question":"What's the output of the code snippet?","code":"for (int i = 0; i < 1; i++) {\r\n\tcout << i << \" \";\r\n\tfor (int j = 0; j < 1; j++) {\r\n\t\tcout << j << \" \";\r\n\t}\r\n}","answers":["0","0 0","0 0 1 1"],"correct_answer":"0 0","explanation":"Both inner and outer loop execute only once for <code>i = 0<\/code> and <code>j = 0<\/code> ."},{"id":1222889464,"question":"What's the output of the code snippet?","code":"for (int i = 0; i < 2; i++) {\r\n\tcout << i << \" \";\r\n\tfor (int j = 0; j < 0; j++) {\r\n\t\tcout << j << \" \";\r\n\t}\r\n}","answers":["0","0 0","0 1"],"correct_answer":"0 1","explanation":"The outer loop executes twice - for i = 0 and i = 1.\r\n<br><br>\r\nThe inner loop has false condition so it doesn't execute."},{"id":26275769,"question":"What's the output of the code snippet?","code":"for (int i = 0; i < 3; i++) {\r\n\tcout << i << \" \";\r\n\tfor (int j = 0; j < 1; j++) {\r\n\t\tcout << j << \" \";\r\n\t}\r\n}","answers":["0 0 1 0 2 0","0 0 1 0","0 1 2"],"correct_answer":"0 0 1 0 2 0","explanation":"The outer loop executes 3 times - for i = 0, 1 and 2.\r\n<br><br>\r\nThe inner loop executes once each time the outer loop iterates. \r\n<br><br>\r\nAll zeroes except for the first one are printed by the inner loop."},{"id":2051346246,"question":"What's the output of the code snippet?","code":"for (int a = 0; a < 2; a++) {\r\n\tcout << a << \" \";\r\n\tfor (int b = 0; b < 1; b++)\r\n\t{\r\n\t\tcout << b << \" \";\r\n\t\tfor (int c = 0; c < 1; c++)\r\n\t\t{\r\n\t\t\tcout << c << \" \";\r\n\t\t}\r\n\t}\r\n}","answers":["0 0 0 1 1 1","0 0 1 0 0 0","0 0 0 1 0 0"],"correct_answer":"0 0 0 1 0 0","explanation":"The outer loop executes twice.\r\n<br><br>\r\nEach iteration of the outer loop makes the inner loops to execute once."},{"id":1021980423,"question":"What's the output of the code snippet?","code":"int i = 1;\r\nwhile (i <= 3)\r\n{\r\n\tint j = 0;\r\n\r\n\twhile (j < 2)\r\n\t{\r\n\t\tcout << j;\r\n\t\tj++;\r\n\t}\r\n}","answers":["0 1 0 1","0 1 0 1 0 1","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"Modification such as <code>i++<\/code> is missing for the outer loop."}],"puzzles":[{"id":1716941630,"text":"Fill the missing words to match the output.","code":"for(int a = 1; a <= fillword; a++)\r\n{\r\n    for(int b = 1; b <= fillword; b++ )\r\n    {\r\n        cout << fillword << \" \" << fillword << endl;\r\n    }\r\n}","result":"1 1\r\n1 2\r\n2 1\r\n2 2\r\n3 1\r\n3 2","words":{"operators":[],"values":["1","2","3","4"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["3","2","a","b"]]},{"id":1492816639,"text":"Fill the missing words to match the output.","code":"for(int a = 1; a <= fillword; a++)\r\n{\r\n    for(int b = 1; b <= fillword; b++ )\r\n    {\r\n        cout << fillword << \" \";\r\n    }\r\n    cout << endl;\r\n}","result":"1\r\n1 2\r\n1 2 3\r\n1 2 3 4","words":{"operators":[],"values":["3","4","5","6"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["4","a","b"]]},{"id":296727228,"text":"Fill the missing words to match the output.","code":"for(int row = 1; row <= 5; row++)\r\n{\r\n    for (int col = 1; col <= row; fillword)\r\n    {\r\n        if(row fillword col) {\r\n            cout << fillword << endl;\r\n        }\r\n        else {\r\n            cout << \" \";\r\n        }\r\n    }\r\n}","result":"1\r\n 2\r\n  3\r\n   4\r\n    5","words":{"operators":["<","==","!="],"values":[],"variables_constants":["col","row"],"others":["col++","row++"]},"correct_patterns":[["col++","==","row"],["col++","==","col"]]}]},{"id":1336769789,"name":"Tricky Questions","tests":[{"id":1973374660,"question":"What's the output of the code snippet?","code":"int a = 1;\r\nint b = 1;\r\n\r\na++;\r\n++b;\r\ncout << a << \" \" << b;","answers":["1 2","2 1","2 2"],"correct_answer":"2 2","explanation":"Both <code>a++<\/code> and <code>++b<\/code> increment the values by 1."},{"id":776760965,"question":"What's the output of the code snippet?","code":"int a = 1;\r\nint b = 1;\r\ncout << ++a << \" \" << b++;","answers":["1 1","2 1","2 2"],"correct_answer":"2 1","explanation":"<code>++a <\/code> returns the incremented result\r\n<br><br>\r\n<code>b++<\/code> returns the value before incrementation."},{"id":1626377794,"question":"What's the output of the code snippet?","code":"int a = 2;\r\nint b = 2;\r\n\r\n--a;\r\nb--;\r\n\r\ncout << --a << \" \" << b--;","answers":["1 1","1 0","0 1"],"correct_answer":"0 1","explanation":"Both <code>--a<\/code> and <code>b--<\/code> decrement the value by 1.\r\n<br><br>\r\n<code>--a<\/code> returns the decremented value.\r\n<br><br>\r\n<code>b--<\/code> returns the value before decrementation."},{"id":1504030211,"question":"What's the output of the code snippet?","code":"int i = 0;\r\nfor (; i < 100; i++);\r\n\r\ncout << i;","answers":["0","1","100"],"correct_answer":"100","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 100.\r\n<br><br>\r\n100 is the first value of <code>i<\/code> which breaks the condition <code>i < 100<\/code>."},{"id":306891200,"question":"What's the output of the code snippet?","code":"int i = 0;\r\nfor (; i <= 10; i += 2);\r\n\r\ncout << i;","answers":["0","10","12"],"correct_answer":"12","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 12.\r\n<br><br>\r\n12 is the first value of <code>i<\/code> which breaks the condition <code>i <= 10<\/code>."}],"puzzles":[{"id":1247597181,"text":"Fill the missing words to match the output.","code":"int a = 3;\r\nint b = 7;\r\n\r\ncout << fillword << \" \" << fillword);","result":"3 8","words":{"operators":[],"values":[],"variables_constants":[],"others":["a++","++a","b++","++b"]},"correct_patterns":[["a++","++b"]]},{"id":50459194,"text":"Fill the missing words to match the output.","code":"int i = 0;\r\nfor (; i fillword fillword; i++) ;\r\n\r\ncout << i;","result":"101","words":{"operators":["<","<=",">",">="],"values":["99","100"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","100"]]},{"id":1169563131,"text":"Fill the missing words to match the output.","code":"int i = 0;\r\nfor (; i fillword 10; i++);\r\n\r\ncout << fillword;","result":"10","words":{"operators":[">",">=","<","<="],"values":[],"variables_constants":[],"others":["i++","++i"]},"correct_patterns":[["<","i++"]]}]},{"id":1907058829,"name":"Strings","tests":[{"id":1457076176,"question":"What's the output of the code snippet?","code":"string str = \"Hello\";\r\ncout << str[1];","answers":["H","e","o"],"correct_answer":"e","explanation":"The string has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td>5<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>H<\/td>\r\n            <td class=\"table-primary\">e<\/td>\r\n            <td>l<\/td>\r\n            <td>l<\/td>\r\n            <td>o<\/td>\r\n            <td>\\0<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":260986769,"question":"What's the output of the code snippet?","code":"string str1 = \"abc\";\r\nstring str2 = \"defg\";\r\n\r\ncout << str1.length() + str2.length();","answers":["7","8","9"],"correct_answer":"7","explanation":"The <code>length<\/code> function returns the count of the symbols:\r\n<br><br>\r\n<code>str1.length()<\/code> is 3\r\n<br>\r\n<code>str2.length()<\/code> is 4\r\n<br>\r\n3 + 4 = 7"},{"id":1077114718,"question":"What's the output of the code snippet?","code":"string color = \"green\";\r\n\r\ncout << color[3];\r\ncout << color[4];","answers":["e n","e e","n 0"],"correct_answer":"e n","explanation":"<code>color<\/code> has the following structure:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td  class=\"btn-primary\">4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>g<\/td>\r\n            <td>r<\/td>\r\n            <td>e<\/td>\r\n            <td  class=\"btn-primary\">e<\/td>\r\n            <td  class=\"btn-primary\">n<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":988256031,"question":"What's the output of the code snippet?","code":"string word = \"Arena\";\r\n\r\nif (word.find(\"na\") != string::npos) {\r\n\tcout << \"1\";\r\n}\r\n\r\nif (word.find(\"A\") != string::npos) {\r\n\tcout << \"2\";\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"'na' is contained in 'Arena' so <br>\r\n<code>word.find(\"na\") != string::npos<\/code> returns true.\r\n<br><br>\r\n'A' is contained in 'Arena' (it's first symbol) so <br>\r\n<code>word.find(\"A\") != string::npos<\/code> returns true."},{"id":1939125980,"question":"What's the output of the code snippet?","code":"string equation = \"160 + 135 = 295\";\r\nstring filterNums = \"12\";\r\n\r\nfor (int i = 0; i < equation.length(); i++)\r\n{\r\n\tif (filterNums.find(equation[i]) == string::npos)\r\n\t{\r\n\t\tcout << equation[i];\r\n\t}\r\n}","answers":["160 + 135 = 295","60 + 35 = 95","1 1 2"],"correct_answer":"60 + 35 = 95","explanation":"The for loop iterates over each symbol of the equation.\r\n<br><br>\r\nOnly symbols that are not '1' and '2' are printed. That's specified via <code>filterNums.find(equation[i]) == string::npos<\/code>.\r\n<br><br>\r\n\r\nBasically <code>1<\/code>60 + <code>1<\/code>35 = <code>2<\/code>95 is simplified to: <br>\r\n60 + 35 = 95"}],"puzzles":[{"id":249780301,"text":"Fill the missing words to match the output.","code":"string str = \"clarity\";\r\ncout << str[fillword] << endl;\r\ncout << str[fillword] << endl;\r\ncout << str[fillword];","result":"c a t","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","5"]]},{"id":1200650250,"text":"Fill the missing words to match the output.","code":"string str = \"jacket\";\r\ncout << str.fillword + fillword;","result":"10","words":{"operators":[],"values":["1","2","3","4","5","6","7","8"],"variables_constants":[],"others":["size()","count()","length()"]},"correct_patterns":[["length()","4"]]},{"id":944020427,"text":"Fill the missing words to match the output.","code":"string str = \"readability\";\r\nstring filterLetters = \"ab\";\r\n\r\nfor (int i = 0; i < str.length(); i++)\r\n{\r\n\tif (fillword.fillword(fillword) != string::npos)\r\n\t{\r\n\t\tcout << str[i] << endl;\r\n\t}\r\n}","result":"a a b","words":{"operators":[],"values":[],"variables_constants":["filterLetters","filterLetters[i]"],"others":["str","str[i]","find","search"]},"correct_patterns":[["filterLetters","find","str[i]"]]}]}],"Advanced":[{"id":1852012513,"name":"Arrays","tests":[{"id":1426057601,"question":"What's the output of the code snippet?","code":"int arr[] = { 5, 10, 15 };\r\ncout << arr[1];","answers":["5","10","15"],"correct_answer":"10","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":229378382,"question":"What's the output of the code snippet?","code":"string colors[] = { \"blue\", \"green\", \"pink\" };\r\n\r\nfor (int i = 0; i < 2; i++)\r\n{\r\n\tcout << colors[i] << \" \";\r\n}","answers":["blue green","blue green pink","green pink"],"correct_answer":"blue green","explanation":"The loop executes for i = 0 and i = 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">blue<\/td>\r\n            <td class=\"table-primary\">green<\/td>\r\n            <td>pink<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1179724047,"question":"What's the output of the code snippet?","code":"int ages[] = { 10, 15, 20, 25, 30 };\r\ncout << sizeof(ages) \/ sizeof(*ages);","answers":["5","4","30"],"correct_answer":"5","explanation":"<code>sizeof(ages) \/ sizeof(*ages)<\/code> gets the count of the array elements.\r\n<br><br>\r\nThe array has 5 elements."},{"id":1057376460,"question":"What's the output of the code snippet?","code":"int numbers[3] = {};\r\n\r\ncout << numbers[0] << \" \";\r\ncout << numbers[1];","answers":["0 0","0 1","Exception"],"correct_answer":"0 0","explanation":"An array with 3 elements is created.\r\n<br><br>\r\nAll of it's elements have default value - 0.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>0<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1907058829,"question":"What's the output of the code snippet?","code":"int numbers[] = { 1, 2, 3 };\r\ncout << numbers[3];","answers":["0","3","Uncertain Behaviour"],"correct_answer":"Uncertain Behaviour","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nAccessing index that's outside of it's bounds results in uncertain behaviour."}],"puzzles":[{"id":1046166968,"text":"Fill the missing words to match the output.","code":"int arr[] = { 8, 4, 5, 6, 3 };\r\n\r\ncout << arr[fillword] << \" \";\r\ncout << arr[fillword] << \" \";\r\ncout << arr[fillword];","result":"8 5 3","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","4"]]},{"id":1997036921,"text":"Fill the missing words to match the output.","code":"int arr[] = {5, 7, 9, 3};\r\n\r\nfor(int i = fillword; i < fillword; i++)\r\n{\r\n    cout << arr[fillword] << \" \";\r\n}","result":"5 7 9 3","words":{"operators":[],"values":["0","1","2","3","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["0","4","i"]]},{"id":700284166,"text":"Fill the missing words to match the output.","code":"int arr[] = {1, 2, 9, 8, 6};\r\n\r\nfor(int i = 0; i < fillword; i++)\r\n{\r\n    if(i % 2 == fillword)\r\n\t{\r\n        cout << arr[fillword] << \" \";\r\n    }\r\n}","result":"1 9 6","words":{"operators":[],"values":["0","1","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","i"]]}]},{"id":1483169540,"name":"Functions","tests":[{"id":710903882,"question":"What's the output of the code snippet?","code":"void a() {\r\n\tcout << \"1 \";\r\n}\r\n\r\nvoid b() {\r\n\tcout << \"2 \";\r\n}\r\n\r\nint main() {\r\n\ta();\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"The function <code>a<\/code> is called in the main function thus \"1 \" is printed."},{"id":1661773835,"question":"What's the output of the code snippet?","code":"int getSum(int a, int b, int c) {\r\n\treturn a + b + c;\r\n}\r\n\r\nint main() {\r\n\tint sum = getSum(2, 4, 3);\r\n\tcout << sum;\r\n}","answers":["0","9","243"],"correct_answer":"9","explanation":"The <code>getSum<\/code> function is called with 3 parameters - 2, 4 and 3 which sum is 9."},{"id":632409032,"question":"What's the output of the code snippet?","code":"void printArg(int number) {\r\n\tcout << number;\r\n}\r\n\r\nint main() {\r\n\tprintArg();\r\n}","answers":["0","1","Exception"],"correct_answer":"Exception","explanation":"The function <code>printArg<\/code> accepts 1 argument but none are passed to it thus exception is thrown."},{"id":510061449,"question":"What's the output of the code snippet?","code":"void printName(string name = \"Unknown\") {\r\n\tcout << name;\r\n}\r\n\r\nint main() {\r\n\tprintName();\r\n\tcout << \" \";\r\n\tprintName(\"Joe\");\r\n}","answers":["Unknown Unknown","Unknown Joe","Exception"],"correct_answer":"Unknown Joe","explanation":"The <code>name<\/code> argument has default value - <code>\"Unknown\"<\/code>.\r\n<br><br>\r\nWhen <code>printName<\/code> is called without argument <code>name<\/code> takes it's default value - <code>Unknown<\/code>."},{"id":1460341590,"question":"What's the output of the code snippet?","code":"int main() {\r\n\tint prod = getProd(1, 2, 3);\r\n\tcout << prod;\r\n}\r\n\r\nint getProd(int a, int b, int c) {\r\n\treturn a * b * c;\r\n}","answers":["123","6","Exception"],"correct_answer":"Exception","explanation":"<code>getProd<\/code> needs to be defined before the main function.\r\n<br><br>\r\nOther solution to avoid the exception is to define a prototype before the main function:<br>\r\n<code>int getProd(int a, int b, int c);<\/code>"}],"puzzles":[{"id":1650564295,"text":"Fill the missing words to match the output.","code":"void a() {\r\n\tcout << \"1\" << endl;\r\n}\r\nvoid b() {\r\n\tcout << \"2\" << endl;\r\n}\r\nvoid main() {\r\n\tfillword;\r\n\tfillword;\r\n}","result":"1\r\n2","words":{"operators":[],"values":[],"variables_constants":[],"others":["a","b","a()","b()"]},"correct_patterns":[["a()","b()"]]},{"id":1528216708,"text":"Fill the missing words to match the output.","code":"fillword sumNums(int a, int b) {\r\n\tfillword a + b;\r\n}\r\nvoid main() {\r\n\tint sum = sumNums(fillword);\r\n\tcout << sum;\r\n}","result":"7","words":{"operators":[],"values":[],"variables_constants":[],"others":["int","void","return","sum =","2, 5","7"]},"correct_patterns":[["int","return","2, 5"]]},{"id":498850885,"text":"Fill the missing words to match the output.","code":"void printArgs(int a, int b, int fillword) {\r\n\tcout << a << \" \" << b << \" \" << c;\r\n}\r\nvoid main() {\r\n\tprintArgs(fillword);\r\n}","result":"1 2 5","words":{"operators":[],"values":[],"variables_constants":[],"others":["c","c = 5","1, 2","1, 2, 3"]},"correct_patterns":[["c = 5","1, 2"]]}]},{"id":1951989753,"name":"Lists","tests":[{"id":163064599,"question":"What's the output of the code snippet?","code":"list<string> animals{ \"cat\", \"dog\" };\r\nanimals.push_back(\"parrot\");\r\n\r\nfor (string animal : animals) {\r\n\tcout << animal << \" \";\r\n}","answers":["cat dog","parrot","cat dog parrot"],"correct_answer":"cat dog parrot","explanation":"The <code>animals<\/code> list is initialized with 2 elements - \"cat\" and \"dog\".\r\n<br><br>\r\nAfterwards \"parrot\" is added to the list.\r\n<br><br>\r\nThe for loop prints all of the list elements."},{"id":1114458836,"question":"What's the output of the code snippet?","code":"list<int> scores{ 40, 80, 70 };\r\n\r\nfor (int score : scores) {\r\n\tif (score > 50) {\r\n\t\tcout << score << \" \";\r\n\t}\r\n}","answers":["40","40 80 70","80 70"],"correct_answer":"80 70","explanation":"The list <code>scores<\/code> has 3 elements only 2 of which meet the condition <code>score > 50<\/code> - 80 and 70."},{"id":991062677,"question":"What's the output of the code snippet?","code":"list<string> names { \"Vanesa\", \"Joe\", \"Jaden\" };\r\nnames.push_back(\"Syrus\");\r\n\r\ncout << names.size();","answers":["1","3","4"],"correct_answer":"4","explanation":"The list is initalized with 3 elements and afterwards 1 is added via the <code>push_back<\/code> function.\r\n<br><br>\r\n3 + 1 = 4"},{"id":2110163538,"question":"What's the output of the code snippet?","code":"list<int> ages { 15, 20, 35, 28, 24 };\r\n\r\nauto iterator = ages.begin();\r\ncout << *iterator << \" \";\r\n\r\nadvance(iterator, 1);\r\ncout << *iterator << \" \";\r\n\r\nadvance(iterator, 2);\r\ncout << *iterator;","answers":["15 20 35","15 20 28","15 15 15"],"correct_answer":"15 20 28","explanation":"<code>ages.begin()<\/code> points to the iterators beginning - \"15\".\r\n<br><br>\r\n<code>*iterator<\/code> gets the elements that the iterator points to.\r\n<br><br>\r\nAfterwards the iterator advances 1 step ahead and points to \"20\".\r\n<br><br>\r\nAfterwards the iterator advances 2 steps ahead and points to \"28\".\r\n\r\n<br><br>\r\nThe list has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <td class=\"btn-primary\">15<\/td>\r\n            <td class=\"btn-primary\">20<\/td>\r\n            <td>35<\/td>\r\n            <td class=\"btn-primary\">28<\/td>\r\n            <td>24<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":913025555,"question":"What's the output of the code snippet?","code":"list<int> numbers { 7, 3, 5 };\r\n\r\nauto iterator = numbers.begin();\r\n\r\nadvance(iterator, 3);\r\ncout << *iterator;","answers":["5","7","Exception"],"correct_answer":"Exception","explanation":"The iterator advances beyound the list's end thus exception is thrown.\r\n<br><br>\r\n If <code>advance(iterator, 2)<\/code> was used instead, <code>*iterator<\/code> would point to the list's end element - 5."}],"puzzles":[{"id":1449720834,"text":"Fill the missing words to match the output.","code":"list<int> numbers{ 3, 7, 0, 9, 1 };\r\nfor (int num : numbers) {\r\n\tif (num fillword fillword) {\r\n\t\tcout << num << \" \";\r\n\t}\r\n}","result":"7 9","words":{"operators":["<","<=",">",">="],"values":["0","1","7","9"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","7"]]},{"id":253566915,"text":"Fill the missing words to match the output.","code":"list<int> numbers{fillword};\r\nnumbers.push_back(5);\r\nnumbers.push_back(8);\r\nif (numbers.size() == fillword) {\r\n\tcout << \"Size Function\";\r\n}","result":"Size Function","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["0","0, 3","0,3,4"]},"correct_patterns":[["0,3,4","5"]]},{"id":1103249280,"text":"Fill the missing words to match the output.","code":"list<int> numbers{9, 7, 3, 5, 2, 1};\r\nauto iterator = numbers.fillword;\r\ncout << *iterator << \" \";\r\n\r\nadvance(fillword, fillword);\r\ncout << *iterator << \" \";\r\n\r\nadvance(fillword, fillword);\r\ncout << *iterator;","result":"9 3 1","words":{"operators":[],"values":["0","1","2","3","4","5"],"variables_constants":["iterator","iterator"],"others":["begin()","end()"]},"correct_patterns":[["begin()","iterator","2","iterator","3"]]}]},{"id":755834758,"name":"Vectors","tests":[{"id":1863890384,"question":"What's the output of the code snippet?","code":"vector<int> vec{ 1, 3, 5, 7, 9 };\r\ncout << vec[3];","answers":["3","5","7"],"correct_answer":"7","explanation":"The vector has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td >0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td class=\"table-primary\">3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>3<\/td>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">7<\/td>\r\n            <td>9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":567137681,"question":"What's the output of the code snippet?","code":"vector<int> prices { 100, 320, 510, 180 };\r\n\r\nfor(int price : prices)\r\n{\r\n\tif (price <= 180)\r\n\t{\r\n\t\tcout <<  price << \" \";\r\n\t}\r\n}","answers":["100 180","320 510","100"],"correct_answer":"100 180","explanation":"The vector has 4 elements only 2 of which meet the condition <code>price <= 180<\/code> - 100 and 180."},{"id":443741534,"question":"What's the output of the code snippet?","code":"vector<int> ages{ 15, 25, 18 };\r\nages.push_back(23);\r\nages.push_back(16);\r\n\r\ncout << ages.size();","answers":["2","3","5"],"correct_answer":"5","explanation":"The vector is initalized with 3 elements and afterwards 2 are added via the <code>push_back<\/code> function.\r\n<br><br>\r\n3 + 2 = 5"},{"id":1395070239,"question":"What's the output of the code snippet?","code":"vector<int> numbers{ 35 };\r\ncout << numbers[1];","answers":["0","35","Exception"],"correct_answer":"Exception","explanation":"The vector has 1 element that can be accessed via [0].\r\n<br><br>\r\n[1] is outside of the vector's bounds which results in exception."},{"id":366228700,"question":"What's the output of the code snippet?","code":"vector<int> nums1{ 3, 5 };\r\nvector<int> nums2{ 2, 4 };\r\n\r\nfor (int i = 0; i < 2; i++) {\r\n\t cout << nums1[i];\r\n\t cout << \" \";\r\n\t cout << nums2[i];\r\n\t cout << \" \";\r\n}","answers":["3 5 2 4","3 2 5 4","2 3 4 5"],"correct_answer":"3 2 5 4","explanation":"<code>i<\/code> takes values of 0 and 1.\r\nThe elements are printed in the following way:\r\n<br><br> \r\n<code>nums1[0]<\/code> <code>nums2[0]<\/code>\r\n<code>nums1[1]<\/code> <code>nums2[1]<\/code>\r\n<br><br>\r\nThe vectors have the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>nums1 <\/th>\r\n            <td >3<\/td>\r\n            <td >5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>nums2 <\/th>\r\n            <td >2<\/td>\r\n            <td >4<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":980901697,"text":"Fill the missing words to match the output.","code":"vector<int> numbers{6, 9, 5, 2, 0, 8};\r\ncout << numbers[fillword] << \" \";\r\ncout << numbers[fillword] << \" \";\r\ncout << numbers[fillword];","result":"9 2 0","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["1","3","4"]]},{"id":1931771662,"text":"Fill the missing words to match the output.","code":"vector<int> numbers{1, 4, 8, 5, 6};\r\nfor (int num : numbers) {\r\n\tif (num fillword fillword) {\r\n\t\tcout << num << \" \";\r\n\t}\r\n}","result":"8 6","words":{"operators":["<","<=",">"],"values":["1","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[[">","5"]]},{"id":902340303,"text":"Fill the missing words to match the output.","code":"vector<int> numbers{1, 4, 8, 5, 6};\r\nfor (int i = 0; i < fillword; i++) {\r\n\tif (i < fillword) {\r\n\t\tcout << numbers[fillword] << \" \";\r\n\t}\r\n}","result":"1 4 8","words":{"operators":[],"values":["1","2","3"],"variables_constants":["i"],"others":["numbers.size()"]},"correct_patterns":[["numbers.size()","3","i"]]}]},{"id":1739734855,"name":"Associative Arrays","tests":[{"id":1316574365,"question":"What's the output of the code snippet?","code":"map<string, double> clothes;\r\n\r\nclothes[\"Sweather\"] = 55;\r\nclothes[\"Jeans\"] = 45;\r\n\r\ncout << clothes[\"Jeans\"];","answers":["0","45","55"],"correct_answer":"45","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td class=\"table-primary\">Jeans<\/td>\r\n            <td>Sweather<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td class=\"table-primary\">45<\/td>\r\n            <td>55<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe value 45 is accessed via the \"Jeans\" key."},{"id":120484954,"question":"What's the output of the code snippet?","code":"map<string, double> fruits;\r\n\r\nfruits[\"strawberry\"] = 2.5;\r\nfruits[\"cherry\"] = 1.8;\r\n\r\ncout << fruits[\"mango\"];","answers":["0","1.8","2.5"],"correct_answer":"0","explanation":"The associative array doesn't contain \"mango\" key\r\nthus \u0430 default value is returned - 0.\r\n<br><br>\r\nThe associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>cherry<\/td>\r\n            <td>strawberry<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>1.8<\/td>\r\n            <td>2.5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2043843611,"question":"What's the output of the code snippet?","code":"map<string, int> personsAges;\r\n\r\npersonsAges[\"John\"] = 22;\r\npersonsAges[\"Alex\"] = 25;\r\n\r\nmap<string, int>::iterator itr;\r\n\r\nfor (itr = personsAges.begin(); itr != personsAges.end(); ++itr)\r\n{\r\n\tcout << itr->first << \" \";\r\n}","answers":["John Alex","Alex John","22 25"],"correct_answer":"Alex John","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Alex<\/td>\r\n            <td>John<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>25<\/td>\r\n            <td>22<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe for loop prints only the keys.\r\n<br><br>\r\nNotice that the map stores data sorted by their keys."},{"id":847755224,"question":"What's the output of the code snippet?","code":"map<string, int> playerScores;\r\n\r\nplayerScores[\"Snowy\"] = 123;\r\nplayerScores[\"Avian\"] = 130;\r\n\r\nplayerScores.erase(\"Snowy\");\r\n\r\nmap<string, int>::iterator itr;\r\n\r\nfor (itr = playerScores.begin(); itr != playerScores.end(); ++itr)\r\n{\r\n\tcout << itr->second << \" \";\r\n}","answers":["123","130","123 130"],"correct_answer":"130","explanation":"2 key-value pairs are added.\r\n<br><br>\r\nVia the erase function one of the key-value pairs is removed.\r\n<br><br>\r\nThe for loop prints all values - which is only 130.\r\n<br><br>\r\nThe final structure of the associative array is:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Avian<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>130<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1798625177,"question":"What's the output of the code snippet?","code":"map<string, string> capitals;\r\n\r\ncapitals[\"France\"] = \"Paris\";\r\ncapitals[\"Canada\"] = \"Ottawa\";\r\ncapitals[\"Spain\"] = \"Madrid\";\r\n\r\ncapitals.erase(\"Spain\");\r\n\r\ncout << capitals.size();","answers":["0","2","3"],"correct_answer":"2","explanation":"The <code>size<\/code> function returns the count of the key-value pairs.\r\n<br><br>\r\n3 key-value pairs are added to the associative array and afterwards 1 is removed.\r\n<br><br>\r\n3 - 1 = 2"}],"puzzles":[{"id":1853734540,"text":"Fill the missing words to match the output.","code":"map<string, int> persons;\r\npersons[fillword] = fillword;\r\npersons[fillword] = fillword;\r\n\r\ncout << persons[\"James\"] << \" \";\r\ncout << persons[\"Sophia\"];","result":"26 22","words":{"operators":[],"values":["20","22","26","\"Jake\"","\"James\"","\"Sophia\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Sophia\"","22","\"James\"","26"],["\"James\"","26","\"Sophia\"","22"]]},{"id":656596557,"text":"Fill the missing words to match the output.","code":"map<string, string> grades;\r\ngrades[\"Olivia\"] = \"A\";\r\ngrades[\"James\"] = \"B\";\r\n\r\nmap<string, string>::iterator itr;\r\n\r\nfor (itr = grades.begin(); itr != grades.end(); ++itr) {\r\n\tcout << itr->fillword << \" \";\r\n\tcout << itr->fillword << endl;\r\n}","result":"James B\r\nOlivia A","words":{"operators":[],"values":["Olivia","James"],"variables_constants":[],"others":["first","second"]},"correct_patterns":[["first","second"]]},{"id":433585674,"text":"Fill the missing words to match the output.","code":"map<string, string> colors;\r\ncolors[\"White\"] = \"#ffffff\";\r\ncolors[\"Black\"] = \"#000000\";\r\ncolors[fillword] = \"#00ff00\";\r\n\r\ncolors.erase(\"Black\");\r\ncout << colors.fillword;","result":"2","words":{"operators":[],"values":["\"White\"","\"Black\"","\"Green\""],"variables_constants":[],"others":["size()","keys","values"]},"correct_patterns":[["\"Green\"","size()"]]}]},{"id":286555845,"name":"Matrix","tests":[{"id":769259302,"question":"What's the output of the code snippet?","code":"int matrix[2][3] = {\r\n\t{2, 4, 6 },\r\n\t{1, 3, 5 }\r\n};\r\n\r\ncout << matrix[1][1];","answers":["1","2","3"],"correct_answer":"3","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th class=\"btn-primary\">[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>2<\/td>\r\n            <td>4<\/td>\r\n            <td>6<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[1]<\/th>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1720588007,"question":"What's the output of the code snippet?","code":"int matrix[3][3] = {\r\n\t{ 5, 7, 8 },\r\n\t{ 2, 2, 3 },\r\n\t{ 4, 4, 9 }\r\n};\r\n\r\ncout << matrix[2][2];","answers":["2","4","9"],"correct_answer":"9","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th class=\"btn-primary\">[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>5<\/td>\r\n            <td>7<\/td>\r\n            <td>8<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>2<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[2]<\/th>\r\n            <td>4<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1597191844,"question":"What's the output of the code snippet?","code":"int matrix[3][3] = {\r\n\t{ 0, 1, 2 },\r\n\t{ 3, 4, 5 },\r\n\t{ 6, 7, 8 }\r\n};\r\n\r\nfor (int i = 0; i < 3; i++)\r\n{\r\n\tcout << matrix[i][i] << \" \";\r\n}","answers":["0 4 8","0 3 6","0 1 2"],"correct_answer":"0 4 8","explanation":"Via the for loop the row-col positions of the matrix are: <br>\r\n[0][0],  [1][1], [2][2].\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td>6<\/td>\r\n            <td>7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":299914853,"question":"What's the output of the code snippet?","code":"int matrix[3][3] = {\r\n\t{ 0, 1, 2 },\r\n\t{ 3, 4, 5 },\r\n\t{ 6, 7, 8 }\r\n};\r\n\r\nfor (int i = 0; i < 3; i++)\r\n{\r\n\tfor (int j = 0; j < 3; j++)\r\n\t{\r\n\t\tif (i == 2 || j == 2)\r\n\t\t{\r\n\t\t\tcout << matrix[i][j] << \" \";\r\n\t\t}\r\n\t}\r\n}","answers":["0 1 3 4","2 5 6 7 8","6 7 8"],"correct_answer":"2 5 6 7 8","explanation":"In this case <code>i<\/code> represents the row index and <code>j<\/code> - the column.<br><br>\r\nBasically the elements of the last column and row are printed.\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td class=\"btn-primary\">6<\/td>\r\n            <td class=\"btn-primary\">7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1251309090,"question":"What's the output of the code snippet?","code":"int matrix[4][6] = {\r\n\t{ 0, 1, 0, 1, 0 },\r\n\t{ 1, 0, 1, 0, 1 },\r\n\t{ 0, 1, 0, 1, 0 },\r\n\t{ 1, 0, 1, 0, 1 },\r\n};\r\n\r\nint sum = 0;\r\nfor (int i = 0; i < 4; i++) {\r\n\tfor (int j = 0; j < 5; j++) {\r\n\t\tif ((i + j) % 2 == 0) {\r\n\t\t\tsum += matrix[i][j];\r\n\t\t}\r\n\t}\r\n}\r\ncout << sum;","answers":["0","10","6"],"correct_answer":"0","explanation":"The elements which have even sum of row and column index are sumed.  It's like a chessboard field.\r\n<br><br>\r\nAll of the summed elements are 0s which makes the\r\nvalue of the <code>sum<\/code>  variable 0.\r\n<br><br>\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n            <th>[3]<\/td>\r\n            <th>[4]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[3]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1384389067,"text":"Fill the missing words to match the output.","code":"int matrix[2][4] = {\r\n\t{4, 1, 6, 3 },\r\n\t{2, 8, 0, 7 }\r\n};\r\n\r\ncout << matrix[fillword][fillword] << \" \";\r\ncout << matrix[fillword][fillword];","result":"3 0","words":{"operators":[],"values":["0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","3","1","2"]]},{"id":187251080,"text":"Fill the missing words to match the output.","code":"int matrix[3][3] = {\r\n    { 4, 1, 6 },\r\n    { 3, 8, 0 },\r\n    { 7, 2, 5 }\r\n};\r\nfor(int i = 0; i < fillword; i++) {\r\n    cout << matrix[fillword][fillword] << \" \";\r\n}","result":"1 8 2","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i"],"others":[]},"correct_patterns":[["3","i","1"]]},{"id":1306417481,"text":"Fill the missing words to match the output.","code":"int matrix[3][3] = {\r\n    { 5, 2, 8 },\r\n    { 1, 3, 6 },\r\n    { 4, 0, 7 }\r\n};\r\n\r\nfor (int i = 0; i < 3; i++) {\r\n    for (int j = 0; j < 3; j++) {\r\n        if (i == fillword || j == fillword) {\r\n            cout << matrix[fillword][j] << \" \";\r\n        }\r\n    }\r\n}","result":"5 1 4 0 7","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i","j"],"others":[]},"correct_patterns":[["2","0","i"]]}]},{"id":208518723,"name":"Reference Passing","tests":[{"id":54104547,"question":"What's the output of the code snippet?","code":"void decrement(int num) {\r\n\tnum--;\r\n}\r\n\r\nint main() {\r\n\tint num = 5;\r\n\tdecrement(num);\r\n\tcout << num;\r\n}","answers":["0","4","5"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 5 in the main function."},{"id":1173270944,"question":"What's the output of the code snippet?","code":"void printIncremented(int num)\r\n{\r\n\tnum--;\r\n\tcout << num << \" \";\r\n}\r\n\r\nint main() {\r\n\tint num = 7;\r\n\tprintIncremented(num);\r\n\tcout << num;\r\n}","answers":["6 6","6 7","7 7"],"correct_answer":"6 7","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 7 in the main function.\r\n<br><br>\r\nDespite that, the value gets decremented inside the <code>printDecremented<\/code> function."},{"id":1049874785,"question":"What's the output of the code snippet?","code":"void divideBy2(int &num) {\r\n\tnum \/= 2;\r\n}\r\n\r\nint main() {\r\n\tint num = 10;\r\n\tdivideBy2(num);\r\n\tcout << num;\r\n}","answers":["0","5","10"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is passed by reference so num's value is halved in the main function."},{"id":2000744750,"question":"What's the output of the code snippet?","code":"void printDividedBy3(int &num) {\r\n\tnum \/= 3;\r\n\tcout << num << \" \";\r\n}\r\n\r\nint main() {\r\n\tint num = 15;\r\n\tprintDividedBy3(num);\r\n\tcout << num;\r\n}","answers":["15 5","5 15","5 5"],"correct_answer":"5 5","explanation":"The <code>num<\/code> argument is passed by reference. It's value is modified in both main and <code>printDividedBy3<\/code> functions."},{"id":703926511,"question":"What's the output of the code snippet?","code":"void add1ToArray(int arr[])\r\n{\r\n\tarr[0] += 1;\r\n\tarr[1] += 1;\r\n}\r\n\r\nint main() {\r\n\tint arr[] = { 0, 1 };\r\n\tadd1ToArray(arr);\r\n\tcout << arr[0] << \" \" << arr[1];\r\n}","answers":["0 1","1 1","1 2"],"correct_answer":"1 2","explanation":"Array is always passed by reference so it's elements are modified in the main function."}],"puzzles":[{"id":109279510,"text":"Fill the missing words to match the output.","code":"void increment(int fillword, int fillword) {\r\n\targ1++;\r\n\targ2++;\r\n}\r\nvoid main() {\r\n\tint a = 1;\r\n\tint b = 1;\r\n\r\n\tincrement(a, b);\r\n\tcout << a << \" \" << b;\r\n}","result":"1 2","words":{"operators":[],"values":[],"variables_constants":[],"others":["arg1","&arg1","arg2","&arg2"]},"correct_patterns":[["arg1","&arg2"],["arg2","&arg1"]]},{"id":2134350039,"text":"Fill the missing words to match the output.","code":"void add1ToArr(int arr[]) {\r\n\tarr[0]++;\r\n\tarr[1]++;\r\n\tarr[2]++;\r\n}\r\nvoid main() {\r\n\tint arr[] = { 0, 1, 2 };\r\n\tadd1ToArr(arr);\r\n\tcout << arr[fillword] << \" \";\r\n\tcout << arr[fillword];\r\n}","result":"1 2","words":{"operators":[],"values":["-1","0","1","2","3","4"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]},{"id":837073044,"text":"Fill the missing words to match the output.","code":"void add1(list<int> list, int num) {\r\n\tlist.push_back(1);\r\n\tnum++;\r\n}\r\nvoid main() {\r\n\tlist<int> list{ fillword };\r\n\tint num = 2;\r\n\tadd1(list, num);\r\n\r\n\tcout << fillword << \" \";\r\n\tcout << fillword;\r\n}","result":"3 2","words":{"operators":[],"values":[],"variables_constants":["list","num"],"others":["list.size()","1","1, 2","1, 2, 3"]},"correct_patterns":[["1, 2","list.size()","num"]]}]},{"id":1158864384,"name":"Recursion","tests":[{"id":1654272172,"question":"What's the output of the code snippet?","code":"int sum(int num)\r\n{\r\n\tif (num == 1)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\r\n\treturn num + sum(num - 1);\r\n}\r\nint main()\r\n{\r\n\tcout << sum(4);\r\n}","answers":["1","4","10"],"correct_answer":"10","explanation":"The <code>sum<\/code> function sums the numbers from n to 1.\r\n<br><br> \r\nIn this case 4 + 3 + 2 + 1 = 10.\r\n<br><br>\r\nThe recursion ends when the condition <code>num == 1<\/code> is met."},{"id":1531924589,"question":"What's the output of the code snippet?","code":"int sum(int num)\r\n{\r\n\treturn num + sum(num - 1);\r\n}\r\nint main()\r\n{\r\n\tcout << sum(3);\r\n}","answers":["3","6","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"There is no end condition of the recursion so  Stackoverflow Exception is thrown.\r\n<br><br>\r\nA suitable end condition could be: <br>\r\nif(num == 1) return 1;"},{"id":503083050,"question":"What's the output of the code snippet?","code":"void print(int arr[], int index, int size)\r\n{\r\n\tif (index < size) {\r\n\t\tcout << arr[index] << \" \";\r\n\t\tprint(arr, index + 1, size);\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint arr[] = { 1, 2, 3, 4 };\r\n\tint arrSize = sizeof(arr) \/ sizeof(*arr);\r\n\r\n\tprint(arr, 0, arrSize);\r\n\r\n\treturn 0;\r\n}","answers":["1","1 2 3 4","Stackoverflow Exception"],"correct_answer":"1 2 3 4","explanation":"The function prints all elements of the array by passing array and  index of element.\r\n<br><br>\r\nThe index gets incremented each time so the next element is printed.\r\n<br><br>\r\nThe recursion ends when the condition <code>index < size<\/code> becomes false."},{"id":1453364203,"question":"What's the output of the code snippet?","code":"void printUntilZero(int arr[], int index)\r\n{\r\n\tif (arr[index] != 0)\r\n\t{\r\n\t\tcout << arr[index] << \" \";\r\n\t\tprintUntilZero(arr, index + 1);\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint arr[] = { 1, 2, 3, 4, 5 };\r\n\tprintUntilZero(arr, 0);\r\n\r\n\treturn 0;\r\n}","answers":["0","1 2 3 4 5","Uncertain Behaviour"],"correct_answer":"Uncertain Behaviour","explanation":"The recursion is supposed to end when element with value of zero is found.\r\n<br><br>\r\nThe passed array does not contain any 0s so the recursion repeats until the index gets out of the array's bounds."},{"id":257274792,"question":"What's the output of the code snippet?","code":"int calculate(int num) {\r\n\tif (num == 0) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (num % 2 == 1) {\r\n\t\tnum--;\r\n\t}\r\n\r\n\treturn num + calculate(num - 2);\r\n}\r\n\r\nint main() {\r\n\tint sum = calculate(7);\r\n\tcout << sum;\r\n\r\n\treturn 0;\r\n}","answers":["7","12","16"],"correct_answer":"12","explanation":"The function <code>calculate<\/code> sums the numbers 6, 4, 2 and 0.\r\n<br><br>\r\n6 + 4 + 2 + 0 = 12"}],"puzzles":[{"id":1787418709,"text":"Fill the missing words to match the output.","code":"int sumNums(int num) {\r\n    if (num > 1) {\r\n        return fillword + sumNums(fillword);\r\n    }\r\n\r\n    return fillword;\r\n}\r\nvoid main() {\r\n\tint sum = sumNums(fillword);\r\n\tcout << sum;\r\n}","result":"15","words":{"operators":[],"values":["-1","0","1","3","4","5"],"variables_constants":["num","num - 1","num + 1"],"others":[]},"correct_patterns":[["num","num - 1","1","5"]]},{"id":591329298,"text":"Fill the missing words to match the output.","code":"void printUntil(int printNum, int stop) {\r\n\tif (fillword <= stop) {\r\n\t\tcout << printNum << \" \";\r\n\t\tprintUntil(fillword, fillword);\r\n\t}\r\n}\r\nvoid main() {\r\n\tprintUntil(2, fillword);\r\n}","result":"2 4 8 16","words":{"operators":[],"values":["8","16","32"],"variables_constants":[],"others":["printNum","printNum + 2","printNum * 2","stop","stop * 2"]},"correct_patterns":[["printNum","printNum * 2","stop","16"]]},{"id":1709382611,"text":"Fill the missing words to match the output.","code":"void printElems(int arr[], int index, int size) {\r\n\tif (index < size) {\r\n\t\tcout << arr[fillword] << \" \";\r\n\t\tprintElems(fillword, index + fillword, size);\r\n\t}\r\n}\r\nvoid main() {\r\n\tint arr[] = { 1, 5, 6, 7, 9 };\r\n\tprintElems(arr, 0, 5);\r\n}","result":"1 5 6 7 9","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["index","arr","size"]},"correct_patterns":[["index","arr","1"]]}]}],"OOP":[{"id":655857582,"name":"Classes And Objects","tests":[{"id":251843876,"question":"How many objects are created in the code segment?","code":"class Person {};\r\nclass Computer {};\r\n\r\nvoid main() {\r\n    Person jack();\r\n    Person smith();\r\n    Computer pc();\r\n}","answers":["0","2","3"],"correct_answer":"3","explanation":"There are 3 objects - <code>jack<\/code>, <code>smith<\/code> and <code>pc<\/code> .\r\n<br><br>\r\nAlso there  are 2 classes - <code>Person<\/code> and <code>Computer<\/code>."},{"id":1102574821,"question":"How many classes are defined in the code segment?","code":"class Student {};\r\nclass Teacher {};\r\n\r\nint main() {\r\n    Student jack();\r\n    Student alex();\r\n    Teacher mrSmith();\r\n}","answers":["1","2","3"],"correct_answer":"2","explanation":"There  are 2 classes - <code>Student<\/code> and <code>Teacher<\/code> .\r\n<br><br>\r\nThere are 3 objects - <code>jack<\/code>, \r\n <code>alex<\/code> and <code>mrSmith<\/code> ."},{"id":979637410,"question":"Which of the following is a class field?","code":"class Square {\r\n    public: double side;\r\n    double calcArea() {\r\n        return side * side; \r\n    }\r\n}","answers":["Square","side","calcArea"],"correct_answer":"side","explanation":"<ul>\r\n<li><code>side<\/code> is a class field.<\/li>\r\n<li><code>calcArea<\/code> is a class function.<\/li>\r\n<li><code>Square<\/code> is the class name.<\/li>\r\n<\/ul>"},{"id":1929983075,"question":"What's the output of the code snippet?","code":"class Student {};\r\n\r\nint main() {\r\n    Student student;\r\n    student.name = \"John\";\r\n    cout << student.name;\r\n}","answers":["John","name","Exception - name is not a class member"],"correct_answer":"Exception - name is not a class member","explanation":"The <code>Student<\/code> class needs to have a class field name in order to avoid the exception.\r\n<br><br>\r\nSuch could be:\r\n<br>\r\n<code>public: string name;<\/code>"},{"id":901665824,"question":"What's the output of the code snippet?","code":"class Person {\r\n    public: int age;\r\n};\r\n\r\nint main() {\r\n    Person person;\r\n    int age = 20;\r\n    person.age = age;\r\n\r\n    age++;\r\n    cout << person.age << \" \"; \r\n    person.age++;\r\n    cout << person.age;\r\n}","answers":["20, 20","20, 21","21, 22"],"correct_answer":"20, 21","explanation":"Modifying the <code>age<\/code> variable does not change  the value of the class member."}],"puzzles":[{"id":1586510736,"text":"Define a class.","code":"class Employee {\r\n    private: fillword fillword;\r\n    fillword fillword age;\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["private:","int","string","name","{","}"]},"correct_patterns":[["string","name","private:","int"]]},{"id":390421329,"text":"Create Objects.","code":"class Smartphone {\r\n\tprivate: string model;\r\n};\r\nvoid main() {\r\n\tfillword fillword;\r\n\tfillword fillword;\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["obj1","obj2","Smartphone","Smartphone","=","new"]},"correct_patterns":[["Smartphone","obj1","Smartphone","obj2"],["Smartphone","obj2","Smartphone","obj1"]]},{"id":1240103710,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tpublic: string name;\r\n\tpublic: int age;\r\n\tpublic: void represent() {\r\n\t\tcout << \"My name is \" << name << \". \";\r\n\t\tcout << \"I am \" << age << \" years old.\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tPerson fillword;\r\n\tperson.fillword = fillword;\r\n\tperson.fillword = 22;\r\n\tperson.represent();\r\n}","result":"My name is Joe. I am 22 years old.","words":{"operators":[],"values":["\"Joe\"","17","22"],"variables_constants":["person"],"others":["name","years","age"]},"correct_patterns":[["person","name","\"Joe\"","age"]]}]},{"id":432322415,"name":"Public And Private","tests":[{"id":655857582,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tprivate: string make = \"default\";\r\n\t\r\n\tpublic: void setMake(string makeVal) {\r\n        make = makeVal;\t    \r\n\t}\r\n\t\r\n\tpublic: void printMake() {\r\n\t    cout << make;\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tCar car;\r\n\tcar.setMake(\"Ford\");\r\n\tcar.printMake();\r\n}","answers":["default","Ford","Exception"],"correct_answer":"Ford","explanation":"All class members that are accessed in the main function (<code>setMake<\/code> and <code>printMake<\/code>) are declared <code>public<\/code>.\r\n<br><br>\r\nFor that reason no exception is thrown."},{"id":432322415,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tprivate: string model;\r\n};\r\n\r\nint main() {\r\n\tSmartphone phone;\r\n\tphone.model = \"Samsung Fold\";\r\n\tcout << phone.model << endl;\r\n}","answers":["Samsung Fold","Null","Exception"],"correct_answer":"Exception","explanation":"The <code>model<\/code> field is declared <code>private<\/code> but it's accessed outside of the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>model<\/code> needs to be declared as <code>public<\/code> member."},{"id":1382668076,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tpublic: string name = \"\";\r\n\tpublic: int age = 0;\r\n\t\r\n\tprivate: void printData() {\r\n\t\tcout << name << \" \" << age;\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tPerson person;\r\n\tperson.printData();\r\n}","answers":["0","null 0","Exception"],"correct_answer":"Exception","explanation":"The <code>printData<\/code> function is declared <code>private<\/code> but it's accessed outside the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>printData<\/code> needs to be declared as <code>public<\/code> member."},{"id":186578669,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n\tprivate: double size = 0;\r\n\tprivate: string make = \"Default\";\r\n\r\n\tpublic: void printData() {\r\n\t\tcout << make << \" \" << size;\r\n\t}\r\n};\r\n\r\nint main() {\r\n    Tablet tablet;\r\n    tablet.size = 5;\r\n    tablet.printData();\r\n}","answers":["Default 0","Default  5","Exception"],"correct_answer":"Exception","explanation":"The <code>size<\/code> field is declared <code>private<\/code> but it's accessed outside of the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>size<\/code> needs to be declared as <code>public<\/code> member."},{"id":1304630954,"question":"What's the output of the code snippet?","code":"class Programer {\r\n\tpublic: string name = \"\";\r\n\tprivate: string favLanguage = \"C++\";\r\n\tpublic: void printData() {\r\n\t\tcout << name << \" \" << favLanguage;\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tProgramer programer;\r\n\tprogramer.name = \"John\";\r\n\tprogramer.printData();\r\n}","answers":["C++","John C++","Exception"],"correct_answer":"John C++","explanation":"All of the members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason the code executes without errors."}],"puzzles":[{"id":43948767,"text":"Fill the missing words to match the output.","code":"class Square {\r\n\tfillword double side;\r\n};\r\nvoid main() {\r\n\tSquare obj;\r\n\tfillword.fillword = 5;\r\n\r\n\tcout << \"Side = \" << obj.side;\r\n}","result":"Side = 5","words":{"operators":[],"values":["5","10"],"variables_constants":[],"others":["public:","side","private:","obj","square"]},"correct_patterns":[["public:","obj","side"]]},{"id":2068036252,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tfillword string name;\r\n\tfillword void setName(string nameArg) {\r\n\t\tname = nameArg;\r\n\t}\r\n\tfillword void printName() {\r\n\t\tcout << name;\r\n\t}\r\n};\r\nvoid main() {\r\n\tPerson obj;\r\n\tobj.setName(\"Candice\");\r\n\tobj.printName();\r\n}","result":"Candice","words":{"operators":[],"values":[],"variables_constants":[],"others":["public:","public:","private:","private:"]},"correct_patterns":[["private:","public:","public:"]]},{"id":1039194717,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n\tfillword int height;\r\n\r\n\tfillword void setVal(int heightArg) {\r\n\t\theight = heightArg;\r\n\t}\r\n\tfillword int getHeight() {\r\n\t\treturn height;\r\n\t}\r\n\tfillword void printHeight() {\r\n\t\tcout << height << \" meters\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tPeak obj;\r\n\tobj.setVal(3000);\r\n\tobj.printHeight();\r\n}","result":"3000 meters","words":{"operators":[],"values":[],"variables_constants":[],"others":["private:","private:","private:","public:","public:"]},"correct_patterns":[["private:","public:","private:","public:"]]}]},{"id":1382668076,"name":"Getters And Setters","tests":[{"id":108017259,"question":"What's the output of the code snippet?","code":"class Square {\r\n\tpublic: double side;\r\n\r\n\tpublic: double getArea() {\r\n\t\treturn side * side;\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tSquare sq;\r\n\tsq.side = 5;\r\n\tcout << sq.side << \" \" << sq.getArea();\r\n}","answers":["5 5","5 25","Exception"],"correct_answer":"5 25","explanation":"The <code>getArea<\/code> function returns the result of multiplication (5 x 5 = 25).\r\n<br><br>\r\nAll of the members have public access so there is no reason for exception to be thrown."},{"id":2133153320,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tpublic: int age;\r\n\r\n\tpublic: void setAge(int ageVal) {\r\n        age = ageVal + 1;\t    \r\n\t}\r\n};\r\n\r\nint main() {\r\n\tPerson person;\r\n\tperson.setAge(20);\r\n\r\n\tcout << person.age;\r\n}","answers":["20","21","Exception"],"correct_answer":"21","explanation":"The members <code>age<\/code> and <code>setAge<\/code> have <code>public<\/code> access so exception is not thrown.\r\n<br><br>\r\n<code>setAge<\/code> sets the passed value incremented by one:\r\n<br>\r\n20 + 1 = 21"},{"id":835351017,"question":"What's the output of the code snippet?","code":"class PC {\r\n\tprivate: double price;\r\n\r\n\tpublic: double getPrice() {\r\n\t\treturn price + 1;\r\n\t}\r\n\r\n\tpublic: void setPrice(double priceVal) {\r\n\t\tprice = priceVal + 1;\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tPC pc;\r\n\tpc.setPrice(700);\r\n\tcout << pc.getPrice();\r\n}","answers":["700","701","702"],"correct_answer":"702","explanation":"<code>setPrice<\/code> adds 1 to the passed value.\r\n<br><br>\r\n<code>getPrice<\/code> adds 1 to the <code>price<\/code> member.\r\n<br><br>\r\nThe end result is 702 (700 + 1 + 1)."},{"id":1786679734,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tpublic: double height;\r\n\tprivate: double getHeight() {\r\n\t\treturn height + 3;\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tBuilding building;\r\n\tbuilding.height = 500;\r\n\tcout << building.getHeight();\r\n}","answers":["500","503","Exception"],"correct_answer":"Exception","explanation":"<code>getHeight<\/code> is declared as <code>private<\/code> but it's accessed outside of the class body thus exception is thrown.\r\n<br><br>\r\n<code>getHeight<\/code> needs to be <code>public<\/code> in order to execute the code without errors."},{"id":589541751,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tpublic: double price;\r\n\tpublic: void setPrice(double value) {\r\n\t\tif(value < 0) {\r\n\t\t\tprice = 0;\r\n\t\t}\r\n\t }\r\n};\r\n\r\nint main() {\r\n\tSmartphone smartphone;\r\n\tsmartphone.setPrice(-5);\r\n\tcout << smartphone.price;\r\n}","answers":["-5","0","null"],"correct_answer":"0","explanation":"<code>setPrice<\/code> sets value of 0 for the  \r\n <code>price <\/code> member  since -5 meets the condition <code>value < 0 <\/code>."}],"puzzles":[{"id":1990588954,"text":"Fill the missing words to match the output.","code":"class TShirt {\r\n\tprivate: string color;\r\n\tpublic: void setColor(string colorVal) {\r\n\t\tfillword fillword  fillword;\r\n\t}\r\n\tpublic: string getColor() {\r\n\t\tfillword fillword;\r\n\t}\r\n};\r\nvoid main() {\r\n\tTShirt obj;\r\n\tobj.setColor(\"Orange\");\r\n\tcout << obj.getColor();\r\n}","result":"Orange","words":{"operators":[],"values":[],"variables_constants":[],"others":["color","color","colorVal","colorVal","return","return","=","="]},"correct_patterns":[["color","=","colorVal","return","color"]]},{"id":793380315,"text":"Fill the missing words to match the output.","code":"class Planet {\r\n\tprivate: string name;\r\n\tpublic: void setName(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n\tpublic: string getName() {\r\n\t\treturn name;\r\n\t}\r\n};\r\nvoid main() {\r\n\tPlanet obj;\r\n\tfillword.fillword(fillword);\r\n\tcout << fillword.fillword();\r\n}","result":"Earth","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj","obj","setName","setName","getName","getName","\"Earth\"","\"Earth\""]},"correct_patterns":[["obj","setName","\"Earth\"","obj","getName"]]},{"id":1644111256,"text":"Fill the missing words to match the output.","code":"class Laptop {\r\n\tprivate: double price;\r\n\tpublic: double getPrice(int discount) {\r\n\t\treturn price - (discount * price) \/ 100;\r\n\t}\r\n\tpublic: void setPrice(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n};\r\nvoid main() {\r\n\tLaptop obj;\r\n\tobj.fillword(2000);\r\n\tcout << obj.fillword(fillword);\r\n}","result":"1800","words":{"operators":[],"values":["5","10","20"],"variables_constants":[],"others":["setPrice","getPrice","price"]},"correct_patterns":[["setPrice","getPrice","10"]]}]},{"id":186578669,"name":"Constructors","tests":[{"id":1708183860,"question":"What's the output of the code snippet?","code":"class Laptop {\r\n\tpublic: Laptop() {\r\n\t\tcout << \"Default\";\r\n\t}\r\n\tpublic: Laptop(double param) {\r\n\t\tcout << \"Parametrized\";\r\n\t}\r\n\tpublic: Laptop(Laptop& laptop) {\r\n\t\tcout << \"Copy\";\r\n\t}\r\n};\r\nint main() {\r\n\tLaptop laptop;\r\n}","answers":["Default","Parametrized","Copy"],"correct_answer":"Default","explanation":"The object creation <code>Laptop laptop<\/code>\r\naccepts no arguments thus the default constructor is called.\r\n<br><br>\r\nThe default constructor is: <code>public: Laptop()<\/code>"},{"id":1585836277,"question":"What's the output of the code snippet?","code":"class Laptop {\r\n\tpublic: double price;\r\n\tpublic: Laptop() {\r\n\t\tprice = 0;\r\n\t}\r\n\tpublic: Laptop(double param) {\r\n\t\tprice = param;\r\n\t}\r\n\tpublic: Laptop(Laptop& laptop) {\r\n\t\tprice = laptop.price + 1;\r\n\t}\r\n};\r\nint main() {\r\n\tLaptop laptop(1000);\r\n\tcout << laptop.price;\r\n}","answers":["0","1000","1001"],"correct_answer":"1000","explanation":"The object creation <code>Laptop laptop(1000)<\/code>\r\naccepts argument of type double.\r\n<br><br>\r\nFor that reason the <code>Laptop(double param)<\/code> constructor is called."},{"id":388632754,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tpublic: Building(double param1) {\r\n\t\tcout << \"1\";\r\n\t}\r\n\tpublic: Building(double param1, double param2) {\r\n\t\tcout << \"2\";\r\n\t}\r\n};\r\nint main() {\r\n\tBuilding building(100,300);\r\n}","answers":["1","2","Exception"],"correct_answer":"2","explanation":"The object creation <code>Building building(100,300)<\/code>\r\naccepts 2 arguments of type double.\r\n<br><br>\r\nFor that reason the <code>Building(double param1, double param2)<\/code> constructor is called."},{"id":1239363699,"question":"What's the output of the code snippet?","code":"class Student {\r\n\tStudent() {\r\n\t\tcout << \"default\";\r\n\t}\r\n\tStudent(string name) {\r\n\t\tcout << \"parametrized\";\r\n\t}\r\n};\r\nint main() {\r\n\tStudent student(\"John\", 17);\r\n}","answers":["default","parametrized","Exception"],"correct_answer":"Exception","explanation":"The object creation <code>Student student(\"John\", 17)<\/code>\r\ncalls a constructor with  2 arguments. \r\n<br><br>\r\nThere is no constructor that accepts two arguments.\r\n<br><br>\r\nFor that reason an exception is thrown."},{"id":42750000,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tpublic: Smartphone() {};\r\n\tpublic: Smartphone(string model) {\r\n\t\tcout << \"parametrized \";\r\n\t}\r\n\tpublic: Smartphone(Smartphone& smartphone) {\r\n\t\tcout << \"copy\";\r\n\t}\r\n};\r\nint main() {\r\n\tSmartphone obj1;\r\n\tSmartphone obj2(obj1);\r\n}","answers":["copy","parametrized copy","Exception"],"correct_answer":"copy","explanation":"The object creation <code>Smartphone obj1<\/code>\r\ncalls a constructor with  0 arguments: <code>public: Smartphone()<\/code>.  Nothing is printed.\r\n<br><br>\r\nThe object creation <code>Smartphone obj2(obj1)<\/code>\r\ncalls a constructor that accepts Smartphone instance: <code>Smartphone(Smartphone& smartphone)<\/code>. \"copy\" is printed."}],"puzzles":[{"id":1521239385,"text":"Fill the missing words to match the output.","code":"class Country {\r\n\tpublic: string name;\r\n\tpublic: Country() {\r\n\t\tname = \"Unknown\";\r\n\t}\r\n\tpublic: Country(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword fillword;\r\n\tcout << obj.name;\r\n}","result":"Unknown","words":{"operators":[],"values":[],"variables_constants":[],"others":["Country","obj","obj(\"Iceland\")","new"]},"correct_patterns":[["Country","obj"]]},{"id":324101350,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public: string name;\r\n    public: int age;\r\n    public: Person(string nameVal, int ageVal) {\r\n        name = nameVal;\r\n        age = ageVal;\r\n    }\r\n    public: Person(string nameVal) {\r\n        name = nameVal;\r\n        age = 18;\r\n    }\r\n};\r\nvoid main() {\r\n\tfillword obj1(fillword);\r\n\tcout << obj1.age << \" \";\r\n\tPerson fillword(fillword);\r\n\tcout << obj2.age;\r\n}","result":"19 18","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"Ally\", 19","\"Teo\"","Person","obj1","obj2"]},"correct_patterns":[["Person","\"Ally\", 19","obj2","\"Teo\""]]},{"id":1409647783,"text":"Fill the missing words to match the output.","code":"class Wallet {\r\n\tpublic: int pocketsCount;\r\n\r\n\tpublic: Wallet() { }\r\n\tpublic: Wallet(Wallet &wallet) {\r\n\t\tpocketsCount = wallet.pocketsCount;\r\n\t}\r\n};\r\nvoid main() {\r\n\tWallet fillword;\r\n\tobj1.pocketsCount = 4;\r\n\r\n\tWallet fillword;\r\n\tcout << obj2.pocketsCount;\r\n}","result":"4","words":{"operators":[],"values":[],"variables_constants":[],"others":["obj1","obj1(4)","obj1(obj2)","obj2","obj2(4)","obj2(obj1)"]},"correct_patterns":[["obj1","obj2(obj1)"]]}]},{"id":1304630954,"name":"Class Inheritance Basics","tests":[{"id":2066838513,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic: void printLength() {\r\n\t\tcout << \"Short \";\r\n\t}\r\n};\r\nclass Sedan : public  Car {\r\n\tpublic: void printLength() {\r\n\t\tcout << \"Long \";\r\n\t}\r\n};\r\nclass Hatchback : public  Car {};\r\nint main() {\r\n\tSedan sedanObj;\r\n\tsedanObj.printLength();\r\n\r\n\tHatchback hatchObj;\r\n\thatchObj.printLength();\r\n}","answers":["Short  Short","Long Short","Short Long"],"correct_answer":"Long Short","explanation":"The <code>Sedan<\/code> class overwrites the <code>printLength<\/code>  method.\r\n<br><br>\r\nFor that reason <code>sedanObj.printLength()<\/code> prints \"Long\".\r\n<br><br>\r\nThe <code>Hatchback<\/code> class inherits the <code>printLength<\/code> method from the <code>Car <\/code> class.\r\n<br><br>\r\nFor that reason <code>hatchObj.printLength()<\/code> prints \"Short\"."},{"id":1038455742,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"extra-\";\r\n\t}\r\n};\r\nclass Smartwatch : public  Device {\r\n\tpublic: void printSize() {\r\n\t\tDevice::printSize();\r\n\t\tcout << \"short \";\r\n\t}\r\n};\r\nclass TV : public  Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"large\";\r\n\t}\r\n};\r\nint main() {\r\n\tSmartwatch sm;\r\n\tsm.printSize();\r\n\r\n\tTV tv;\r\n\ttv.printSize();\r\n}","answers":["extra-short large","short  extra-large","extra-short extra-large"],"correct_answer":"extra-short large","explanation":"<code>sm.printSize()<\/code> calls the method from the <code>Smartwatch<\/code> class.\r\n<br><br>\r\n<code>Device::printSize()<\/code> calls the method from the parent class. For that reason \"extra-\" is printed.\r\n<br><br>\r\nAfterwards \"short\" is printed.\r\n<br><br>\r\n<code>tv.printSize()<\/code> calls the method from the <code>TV<\/code> class."},{"id":1988801407,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tprivate: int age;\r\n};\r\nclass Teacher : public  Person {\r\n\tpublic: void setAge(int ageVal) {\r\n\t\tage = ageVal;\r\n\t}\r\n\tpublic: void printAge() {\r\n\t\tcout << age;\r\n\t}\r\n};\r\nint main() {\r\n\tTeacher teacher;\r\n\tteacher.setAge(33);\r\n\tteacher.printAge();\r\n}","answers":["33","Null","Exception"],"correct_answer":"Exception","explanation":"The class <code>Teacher<\/code> does not have an <code>age<\/code> member. For that reason an exception is thrown.\r\n<br><br>\r\nThe <code>age<\/code> member needs to be declared as <code>protected<\/code> so it can be inherited by the <code>Teacher<\/code> class."},{"id":792711996,"question":"What's the output of the code snippet?","code":"class Fruit {\r\n\tprotected: int calories;\r\n};\r\nclass Pineapple : public Fruit {\r\n\tpublic: void setCalories(int caloriesVal) {\r\n\t\tcalories = caloriesVal;\r\n\t}\r\n\tpublic: int getCalories() {\r\n\t\treturn calories;\r\n\t}\r\n};\r\nint main() {\r\n\tPineapple pineapple;\r\n\tpineapple.setCalories(100);\r\n\tcout << pineapple.getCalories();\r\n}","answers":["Null","100","Exception"],"correct_answer":"100","explanation":"The <code>setCalories<\/code> and <code>getCalories<\/code> methods access and modify the <code>calories<\/code> member .\r\n<br><br>\r\nException is not thrown since the <code>protected<\/code> member is inherited by the <code>Fruit<\/code> class."},{"id":1642918653,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic: Animal() {\r\n\t\tcout << \"animal \";\r\n\t}\r\n};\r\nclass Cat : public Animal {\r\n\tpublic: Cat() : Animal() {\r\n\t\tcout << \"cat \";\r\n\t}\r\n};\r\nclass Dog : public Animal {\r\n\tpublic: Dog() {\r\n\t\tcout << \"dog\";\r\n\t}\r\n};\r\nint main() {\r\n\tCat cat;\r\n\tDog dog;\r\n}","answers":["cat dog","animal cat dog","animal cat animal dog"],"correct_answer":"animal cat animal dog","explanation":"The parent class constructor is always called by the child class constructor even if <code>: Animal()<\/code> is not used."}],"puzzles":[{"id":246064228,"text":"Fill the missing words to match the output.","code":"class Liquid {\r\n\tpublic: void printColor() {\r\n\t\tcout << \"Transparent\" << endl;\r\n\t}\r\n};\r\nclass Coke : Liquid {\r\n\tpublic: void printColor() {\r\n\t\tcout << \"Black\" << endl;\r\n\t}\r\n};\r\nclass Water : public Liquid { };\r\nvoid main() {\r\n\tfillword obj1;\r\n\tobj1.printColor();\r\n\r\n\tfillword obj2;\r\n\tobj2.printColor();\r\n}","result":"Transparent\r\nBlack","words":{"operators":[],"values":[],"variables_constants":[],"others":["Water","Water","Coke","Coke"]},"correct_patterns":[["Water","Coke"]]},{"id":1197458469,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n\tpublic: Animal() {\r\n\t\tcout << \"base\" << endl;\r\n\t}\r\n};\r\nclass Cat : fillword {\r\n\tpublic: Cat() {\r\n\t\tcout << \"child\" << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword obj;\r\n}","result":"base\r\nchild","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Cat","Cat"]},"correct_patterns":[["Animal","Cat"]]},{"id":940369890,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tfillword : string name;\r\n\tpublic: void printData() {\r\n\t\tcout << name << endl;\r\n\t}\r\n};\r\nclass Singer : Person {\r\n\tfillword : int songsCount;\r\n\tpublic: Singer(string nameVal, int songsCountVal) {\r\n\t\tname = nameVal;\r\n\t\tsongsCount = songsCountVal;\r\n\t}\r\n\tpublic: void printData() {\r\n\t\tfillword ::printData();\r\n\t\tcout << songsCount;\r\n\t}\r\n};\r\nvoid main() {\r\n\tSinger singer(\"Ariana\", 26);\r\n\tsinger.printData();\r\n}","result":"Ariana\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","protected","super","base","parent","Singer","Person"]},"correct_patterns":[["protected","private","Person"]]}]},{"id":108017259,"name":"Class Inheritance Advanced","tests":[{"id":1519456954,"question":"Which are the members of Sunglasses  class?","code":"class Glasses {\r\n\tpublic: double diopter;\r\n};\r\nclass Shader {\r\n\tpublic: int shadeIndex;\r\n};\r\nclass Sunglasses : Glasses, Shader {};","answers":["diopter","shadeIndex","diopter and shadeIndex"],"correct_answer":"diopter and shadeIndex","explanation":"Members that are declared as <code>public<\/code> or <code>protected<\/code> are inherited by the child classes."},{"id":323367547,"question":"What's the output of the code snippet?","code":"class Electric {\r\n\tpublic: void print() {\r\n\t\tcout << \"Electric\";\r\n\t}\r\n};\r\nclass Blanket {\r\n\tpublic: void print() {\r\n\t\tcout << \"Blanket\";\r\n\t}\r\n};\r\nclass ElectricBlanket : Electric, Blanket {};\r\nint main() {\r\n\tElectricBlanket obj;\r\n\tobj.print();\r\n}","answers":["Electric","Blanket","Exception"],"correct_answer":"Exception","explanation":"A method cannot be inherited directly by 2 classes.\r\n<br><br>\r\nOne of the alternatives can be chosen to avoid the exception:\r\n<ul>\r\n<li>Only one of the two classes needs to be inherited.<\/li>\r\n<li><code>ElectricBlanket<\/code> needs to overwrite the <code>print<\/code> method.<\/li>\r\n<\/ul>"},{"id":1441485368,"question":"Which are the members of Firefighter class?","code":"class Person {\r\n\tpublic: string name;\r\n};\r\nclass Employee : Person {\r\n\tpublic: double salary;\r\n};\r\nclass Firefighter : Employee {};","answers":["name","salary","name and salary"],"correct_answer":"name and salary","explanation":"Members that are declared as <code>public<\/code> or <code>protected<\/code> are inherited by the child classes."},{"id":244874745,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic: void print() {\r\n\t\tcout << \"animal\";\r\n\t}\r\n};\r\nclass Pet : Animal{\r\n\tpublic: void print() {\r\n\t\tcout << \"pet\";\r\n\t}\r\n};\r\nclass Dog : public Pet {};\r\nint main() {\r\n\tDog dog;\r\n\tdog.print();\r\n}","answers":["animal","pet","Exception"],"correct_answer":"pet","explanation":"The class <code>Dog<\/code> inherits the <code>print<\/code> method from the <code>Pet<\/code> class."},{"id":1196203398,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic: string size;\r\n\tpublic: Animal() {\r\n\t\tsize = \"small\";\r\n\t}\r\n};\r\nclass Mammal : public Animal {\r\n\tpublic: Mammal() {\r\n\t\tsize = \"medium\";\r\n\t}\r\n};\r\nclass Cat : public Mammal {};\r\nint main() {\r\n\tCat cat;\r\n\tcout << cat.size;\r\n}","answers":["small","medium","null"],"correct_answer":"medium","explanation":"The parent class constructor is always called by the child class constructor.\r\n<br><br>\r\nThe code of <code>Animal()<\/code> executes first, afterwards <code>Mammal()<\/code> .\r\n<br><br>\r\nThe final value of the <code>size<\/code> property is set in the <code>Mammal<\/code> class constructor."}],"puzzles":[{"id":1924204451,"text":"Fill the missing words to match the output.","code":"class Device {\r\n\tpublic: void print() { cout << fillword; }\r\n};\r\nclass AudioDevice : Device {\r\n\tpublic: void print() {\r\n\t\tDevice::print();\r\n\t\tcout << fillword;\r\n\t}\r\n};\r\nclass USBDevice : Device {\r\n\tpublic: void print() {\r\n\t\tDevice::print();\r\n\t\tcout << fillword;\r\n\t}\r\n};\r\nclass Headphones : AudioDevice {\r\n\tpublic: void print() {\r\n\t\tAudioDevice::print();\r\n\t\tcout << fillword;\r\n\t}\r\n};\r\nvoid main() {\r\n\tHeadphones obj;\r\n\tobj.print();\r\n}","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"0\"","\"1\"","\"a\"","\"b\"","\"c\""]},"correct_patterns":[["\"a\"","\"b\"","\"0\"","\"c\""],["\"a\"","\"b\"","\"1\"","\"c\""]]},{"id":728115040,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n\tpublic: void print() { cout << fillword; }\r\n};\r\nclass Tiger : Animal {\r\n\tpublic: void print() {\r\n\t\tAnimal::print();\r\n\t\tcout << fillword;\r\n\t}\r\n};\r\nclass MarineAnimal : Animal {\r\n\tpublic: void print() {\r\n\t\tAnimal::print();\r\n\t\tcout << fillword;\r\n\t}\r\n};\r\nclass Whale : MarineAnimal {\r\n\tpublic: void print() {\r\n\t\tMarineAnimal::print();\r\n\t\tcout << fillword;\r\n\t}\r\n};\r\nvoid main() {\r\n\tWhale obj;\r\n\tobj.print();\r\n}","result":"123","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"a\"","\"b\"","\"1\"","\"2\"","\"3\""]},"correct_patterns":[["\"1\"","\"a\"","\"2\"","\"3\""],["\"1\"","\"b\"","\"2\"","\"3\""]]},{"id":1812678433,"text":"Fill the missing words to match the output.","code":"class Drink {\r\n\tpublic Drink() { cout << \"a\"; }\r\n};\r\nclass fillword : Drink {\r\n\tpublic Water() { cout << \"1\"; }\r\n};\r\nclass FizzyDrink : Drink {\r\n\tpublic FizzyDrink() { cout << \"b\"; }\r\n};\r\nclass fillword : fillword {\r\n\tpublic Coke() { cout << \"c\"; }\r\n};\r\nvoid main() {\r\n\tCoke obj;\r\n}","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["Drink","Drink","Water","Water","FizzyDrink","Coke"]},"correct_patterns":[["Water","Coke","FizzyDrink"]]}]},{"id":2133153320,"name":"Friend Functions","tests":[{"id":972143943,"question":"What's the output of the code snippet?","code":"class Tree {\r\n\tprivate: double height;\r\n\tpublic: void setHeight(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n\r\n\tfriend void printHeight(Tree tree);\r\n};\r\nvoid printHeight(Tree tree) {\r\n\tcout << tree.height;\r\n}\r\nint main() {\r\n\tTree tree;\r\n\ttree.setHeight(80);\r\n\tprintHeight(tree);\r\n}","answers":["Null","80","Exception"],"correct_answer":"80","explanation":"<code>height<\/code> is a private member so it can't be accessed outside of the class body unless a friend function is used.\r\n<br><br>\r\nThanks to the friend function <code>printHeight<\/code> the private member <code>height<\/code> can be accessed outside of the class body."},{"id":1923538180,"question":"What's the output of the code snippet?","code":"class Square {\r\n\tprivate: double side = 10 ;\r\n};\r\nvoid printSide(Square square) {\r\n\tcout << square.height;\r\n}\r\nint main() {\r\n\tSquare square;\r\n\tprintSide(square);\r\n}","answers":["Null","10","Exception"],"correct_answer":"Exception","explanation":"<code>side<\/code> is a private member so it can't be accessed outside of the class body unless a friend function is used.\r\n<br><br>\r\n<code>printSide<\/code> is not a friend function but it accesses a private member.\r\n<br><br>\r\nFor that reason exception is thrown."},{"id":726400197,"question":"What's the output of the code snippet?","code":"class Phone {\r\n\tprivate: string model = \"Samsung Galaxy\";\r\n\tprivate: string getModel() {\r\n\t\treturn model;\r\n\t}\r\n\tfriend void printModel(Phone phone);\r\n};\r\nvoid printModel(Phone phone) {\r\n\tcout << phone.getModel();\r\n}\r\nint main() {\r\n\tPhone phone;\r\n\tprintModel(phone);\r\n}","answers":["Null","Samsung Galaxy","Exception"],"correct_answer":"Samsung Galaxy","explanation":"<code>model<\/code> is a private member so it can't be accessed outside of the class body unless a friend function is used.\r\n<br><br>\r\nThanks to the friend function <code>printModel<\/code> the private member <code>model<\/code> can be accessed outside of the class body."},{"id":1844976770,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tprivate: double height = 10;\r\n\tprivate: double getHeight() {\r\n\t\treturn height;\r\n\t}\r\n};\r\nvoid printHeight(Building building) {\r\n\tcout << building.getHeight();\r\n}\r\nint main() {\r\n\tBuilding building;\r\n\tprintHeight(building);\r\n}","answers":["Null","10","Exception"],"correct_answer":"Exception","explanation":"<code>getHeight<\/code> and <code>height<\/code> are private members so they can't be accessed outside of the class body unless a friend function is used.\r\n<br><br>\r\n<code>printHeight<\/code> is not a friend function but it accesses a private member - <code>getHeight<\/code>.\r\n<br><br>\r\nFor that reason exception is thrown."},{"id":648887363,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tprivate: double mass = 10;\r\n\tfriend void printMass(Animal animal);\r\n};\r\nvoid printMass(Animal animal) {\r\n\tcout << animal.mass;\r\n}\r\nint main() {\r\n\tAnimal obj;\r\n\tprintMass(obj);\r\n}","answers":["Null","10","Exception"],"correct_answer":"10","explanation":"<code>mass<\/code> is a private member so it can't be accessed outside of the class body unless a friend function is used.\r\n<br><br>\r\nThanks to the friend function <code>printMass<\/code> the private member <code>mass<\/code> can be accessed outside of the class body"}],"puzzles":[{"id":649619182,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tprivate: string name;\r\n\tpublic: Person(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n\tfillword fillword fillword(fillword);\r\n};\r\nvoid represent(Person person) {\r\n\tcout << \"Hi! My name is \" << person.name << \".\";\r\n}\r\nvoid main() {\r\n\tPerson person(\"Selena\");\r\n\trepresent(person);\r\n}","result":"Hi! My name is Selena.","words":{"operators":[],"values":[],"variables_constants":[],"others":["friend","function","void","represent","Person person","string name"]},"correct_patterns":[["friend","void","represent","Person person"]]},{"id":527206063,"text":"Fill the missing words to match the output.","code":"class Device {\r\n\tprivate: int width;\r\n\tprivate: int height;\r\n\tpublic: Device(int widthVal, int heightVal) {\r\n\t\twidth = widthVal;\r\n\t\theight = heightVal;\r\n\t}\r\n\tfriend void printResolution(fillword fillword);\r\n};\r\nvoid printResolution(Device device) {\r\n\tcout << device.width << \"x\" << device.height;\r\n}\r\nvoid main() {\r\n\tDevice obj(1900, 1200);\r\n\tfillword(fillword);\r\n}","result":"1900x1200","words":{"operators":[],"values":[],"variables_constants":[],"others":["int width","int height","Device","device","printResolution","obj","1900, 1200"]},"correct_patterns":[["Device","device","printResolution","obj"]]},{"id":1343333996,"text":"Fill the missing words to match the output.","code":"class Rectangle {\r\n\tprivate: double width;\r\n\tprivate: double height;\r\n\tpublic: Rectangle(double widthVal, double heightVal) {\r\n\t\twidth = widthVal;\r\n\t\theight = heightVal;\r\n\t}\r\n\tvoid printArea() {\r\n\t\tcout << width * height << endl;\r\n\t}\r\n\tfriend void printArea(Rectangle rect);\r\n};\r\nvoid printArea(Rectangle rect) {\r\n\tcout << rect.width * rect.height << endl;\r\n}\r\nvoid main() {\r\n\tRectangle rect(4, 2);\r\n\tfillword(fillword);\r\n\tfillword.fillword();\r\n}","result":"8\r\n8","words":{"operators":[],"values":[],"variables_constants":[],"others":["rect","rect","printArea","printArea","Rectangle","this"]},"correct_patterns":[["printArea","rect","rect","printArea"]]}]},{"id":835351017,"name":"Friend Classes","tests":[{"id":525491200,"question":"What's the output of the code snippet?","code":"class App {\r\n\tprivate: string name = \"Snapchat\";\r\n\tfriend class AppStore;\r\n};\r\nclass AppStore {\r\n\tpublic: void printApp(App app) {\r\n\t\tcout << app.name;\r\n\t}\r\n};\r\nint main() {\r\n\tAppStore store;\r\n\tApp app;\r\n\tstore.printApp(app);\r\n}","answers":["Null","Snapchat","Exception"],"correct_answer":"Snapchat","explanation":"<code>name<\/code> is a private member so it can't be accessed outside of the class body unless a friend class is used.\r\n<br><br>\r\nSince <code>AppStore<\/code> is a friend class to <code>App<\/code>, it can access all  private members of the <code>App<\/code> class."},{"id":1342668737,"question":"What's the output of the code snippet?","code":"class Apple {\r\n\tprivate: double pricePerKg = 1;\r\n};\r\nclass Grocery {\r\n\tfriend class Apple;\r\n\tpublic: void printPrice(Apple apple) {\r\n\t\tcout << apple.pricePerKg;\r\n\t}\r\n};\r\nint main() {\r\n\tGrocery grocery;\r\n\tApple apple;\r\n\tgrocery.printPrice(apple);\r\n}","answers":["1","Null","Exception"],"correct_answer":"Exception","explanation":"<code>friend class Apple<\/code> means that the <code>Apple<\/code> class can access private members of the <code>Grocery<\/code> class.\r\n<br><br>\r\nHowever, <code>Grocery<\/code> accesses private member of the <code>Apple<\/code> class thus exception is thrown.\r\n<br><br>\r\nThe declaration for friend class needs to be <code>friend class Grocery<\/code> inside the <code>Apple<\/code> class."},{"id":179019662,"question":"What's the output of the code snippet?","code":"class Student {\r\n\tprivate: string name = \"John\";\r\n\tfriend class School;\r\n};\r\nclass School {\r\n\tpublic: void printStudentName(Student s) {\r\n\t\tcout << s.name;\r\n\t}\r\n};\r\nint main() {\r\n\tSchool school;\r\n\tStudent student;\r\n\tschool.printStudentName(student);\r\n}","answers":["Null","John","Exception"],"correct_answer":"John","explanation":"<code>name<\/code> is a private member so it can't be accessed outside of the class body unless a friend class is used.\r\n<br><br>\r\nSince <code>School<\/code> is a friend class to <code>Student<\/code>, it can access all  private members of the <code>Student<\/code> class."},{"id":1129889615,"question":"What's the output of the code snippet?","code":"class Employee {\r\n\tprivate: string name = \"Smith\";\r\n\tprotected: void printName() {\r\n\t\tcout << name;\r\n\t}\r\n};\r\nclass Company {\r\n\tpublic: void printEmployeeName(Employee e) {\r\n\t\tcout << e.name;\r\n\t}\r\n\tfriend class Employee;\r\n};\r\nint main() {\r\n\tCompany company;\r\n\tEmployee employee;\r\n\tcompany.printEmployeeName(employee);\r\n}","answers":["Null","Smith","Exception"],"correct_answer":"Exception","explanation":"<code>friend class Employee<\/code> means that the <code>Employee<\/code> class can access private members of the <code>Company<\/code> class.\r\n<br><br>\r\nHowever, <code>Company<\/code> accesses private member of the <code>Employee<\/code> class thus exception is thrown.\r\n<br><br>\r\nThe declaration for friend class needs to be <code>friend class Company<\/code> inside the <code>Employee<\/code> class."},{"id":68017932,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tprotected: double price = 10;\r\n\tfriend class Store;\r\n};\r\nclass Sunglasses : Product {};\r\nclass Store {\r\n\tpublic: void printSunglassInfo(Sunglasses sunglasses) {\r\n\t\tcout << sunglasses.price;\r\n\t}\r\n};\r\nint main() {\r\n\tStore store;\r\n\tSunglasses sunglasses;\r\n\r\n\tstore.printSunglassInfo(sunglasses);\r\n}","answers":["Null","10","Exception"],"correct_answer":"Exception","explanation":"<code>Sunglasses<\/code> inherits <code>Product<\/code>\r\nbut friend classes do not get inherited.\r\n<br><br>\r\nFor that reason <code>Store<\/code> cannot access <code>Sunglasses<\/code> private properties."}],"puzzles":[{"id":180799021,"text":"Fill the missing words to match the output.","code":"class User {\r\n\tprivate: string username;\r\n\tprivate: string email;\r\n\tpublic: User(string usernameVal, string emailVal) {\r\n\t\tusername = usernameVal;\r\n\t\temail = emailVal;\r\n\t}\r\n\tfillword fillword fillword;\r\n};\r\nclass Website {\r\n\tpublic: void printUserData(User user) {\r\n\t\tcout << user.username << \" \";\r\n\t\tcout << user.email;\r\n\t}\r\n};\r\nvoid main() {\r\n\tUser user(\"Jane\", \"jane@example.com\");\r\n\tWebsite website;\r\n\twebsite.printUserData(user);\r\n}","result":"Jane jane@example.com","words":{"operators":[],"values":[],"variables_constants":[],"others":["Website","User","class","friend"]},"correct_patterns":[["friend","class","Website"]]},{"id":1131143658,"text":"Fill the missing words to match the output.","code":"class Student {\r\n\tprivate: string name;\r\n\tprivate: int age;\r\n\tpublic: Student(string nameVal, int ageVal) {\r\n\t\tname = nameVal;\r\n\t\tage = ageVal;\r\n\t}\r\n\tfriend class School;\r\n};\r\nclass School {\r\n\tpublic: void printData(Student student) {\r\n\t\tcout << student.name << \" \";\r\n\t\tcout << student.age;\r\n\t}\r\n};\r\nvoid main() {\r\n\tSchool school;\r\n\tStudent student(\"Alicia\", 16);\r\n\r\n\tfillword.fillword(fillword);\r\n}","result":"Alicia 16","words":{"operators":[],"values":[],"variables_constants":[],"others":["school","student","friend","printData","School","Student"]},"correct_patterns":[["school","printData","student"]]},{"id":68682155,"text":"Fill the missing words to match the output.","code":"class Product {\r\n\tprivate: double price;\r\n\tpublic: void setPrice(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic: void printPrice() {\r\n\t\tcout << price << endl;\r\n\t}\r\n\tfriend class Shop;\r\n};\r\nclass Shop {\r\n\tpublic: void printPrice(Product prod) {\r\n\t\tcout << prod.price << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tProduct prod;\r\n\tprod.setPrice(17);\r\n\tfillword.fillword fillword;\r\n\r\n\tShop shop;\r\n\tfillword.fillword fillword;\r\n}","result":"17\r\n17","words":{"operators":[],"values":[],"variables_constants":["prod","shop"],"others":["printPrice","printPrice","()","(prod)","price","priceVal"]},"correct_patterns":[["prod","printPrice","()","shop","printPrice","(prod)"]]}]},{"id":1786679734,"name":"Virtual Functions","tests":[{"id":2125659853,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic: virtual void printSize() {\r\n\t\tcout << \"small\";\r\n\t}\r\n};\r\nclass Tablet : Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"large\";\r\n\t}\r\n};\r\nint main() {\r\n\tTablet tablet;\r\n\ttablet.printSize();\r\n}","answers":["small","large","Null"],"correct_answer":"large","explanation":"<code>Tablet<\/code> overrides the <code>printSize<\/code> function.\r\n<br><br>\r\nFor that reason <code>tablet.printSize()<\/code> prints \"large\"."},{"id":929504906,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic: virtual void printIntelligence() {\r\n\t\tcout << \"low\";\r\n\t}\r\n};\r\nclass Monkey : Animal {\r\n\tpublic: void printIntelligence() {\r\n\t\tcout << \"high\";\r\n\t}\r\n};\r\nint main() {\r\n\tMonkey *monkey = new Monkey();\r\n\tmonkey->printIntelligence();\r\n}","answers":["low","high","Null"],"correct_answer":"high","explanation":"Virtual functions have late binding thus <code>monkey->printIntelligence()<\/code> prints \"high\" (the child's override)."},{"id":1746157131,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tpublic: virtual void printHeight() {\r\n\t\tcout << \"low\";\r\n\t}\r\n};\r\nclass Skyscraper : public Building {\r\n\tpublic: void printHeight() {\r\n\t\tcout << \"high\";\r\n\t}\r\n};\r\nint main() {\r\n\tBuilding *skyscraper = new Skyscraper();\r\n\tskyscraper->printHeight();\r\n}","answers":["low","high","Null"],"correct_answer":"high","explanation":"Virtual functions have late binding thus <code>skyscraper->printHeight()<\/code> prints \"high\" (the child's override)."},{"id":582573576,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic: void printLength() {\r\n\t\tcout << \"short\";\r\n\t}\r\n};\r\nclass Sedan : public Car {\r\n\tpublic: void printLength() {\r\n\t\tcout << \"long\";\r\n\t}\r\n};\r\nint main() {\r\n\tCar *skyscraper = new Sedan();\r\n\tskyscraper->printLength();\r\n}","answers":["short","long","Null"],"correct_answer":"short","explanation":"Non-virtual functions have early binding thus <code>skyscraper->printHeight()<\/code> prints \"short\" (the parent's function)."},{"id":460224969,"question":"What's the output of the code snippet?","code":"class Glasses {\r\n\tpublic: virtual void printShadeIndex() {\r\n\t\tcout << \"low\" ;\r\n\t}\r\n};\r\nclass Sunglasses : public Glasses {\r\n\tpublic: void printShadeIndex() {\r\n\t\tcout << \"high \";\r\n\t}\r\n};\r\nint main() {\r\n\tGlasses *sunglasses1 = new Sunglasses();\r\n\tsunglasses1->printShadeIndex();\r\n\r\n\tGlasses sunglasses2;\r\n\tsunglasses2.printShadeIndex();\r\n}","answers":["low low","high low","low high"],"correct_answer":"high low","explanation":"Virtual functions have late binding thus <code>sunglasses1->printShadeIndex()<\/code> prints \"high\" (the child's override).\r\n<br><br>\r\nFor the code <br>\r\n<code>Glasses sunglasses2; <br>\r\nsunglasses2.printShadeIndex();<\/code>\r\n<br><br>\r\n<code>sunglasses2<\/code> is a <code>Glasses<\/code> object so the method from the <code>Glasses<\/code> class is executed."}],"puzzles":[{"id":2127372648,"text":"Fill the missing words to match the output.","code":"class Vehicle {\r\n\tpublic: fillword printConsumation() {\r\n\t\tcout << \"Low\";\r\n\t}\r\n};\r\nclass Truck : public Vehicle {\r\n\tpublic: void printConsumation() {\r\n\t\tcout << \"High\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tVehicle *truck = new fillword();\r\n\ttruck->printConsumation();\r\n}","result":"High","words":{"operators":[],"values":[],"variables_constants":[],"others":["void","virtual void","Vehicle","Truck"]},"correct_patterns":[["virtual void","Truck"]]},{"id":930234665,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n\tpublic: virtual void printSize() {\r\n\t\tcout << \"Small\";\r\n\t}\r\n};\r\nclass Tiger : public Animal {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"Large\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword *obj = new fillword();\r\n\tobj->printSize();\r\n}","result":"Small","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Tiger","Tiger"]},"correct_patterns":[["Animal","Animal"]]},{"id":1747411190,"text":"Fill the missing words to match the output.","code":"class Device {\r\n\tpublic: virtual void printSize() {\r\n\t\tcout << \"large\" << endl;\r\n\t}\r\n};\r\nclass Smartwatch : public Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"small\" << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword *obj1 = new fillword();\r\n\tobj1->printSize();\r\n\r\n\tfillword *obj2 = new fillword();\r\n\tobj2->printSize();\r\n}","result":"small\r\nlarge","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Device","Device","Device","Smartwatch"]},"correct_patterns":[["Device","Smartwatch","Device","Device"]]}]},{"id":589541751,"name":"Abstract Classes And Pure Virtual Functions","tests":[{"id":1544722838,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic: virtual void makeSound() = 0;\r\n};\r\nclass Cat : public Animal {\r\n\tpublic: void makeSound() {\r\n\t\tcout << \"meow\";\r\n\t}\r\n};\r\nint main() {\r\n\tCat cat;\r\n\tcat.makeSound();\r\n}","answers":["Null","meow","Exception"],"correct_answer":"meow","explanation":"The <code>Cat<\/code> class overrides the pure virtual function <code>makeSound<\/code>.\r\n<br><br>\r\nFor that reason the class <code>Cat<\/code> can be instanced without throwing exception."},{"id":1333057812,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic: virtual void printSize() = 0;\r\n};\r\nclass Smartphone : public Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"small\";\r\n\t}\r\n};\r\nint main() {\r\n\tDevice device;\r\n\tdevice.printSize();\r\n}","answers":["Null","small","Exception"],"correct_answer":"Exception","explanation":"The class <code>Device<\/code> contains a pure virtual function - <code>printSize<\/code>.\r\n<br><br>\r\nDue to that <code>Device<\/code> can't be instanced."},{"id":1702101,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tpublic: virtual void getPrice() = 0;\r\n};\r\nclass House : public Building {\r\n\tHouse() {\r\n\t\tcout << \"Created house\";\r\n\t}\r\n};\r\nint main() {\r\n\tHouse house;\r\n}","answers":["Created house","Empty","Exception"],"correct_answer":"Exception","explanation":"class <code>House<\/code> inherits <code>Building<\/code>\r\nbut doesn't override the pure virtual method - <code>getPrice<\/code>.\r\n<br><br>\r\nFor that reason <code>House<\/code> can't be instanced.\r\n<br><br>\r\n<code>House<\/code> needs to override the <code>getPrice<\/code> method."},{"id":2060327058,"question":"Which of the classes can be instanced?","code":"class Animal {\r\n\tpublic: virtual void printSize() = 0;\r\n};\r\nclass Bird : public Animal {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"small\";\r\n\t}\r\n};\r\nclass Parrot : public Bird {};","answers":["Animal","Bird","Bird and Parrot"],"correct_answer":"Bird and Parrot","explanation":"<code>Animal<\/code> can't be instanced since it contains pure virtual function  - <code>printSize<\/code>.  For that reason it can't be instanced.\r\n<br><br>\r\n<code>Bird<\/code> inherits <code>Animal<\/code> and it's pure virtual function but it overrides it. For that reason <code>Bird<\/code> can be instanced.\r\n<br><br>\r\n<code>Parrot<\/code> inherits <code>Bird<\/code> and it's override to the pure virtual function thus it can be instanced."},{"id":863189075,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n\tpublic: virtual void printLength() = 0;\r\n};\r\nclass Car : public Vehicle {\r\n\tpublic: void printLength() {\r\n\t\tcout << \"short\";\r\n\t}\r\n};\r\nclass Hatchback : public Car {};\r\nint main() {\r\n\tHatchback hatch;\r\n\thatch.printLength();\r\n}","answers":["Null","short","Exception"],"correct_answer":"short","explanation":"<code>Hatchback<\/code> inherits <code>Car<\/code> and it's override to the pure virtual function (<code>printLength<\/code>) thus it can be instanced and exception is not thrown."}],"puzzles":[{"id":583762103,"text":"Fill the missing words to match the output.","code":"class Device {\r\n\tpublic: virtual void printSize() = 0;\r\n};\r\nclass Tablet : Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"Large\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword obj;\r\n\tcout << \"Code that won't throw exception.\";\r\n}","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Tablet"]},"correct_patterns":[["Tablet"]]},{"id":460890228,"text":"Fill the missing words to match the output.","code":"class Pet {\r\n\tpublic: fillword fillword() = 0;\r\n};\r\nclass Cat : Pet {\r\n\tpublic: fillword fillword() {\r\n\t\tcout << \"meow\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tCat obj;\r\n\tobj.makeSound();\r\n}","result":"meow","words":{"operators":[],"values":[],"variables_constants":[],"others":["void","virtual void","makeSound","makeSound","abstract","override"]},"correct_patterns":[["virtual void","makeSound","void","makeSound"]]},{"id":1546502197,"text":"Fill the missing words.","code":"class Polygon {\r\n\tpublic: fillword printAnglesCount() = 0;\r\n};\r\nclass Shape {\r\n\tpublic: fillword printArea() = 0;\r\n};\r\nclass Circle : Shape {\r\n\tprivate: double radius;\r\n\tpublic: void fillword() {\r\n\t\tcout << 3.14 * radius * radius;\r\n\t}\r\n};\r\nclass Pentagon : Polygon {\r\n\tpublic: void fillword() {\r\n\t\tcout << 5;\r\n\t}\r\n};","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["printArea","printArea","printAnglesCount","printAnglesCount","void","void","virtual void","virtual void"]},"correct_patterns":[["virtual void","virtual void","printArea","printAnglesCount"]]}]},{"id":1708183860,"name":"Operator Overloading","tests":[{"id":1948276752,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tpublic: double price;\r\n\r\n\tProduct(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic: double operator+(Product prodObj) {\r\n\t\treturn price + prodObj.price;\r\n\t}\r\n};\r\nint main() {\r\n\tProduct obj1(10);\r\n\tProduct obj2(5);\r\n\tcout << obj1 + obj2;\r\n}","answers":["5","10","15"],"correct_answer":"15","explanation":"<code>operator+<\/code> is the function that executes when 2 objects are added (<code>obj1 + obj2<\/code>).\r\n<br><br>\r\nThe prices of the two objects are sumed.\r\n<br><br>\r\n10 + 5 = 15"},{"id":785742801,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tprivate: double height;\r\n\tpublic: Building(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n\tpublic: bool operator<=(Building obj) {\r\n\t\treturn height <= obj.height;\r\n\t}\r\n};\r\nint main() {\r\n\tBuilding obj1(100);\r\n\tBuilding obj2(155);\r\n\tif (obj1 <= obj2) {\r\n\t\tcout << \"less\";\r\n\t}\r\n\telse {\r\n\t\tcout << \"more\";\r\n\t}\r\n}","answers":["less","more","Null"],"correct_answer":"less","explanation":"<code>operator<=<\/code> is the function that executes when 2 objects are compared via <code><=<\/code> operator(<code>obj1 <= obj2<\/code>).\r\n<br><br>\r\nThe heights of the two objects are compared.\r\n<br><br>\r\n100 <= 155"},{"id":1736022942,"question":"What's the output of the code snippet?","code":"class Cat {\r\n\tpublic: double mass;\r\n\tpublic: void setMass(double massVal) {\r\n\t\tmass = massVal;\r\n\t}\r\n\tpublic: void operator=(Cat cat) {\r\n\t\tmass = cat.mass + 1;\r\n\t}\r\n};\r\nint main() {\r\n\tCat cat1;\r\n\tcat1.setMass(2);\r\n\t\r\n\tCat cat2;\r\n\tcat2 = cat1;\r\n\tcout << cat2.mass;\r\n}","answers":["0","2","3"],"correct_answer":"3","explanation":"<code>operator=<\/code> is the function that executes when an object is assigned value via the <code>=<\/code> operator(<code>cat2 = cat1<\/code>).\r\n<br><br>\r\nThe <code>mass<\/code> property is assigned value of the passed object's mass + 1.\r\n<br><br>\r\nmass = 2 + 1\r\n<br>\r\nmass = 3"},{"id":1479457631,"question":"What's the output of the code snippet?","code":"class Tree {\r\n\tpublic: double height;\r\n\tTree(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n};\r\nint main() {\r\n\tTree tree1(100);\r\n\tTree tree2(150);\r\n\tcout << tree1 + tree2;\r\n}","answers":["0","250","Exception"],"correct_answer":"Exception","explanation":"The <code>+<\/code> operator is not predefined but two objects are summed.\r\n<br><br>\r\nA function with name <code>operator+<\/code> needs to be defined."},{"id":315874076,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n\tpublic: double price;\r\n\tpublic: double operator+(Vehicle obj) {\r\n\t\treturn price + obj.price;\r\n\t}\r\n};\r\nclass Car : public Vehicle {\r\n\tpublic: Car(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n};\r\nint main() {\r\n\tCar obj1(20000);\r\n\tCar obj2(30000);\r\n\tcout << obj1 + obj2;\r\n}","answers":["0","50000","Exception"],"correct_answer":"50000","explanation":"<code>operator+<\/code> is the function that executes when two objects are summed (<code>obj1 + obj2<\/code>).\r\n<br><br>\r\nThe <code>price<\/code> properties of two objects are summed.\r\n<br><br>\r\n20000 + 30000 = 50000"}],"puzzles":[{"id":382919666,"text":"Fill the missing words to match the output.","code":"class Student {\r\n\tprivate: int age;\r\n\tprivate: double gpa;\r\n\tpublic: Student(int ageVal, double gpaVal) {\r\n\t\tage = ageVal;\r\n\t\tgpa = gpaVal;\r\n\t}\r\n\tpublic: void operator fillword(Student student) {\r\n\t\tcout << age + student.age << endl;\r\n\t}\r\n\tpublic: void operator fillword(Student student) {\r\n\t\tcout << gpa - student.gpa << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tStudent obj1(17, 3.7);\r\n\tStudent obj2(15, 3.5);\r\n\tobj1 fillword obj2;\r\n\tobj1 fillword obj2;\r\n}","result":"32\r\n0.2","words":{"operators":[],"values":[],"variables_constants":[],"others":["+","+","+","+","-","-","-","-"]},"correct_patterns":[["+","-","+","-"]]},{"id":1334248371,"text":"Fill the missing words to match the output.","code":"class Mouse {\r\n\tprivate: string make;\r\n\tprivate: double price;\r\n\tpublic: Mouse(string makeVal, double priceVal) {\r\n\t\tmake = makeVal;\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic: bool operator>(Mouse mouse) {\r\n\t\treturn fillword > mouse.fillword;\r\n\t}\r\n\tpublic: bool operator==(Mouse mouse) {\r\n\t\treturn fillword== mouse.fillword;\r\n\t}\r\n};\r\nvoid main() {\r\n\tMouse obj1(\"hp\", 15);\r\n\tMouse obj2(\"hp\", 20);\r\n\tcout << (obj1 > obj2) << \" \";\r\n\tcout << (obj1 == obj2);\r\n}","result":"0 1","words":{"operators":[],"values":[],"variables_constants":[],"others":["price","price","price","price","make","make","make","make"]},"correct_patterns":[["price","price","make","make"]]},{"id":3416944,"text":"Fill the missing words to match the output.","code":"class Building {\r\n\tpublic: int floorsCount;\r\n\tpublic: double height;\r\n\tpublic: Building(int floorsCountVal, double heightVal) {\r\n\t\tfloorsCount = floorsCountVal;\r\n\t\theight = heightVal;\r\n\t}\r\n\tpublic: void operator+=(Building building) {\r\n\t\tfillword += building.fillword;\r\n\t}\r\n\tpublic: void operator-=(Building building) {\r\n\t\tfillword -= building.fillword;\r\n\t}\r\n};\r\nvoid main() {\r\n\tBuilding obj1(15, 100);\r\n\tBuilding obj2(10, 50);\r\n\r\n\tobj1 += obj2;\r\n\tobj1 -= obj2;\r\n\r\n\tcout << obj1.floorsCount << \" \";\r\n\tcout << obj1.height;\r\n}","result":"25 50","words":{"operators":[],"values":[],"variables_constants":[],"others":["height","height","height","height","floorsCount","floorsCount","floorsCount","floorsCount"]},"correct_patterns":[["floorsCount","floorsCount","height","height"]]}]},{"id":1585836277,"name":"Operator Overloading For Input And Output","tests":[{"id":1266744029,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tpublic: string name;\r\n\tPerson(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n};\r\nostream& operator<<(ostream& stream, Person person) {\r\n\tcout << \"Name: \" << person.name;\r\n\treturn stream;\r\n}\r\nint main() {\r\n\tPerson obj(\"John\");\r\n\tcout << obj;\r\n}","answers":["John","Name: John","Exception"],"correct_answer":"Name: John","explanation":"<code>operator<< <\/code> is the function that executes when <code> << <\/code> operator is used for class objects.\r\n<br><br>\r\nIn this case <code>cout << obj<\/code>.\r\n<br><br>\r\n<code> operator<< <\/code> prints the name property."},{"id":204806810,"question":"What's the output of the code snippet?","code":"class Ice {\r\n\tpublic: double weight;\r\n\tIce(double weightVal) {\r\n\t\tweight = weightVal;\r\n\t}\r\n};\r\nint main() {\r\n\tIce obj(500);\r\n\tcout << obj;\r\n}","answers":["Exception","weight: 500","500"],"correct_answer":"Exception","explanation":"<code>cout << obj<\/code> prints the object but there is no function with name <code>operator<< <\/code> thus exception is thrown."},{"id":1188706907,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic: string model;\r\n};\r\nistream& operator>>(istream& stream, Car &car) {\r\n\tcar.model = \"Ford Fiesta\";\r\n\treturn stream;\r\n}\r\nint main() {\r\n\tCar car;\r\n\tcin >> car;\r\n\tcout << car.model;\r\n}","answers":["Null","Ford Fiesta","Exception"],"correct_answer":"Ford Fiesta","explanation":"<code>cin >> car <\/code> calls the <code> operator>> <\/code> function.\r\n<br><br>\r\nIt sets value for the <code>model<\/code> property."},{"id":1066359320,"question":"What's the output of the code snippet?","code":"class Laptop {\r\n\tpublic: string brand = \"Unknown\";\r\n};\r\nint main() {\r\n\tLaptop laptop;\r\n\tcin >> laptop;\r\n\tcout << laptop.brand;\r\n}","answers":["Null","Unknown","Exception"],"correct_answer":"Exception","explanation":"<code>cin >> obj<\/code>  calls <code>operator>>  <\/code> function.\r\n<br><br>\r\nA function with name <code>operator>> <\/code> is not defined thus exception is thrown."},{"id":1883006425,"question":"What's the output of the code snippet?","code":"class Website {\r\n\tpublic: string domain;\r\n};\r\nistream& operator>>(istream& stream, Website &website) {\r\n\twebsite.domain = \"example.com\";\r\n\treturn stream;\r\n}\r\nostream& operator<<(ostream& stream, Website website) {\r\n\tcout << \"Domain: \" << website.domain;\r\n\treturn stream;\r\n}\r\nint main() {\r\n\tWebsite website;\r\n\tcin >> website;\r\n\tcout << website;\r\n}","answers":["example.com","Domain: example.com","Exception"],"correct_answer":"Domain: example.com","explanation":"<code>cin >> website <\/code> calls the function <code> operator>> <\/code>.\r\n<br>\r\n<code>cout << website<\/code> calls the function <code> operator<< <\/code>."}],"puzzles":[{"id":2061058865,"text":"Fill the missing words to match the output.","code":"class TShirt {\r\n\tpublic: string color;\r\n\tpublic: double price;\r\n};\r\nfillword fillword (fillword, fillword)\r\n{\r\n\ttshirtObj.color = \"white\";\r\n\ttshirtObj.price = 20;\r\n\r\n\treturn stream;\r\n}\r\nvoid main() {\r\n\tTShirt obj;\r\n\tcin >> obj;\r\n\tcout << obj.color << \" \" << obj.price;\r\n}","result":"white 20","words":{"operators":[],"values":[],"variables_constants":[],"others":["istream&","ostream&","operator>>","operator<<","istream &stream","ostream &stream","TShirt tshirtObj","TShirt &tshirtObj"]},"correct_patterns":[["istream&","operator>>","istream &stream","TShirt &tshirtObj"]]},{"id":864969470,"text":"Fill the missing words to match the output.","code":"class Square {\r\n\tpublic: double side;\r\n\tpublic: double calcArea() {\r\n\t\treturn side * side;\r\n\t}\r\n\tpublic: double calcPerimeter() {\r\n\t\treturn side * 4;\r\n\t}\r\n};\r\nostream& operator<<(ostream &stream, Square squareObj)\r\n{\r\n\tcout << squareObj.fillword << \" \";\r\n\tcout << squareObj.fillword << \" \";\r\n\tcout << squareObj.fillword;\r\n\r\n\treturn stream;\r\n}\r\nvoid main() {\r\n\tSquare obj;\r\n\tobj.side = 3;\r\n\r\n\tfillword fillword obj;\r\n}","result":"3 12 9","words":{"operators":[],"values":[],"variables_constants":[],"others":["side","calcArea()","calcPerimeter()",">>","<<","cin","cout"]},"correct_patterns":[["side","calcPerimeter()","calcArea()","cout","<<"]]},{"id":1949467327,"text":"Fill the missing words to match the output.","code":"class Sunglasses {\r\n\tpublic: string shadeColor;\r\n\tpublic: double price;\r\n};\r\nistream& operator fillword(istream &stream, Sunglasses fillword) {\r\n\tobj.shadeColor = \"blue\";\r\n\tobj.price = 50;\r\n\r\n\treturn stream;\r\n}\r\nostream& operator fillword(ostream &stream, Sunglasses fillword) {\r\n\tcout << obj.price << \" \" << obj.shadeColor;\r\n\r\n\treturn stream;\r\n}\r\nvoid main() {\r\n\tSunglasses obj;\r\n\tcin fillword obj;\r\n\tcout fillword obj;\r\n}","result":"50 blue","words":{"operators":[],"values":[],"variables_constants":[],"others":["&obj","obj",">>",">>",">>","<<","<<","<<"]},"correct_patterns":[[">>","&obj","<<","obj",">>","<<"]]}]},{"id":388632754,"name":"Static Members","tests":[{"id":719357286,"question":"What's the output of the code snippet?","code":"class Employee {\r\n\tpublic: static int count;\r\n\tEmployee() {\r\n\t\tcount++;\r\n\t}\r\n};\r\nint Employee::count = 0;\r\n\r\nint main() {\r\n\tEmployee emp1;\r\n\tEmployee emp2;\r\n\tEmployee emp3;\r\n\tcout << Employee::count;\r\n}","answers":["0","3","null"],"correct_answer":"3","explanation":"The static member <code>count<\/code> increments each time when object is created.\r\n<br><br>\r\nIt's incremented in the class constructor - <code>count++;<\/code>"},{"id":1670751527,"question":"What's the output of the code snippet?","code":"class Circle {\r\n\tpublic: static double pi;\r\n};\r\ndouble Circle::pi = 3.14;\r\n\r\nint main() {\r\n\tCircle circle;\r\n\tcout << circle.pi << \" \" << Circle::pi;\r\n}","answers":["3.14 3.14","null 3.14","3.14 null"],"correct_answer":"3.14 3.14","explanation":"Both <code>circle.pi<\/code> and <code>Circle::pi<\/code> access the static member <code>pi<\/code> ."},{"id":607831268,"question":"What's the output of the code snippet?","code":"class Cat {\r\n\tpublic: static void makeSound() {\r\n\t\tcout << \"meow\";\r\n\t}\r\n};\r\nint main() {\r\n\tCat::makeSound();\r\n}","answers":["meow","null","Exception"],"correct_answer":"meow","explanation":"<code>makeSound<\/code> does not access any non-static class members.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":519038117,"question":"What's the output of the code snippet?","code":"class Dog {\r\n\tpublic: static void makeSound() {\r\n\t\tcout << \"bark \";\r\n\t}\r\n};\r\nint main() {\r\n\tDog dog;\r\n\r\n\tDog::makeSound();\r\n\tdog.makeSound();\r\n}","answers":["bark","bark bark","Exception"],"correct_answer":"bark bark","explanation":"Both <code>Dog::makeSound()<\/code> and <code>dog.makeSound()<\/code> call the static function <code>makeSound<\/code>."},{"id":1469842530,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tprivate: string name = \"Unknown\";\r\n\r\n\tpublic: static void printName() {\r\n\t\tcout << name;\r\n\t}\r\n};\r\nint main() {\r\n\tPerson::printName();\r\n}","answers":["Unknown","null","Exception"],"correct_answer":"Exception","explanation":"The static <code>printName<\/code> function accesses non-static member - <code>name<\/code> which results in exception."}],"puzzles":[{"id":317590971,"text":"Fill the missing words.","code":"class Circle {\r\n\tpublic: fillword pi;\r\n\tpublic: fillword radius;\r\n};\r\nvoid main() {\r\n\tCircle::pi = 3.14;\r\n\tCircle obj;\r\n\tobj.radius = 5;\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Circle","double","static double","pi","radius"]},"correct_patterns":[["static double","double"]]},{"id":1267936632,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tpublic: string name;\r\n\tpublic: fillword present() {\r\n\t\tcout << \"My name is \" << name << \".\";\r\n\t}\r\n\tpublic: fillword sayHi() {\r\n\t\tcout << \"Hi!\" << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tPerson obj;\r\n\tfillword ::sayHi();\r\n\tobj.name = \"Jake\";\r\n\tobj.present();\r\n}","result":"Hi!\r\nMy name is Jake.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Person","name","present","void","static void"]},"correct_patterns":[["void","static void","Person"]]},{"id":205540665,"text":"Fill the missing words to match the output.","code":"class Building {\r\n\tpublic: double height;\r\n\tpublic: static int objCount;\r\n\tpublic: void printHeight() {\r\n\t\tcout << height << endl;\r\n\t}\r\n\tpublic: static void printCount() {\r\n\t\tcout << objCount << endl;\r\n\t}\r\n\tpublic: Building(double heightVal) {\r\n\t\theight = heightVal;\r\n\t\tfillword ::objCount++;\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword ::objCount = 0;\r\n\tBuilding obj1(100);\r\n\tBuilding obj2(120);\r\n\tcout << fillword ::objCount << endl;\r\n\tcout << fillword.height;\r\n}","result":"2\r\n120","words":{"operators":[],"values":[],"variables_constants":[],"others":["Building","Building","Building","Building","obj1","obj2","this"]},"correct_patterns":[["Building","Building","Building","obj2"]]}]},{"id":1239363699,"name":"Encapsulation Principle","tests":[{"id":138486819,"question":"What's the output of the code snippet?","code":"class BankAccount {\r\n\tprivate: double money;\r\n\tpublic: BankAccount(double moneyVal) {\r\n\t\tmoney = moneyVal;\r\n\t}\r\n};\r\nint main() {\r\n\tBankAccount bankAccount(100);\r\n\tcout << bankAccount.money;\r\n}","answers":["100","Null","Exception"],"correct_answer":"Exception","explanation":"<code>cout << bankAccount.money<\/code> accesses the <code>private<\/code> <code>money<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>money<\/code> needs to be defined as <code>public<\/code> member."},{"id":1123436512,"question":"What's the output of the code snippet?","code":"class Jacket {\r\n\tprivate: double price;\r\n\tpublic: Jacket(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic: double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n};\r\nint main() {\r\n\tJacket obj(80);\r\n\tcout << obj.getPrice();\r\n}","answers":["80","Null","Exception"],"correct_answer":"80","explanation":"All <code>Jacket<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":1000040353,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tpublic: string name;\r\n\tpublic: Person(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n};\r\nint main() {\r\n\tPerson obj(\"Michele\");\r\n\tcout << obj.name;\r\n}","answers":["Michele","Null","Exception"],"correct_answer":"Michele","explanation":"All <code>Person<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":2085586798,"question":"What's the output of the code snippet?","code":"class Apartment {\r\n\tprivate: int rooms;\r\n\tpublic: void setRooms(int val) {\r\n\t\trooms = val;\r\n\t}\r\n\tpublic: int getRooms() {\r\n\t\treturn rooms;\r\n\t}\r\n};\r\nint main() {\r\n\tApartment apartment;\r\n\tapartment.setRooms(3);\r\n\tcout << apartment.getRooms();\r\n}","answers":["0","3","Exception"],"correct_answer":"3","explanation":"All <code>Apartment<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":922527535,"question":"What's the output of the code snippet?","code":"class Pet {\r\n\tprivate: string name;\r\n\tpublic: void setName(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n};\r\nint main() {\r\n\tPet pet;\r\n\tpet.setName(\"Tom\");\r\n\tcout << pet.name;\r\n}","answers":["Tom","Null","Exception"],"correct_answer":"Exception","explanation":"<code>cout << pet.name<\/code> accesses the <code>private<\/code> <code>name<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>name<\/code> needs to be defined as <code>public<\/code> member."}],"puzzles":[{"id":1190489286,"text":"Fill the missing words to match the output.","code":"class Car {\r\n\tfillword : string make;\r\n\tfillword : string model;\r\n\tfillword : void setData(string makeVal, string modelVal) {\r\n\t\tmake = makeVal;\r\n\t\tmodel = modelVal;\r\n\t}\r\n\tfillword : void printData() {\r\n\t\tcout << make << \" \" << model;\r\n\t}\r\n};\r\nvoid main() {\r\n\tCar car;\r\n\tcar.setData(\"Ford\", \"Fiesta\");\r\n\tcar.printData();\r\n}","result":"Ford Fiesta","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","private","public","public"]]},{"id":1067027591,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tfillword : string id;\r\n\tfillword : string name;\r\n\tfillword : int age;\r\n\tfillword : Person(string idVal, string nameVal, int ageVal) {\r\n\t\tid = idVal;\r\n\t\tname = nameVal;\r\n\t\tage = ageVal;\r\n\t}\r\n};\r\nvoid main() {\r\n\tPerson person(\"s9f1sf95\", \"Thomas\", 22);\r\n\tcout << person.name << \" \";\r\n\tcout << person.age;\r\n}","result":"Thomas 22","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public","public"]},"correct_patterns":[["private","public","public","public"]]},{"id":1884204100,"text":"Fill the missing words to match the output.","code":"class Square {\r\n\tfillword : double side;\r\n\tfillword : Square(double sideVal) {\r\n\t\tside = sideVal;\r\n\t}\r\n\tfillword : double calcArea() {\r\n\t\treturn side * side;\r\n\t}\r\n\tfillword : double calcPerimeter() {\r\n\t\treturn 4 * side;\r\n\t}\r\n\tfillword : void printData() {\r\n\t\tcout << \"Area = \" << calcArea() << endl;\r\n\t\tcout << \"Perimeter = \" << calcPerimeter() << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tSquare obj(3);\r\n\tobj.printData();\r\n}","result":"Area = 9\r\nPerimeter = 12","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private","private","private"]},"correct_patterns":[["private","public","private","private","public"]]}]},{"id":42750000,"name":"Abstraction Principle","tests":[{"id":1872873196,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tprivate: double a;\r\n\tprivate: double b;\r\n\tpublic: Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic: double calcPerimeter() {\r\n\t\treturn 2 * a + 2 * b;\r\n\t}\r\n};\r\nint main() {\r\n\tRectangle obj(3,4);\r\n\tcout << \"P = \" << obj.calcPerimeter();\r\n}","answers":["P = 14","P = 7","P = 12"],"correct_answer":"P = 14","explanation":"Calculations behind <code>calcPerimeter<\/code> method:\r\n<br><br>\r\n2 x 3 + 2 x 4 = <br>\r\n6 + 8 = <br>\r\n14"},{"id":542566061,"question":"What's the output of the code snippet?","code":"class Trapezoid {\r\n\tprivate: double a;\r\n\tprivate: double b;\r\n\tprivate: double h;\r\n\r\n\tpublic: Trapezoid(double aVal, double bVal, double hVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t\th = hVal;\r\n\t}\r\n\tpublic: double calcArea() {\r\n\t\treturn (a + b) \/ 2 * h;\r\n\t}\r\n};\r\nint main() {\r\n\tTrapezoid obj(2, 4, 6);\r\n\tcout << \"Area = \" << obj.calcArea();\r\n}","answers":["Area = 36","Area = 18","Area = 16"],"correct_answer":"Area = 18","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n(2 + 4) \/ 2 * 6 = <br>\r\n6 \/ 2 * 6 = <br>\r\n3 * 6 = <br>\r\n18"},{"id":452658794,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tprivate: double a;\r\n\tprivate: double b;\r\n\tpublic: Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic: double calcDiagonal() {\r\n\t\treturn sqrt(pow(a, 2) + pow(b, 2));\r\n\t}\r\n};\r\nint main() {\r\n\tRectangle obj(3, 4);\r\n\tcout << \"Diagonal = \" << obj.calcDiagonal();\r\n}","answers":["Diagonal = 7","Diagonal = 5","Diagonal  = 25"],"correct_answer":"Diagonal = 5","explanation":"Calculations behind <code>calcDiagonal<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">3 ^ 2 + 4 ^ 2<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">3 * 3 + 4 * 4<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">9 + 16<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">25<\/span> = <br>\r\n5"},{"id":1403528747,"question":"What's the output of the code snippet?","code":"class Cube {\r\n\tprivate: double side;\r\n\tpublic: Cube(double sideVal) {\r\n\t\tside = sideVal;\r\n\t}\r\n\tpublic: double calcVolume() {\r\n\t\treturn pow(side, 3);\r\n\t}\r\n};\r\nint main() {\r\n\tCube obj(3);\r\n\tcout << \"V = \" << obj.calcVolume();\r\n}","answers":["V = 3","V = 9","V = 27"],"correct_answer":"V = 27","explanation":"Calculations behind <code>calcVolume<\/code> method:\r\n<br><br>\r\n3 ^ 3 = <br>\r\n3 x 3 x 3 = <br>\r\n9 x 3 = 27"},{"id":341656040,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tprivate: double a;\r\n\tprivate: double b;\r\n\tpublic: Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic: double calcArea() {\r\n\t\treturn a * b;\r\n\t}\r\n};\r\nint main() {\r\n\tRectangle obj(sqrt(3), sqrt(3));\r\n\tcout << \"Area = \" << obj.calcArea();\r\n}","answers":["3","6","9"],"correct_answer":"3","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">3<\/span> x\r\n&radic;<span style=\"text-decoration: overline\">3<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">9<\/span> =\r\n<br>\r\n3"}],"puzzles":[{"id":720620549,"text":"Fill the missing words to match the output.","code":"class Rectangle {\r\n\tprivate: double a;\r\n\tprivate: double b;\r\n\tpublic: Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic: double calcArea() {\r\n\t\treturn a * b;\r\n\t}\r\n\tpublic: double calcPerimeter() {\r\n\t\treturn 2 * (a + b);\r\n\t}\r\n};\r\nvoid main() {\r\n\tRectangle obj(1, 3);\r\n\tcout << fillword.fillword << endl;\r\n\tcout << fillword.fillword;\r\n}","result":"3\r\n8","words":{"operators":[],"values":[],"variables_constants":["obj","obj"],"others":["a","b","calcArea()","calcPerimeter()","Rectangle"]},"correct_patterns":[["obj","calcArea()","obj","calcPerimeter()"]]},{"id":1671491522,"text":"Fill the missing words to match the output.","code":"class Square {\r\n\tprivate: double side;\r\n\tpublic: Square(double sideVal) {\r\n\t\tside = sideVal;\r\n\t}\r\n\tpublic: double calcArea() {\r\n\t\treturn side * side;\r\n\t}\r\n};\r\nvoid main() {\r\n\tSquare obj1(fillword);\r\n\tSquare obj2(fillword);\r\n\tcout << obj1.calcArea() << endl;\r\n\tcout << obj2.calcArea();\r\n}","result":"9\r\n16","words":{"operators":[],"values":["2","3","4","5","6","9","16"],"variables_constants":[],"others":[]},"correct_patterns":[["3","4"]]},{"id":609554307,"text":"Fill the missing words to match the output.","code":"class Shape {\r\n\tprivate: int angles;\r\n\tpublic: Shape(int anglesVal) {\r\n\t\tangles = anglesVal;\r\n\t}\r\n\tpublic: int calcDiagonalsCount() {\r\n\t\tint diagonalsCount = 0;\r\n\t\tint step = 2;\r\n\r\n\t\tfor (int i = 4; i <= angles; i++) {\r\n\t\t\tdiagonalsCount += step;\r\n\t\t\tstep++;\r\n\t\t}\r\n\t\treturn diagonalsCount;\r\n\t}\r\n};\r\nvoid main() {\r\n\tShape obj1(fillword);\r\n\tShape obj2(fillword);\r\n\tcout << obj1.calcDiagonalsCount() << endl;\r\n\tcout << obj2.calcDiagonalsCount();\r\n}","result":"2\r\n9","words":{"operators":[],"values":["2","3","4","5","6","7","8","9"],"variables_constants":[],"others":[]},"correct_patterns":[["4","6"]]}]},{"id":2066838513,"name":"Inheritance Principle","tests":[{"id":1292001705,"question":"What's the output of the code snippet?","code":"class Bird {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"small \";\r\n\t}\r\n};\r\nclass Eagle : public Bird {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"large\";\r\n\t}\r\n};\r\nint main() {\r\n\tEagle eagle;\r\n\teagle.printSize();\r\n}","answers":["small","large","small large"],"correct_answer":"large","explanation":"The <code>Eagle<\/code> class overwrites the <code>printSize<\/code> function.\r\n<br><br>\r\nThe overwritten method prints \"large \" ."},{"id":129401206,"question":"What's the output of the code snippet?","code":"class Glasses {\r\n\tpublic: void printShadeIndex() {\r\n\t\tcout << \"low \";\r\n\t}\r\n};\r\nclass Sunglasses : public Glasses {\r\n\tpublic: void printShadeIndex() {\r\n\t\tcout << \"high\";\r\n\t}\r\n};\r\nint main() {\r\n\tGlasses glasses;\r\n\tglasses.printShadeIndex();\r\n}","answers":["low","high","low high"],"correct_answer":"low","explanation":"The <code>Glasses<\/code> class has <code>printShadeIndex<\/code> method which prints \"low\"."},{"id":2019270967,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"medium\";\r\n\t}\r\n};\r\nclass Tablet : public Device {};\r\nint main() {\r\n\tTablet tablet;\r\n\ttablet.printSize();\r\n}","answers":["medium","null","Exception"],"correct_answer":"medium","explanation":"<code>Tablet<\/code> inherits the <code>printSize<\/code> function from it's parent - <code>Device<\/code>."},{"id":822657268,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"small \";\r\n\t}\r\n};\r\nclass HatchBack : public Car {\r\n\tpublic: void printSize() {\r\n\t\tCar::printSize();\r\n\t\tcout << \"medium\";\r\n\t}\r\n};\r\nint main() {\r\n\tHatchBack hatch;\r\n\thatch.printSize();\r\n}","answers":["small","medium","small medium"],"correct_answer":"small medium","explanation":"The <code>HatchBack<\/code> class has <code>printSize<\/code> function which calls it's parent method (via <code>Car::printSize()<\/code>) and afterwards prints \"medium\"."},{"id":1807605941,"question":"Which are the members of Employee class?","code":"class Person {\r\n\tprotected: string name;\r\n};\r\nclass Employee : Person {\r\n\tprivate: double salary;\r\n};\r\nclass Programer : Employee {\r\n\tprivate: string favoriteLang;\r\n};","answers":["name","name, salary","name, salary, favoriteLang"],"correct_answer":"name, salary","explanation":"The <code>Employee<\/code> class inherits the <code>protected<\/code> member <code>name<\/code> from it's parent - <code>Person<\/code>."}],"puzzles":[{"id":519712576,"text":"Fill the missing words to match the output.","code":"class Device {\r\n\tpublic: void printSizeCategory() {\r\n\t\tcout << \"Small\";\r\n\t}\r\n};\r\nclass Laptop : Device {\r\n\tpublic: void printSizeCategory() {\r\n\t\tcout << \"Large\";\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword obj;\r\n\tobj.printSizeCategory();\r\n}","result":"Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Device"]},"correct_patterns":[["Laptop"]]},{"id":1471106817,"text":"Fill the missing words to match the output.","code":"class Electronic {\r\n\tpublic: void printConsumation() {\r\n\t\tcout << \"Low\" << endl;\r\n\t}\r\n};\r\nclass fillword fillword public fillword {};\r\nvoid main() {\r\n\tSmartphone obj;\r\n\tobj.printConsumation();\r\n}","result":"Low","words":{"operators":[],"values":[],"variables_constants":[],"others":["Electronic","Smartphone","extends",":"]},"correct_patterns":[["Smartphone",":","Electronic"]]},{"id":140275406,"text":"Fill the missing words to match the output.","code":"class Person {\r\n\tfillword: string name;\r\n\tpublic: void printData() {\r\n\t\tcout << name << endl;\r\n\t}\r\n};\r\nclass Employee : Person {\r\n\tfillword: double salary;\r\n\tpublic: Employee(string nameVal, double salaryVal) {\r\n\t\tname = nameVal;\r\n\t\tsalary = salaryVal;\r\n\t}\r\n\tpublic: void printData() {\r\n\t\tfillword ::printData();\r\n\t\tcout << salary << endl;\r\n\t}\r\n};\r\nvoid main() {\r\n\tEmployee obj(\"Jim\", 26);\r\n\tobj.printData();\r\n}","result":"Jim\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["Employee","Person","base","private","protected"]},"correct_patterns":[["protected","private","Person"]]}]},{"id":1038455742,"name":"Polymorphism Principle","tests":[{"id":744620146,"question":"What's the output of the code snippet?","code":"class Calculator {\r\n\tpublic: double solve(double a, double b) {\r\n\t\treturn a + b;\r\n\t}\r\n\tpublic: double solve(double a, double b, double c) {\r\n\t\treturn a * b * c;\r\n\t}\r\n};\r\nint main() {\r\n\tCalculator calculator;\r\n\tcout << calculator.solve(1, 2) << \" \";\r\n\tcout << calculator.solve(3, 3, 3);\r\n}","answers":["2 27","3 9","3 27"],"correct_answer":"3 27","explanation":"There are 2 <code>solve<\/code> functions. Which one of them is called depends on the passed parameters.\r\n<br><br>\r\n<code>obj.solve(1, 2)<\/code> calls <code>solve(double a, double b)<\/code> .\r\n<br><br>\r\n<code>obj.solve(3, 3, 3)<\/code> calls <code>solve(double a, double b, double c)<\/code> ."},{"id":1696014387,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tpublic: double price;\r\n\tpublic: double operator+(Product prod) {\r\n\t\treturn price + prod.price;\r\n\t}\r\n\tpublic: double operator+(double num) {\r\n\t\treturn price - num;\r\n\t}\r\n};\r\nint main() {\r\n\tProduct prod;\r\n\tprod.price = 5;\r\n\r\n\tcout << prod + prod << \" \";\r\n\tcout << prod + 3;\r\n}","answers":["10 2","10 8","5 10"],"correct_answer":"10 2","explanation":"<code> prod + prod<\/code> calls the <code>operator+(Product prod)<\/code> function.\r\n<br>\r\n5 + 5 = 10\r\n<br><br>\r\n<code> prod + 3<\/code> calls the <code>operator+(double num)<\/code> function.\r\n<br>\r\n5 - 3 = 2"},{"id":1606697968,"question":"What's the output of the code snippet?","code":"class Appliance {\r\n\tpublic: void printConsumation() {\r\n\t\tcout << \"low \";\r\n\t}\r\n};\r\nclass AirConditioner : Appliance {\r\n\tpublic: void printConsumation() {\r\n\t\tcout << \"medium \";\r\n\t}\r\n};\r\nint main() {\r\n\tAppliance applience;\r\n\tapplience.printConsumation();\r\n\r\n\tAirConditioner airConditioner;\r\n\tairConditioner.printConsumation();\r\n}","answers":["low low","low medium","medium medium"],"correct_answer":"low medium","explanation":"The <code>AirConditioner<\/code> class overwrites the <code>printConsumation<\/code> method that's inherited by it's parent - <code>Appliance<\/code>.\r\n<br><br>\r\n<code>applience.printConsumation()<\/code> prints \"low \".\r\n<br><br>\r\n<code>airConditioner.printConsumation()<\/code> prints \"medium\"."},{"id":275342257,"question":"The following code snipet is","code":"class Printer {\r\n\tpublic: void listArgs(string arg) {\r\n\t\tcout << arg;\r\n\t}\r\n\tpublic: void listArgs(string arg1, string arg2) {\r\n\t\tcout << arg1 << \" \" << arg2;\r\n\t}\r\n};","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Compile Time Polymorphism","explanation":"Compile Time Polymorphism occurs in function overloading.\r\n<br><br>\r\nFunction overloading - many functions with the same name accept different arguments."},{"id":1226670974,"question":"The following code snipet is","code":"class Continent {\r\n\tpublic: void printClimate() {\r\n\t\tcout << \"Temperate\";\r\n\t}\r\n};\r\nclass Antarctica : public Continent {\r\n\tpublic: void printClimate() {\r\n\t\tcout << \"Polar\";\r\n\t}\r\n};","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Runtime Polymorphism","explanation":"Runtime Polymorphism occurs in function overriding .\r\n<br><br>\r\nfunction overriding - base class ( <code>Continent<\/code> ) has a function that's being overwritten in a child class ( <code>Antarctica<\/code> )."}],"puzzles":[{"id":1090555535,"text":"Fill the missing words to match the output.","code":"class Sumator {\r\n\tpublic: int sum(int a, int b) {\r\n\t\treturn a + b;\r\n\t}\r\n\tpublic: int sum(int a, int b, int c) {\r\n\t\treturn a + b + c;\r\n\t}\r\n};\r\nvoid main() {\r\n\tSumator sumator;\r\n\tcout << sumator.sum(fillword) << endl;\r\n\tcout << sumator.sum(fillword) << endl;\r\n}","result":"6\r\n7","words":{"operators":[],"values":[],"variables_constants":[],"others":["1, 1","3, 2","1, 5","1, 1, 1","2, 1, 1","2, 3, 2"]},"correct_patterns":[["1, 5","2, 3, 2"]]},{"id":1001762380,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"Small\" << endl;\r\n\t}\r\n};\r\nclass Whale : Animal {\r\n\tpublic: void printSize() {\r\n\t\tcout << \"Large\" << endl;\r\n\t}\r\n};\r\nclass Cat : public Animal { };\r\nvoid main() {\r\n\tfillword obj1;\r\n\tobj1.printSize();\r\n\tfillword obj2;\r\n\tobj2.printSize();\r\n}","result":"Small\r\nLarge","words":{"operators":[],"values":[],"variables_constants":[],"others":["Whale","Whale","Cat","Cat"]},"correct_patterns":[["Cat","Whale"]]},{"id":2086325773,"text":"Fill the missing words to match the output.","code":"class Vehicle {\r\n\tpublic: void printFuelCost() {\r\n\t\tcout << \"none\" << endl;\r\n\t}\r\n};\r\nclass MotorVehicle : Vehicle {\r\n\tpublic: void printFuelCost() {\r\n\t\tcout << \"medium\" << endl;\r\n\t}\r\n};\r\nclass Car : public MotorVehicle {};\r\nvoid main() {\r\n\tfillword obj;\r\n\tobj.printFuelCost();\r\n}","result":"medium","words":{"operators":[],"values":[],"variables_constants":[],"others":["Vehicle","Car"]},"correct_patterns":[["Car"]]}]},{"id":1988801407,"name":"Templates","tests":[{"id":63087423,"question":"What's the output of the code snippet?","code":"template <typename T>\r\nT getAverage(T num1, T num2) {\r\n\treturn (num1 + num2) \/ 2;\r\n}\r\nint main() {\r\n\tcout << getAverage<int>(1, 2) << \" \";\r\n\tcout << getAverage<double>(1, 2);\r\n}","answers":["1.5  1.5","1  1","1  1.5"],"correct_answer":"1  1.5","explanation":"Calculations behind <code>getAverage<\/code>:\r\n<br><br>\r\nint: <br>\r\n(1 + 2) \/ 2 = <br>\r\n3 \/ 2 = <br>\r\n1.5 which is casted to int so the end result is 1\r\n\r\n<br><br>\r\ndouble: <br>\r\n(1 + 2) \/ 2 = <br>\r\n3 \/ 2 = <br>\r\n1.5."},{"id":1148699388,"question":"What's the output of the code snippet?","code":"template <typename T>\r\nT addArgs(T arg1, T arg2) {\r\n\treturn arg1 + arg2;\r\n}\r\nint main() {\r\n\tcout << addArgs<int>(1, 2) << \" \";\r\n\tcout << addArgs<string>(\"1\", \"2\");\r\n}","answers":["3 3","3 12","12 12"],"correct_answer":"3 12","explanation":"Operations behind <code>addArgs<\/code>:\r\n<br><br>\r\nint: <br>\r\n1 + 2 = <br>\r\n3\r\n\r\n<br><br>\r\nstring: <br>\r\n\"1\" + \"2\" = <br>\r\n\"12\""},{"id":1025827517,"question":"What's the output of the code snippet?","code":"template <class T>\r\nclass Comparator {\r\n\tprivate: T val1;\r\n\tprivate: T val2;\r\n\tpublic: Comparator(T value1, T value2) {\r\n\t\tval1 = value1;\r\n\t\tval2 = value2;\r\n\t}\r\n\tpublic: T getLessVal() {\r\n\t\tif (val1 <= val2) {\r\n\t\t\treturn val1;\r\n\t\t}\r\n\t\treturn val2;\r\n\t}\r\n};\r\nint main() {\r\n\tComparator<int> intComp(2,3);\r\n\tComparator<char> charComp('a', 'z');\r\n\t\r\n\tcout << intComp.getLessVal() << \" \";\r\n\tcout << charComp.getLessVal();\r\n}","answers":["2 z","2 a","3 a"],"correct_answer":"2 a","explanation":"<code>getLessVal<\/code> returns the argument that has less value.\r\n<br>\r\nint: <br>\r\n2 <= 3 so 2 is printed.\r\n<br>\r\n<br>\r\nchar: <br>\r\n'a' <= 'z' so 'a' is printed."},{"id":2009662074,"question":"What's the output of the code snippet?","code":"class Watch {\r\n\tpublic: double price;\r\n};\r\nclass Smartphone {\r\n\tpublic: double price;\r\n};\r\ntemplate <typename T>\r\ndouble addPrices(T arg1, T arg2) {\r\n\treturn arg1.price + arg2.price;\r\n}\r\nint main() {\r\n\tWatch watch;\r\n\twatch.price = 5;\r\n\r\n\tSmartphone sm;\r\n\tsm.price = 100;\r\n\r\n\tcout << addPrices<Watch>(watch, watch) << \" \";\r\n\tcout << addPrices<Smartphone>(sm, sm);\r\n}","answers":["5 100","10 200","105 105"],"correct_answer":"10 200","explanation":"<code>addPrices<\/code> sums the <code>price<\/code> properties of the passed objects.\r\n<br><br>\r\n<code>addPrices<\/code> calculations:\r\n<br><br>\r\n<code>Watch<\/code>: <br>\r\n5 + 5 = 10\r\n<br><br>\r\n<code>Smartphone<\/code>: <br>\r\n100 + 100 = 200"},{"id":679354939,"question":"What's the output of the code snippet?","code":"class Student {\r\n\tpublic: int age;\r\n};\r\nclass Teacher {\r\n\tpublic: int age;\r\n};\r\ntemplate <typename T>\r\ndouble addAges(T arg1, T arg2) {\r\n\treturn arg1.age + arg2.age;\r\n}\r\nint main() {\r\n\tStudent student;\r\n\tstudent.age = 17;\r\n\r\n\tTeacher teacher;\r\n\tteacher.age = 30;\r\n\r\n\tcout << addAges<Student>(student, teacher);\r\n}","answers":["17","47","Exception"],"correct_answer":"Exception","explanation":"<code> addAges<Student>(student, teacher)<\/code> must only accept objects of class Student.\r\n<br><br>\r\nThe <code>teacher<\/code> object is instance of the <code>Teacher<\/code> class thus exception is thrown."}],"puzzles":[{"id":786932348,"text":"Fill the missing words to match the output.","code":"template <typename T>\r\nT addArgs(T arg1, T arg2) {\r\n\treturn arg1 + arg2;\r\n}\r\nvoid main() {\r\n\tcout << addArgs<fillword>(fillword,  4) << \" \";\r\n\tcout << addArgs<fillword>(fillword, \"4\");\r\n}","result":"7 34","words":{"operators":[],"values":[],"variables_constants":[],"others":["int","string","3","4","\"3\"","\"4\"","'3'","30"]},"correct_patterns":[["int","3","string","\"3\""]]},{"id":1737802301,"text":"Fill the missing words to match the output.","code":"class Comparator {\r\n\tprivate: T val1;\r\n\tprivate: T val2;\r\n\tpublic: Comparator(T value1, T value2) {\r\n\t\tval1 = value1;\r\n\t\tval2 = value2;\r\n\t}\r\n\tpublic: T getLessVal() {\r\n\t\tif (val1 <= val2) {\r\n\t\t\treturn val1;\r\n\t\t}\r\n\t\treturn val2;\r\n\t}\r\n};\r\nvoid main() {\r\n\tfillword<fillword> comp1(2, 3);\r\n\tfillword<fillword> comp2(2.5, 3.8);\r\n\r\n\tcout << comp1.getLessVal() << \" \";\r\n\tcout << comp2.getLessVal();\r\n}","result":"2 2.5","words":{"operators":[],"values":[],"variables_constants":[],"others":["Comparator","Comparator","int","double","string","char"]},"correct_patterns":[["Comparator","int","Comparator","double"]]},{"id":1480191482,"text":"Fill the missing words to match the output.","code":"class Laptop {\r\n\tpublic: double price;\r\n};\r\nclass Desktop {\r\n\tpublic: double price;\r\n};\r\ntemplate <typename T>\r\n\r\nvoid printSum(T arg1, T arg2) {\r\n\tcout << arg1.price + arg2.price << \" \";\r\n}\r\nvoid main() {\r\n\tLaptop l1; l1.price = 1200;\r\n\tLaptop l2; l2.price = 1300;\r\n\r\n\tDesktop d1; d1.price = 900;\r\n\tDesktop d2; d2.price = 1100;\r\n\t\r\n\tprintSum<fillword>(l1, fillword);\r\n\tprintSum<fillword>(d1, fillword);\r\n}","result":"2500 1800","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Desktop","l1","l2","l2","d1","d2","d2"]},"correct_patterns":[["Laptop","l2","Desktop","d1"]]}]},{"id":792711996,"name":"Lists And Vectors","tests":[{"id":1629703672,"question":"What's the output of the code snippet?","code":"vector<int> vect{ 10, 20, 30 };\r\ncout << vect.size();","answers":["0","2","3"],"correct_answer":"3","explanation":"The <code>size<\/code> function returns the count of vector's elements.\r\n<br><br>\r\n<code>vect<\/code> contains 3 elements thus 3 is printed."},{"id":1540386233,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tpublic: double price;\r\n\tpublic: Product(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n};\r\nint main() {\r\n\tvector<Product> vect;\r\n\t\r\n\tfor (int i = 1; i <= 3; i++) {\r\n\t\tProduct product(i * 10);\r\n\t\tvect.push_back(product);\r\n\t}\r\n\tcout << vect[1].price;\r\n}","answers":["10","20","30"],"correct_answer":"20","explanation":"After the elements are added, the vector has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>10<\/td>\r\n            <td class=\"table-primary\">20<\/td>\r\n            <td>30<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":478448966,"question":"What's the output of the code snippet?","code":"class Employee {\r\n\tpublic: string name;\r\n\tpublic: Employee(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n};\r\nclass Company {\r\n\tpublic: vector<Employee> employees;\r\n};\r\nint main() {\r\n\tCompany company;\r\n\tstring names[3] = {\"Alex\", \"John\", \"Mark\"};\r\n\r\n\tfor (int i = 0; i < 3; i++) {\r\n\t\tEmployee employee(names[i]);\r\n\t\tcompany.employees.push_back(employee);\r\n\t}\r\n\tcout << company.employees[2].name;\r\n}","answers":["Alex","John","Mark"],"correct_answer":"Mark","explanation":"After the elements are added, the vector has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Alex<\/td>\r\n            <td>John<\/td>\r\n            <td class=\"table-primary\">Mark<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1428794631,"question":"What's the output of the code snippet?","code":"class Tree {\r\n\tpublic: double height;\r\n\tpublic: Tree(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n};\r\nint main() {\r\n\tlist<Tree> trees;\r\n\tfor (int i = 1; i <= 3; i++) {\r\n\t\tTree tree(i * 100);\r\n\t\ttrees.push_back(tree);\r\n\t}\r\n\r\n\tauto iterator = trees.begin();\r\n\tTree tree = *iterator;\r\n\tcout << tree.height;\r\n}","answers":["100","200","300"],"correct_answer":"100","explanation":"The list has the following elements:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <td class=\"table-primary\">100<\/td>\r\n            <td>200<\/td>\r\n            <td>300<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\n<code>trees.begin()<\/code> points to the first element of the list - 100."},{"id":266259652,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic: int hp;\r\n\tpublic: Car(int hpVal) {\r\n\t\thp = hpVal;\r\n\t}\r\n};\r\nint main() {\r\n\tlist<Car> cars;\r\n\tfor (int i = 1; i <= 3; i++) {\r\n\t\tCar car(60 + i * 10);\r\n\t\tcars.push_back(car);\r\n\t}\r\n\r\n\tauto iterator = cars.begin();\r\n\tadvance(iterator, 1);\r\n\tadvance(iterator, 1);\r\n\tCar car = *iterator;\r\n\tcout << car.hp;\r\n}","answers":["70","80","90"],"correct_answer":"90","explanation":"The list has the following elements:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <td>70<\/td>\r\n            <td>80<\/td>\r\n            <td class=\"table-primary\">90<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\n<code>cars.begin()<\/code> points to the first element of the list - 70.\r\n<br><br>\r\nAfterwards it's moved 1 step ahead (<code>advance(iterator, 1)<\/code>) . Now it points to the next element - 80.\r\n<br><br>\r\nAfterwards it's moved 1 step ahead (<code>advance(iterator, 1)<\/code>) . Now it points to the next element - 90."}],"puzzles":[{"id":890235338,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n\tpublic: double height;\r\n\tpublic: Peak(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n};\r\nvoid main() {\r\n\tlist<Peak> peaks;\r\n\tfor (int i = 2; i <= 5; i++) {\r\n\t\tPeak obj(i * 1000);\r\n\t\tpeaks.push_back(obj);\r\n\t}\r\n\r\n\tfor(Peak peak : peaks) {\r\n\t\tif (peak.height fillword fillword) {\r\n\t\t\tcout << peak.height << \" \";\r\n\t\t}\r\n\t}\r\n}","result":"4000 5000","words":{"operators":[">=","<="],"values":["4000","3000"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","4000"]]},{"id":1874594187,"text":"Fill the missing words to match the output.","code":"class Student {\r\n\tpublic: int age;\r\n\tpublic: Student(int ageVal) {\r\n\t\tage = ageVal;\r\n\t}\r\n};\r\nvoid main() {\r\n\tvector<fillword> fillword;\r\n\tfor (int i = 10; i <= 20; i++) {\r\n\t\tStudent obj(i);\r\n\t\tstudents.push_back(obj);\r\n\t}\r\n\tfor(Student student : students) {\r\n\t\tif (student.age > fillword) {\r\n\t\t\tcout << student.age << \" \";\r\n\t\t}\r\n\t}\r\n}","result":"16 17 18 19 20","words":{"operators":[],"values":["15","16"],"variables_constants":["students","students"],"others":["Student","Student"]},"correct_patterns":[["Student","students","15"]]},{"id":543238472,"text":"Fill the missing words to match the output.","code":"class Product {\r\n\tpublic: double price;\r\n\tpublic: Product(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n};\r\nvoid main() {\r\n\tlist<Product> prods;\r\n\tfor (int i = 11; i <= 17; i++) {\r\n\t\tfillword fillword fillword;\r\n\t\tprods.push_back(obj);\r\n\t}\r\n\tfor(Product prod : prods) {\r\n\t\tif (prod.price >= 150) {\r\n\t\t\tcout << prod.price << \" \";\r\n\t\t}\r\n\t}\r\n}","result":"150 160 170","words":{"operators":[],"values":[],"variables_constants":[],"others":["Product","prods","(i)","(i * 10)","List","new","obj","object"]},"correct_patterns":[["Product","obj","(i * 10)"]]}]},{"id":1642918653,"name":"Try Catch","tests":[{"id":1082387589,"question":"What's the output of the code snippet?","code":"int main() {\r\n\tcout << \"1 \";\r\n\ttry {\r\n\t\tcout << \"2 \";\r\n\t} catch (exception ex) {\r\n\t\tcout << \"3\";\r\n\t}\r\n}","answers":["1","1 2","1 2 3"],"correct_answer":"1 2","explanation":"No exception is thrown so the catch  block is not executed and \"3\" is not printed."},{"id":959450178,"question":"What's the output of the code snippet?","code":"int main() {\r\n\ttry {\r\n\t\tcout << \"a \";\r\n\t\tthrow exception();\r\n\t} catch (exception ex) {\r\n\t\tcout << \"b\";\r\n\t}\r\n}","answers":["a","b","a b"],"correct_answer":"a b","explanation":"Since exception is thrown the catch block is executed thus \"b\" is printed."},{"id":1944398851,"question":"What's the output of the code snippet?","code":"int main() {\r\n\ttry {\r\n\t\tcout << \"1 \";\r\n\t\tthrow exception(\"2\");\r\n\t\tcout << \"3 \";\r\n\t} catch (exception ex) {\r\n\t\tcout << ex.what() << \" \";\r\n\t\tcout << \"4\";\r\n\t}\r\n}","answers":["1 4","1 2 4","1 2 3 4"],"correct_answer":"1 2 4","explanation":"Since exception is thrown the catch block executes.\r\n<br><br>\r\n<code>ex.what()<\/code> is the message that's passed to the thrown exception - \"2\".\r\n<br><br>\r\n\"3\" is not printed because the try block execution ends when exception is thrown."},{"id":881479616,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n\tprivate: double price;\r\n\tpublic: double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\tpublic: void setPrice(double num) {\r\n\t\tif (num <= 0) {\r\n\t\t\tthrow exception(\"Invalid Price\");\r\n\t\t}\r\n\t}\r\n};\r\nint main() {\r\n\ttry {\r\n\t\tTablet tablet;\r\n\t\ttablet.setPrice(-1);\r\n\t\tcout << tablet.getPrice();\r\n\t} catch (exception ex) {\r\n\t\tcout << ex.what();\r\n\t}\r\n\tcout << \" After\";\r\n}","answers":["After","Invalid Price","Invalid Price After"],"correct_answer":"Invalid Price After","explanation":"The passed price (-1) meets the condition <code>num <= 0<\/code> thus exception is thrown and the catch block executes.\r\n<br><br>\r\n<code>ex.what()<\/code> is the message that's passed to the thrown exception - \"Invalid Price\"."},{"id":1832873857,"question":"What's the output of the code snippet?","code":"int main() {\r\n\ttry {\r\n\t\tcout << \"1 \";\r\n\t\tthrow exception();\r\n\t\tcout << \"2 \";\r\n\t} catch (exception ex) {\r\n\t\tcout << \"3 \";\r\n\t}\r\n\tcout << \"4\";\r\n}","answers":["1 3 4","1 2 3 4","1 2"],"correct_answer":"1 3 4","explanation":"Since exception is thrown the catch block executes thus \"3\" is printed.\r\n<br><br>\r\n\"2\" is not printed because the try block execution ends when exception is thrown."}],"puzzles":[{"id":420890889,"text":"Fill the missing words to match the output.","code":"try {\r\n\tthrow exception(fillword);\r\n}\r\ncatch (exception ex) {\r\n\tcout << ex.what();\r\n\tcout << fillword;\r\n}\r\ncout << fillword;","result":"A B C","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"A \"","\"B \"","\"C\"","\"D \""]},"correct_patterns":[["\"A \"","\"B \"","\"C\""]]},{"id":1404790998,"text":"Fill the missing words to match the output.","code":"try {\r\n\tcout << fillword;\r\n\tthrow exception(fillword);\r\n}\r\ncatch (exception ex) {\r\n\tcout << fillword;\r\n\tcout << fillword;\r\n}","result":"1 2 3","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"1 \"","\"2 \"","\"3 \"","ex.what()"]},"correct_patterns":[["\"1 \"","\"2 \"","ex.what()","\"3 \""]]},{"id":342853783,"text":"Fill the missing words to match the output.","code":"class Calculator {\r\n    public: double divide(double a, double b) {\r\n        if (b == 0) {\r\n            throw exception(\"Cannot divide by zero\");        \r\n        }\r\n        return a \/ b;\r\n    }\r\n};\r\nvoid main() {\r\n\ttry {\r\n\t\tCalculator calc;\r\n\t\tcalc.divide(fillword, fillword);\r\n\t}\r\n\tcatch (exception ex) {\r\n\t\tcout << fillword;\r\n\t}\r\n}","result":"Cannot divide by zero","words":{"operators":[],"values":["0","3"],"variables_constants":[],"others":["ex.what()","ex"]},"correct_patterns":[["3","0","ex.what()"]]}]}]},"projects":[{"id":1239363699,"name":"Rectangle Calculator","description":"<p>Create a rectangle calculator on your desktop \/ laptop.<\/p>\r\n\r\n<p>The program must read two parameters:<\/p>\r\n<ul>\r\n    <li><b>rectangle's width<\/b> - positive floating point number.<\/li>\r\n    <li><b>rectangle's height<\/b> - another positive floating point number.<\/li>\r\n<\/ul>\r\n\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula: 2 x (width + height).<\/li>\r\n    <li><b>Area<\/b>. It's calculated via the formula: width x height.<\/li>\r\n    <li ><b>Diagonal<\/b>. It's calculated via the formula:<img src=\"imgs\/projects\/diagonal-formula.png\" style=\"\r\n    height: 45px;\r\n    display: block;\"><\/li>\r\n<\/ul>\r\n\r\n<p>Hint: You may use the function sqrt to calculate square root and pow to calculate power for the diagonal formula.<\/p>\r\n\r\n<p>Test your code using the inputs and outputs specified below:<\/p>","inputs":["3<br>4","2.2<br>3.5","6<br>8"],"outputs":["Perimeter = 14 <br> Area = 12 <br> Diagonal = 5","Perimeter = 11.4 <br> Area = 7.7 <br> Diagonal = 4.13401","Perimeter = 28 <br> Area = 48 <br> Diagonal = 10"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read user's input and cast it to double:\r\n\tdouble width, height;\r\n\tcin >> width >> height;\r\n\r\n\t\/\/ Basic calculations:\r\n\tdouble perimeter = 2 * (width + height);\r\n\tdouble area = width * height;\r\n\r\n\t\/\/ Use sqrt to calculate square root and pow to calculate power.\r\n\tdouble diagonal = sqrt(pow(width, 2) + pow(height, 2));\r\n\r\n\t\/\/ Print calculations:\r\n\tcout << \"Perimeter = \" << perimeter << endl;\r\n\tcout << \"Area = \" << area << endl;\r\n\tcout << \"Diagonal = \" << diagonal << endl;\r\n\r\n\treturn 0;\r\n}","stars":1,"requirements":["Calculations"]},{"id":42750000,"name":"Digitized Time","description":"<p>Many timers show time in the format mm:ss (minutes, seconds) but keep track only on the seconds. <p>\r\n<p>Write a program on your desktop \/ laptop which reads a seconds parameter (positive integer that's between 0 and 3600) and prints the time in the format mm:ss.<\/p>\r\n\r\n<p>For example 130 seconds is equivalent to 2 minute and 10 seconds (2 * 60 + 10 = 130) which is formated as \"02:10\".<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["30","120","65","695","1","3599"],"outputs":["00:30","02:00","01:05","11:35","00:01","59:59"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string>  \/\/ So strings can be used\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read input.\r\n\tint totalSeconds;\r\n\tcin >> totalSeconds;\r\n\r\n\tint minutes = totalSeconds \/ 60; \/\/ If totalSeconds \/ 60 has value of 2.90 it's parsed to int as 2.  \r\n\tint seconds = totalSeconds - minutes * 60; \/\/ Extract seconds from minutes and total seconds.\r\n\r\n\tif (minutes < 10)\r\n\t{\r\n\t\tcout << \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n\t}\r\n\r\n\tcout << minutes << \":\";\r\n\r\n\tif (seconds < 10)\r\n\t{\r\n\t\tcout << \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n\t}\r\n\tcout << seconds;\r\n\r\n\treturn 0;\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":2066838513,"name":"Price Management","description":"<p>Penny has groceries stores in multiple Italian cities. Some of the cities are more expensive than others so the price is different for every city.<\/p>\r\n<p>Help Penny to manage her groceries prices by creating a program on your desktop \/ laptop which accepts two arguments:<\/p>\r\n<ul>\r\n     <li> <b>City<\/b> - string which has one of three values - \"Milan\", \"Rome\", \"Florence\".<\/li>\r\n     <li> <b>Fruit<\/b> - string which has one of three values - \"Orange\", \"Apple\", \"Cherry\".<\/li>\r\n<\/ul>\r\n<p>The program must print the cost of the fruit per kilogram in the specified city.<\/p>\r\n\r\n<p>The prices for fruits per kilogram are displayed in the following table:<\/p>\r\n\r\n<table>\r\n    <thead>\r\n           <tr>\r\n                 <td><\/td>\r\n                 <td>Milan<\/td>\r\n                 <td>Rome<\/td>\r\n                 <td>Florence<\/td>\r\n           <\/tr>\r\n    <\/thead>\r\n    <tbody>\r\n           <tr>\r\n                  <td>Orange<\/td>\r\n                  <td>2.56<\/td>\r\n                  <td>3.20<\/td>\r\n                  <td>4.23<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Apple<\/td>\r\n                  <td>2.86<\/td>\r\n                  <td>3.60<\/td>\r\n                  <td>4.56<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Cherry<\/td>\r\n                  <td>2.00<\/td>\r\n                  <td>2.80<\/td>\r\n                  <td>3.64<\/td>\r\n           <\/tr>\r\n  <\/tbody>\r\n<\/table>\r\n\r\n<p>For example the price per kilogram for orange in Rome is 3.20 and the price per kilogram for cherry in Florence is 3.64.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["Milan<br>Orange","Florence<br>Orange","Florence<br>Cherry","Rome<br>Cherry"],"outputs":["2.56","4.23","3.64","2.80"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string>  \/\/ So strings can be used\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read user's input:\r\n\tstring city, fruit;\r\n\tcin >> city >> fruit;\r\n\r\n\tif (city == \"Milan\")\r\n\t{\r\n\t\tif (fruit == \"Orange\")\r\n\t\t{\r\n\t\t\tcout << \"2.56\";\r\n\t\t}\r\n\t\telse if (fruit == \"Apple\")\r\n\t\t{\r\n\t\t\tcout << \"2.86\";\r\n\t\t}\r\n\t\telse if (fruit == \"Cherry\")\r\n\t\t{\r\n\t\t\tcout << \"2.00\";\r\n\t\t}\r\n\t}\r\n\telse if (city == \"Rome\")\r\n\t{\r\n\t\tif (fruit == \"Orange\")\r\n\t\t{\r\n\t\t\tcout << \"3.20\";\r\n\t\t}\r\n\t\telse if (fruit == \"Apple\")\r\n\t\t{\r\n\t\t\tcout << \"3.60\";\r\n\t\t}\r\n\t\telse if (fruit == \"Cherry\")\r\n\t\t{\r\n\t\t\tcout << \"2.80\";\r\n\t\t}\r\n\t}\r\n\telse if (city == \"Florence\")\r\n\t{\r\n\t\tif (fruit == \"Orange\")\r\n\t\t{\r\n\t\t\tcout << \"4.23\";\r\n\t\t}\r\n\t\telse if (fruit == \"Apple\")\r\n\t\t{\r\n\t\t\tcout << \"4.56\";\r\n\t\t}\r\n\t\telse if (fruit == \"Cherry\")\r\n\t\t{\r\n\t\t\tcout << \"3.64\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":2,"requirements":["Condition Statements"]},{"id":1038455742,"name":"Currency Converter","description":"<p>Write a currency converter on your desktop \/ laptop which accepts 3 arguments:<\/p>\r\n<ul>\r\n    <li><b>Amount<\/b> - positive floating point number<\/li>\r\n    <li><b>Input currency<\/b> - string representing currency<\/li>\r\n    <li><b>Output currency<\/b> - another string representing currency<\/li>\r\n<\/ul>\r\n\r\n<p>The supported currencies are: USD, EUR and GBP. For the sake of simplicity it's assumed that their exchange rate is always the following:<\/p>\r\n\r\n<table class=\"table\">\r\n<tbody>\r\n<tr>\r\n\t<td rowspan=\"2\">1 USD<\/td>\r\n\t<td>0.84 EUR<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>&nbsp;0.72&nbsp;GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 EUR<\/td>\r\n\t<td>1.18 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>0.86 GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 GBP<\/td>\r\n\t<td>1.38 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>1.16 EUR<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>For example 2 EUR are 2.36 USD (2 * 1.18 = 2.36).<\/p>\r\n<p>Also the output needs to be rounded up to two digits after decimal point.<\/p>\r\n\r\n<p>Make sure it's printed \"Invalid Input\" if an unsupported currency is entered.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["2<br>EUR<br>GBP","1.12<br>USD<br>EUR","2.54<br>GBP<br>EUR","3.56<br>ABC<br>EUR","3.56<br>USD<br>ABC"],"outputs":["1.72","0.94","2.95","Invalid input.","Invalid input."],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string>  \/\/ So strings can be used\r\n#include <iomanip> \/\/ Used for showing 2 digits after decimal point via setprecision method.\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read user's input:\r\n\tdouble amount;\r\n\tstring currencyFrom, currencyTo;\r\n\r\n\tcin >> amount >> currencyFrom >> currencyTo;\r\n\r\n\tdouble multiplier = 0;\r\n\r\n\tif (currencyFrom == \"USD\")\r\n\t{\r\n\t\tif (currencyTo == \"EUR\")\r\n\t\t{\r\n\t\t\tmultiplier = 0.84;\r\n\t\t}\r\n\t\telse if (currencyTo == \"GBP\")\r\n\t\t{\r\n\t\t\tmultiplier = 0.72;\r\n\t\t}\r\n\t}\r\n\telse if (currencyFrom == \"EUR\")\r\n\t{\r\n\t\tif (currencyTo == \"USD\")\r\n\t\t{\r\n\t\t\tmultiplier = 1.18;\r\n\t\t}\r\n\t\telse if (currencyTo == \"GBP\")\r\n\t\t{\r\n\t\t\tmultiplier = 0.86;\r\n\t\t}\r\n\t}\r\n\telse if (currencyFrom == \"GBP\")\r\n\t{\r\n\t\tif (currencyTo == \"USD\")\r\n\t\t{\r\n\t\t\tmultiplier = 1.38;\r\n\t\t}\r\n\t\telse if (currencyTo == \"EUR\")\r\n\t\t{\r\n\t\t\tmultiplier = 1.16;\r\n\t\t}\r\n\t}\r\n\r\n\tif (multiplier == 0)\r\n\t{\r\n\t\t\/\/ Neither of the checks has modified it's value.\r\n\t\t\/\/ So inform user about invalid input.\r\n\t\tcout << \"Invalid input.\" << endl;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t\/\/ Valid Input\r\n\t\t\/\/ Calculate and round output up to two digits after decimal point.\r\n\r\n\t\tdouble output = amount * multiplier;\r\n\t\tcout << setprecision(2) << fixed; \/\/ So 2 digits after decimal points are printed.\r\n\t\tcout << output;\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":1988801407,"name":"Multiplication Table","description":"<p>Write a program on your desktop \/ laptop that prints multiplication table.<\/p>\r\n<p>The program must accept 1 argument:<\/p>\r\n<ul>\r\n    <li><b>number<\/b> - positive integer.<\/li>\r\n<\/ul>\r\n<p>The multiplication table must contain information about the multiplications for the input number and the numbers from 1 to 10.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["3","5","0"],"outputs":["3 x 3 = 3 <br> 3 x 2 = 6 <br> 3 x 3 = 9 <br> 3 x 4 = 12 <br> 3 x 5 = 15 <br> 3 x 6 = 18 <br> 3 x 7 = 21 <br> 3 x 8 = 24 <br> 3 x 9 = 27 <br> 3 x 10 = 30","5 x 1 = 5 <br> 5 x 2 = 10 <br> 5 x 3 = 15 <br> 5 x 4 = 20 <br> 5 x 5 = 25 <br> 5 x 6 = 30 <br> 5 x 7 = 35 <br> 5 x 8 = 40 <br> 5 x 9 = 45 <br> 5 x 10 = 50","0 x 1 = 0 <br> 0 x 2 = 0 <br> 0 x 3 = 0 <br> 0 x 4 = 0 <br> 0 x 5 = 0 <br> 0 x 6 = 0 <br> 0 x 7 = 0 <br> 0 x 8 = 0 <br> 0 x 9 = 0 <br> 0 x 10 = 0"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\tint number;\r\n\tcin >> number;\r\n\r\n\tfor (int i = 1; i <= 10; i++)\r\n\t{\r\n\t\tcout << number << \" x \" << i << \" = \" << number * i << endl;\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":2,"requirements":["Calculations","Loops"]},{"id":792711996,"name":"Play Button","description":"<p>Write a program on your desktop \/ laptop that prints a play button made of stars.<\/p>\r\n\r\n<p>The program must accept one argument:<\/p>\r\n<ul>\r\n    <li><b>rows<\/b> - positive integer<\/li>\r\n<\/ul>\r\n<p>If the input number is even (like 0, 2, 4, 6 etc...) or negative print the message \"Invalid input.\".<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: You don't have to write nested loops if you don't want to. You can repeat a string like this: <br>\r\n<code>string(4, '*');<\/code> which creates the following string: \"****\".<\/p>","inputs":["1","3","5","7","2","0","-1"],"outputs":["<div style=\"letter-spacing: 5px;\">*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>****<br>***<br>**<br>*<\/div>","Invalid input.","Invalid input.","Invalid input."],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read user's input:\r\n\tint number;\r\n\tcin >> number;\r\n\r\n\tif (number % 2 == 0 || number <= 0)\r\n\t{\r\n\t\t\/\/ Inform user that input is negative.\r\n\t\tcout << \"Invalid input.\";\r\n\r\n\t\treturn 0; \/\/ Terminate the program.\r\n\t}\r\n\r\n\t\/\/ Print the upper part:\r\n\tfor (int i = 1; i <= number \/ 2; i++)\r\n\t{\r\n\t\t\/\/ repeat '*' i times.\r\n\t\t\/\/ Example: string(3, '*') would create the string \"***\".\r\n\t\tcout << string(i, '*') << endl;\r\n\t}\r\n\r\n\t\/\/ Print the middle row:\r\n\tcout << string(number \/ 2 + 1, '*') << endl;\r\n\r\n\t\/\/ Print the below part:\r\n\tfor (int i = number \/ 2; i >= 1; i--)\r\n\t{\r\n\t\tcout << string(i, '*') << endl;\r\n\t}\r\n}","stars":3,"requirements":["Loops"]},{"id":1642918653,"name":"Digits Counter","description":"<p>Write a program on your desktop \/ laptop which prints the occurrences of digits in input number.<\/p>\r\n<p>The program must read a positive integer.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details:<\/p>","inputs":["112266863","15968929","01230"],"outputs":["0 -> 0 <br> 1 -> 2 <br> 2 -> 2 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 3 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 0","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 0 <br> 4 -> 0 <br> 5 -> 1 <br> 6 -> 1 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 3","0 -> 1 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 0 <br> 7 -> 0 <br> 8 -> 0 <br> 9 -> 0"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read user's input. Integer parsing removes the leading 0s.\r\n\t\/\/ For example 00123 is parsed as 123.\r\n\tint number;\r\n\tcin >> number;\r\n\r\n\tstring numberToString = to_string(number); \/\/ Convert int to string.\r\n\r\n\tfor (int i = 0; i <= 9; i++) \/\/ For numbers in the range [0, 9].\r\n\t{\r\n\t\tint occurrences = 0;\r\n\r\n\t\tfor (char digit : numberToString) \/\/ For each digit of the input number.\r\n\t\t{\r\n\t\t\t\/\/ Check if i is equal to the ascii code of the digit symbol.\r\n\t\t\tif (i == int(digit) - 48)\r\n\t\t\t{\r\n\t\t\t\toccurrences++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcout << i << \" -> \" << occurrences << endl;\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":3,"requirements":["Loops"]},{"id":1519456954,"name":"Chess Tournament","description":"<p>Write a program on your desktop \/ laptop which prints data about the ages of the participant in chess tournament.<\/p>\r\n<p>The program should read the following parameters:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - positive integer representing the count of the participant.<\/li>\r\n    <li><b>ages<\/b> - positive integers, each typed on a new line, representing the ages of the participant.<\/li>\r\n<\/ul>\r\n\r\nThe output of the program must provide data about:\r\n<ul>\r\n    <li><b>Minimum age<\/b> - the age of the youngest participant.<\/li>\r\n    <li><b>Maximum age<\/b> - the age of the oldest participant.<\/li>\r\n    <li><b>Average age<\/b><\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: you may use vector for storing the participants ages.<\/p>","inputs":["3<br> 19<br> 21<br>20","2<br>18<br>19","3<br>15<br>15<br>18"],"outputs":["Min: 19 <br> Max: 21 <br> Average: 20","Min: 18 <br> Max: 19 <br> Average: 18","Min: 15 <br> Max: 18 <br> Average: 16"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n#include <vector> \/\/ So vector can be used.\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\/\/ Read user's input.\r\n\tint count;\r\n\tcin >> count;\r\n\r\n\t\/\/ Create array and set values to it's elements:\r\n\tvector<int> ages;\r\n\r\n\tfor (int i = 0; i < count; i++)\r\n\t{\r\n\t\tint age;\r\n\t\tcin >> age;\r\n\r\n\t\t\/\/ Add item to the vector:\r\n\t\tages.push_back(age);\r\n\t}\r\n\r\n\t\/\/ Loop array and find output data:\r\n\tint minAge = ages[0];\r\n\tint maxAge = ages[0];\r\n\tint sum = 0; \/\/ Used to calculate average age.\r\n\r\n\tfor (int age : ages)\r\n\t{\r\n\t\tif (age < minAge)\r\n\t\t{\r\n\t\t\tminAge = age;\r\n\t\t}\r\n\r\n\t\tif (age > maxAge)\r\n\t\t{\r\n\t\t\tmaxAge = age;\r\n\t\t}\r\n\r\n\t\tsum += age;\r\n\t}\r\n\r\n\tint averageAge = sum \/ count;\r\n\r\n\tcout << \"Min: \" << minAge << endl;\r\n\tcout << \"Max: \" << maxAge << endl;\r\n\tcout << \"Average: \" << averageAge << endl;\r\n\r\n\treturn 0;\r\n}","stars":3,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":323367547,"name":"Gaming Shop","description":"<p>Steve has a gaming shop and needs your help with inserting games and recording sells.<\/p>\r\n\r\n<p>Write a program on your desktop \/ laptop which reads commands.<\/p>\r\n<p>There are 3 types of commands:<\/p>\r\n<ul>\r\n    <li>\r\n        <b>Product Insertion<\/b> - it's in the format: <br>\r\n          \"insert-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It creates new game with the specified quantity or increases the quantity if the game is already added.\r\n    <\/li>\r\n    <li>\r\n        <b>Product Sell<\/b> - it's in the format: <br>\r\n          \"sell-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It decreases the quantity of the specified game. You can assume that the sold quantity will always be less or equal to the available one.\r\n    <\/li>\r\n    <li>\r\n        <b>Terminate program<\/b> - if a command with value \"end\" is entered, then a report of available games and their quantity is printed. Afterwards the program is terminated.\r\n    <\/li>\r\n<\/ul> \r\n\r\n<p>Notice that sold out games (with quantity of 0) must not be included in the end report. Also a game name cannot contain spaces. Instead a dash (-) is used.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: since game names are considered unique, the best practice would be to use map for storing data with key - the game name and value - it's quantity.<\/p>","inputs":["insert Minecraft 5<br>insert Rocket-League- 0<br>end","insert Counter-Strike 10<br>sell Counter-Strike 3<br>end","insert Fortnite 10<br>insert pubg 10<br>sell Fortnite 10<br>sell pubg 7<br>end"],"outputs":["Minecraft: 5<br> Rocket-League: 10","Counter-Strike: 7","pubg: 3"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n#include <map> \/\/ So maps can be used\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\tmap<string, int> gamesData;\r\n\r\n\twhile (true) \/\/ Infinite loop which repeats until it's forcefully stopped via the break keyword.\r\n\t{\r\n\t\tstring commandName;\r\n\t\tcin >> commandName;\r\n\r\n\t\tif (commandName == \"end\")\r\n\t\t{\r\n\t\t\tbreak; \/\/ Forcefully terminate the loop and proceed with the report.\r\n\t\t}\r\n\r\n\t\tstring gameName;\r\n\t\tcin >> gameName;\r\n\r\n\t\tint quantity;\r\n\t\tcin >> quantity;\r\n\r\n\t\tif (commandName == \"insert\")\r\n\t\t{\r\n\t\t\t\/\/ The insert command is used for:\r\n\t\t\t\/\/ - Adding new game to the store with the specified quantity.\r\n\t\t\t\/\/ - Increasing quantity to already added game.\r\n\t\t\t\/\/ Both cases need to be handled separately.\r\n\r\n\t\t\tif (gamesData[gameName])\r\n\t\t\t{\r\n\t\t\t\t\/\/ Increase quantity to already added game\r\n\t\t\t\tgamesData[gameName] += quantity;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t\/\/ Adding new game to the store with the specified quantity.\r\n\t\t\t\tgamesData[gameName] = quantity;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (commandName == \"sell\") \/\/ Handle selling:\r\n\t\t{\r\n\t\t\t\/\/ Decrease quantity when game is sold.\r\n\t\t\tgamesData[gameName] -= quantity;\r\n\r\n\t\t\tif (gamesData[gameName] == 0)\r\n\t\t\t{\r\n\t\t\t\t\/\/ Don't store data for games that have been sold out.\r\n\t\t\t\tgamesData.erase(gameName);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t\/\/ Print report:\r\n\tmap<string, int>::iterator itr;\r\n\r\n\tfor (itr = gamesData.begin(); itr != gamesData.end(); ++itr)\r\n\t{\r\n\t\t\/\/ first represents item's key and second - item's value.\r\n\t\tcout << itr->first << \": \" << itr->second << endl;\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":1441485368,"name":"Tic Tac Toe","description":"<p>Write a program on your desktop \/ laptop which checks who wins on in tic tac toe match.<\/p>\r\n<p>If you don't know how to play tic tac toe, you can learn the rules from\r\n<a href=\"https:\/\/www.wikihow.com\/Play-Tic-Tac-Toe\">here<\/a>.<\/p>\r\n\r\n<p>The input parameters of the program are 3. Each represents a line of the tic tac toe board.<\/p>\r\n<p>The program prints one of the following:<\/p>\r\n<ul>\r\n    <li><b>\"X wins\"<\/b> if X wins<\/li>\r\n    <li><b>\"O wins\"<\/b> if O wins<\/li>\r\n    <li><b>\"Tie\"<\/b> if neither of the players wins.<\/li>\r\n<\/ul>\r\n<p>You can assume that the input will always represent a legit tic tac toe endgame so you don't have to validate it.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: the best data structure that represents a tic tac toe board would be matrix with 3 rows and 3 columns.<\/p>","inputs":["ooo<br>xx-<br>---","xo-<br>oxo<br>x-x","xox<br>oox<br>xxo"],"outputs":["O wins","X wins","Tie"],"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n#include <map> \/\/ So maps can be used\r\n\r\nusing namespace std;\r\n\r\n\/\/ Define function prototype so the function can be accessed in main.\r\nbool winsTicTacToe(char board[3][3], char symbol);\r\n\r\nint main()\r\n{\r\n\tchar board[3][3];\r\n\r\n\tfor (int i = 0; i < 3; i++)\r\n\t{\r\n\t\tstring line;\r\n\t\tcin >> line;\r\n\r\n\t\tboard[i][0] = line[0];\r\n\t\tboard[i][1] = line[1];\r\n\t\tboard[i][2] = line[2];\r\n\t}\r\n\r\n\tif (winsTicTacToe(board, 'x'))\r\n\t{\r\n\t\tcout << \"X wins\" << endl;\r\n\t}\r\n\telse if (winsTicTacToe(board, 'o'))\r\n\t{\r\n\t\tcout << \"O wins\" << endl;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcout << \"Tie\";\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nbool winsTicTacToe(char board[3][3], char symbol)\r\n{\r\n\tfor (int i = 0; i < 3; i++)\r\n\t{\r\n\t\tif ((board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol) ||  \/\/ If line is filled only with x or o.\r\n\t\t\tboard[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol) \/\/ If column is filled only with x or o.\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t\/\/ Check if one of the diagonals is filled only with x or o\r\n\tif (board[1][1] == symbol &&\r\n\t\t((board[0][0] == symbol && board[2][2] == symbol) ||\r\n\t\t(board[0][2] == symbol && board[2][0] == symbol))\r\n\t\t)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}","stars":4,"requirements":["Condition Statements","Data Structures","Functions"]},{"id":244874745,"name":"Car Dealership","description":"<p>Write a program on your desktop \/ laptop which reads data for cars and print data only for those which make is the same as the specified one.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of cars which will be entered.<\/li>\r\n    <li><b>car's data<\/b> - the data for a single car in the format:<br>\r\n&lt;make&gt; &lt;model&gt; &lt;hp&gt;  &lt;price&gt; .<\/li>\r\n    <li><b>filter make<\/b> - string.<\/li>\r\n<\/ul>\r\n<p>The data for each car is entered on a separate line.<\/p>\r\n<p>The car dealership offers a 10 % discount for people who've bought a car from the same warehouse in the last 6 years. That discount must be included in the output. Also the prices of the cars must be printed as numbers with 2 digits after the decimal point.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Car<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to calculate discount<\/li>\r\n    <li>&lt;&lt; operator overloading <\/li>\r\n    <li>Collection for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000<br>Volkswagen<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000.00 (22500 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Toyotta Corolla 120 23000<br>Ford Fiesta 80 18000<br>Toyotta Aygo 75 16000<br>Toyotta<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Toyotta Corolla 120 23000.00 (20700.00 for loyal customers)<br>Toyotta Aygo 75 16000.00 (14400.00 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n#include <iomanip> \/\/ Used for showing 2 digits after decimal point via setprecision method.\r\n#include <vector> \/\/ So vectors can be used.\r\n\r\nusing namespace std;\r\n\r\nclass Car\r\n{\r\n\t\/\/ private members characterizing the class:\r\n\tprivate: string make;\r\n\tprivate: string model;\r\n\tprivate: int hp;\r\n\tprivate: double price;\r\n\r\n\t\/\/ public functions for access and modification:\r\n\tpublic: string getMake()\r\n\t{\r\n\t\treturn make;\r\n\t}\r\n\r\n\tpublic: void setMake(string makeVal)\r\n\t{\r\n\t\tmake = makeVal;\r\n\t}\r\n\r\n\tpublic: string getModel()\r\n\t{\r\n\t\treturn model;\r\n\t}\r\n\r\n\tpublic: void setModel(string modelVal)\r\n\t{\r\n\t\tmodel = modelVal;\r\n\t}\r\n\r\n\tpublic: int getHp()\r\n\t{\r\n\t\treturn hp;\r\n\t}\r\n\r\n\tpublic: void setHp(int hpVal)\r\n\t{\r\n\t\thp = hpVal;\r\n\t}\r\n\r\n\tpublic: double getPrice()\r\n\t{\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic: void setPrice(double priceVal)\r\n\t{\r\n\t\tprice = priceVal;\r\n\t}\r\n\r\n\t\/\/ Parameterized constructor for creating objects:\r\n\tpublic: Car(string make, string model, int hp, double price)\r\n\t{\r\n\t\tsetMake(make);\r\n\t\tsetModel(model);\r\n\t\tsetHp(hp);\r\n\t\tsetPrice(price);\r\n\t}\r\n\r\n\tpublic: double calculateDiscount()\r\n\t{\r\n\t\t\/\/ Calculate price with 10 % discount (90 % of the ordinary price):\r\n\t\treturn price * 9 \/ 10;\r\n\t}\r\n};\r\n\r\n\/\/ Overload the << operator. It's called when car object is printed via << (like cout << obj;).\r\nostream &operator<<(std::ostream& stream, Car car) {\r\n\r\n\tstream << car.getMake() << \" \" << car.getModel() << \" \" << car.getHp() << + \" \" \r\n\t\t<< car.getPrice() << \" (\" << car.calculateDiscount() << \" for loyal customers)\" << endl;\r\n\r\n\treturn stream;\r\n}\r\n\r\nint main()\r\n{\r\n\tcout << setprecision(2) << fixed; \/\/ So 2 digits after decimal points are printed.\r\n\r\n\tint count;\r\n\tcin >> count;\r\n\r\n\tvector<Car> cars;\r\n\r\n\tfor (int i = 0; i < count; i++)\r\n\t{\r\n\t\tstring make;\r\n\t\tcin >> make;\r\n\r\n\t\tstring model;\r\n\t\tcin >> model;\r\n\r\n\t\tint hp;\r\n\t\tcin >> hp;\r\n\r\n\t\tdouble price;\r\n\t\tcin >> price;\r\n\r\n\t\t\/\/ Create object based on the input data and add it to the vector:\r\n\t\tCar obj(make, model, hp, price);\r\n\t\tcars.push_back(obj);\r\n\t}\r\n\r\n\tstring filterMake;\r\n\tcin >> filterMake;\r\n\r\n\tfor(Car car : cars)\r\n\t{\r\n\t\t\/\/ Filter cars by make:\r\n\t\tif (car.getMake() == filterMake)\r\n\t\t{\r\n\t\t\t\/\/ Calls the &operator<< function.\r\n\t\t\tcout << car;\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures","Functions","OOP"]},{"id":1196203398,"name":"Students Scores","description":"<p>Write a program on your desktop \/ laptop which reads data for students scores on exam and prints it back sorted.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of student's scores which will be entered.<\/li>\r\n    <li><b>exam data<\/b> - the data for a single exam score in the format:<br>\r\n&lt;student's first name&gt; &lt;student's last name&gt; &lt;exam score&gt; .<\/li>\r\n<\/ul>\r\n<p>The data for each student score is entered on a separate line.<\/p>\r\n<p>The output must include grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Student<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to get grade<\/li>\r\n    <li> &lt;&lt; operator overloading <\/li>\r\n    <li>Collection for storing class objects<\/li>\r\n     <li>Sorting the collection<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>John Smith 81<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>John Smith 81 B<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>2<br>Alex  Ethan 77<br> Joe Hawke 82<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Joe Hawke 82 B<br>Alex  Ethan 77 C<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Olivia Smith 88<br> Jack DiIlan 88 <br> Gabriel Doe 93<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Gabriel Doe 93 A <br> Olivia Smith 88 B <br> Jack DiIlan 88 B<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"#include <iostream> \/\/ So cin and cout can be used.\r\n#include <string> \/\/ So string can be used.\r\n#include <vector> \/\/ So vectors can be used.\r\n#include <algorithm> \/\/ So vector can be sorted.\r\n\r\nusing namespace std;\r\n\r\nclass Student\r\n{\r\n\t\/\/ private members characterizing the class:\r\n\tprivate: string firstName;\r\n\tprivate: string lastName;\r\n\tprivate: int examScore;\r\n\r\n\t\/\/ public functions for access and modification:\r\n\tpublic: string getFirstName()\r\n\t{\r\n\t\treturn firstName;\r\n\t}\r\n\r\n\tpublic: void setFirstName(string firstNameVal)\r\n\t{\r\n\t\tfirstName = firstNameVal;\r\n\t}\r\n\r\n\tpublic: string getLastName()\r\n\t{\r\n\t\treturn lastName;\r\n\t}\r\n\r\n\tpublic: void setLastName(string lastNameVal)\r\n\t{\r\n\t\tlastName = lastNameVal;\r\n\t}\r\n\r\n\tpublic: int getExamScore()\r\n\t{\r\n\t\treturn examScore;\r\n\t}\r\n\r\n\tpublic: void setExamScore(int examScoreVal)\r\n\t{\r\n\t\texamScore = examScoreVal;\r\n\t}\r\n\r\n\tpublic: char getGrade()\r\n\t{\r\n\t\t\/\/ Find out grade based on points:\r\n\t\tif (examScore < 50)\r\n\t\t\treturn 'F';\r\n\t\tif (examScore < 60)\r\n\t\t\treturn 'E';\r\n\t\tif (examScore < 70)\r\n\t\t\treturn 'D';\r\n\t\tif (examScore < 80)\r\n\t\t\treturn 'C';\r\n\t\tif (examScore < 90)\r\n\t\t\treturn 'B';\r\n\r\n\t\treturn 'A';\r\n\t}\r\n\r\n\t\/\/ Parameterized constructor for creating objects:\r\n\tpublic: Student(string firstName, string lastName, int examScore)\r\n\t{\r\n\t\tsetFirstName(firstName);\r\n\t\tsetLastName(lastName);\r\n\t\tsetExamScore(examScore);\r\n\t}\r\n};\r\n\r\n\/\/ Overload the << operator. It's called when car object is printed via << (like cout << obj;).\r\nostream &operator<<(std::ostream& stream, Student student) {\r\n\r\n\tstream << student.getFirstName() << \" \" << student.getLastName() << \" \"\r\n\t\t<< student.getExamScore() << \" \" << student.getGrade() << endl;\r\n\r\n\treturn stream;\r\n}\r\n\r\nint main()\r\n{\r\n\tint count;\r\n\tcin >> count;\r\n\r\n\tvector<Student> students;\r\n\r\n\tfor (int i = 0; i < count; i++)\r\n\t{\r\n\t\tstring firstName;\r\n\t\tcin >> firstName;\r\n\r\n\t\tstring lastName;\r\n\t\tcin >> lastName;\r\n\r\n\t\tint examScores;\r\n\t\tcin >> examScores;\r\n\r\n\t\t\/\/ Create object based on the input data and add it to list:\r\n\t\tStudent obj(firstName, lastName, examScores);\r\n\t\tstudents.push_back(obj);\r\n\t}\r\n\r\n\t\/\/ Sort vector by exam scores:\r\n\tsort(students.begin(),\r\n\t\tstudents.end(),\r\n\t\t[](Student& lhs, Student& rhs)\r\n\t{\r\n\t\treturn lhs.getExamScore() > rhs.getExamScore();\r\n\t});\r\n\r\n\tfor(Student student : students)\r\n\t{\r\n\t\t\/\/ Calls the &operator<< function.\r\n\t\tcout << student;\r\n\t}\r\n\r\n\treturn 0;\r\n}","stars":5,"requirements":["Condition Statements","Loops","Data Structures","Functions","OOP"]}],"challenges":[]},"C#":{"urlName":"c-sharp","mode":"text\/x-csharp","tutorials":{"Basics":[{"id":1519456954,"name":"Data Types","tests":[{"id":2049623259,"question":"Which type is suitable for describing car's model?","code":null,"answers":["int","string","boolean"],"correct_answer":"string","explanation":"<ul>\r\n<li>string is suitable for describing a sequence of symbols.<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1021306008,"question":"Which type is suitable for describing person's age?","code":null,"answers":["string","double","int"],"correct_answer":"int","explanation":"<ul>\r\n<li>int - whole numbers (like 5, 6, 10).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"},{"id":1972110425,"question":"Which type is suitable for describing distance?","code":null,"answers":["boolean","double","char"],"correct_answer":"double","explanation":"<ul>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<li>boolean - can have only 2 values - true or false.<\/li>\r\n<li>char - a single symbol.<\/li>\r\n<\/ul>"},{"id":774973414,"question":"Which type is suitable for describing a single symbol?","code":null,"answers":["char","int","boolean"],"correct_answer":"char","explanation":"<ul>\r\n<li>char - a single symbol.<\/li>\r\n<li>Int - whole number.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1625704359,"question":"Which type is suitable for describing if person is famous (true or false)?","code":null,"answers":["boolean","int","double"],"correct_answer":"boolean","explanation":"<ul>\r\n<li>boolean - true or false (famous or not famous).<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<\/ul>"}],"puzzles":[{"id":251843876,"text":"Fill the missing words to match the output.","code":"fillword name = \"Alex\";\r\nfillword age = 20;","result":null,"words":{"operators":[],"values":[],"variables_constants":["int","string","char"],"others":[]},"correct_patterns":[["string","int"]]},{"id":1102574821,"text":"Fill the missing words to match the output.","code":"fillword salesCount = 150;\r\nfillword height = 180.52;","result":null,"words":{"operators":[],"values":[],"variables_constants":["int","bool","char","double"],"others":[]},"correct_patterns":[["int","double"]]},{"id":979637410,"text":"Fill the missing words to match the output.","code":"fillword city = \"Madrid\";\r\nfillword letter = 'M';\r\nfillword isSunny = true;","result":null,"words":{"operators":[],"values":[],"variables_constants":["bool","char","string","double","float"],"others":[]},"correct_patterns":[["string","char","bool"]]}]},{"id":323367547,"name":"Calculations","tests":[{"id":1502308196,"question":"What's the output of the code snippet?","code":"int number = 5 + 6 - 2;\r\nConsole.Write(number);","answers":["9","10","11"],"correct_answer":"9","explanation":"5 + 6 - 2 =  <br>\r\n11 - 2 =  <br>\r\n9"},{"id":306153253,"question":"What's the output of the code snippet?","code":"int number = 6 * 3 - 1;\r\nConsole.Write(number);","answers":["12","17","18"],"correct_answer":"17","explanation":"6 * 3 - 1 = <br>\r\n18 - 1 = <br>\r\n17"},{"id":1424795362,"question":"What's the output of the code snippet?","code":"int number = 18 \/ 3 + 3;\r\nConsole.Write(number);","answers":["3","6","9"],"correct_answer":"9","explanation":"18 \/ 3 + 3 = <br>\r\n6 + 3 = <br>\r\n9"},{"id":227657379,"question":"What's the output of the code snippet?","code":"int number = (14 + 7) \/ 7;\r\nConsole.Write(number);","answers":["3","15","22"],"correct_answer":"3","explanation":"(14 + 7) \/ 7 = <br>\r\n21 \/ 7 = <br>\r\n3"},{"id":1179051616,"question":"What's the output of the code snippet?","code":"int number = 14 % 3;\r\nConsole.Write(number);","answers":["2","3","4"],"correct_answer":"2","explanation":"14 : 3 = <b>4<\/b>.67 <br><br>\r\n14 - 3 * 4 = <br>\r\n14 - 12 =<br>\r\n2"}],"puzzles":[{"id":1929983075,"text":"Fill the missing words to match the output.","code":"int number = 6 fillword 2;\r\nConsole.Write(number);","result":"12","words":{"operators":["+","%","*","\/"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["*"]]},{"id":901665824,"text":"Fill the missing words to match the output.","code":"string combine = \"Blue \" fillword \"Sky\";\r\nConsole.Write(combine);","result":"Blue Sky","words":{"operators":[".","*","-","+","%"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["+"]]},{"id":1852012513,"text":"Fill the missing words to match the output.","code":"int division = 12 fillword 4;\r\nint remainder = 17 fillword  5;\r\n\r\nConsole.WriteLine(division);\r\nConsole.WriteLine(remainder);","result":"3\r\n2","words":{"operators":["+","\/","%","^"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["\/","%"]]}]},{"id":229378382,"name":"Assignments","tests":[{"id":850946945,"question":"What's the output of the code snippet?","code":"int val = 8;\r\nval = 2;\r\nConsole.Write(val);","answers":["2","8","10"],"correct_answer":"2","explanation":"The last value set to the variable <code>val<\/code> is 2.\r\n<br><br>\r\nSo <code>val<\/code> has value of 2 when it's printed."},{"id":1802275662,"question":"What's the output of the code snippet?","code":"int num = 2;\r\nnum = num + 3;\r\nConsole.Write(num);","answers":["2","3","5"],"correct_answer":"5","explanation":"num = 2\r\n<br>\r\nnum = 2 + 3\r\n<br>\r\nnum = 5"},{"id":739355407,"question":"What's the output of the code snippet?","code":"int num = 4;\r\nnum *= 3;\r\n\r\nConsole.Write(num);","answers":["3","9","12"],"correct_answer":"12","explanation":"num = 4 <br>\r\nnum *= 3\r\n<br>\r\nnum = num * 3\r\n<br>\r\nnum = 4 * 3<br>\r\nnum = 12"},{"id":1724304076,"question":"What's the output of the code snippet?","code":"int num = 4 + 6;\r\nnum \/= 2;\r\nnum *= 3;\r\n\r\nConsole.Write(num);","answers":["5","15","60"],"correct_answer":"15","explanation":"num = 4 + 6; <br>\r\nnum = 10 <br>\r\n<br>\r\nnum \/= 2; <br>\r\nnum = num \/ 2; <br>\r\nnum = 10 \/ 2; <br>\r\nnum = 5 <br>\r\n<br>\r\nnum *= 3; <br>\r\nnum = num * 3; <br>\r\nnum = 5 * 3; <br>\r\nnum = 15"},{"id":1600907917,"question":"What's the output of the code snippet?","code":"int a = 3;\r\nint b = 2;\r\n\r\na *= b;\r\nb *= a;\r\n\r\nConsole.Write(b);","answers":["6","12","72"],"correct_answer":"12","explanation":"a = 3 <br>\r\nb = 2 <br>\r\n<br>\r\na *= b <br>\r\na = a * b <br>\r\na = 3 * 2 <br>\r\na = 6 <br>\r\n<br>\r\nb *= a <br>\r\nb = b * a <br>\r\nb = 2 * 6 <br>\r\nb = 12"}],"puzzles":[{"id":47660676,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\nnum = fillword;\r\n\r\nConsole.Write(num);\r\nnum = fillword;","result":"8","words":{"operators":[],"values":["1","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["1","8","7"],["7","8","1"]]},{"id":2072272453,"text":"Fill the missing words to match the output.","code":"int num = 5;\r\nnum fillword fillword;\r\nConsole.Write(num);","result":"15","words":{"operators":[],"values":["1","2","3"],"variables_constants":["+=","*=","\/="],"others":[]},"correct_patterns":[["*=","3"]]},{"id":1009352194,"text":"Fill the missing words to match the output.","code":"int num fillword 10;\r\nnum fillword 5;\r\nnum fillword 2;\r\nnum fillword 1;\r\n\r\nConsole.Write(num);","result":"29","words":{"operators":["=","+=","-=","*=","\/="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","+=","*=","-="]]}]},{"id":1441485368,"name":"If Statement","tests":[{"id":954926625,"question":"What's the output of the code snippet?","code":"int age = 18;\r\n\r\nif(age >= 21) {\r\n    Console.Write(\"a \");\r\n}\r\nif(age < 30) {\r\n    Console.Write(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>age = 18<\/code>\r\n<br><br>\r\n<code>age >= 21<\/code> is false.\r\n<br><br>\r\n<code>age < 30<\/code> is true so \"b\" is printed."},{"id":1905795566,"question":"What's the output of the code snippet?","code":"int pagesCount = 100;\r\n\r\nif(pagesCount > 100) {\r\n    Console.Write(\"a \");\r\n}\r\nif(pagesCount >= 100) {\r\n    Console.Write(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>pagesCount = 100<\/code>\r\n<br><br>\r\n\r\n<code>pagesCount > 100<\/code> is false. <br><br>\r\n<code>pagesCount >= 100<\/code> is true so \"b\" is printed."},{"id":709706159,"question":"What's the output of the code snippet?","code":"int num = 3;\r\n\r\nif(num == 3) {\r\n    Console.Write(\"a \");\r\n}\r\nif(num != 3) {\r\n    Console.Write(\"b\");\r\n}","answers":["a","b","a b"],"correct_answer":"a","explanation":"<code>num = 3<\/code>\r\n<br><br>\r\n\r\n<code>num == 3<\/code> is true so \"a\" is printed.\r\n<br><br>\r\n<code>num != 3<\/code> is false (because num is equal to 3)."},{"id":1827823980,"question":"What's the output of the code snippet?","code":"int score = 87;\r\n\r\nif(score <= 87) {\r\n    Console.Write(\"1 \");\r\n}\r\nif(score == 87) {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>score = 87<\/code>\r\n<br><br>\r\n\r\n<code>score <= 87<\/code> is true so \"1\" is printed.\r\n<br><br>\r\n<code>score == 87<\/code> is true so \"2\" is printed."},{"id":631669037,"question":"What's the output of the code snippet?","code":"int num = 77;\r\nint rem = num % 2;\r\n\r\nif (rem == 0) {\r\n    Console.Write(\"even \");\r\n}\r\nif(rem == 1) {\r\n    Console.Write(\"odd \");\r\n}","answers":["even","odd","even odd"],"correct_answer":"odd","explanation":"77 % 2 is equal to 1 (rem is 1) so odd is printed.\r\n<br><br>\r\nThe only condition that's true is <code>rem == 1<\/code> ."}],"puzzles":[{"id":655857582,"text":"Fill the missing words to match the output.","code":"double price = 300;\r\n\r\nif(price fillword 100)\r\n{\r\n    Console.Write(\"High\");\r\n}","result":"High","words":{"operators":["<","==",">"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[[">"]]},{"id":432322415,"text":"Fill the missing words to match the output.","code":"int number = 7;\r\nif(number fillword 7) {\r\n    Console.WriteLine(\"Special Number\");\r\n}\r\n\r\ndouble volume = 101;\r\nif(volume fillword 100)\r\n{\r\n    Console.WriteLine(\"Large\");\r\n}","result":"Special Number\r\nLarge","words":{"operators":["<",">","=="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["==",">"]]},{"id":1382668076,"text":"Fill the missing words to match the output.","code":"int number = 5;\r\n\r\nif(number fillword 0) {\r\n    Console.WriteLine(\"Different\");\r\n}","result":"Different","words":{"operators":["==","!=","<","<="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!="]]}]},{"id":1008613223,"name":"Logical Operators","tests":[{"id":508272874,"question":"What's the output of the code snippet?","code":"int num = 7;\r\n\r\nif (num > 7 || num < 21) {\r\n    Console.Write(\"1 \");\r\n}\r\nif(num > 10 || num < 15) {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>num = 7<\/code>\r\n<br><br>\r\n<code>num > 7 || num < 21<\/code> is true because <code>num < 21<\/code> is true .\r\n<br><br>\r\n<code>num > 10 || num < 15<\/code> is true because <code>num < 15<\/code> is true.\r\n<br><br>\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1358479531,"question":"What's the output of the code snippet?","code":"int age = 17;\r\n\r\nif (age > 13 && age < 21) {\r\n    Console.Write(\"1 \");\r\n}\r\nif(age > 21 && age < 60) {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n<code>age > 13 && age < 21<\/code> is true because both operands are true.\r\n<br><br>\r\n<code>age > 21 && age < 60<\/code> is false because <code>age > 21<\/code> is false.\r\n<br><br>\r\n\r\nUsing && means that If any of the two operands is false, then  the condition becomes false."},{"id":162390120,"question":"What's the output of the code snippet?","code":"int level = 5;\r\n\r\nif (level > 0 && level < 11) {\r\n    Console.Write(\"valid \");\r\n}\r\nif(level == 5 || level == 7) {\r\n    Console.Write(\"special \");\r\n}","answers":["valid","special","valid special"],"correct_answer":"valid special","explanation":"<code>level = 5<\/code>\r\n<br><br>\r\n<code>level > 0 && level < 11<\/code> is true because both operands are true (level is between 0 and 11).\r\n<br><br>\r\n<code>level == 5 || level == 7<\/code> is true because <code>level == 5<\/code> is true.\r\n<br><br>\r\nUsing && means that If any of the two operands is false, then  the condition becomes false.\r\n<br><br>\r\n\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1112670249,"question":"What's the output of the code snippet?","code":"double height = 165;\r\n\r\nif (!(height == 160)) {\r\n    Console.Write(\"1 \");\r\n}\r\nif(!(height > 150 && height < 200)) {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>height = 165<\/code>\r\n<br><br>\r\n<code>height == 160<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>height > 150 && height < 200<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."},{"id":990323702,"question":"What's the output of the code snippet?","code":"int code = 301;\r\n\r\nif (!(code >= 100 && code <= 200)) {\r\n    Console.Write(\"1 \");\r\n}\r\nif(!(code >= 400 || code == 301)) {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>code = 301<\/code>\r\n<br><br>\r\n<code>code >= 100 && code <= 200<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>code >= 400 || code == 301<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."}],"puzzles":[{"id":186578669,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nif(num == 1 fillword num == 2) {\r\n    Console.WriteLine(\"1 or 2\");\r\n}","result":"1 or 2","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["||"]]},{"id":1304630954,"text":"Fill the missing words to match the output.","code":"int num = 4;\r\n\r\nif(num >= 1 fillword num <= 9) {\r\n    Console.WriteLine(\"Between 1 and 9\");\r\n}\r\n\r\nif(num == 3 fillword  num == 4) {\r\n    Console.WriteLine(\"3 or 4\");\r\n}","result":"Between 1 and 9\r\n3 or 4","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["&&","||"]]},{"id":108017259,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\nif(fillword(num != 1)) {\r\n    Console.Write(\"Equal To One\");\r\n}","result":"Equal To One","words":{"operators":["&","|","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!"]]}]},{"id":244874745,"name":"If Else Statements","tests":[{"id":2108965815,"question":"What's the output of the code snippet?","code":"int age = 17;\r\n\r\nif (age == 17) {\r\n    Console.Write(\"1 \");\r\n}\r\nelse {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>age = 17<\/code>\r\n<br><br>\r\n\r\n<code>age == 17<\/code> is true so the code inside if clause is executed.\r\n<br><br>\r\nThe code inside the else block is not executed."},{"id":911827828,"question":"What's the output of the code snippet?","code":"int num = 5;\r\n\r\nif (num == 3) {\r\n    Console.Write(\"1 \");\r\n}\r\nelse {\r\n    Console.Write(\"2 \");\r\n}","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>num = 5<\/code>\r\n<br><br>\r\n<code>num == 3<\/code> is false so the code inside the else clause is executed.\r\n<br><br>\r\nThe code inside the if block is not executed."},{"id":1863156533,"question":"What's the output of the code snippet?","code":"int num = 15;\r\n\r\nif (num == 14) {\r\n    Console.Write(\"1 \");\r\n}\r\nelse if (num == 15) {\r\n    Console.Write(\"2 \");\r\n}\r\nelse {\r\n    Console.Write(\"3 \");\r\n}","answers":["2","2 3","1 3"],"correct_answer":"2","explanation":"<code>num = 15<\/code>\r\n<br><br>\r\n\r\n<code>num == 14<\/code> is false but <code>num == 15<\/code> is true so the code inside the else if clause is executed.\r\n<br><br>\r\nThe code inside the if and else blocks is not executed."},{"id":565355250,"question":"What's the output of the code snippet?","code":"int score = 90;\r\n\r\nif (score <= 50) {\r\n    Console.Write(\"low\");\r\n}\r\nelse if (score <= 75) {\r\n    Console.Write(\"medium\");\r\n}\r\nelse {\r\n    Console.Write(\"high\");\r\n}","answers":["low","medium","high"],"correct_answer":"high","explanation":"<code>score = 90<\/code>\r\n<br><br>\r\nBoth <code>score <= 50<\/code> and <code>score <= 75<\/code> are false. \r\n<br><br>\r\nThat's the reason why the code inside the else block is executed."},{"id":443007667,"question":"What's the output of the code snippet?","code":"int num = 75;\r\n\r\nif (num <= 50) {\r\n\r\n}\r\nelse if (num <= 75) {\r\n    Console.Write(\"1 \");\r\n}\r\nelse if (num <= 80) {\r\n    Console.Write(\"2\");\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>num = 75<\/code>\r\n<br><br>\r\n<code>num <= 50<\/code> is false and <code>num <= 75<\/code> is true thus \"1\" is printed.\r\n<br><br>\r\nSince  the condition of the first else-if block is true, the next one (<code>num <= 80<\/code>) is not checked."}],"puzzles":[{"id":2133153320,"text":"Fill the missing words to match the output.","code":"int num = 5;\r\nif(num fillword 10) {\r\n    Console.Write(\"More than 10\");\r\n}\r\nfillword  {\r\n    Console.Write(\"Less than 10\");\r\n}","result":"Less than 10","words":{"operators":["<","<=",">",">="],"values":[],"variables_constants":[],"others":["else","if"]},"correct_patterns":[[">=","else"],[">","else"]]},{"id":835351017,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nif(num == fillword) {\r\n    Console.Write(\"Equal to 0\");\r\n}\r\nfillword fillword (num == fillword) {\r\n    Console.Write(\"Equal to 1\");\r\n}","result":"Equal to 1","words":{"operators":[],"values":["0","1"],"variables_constants":[],"others":["if","else","=="]},"correct_patterns":[["0","else","if","1"]]},{"id":1786679734,"text":"Fill the missing words to match the output.","code":"int num = 7;\r\n\r\nif(num == fillword) {\r\n    Console.Write(\"A\");\r\n}\r\nelse if(num == fillword) {\r\n    Console.Write(\"B\");\r\n}\r\nfillword {\r\n    Console.Write(\"C\");\r\n}","result":"C","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["if","else","else if"]},"correct_patterns":[["5","6","else"],["6","5","else"]]}]},{"id":327079456,"name":"Switch Statement","tests":[{"id":1393877616,"question":"What's the output of the code snippet?","code":"int num = 2;\r\n\r\nswitch(num) {\r\n    case 1:\r\n        Console.Write(\"a\");\r\n        break;\r\n    case 2:\r\n        Console.Write(\"b\");\r\n        break;\r\n    case 3:\r\n        Console.Write(\"c\");\r\n        break;\r\n}","answers":["a","b","c"],"correct_answer":"b","explanation":"<code>num<\/code> is equal to 2 so the case 2 block is executed."},{"id":364446257,"question":"What's the output of the code snippet?","code":"int num = 10;\r\n\r\nswitch(num) {\r\n    case 10:\r\n        Console.Write(\"a \");\r\n        break;\r\n    case 20:\r\n        Console.Write(\"b \");\r\n        break;\r\n    default:\r\n        Console.Write(\"c\");\r\n        break;\r\n}","answers":["a","b","a c"],"correct_answer":"a","explanation":"<code>num<\/code> is equal to 10 so the case 10 block is executed."},{"id":1315843582,"question":"What's the output of the code snippet?","code":"int num = 5;\r\n\r\nswitch(num) {\r\n    case 3:\r\n        Console.Write(\"a \");\r\n        break;\r\n    case 4:\r\n        Console.Write(\"b \");\r\n        break;\r\n    default:\r\n        Console.Write(\"c\");\r\n        break;\r\n}","answers":["a","b","c"],"correct_answer":"c","explanation":"<code>num<\/code> is neither 3 nor 4 so the default block is executed."},{"id":118705599,"question":"What's the output of the code snippet?","code":"int age = 15;\r\n\r\nswitch(age) {\r\n    case 10:\r\n    case 11:\r\n    case 12:\r\n    case 13:\r\n        Console.Write(\"Middle School \");\r\n        break;\r\n    case 14:\r\n    case 15:\r\n    case 16:\r\n    case 17:\r\n    case 18:\r\n        Console.Write(\"High School \");\r\n        break;\r\n    default:\r\n        Console.Write(\"Primary School\");\r\n        break;\r\n}","answers":["Primary School","Middle School","High School"],"correct_answer":"High School","explanation":"<code>age<\/code> is matched by case 15 so \"High School\" is printed."},{"id":2042654076,"question":"What's the output of the code snippet?","code":"int level = 8;\r\n\r\nswitch(level) {\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n        Console.Write(\"Easy\");\r\n        break;\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n        Console.Write(\"Medium\");\r\n        break;\r\n    default:\r\n        Console.Write(\"Tricky\");\r\n        break;\r\n}","answers":["Easy","Medium","Tricky"],"correct_answer":"Tricky","explanation":"<code>level<\/code> is not matched by any of the cases (from 1 to 7) so the default block is executed."}],"puzzles":[{"id":589541751,"text":"Fill the missing words to match the output.","code":"int num = 2;\r\nswitch(num) {\r\n    case fillword:\r\n        Console.Write(\"a\");\r\n        break;\r\n    fillword fillword:\r\n        Console.Write(\"b\");\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2"],"variables_constants":[],"others":["case","switch"]},"correct_patterns":[["1","case","2"]]},{"id":1708183860,"text":"Fill the missing words to match the output.","code":"int num = 3;\r\nswitch(num) {\r\n    case fillword:\r\n        Console.Write(\"a\");\r\n        break;\r\n    case fillword:\r\n        Console.Write(\"b\");\r\n        break;\r\n    fillword :\r\n        Console.Write(\"c\");\r\n        break;\r\n}","result":"c","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","default"]},"correct_patterns":[["1","2","default"],["2","1","default"]]},{"id":1585836277,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\nswitch(num) {\r\n    case 1:\r\n        Console.Write(\"a\");\r\n        break;\r\n    fillword fillword :\r\n    case 3:\r\n        Console.Write(\"b\");\r\n        break;\r\n    default:\r\n        Console.Write(\"c\");\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","break"]},"correct_patterns":[["3","case","2"]]}]},{"id":1196203398,"name":"While Loop","tests":[{"id":846499133,"question":"What's the output of the code snippet?","code":"int num = 0;\r\nwhile(num < 3)\r\n{\r\n    Console.Write(num + \" \");\r\n    num++;\r\n}","answers":["1 2 3","0 1 2","0 1 2 3"],"correct_answer":"0 1 2","explanation":"<code>num = 0<\/code>\r\n<br><br>\r\nLoop ends when <code>num<\/code> reaches value of 3.\r\n<br><br>\r\n3 is the first value that's false for the condition <code>num < 3<\/code>.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":1796844794,"question":"What's the output of the code snippet?","code":"int num = 1;\r\nwhile(num < 5)\r\n{\r\n    Console.Write(num + \" \");\r\n}","answers":["1 2 3 4","1 2 3 4 5","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num = 1<\/code>\r\n<br><br>\r\nThe condition <code>num < 5<\/code> is always true since there is no modification like <code>num++<\/code>."},{"id":768527547,"question":"What's the output of the code snippet?","code":"int num = 2;\r\nwhile(num < 7)\r\n{\r\n    num += 2;\r\n    Console.Write(num + \" \");\r\n}","answers":["2 4 6 8","4 6","4 6 8"],"correct_answer":"4 6 8","explanation":"<code>num = 2<\/code>\r\n<br><br>\r\n<code>num < 7<\/code> remains true until <code>num<\/code> reaches value of 8.\r\n<br><br>\r\nThe loop ends when <code>num < 7<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":1718873208,"question":"What's the output of the code snippet?","code":"int num = 10;\r\nConsole.Write(num + \" \");\r\n\r\nwhile(num < 10)\r\n{\r\n    Console.Write(num + \" \");\r\n    num++;\r\n}","answers":["10","10 10","10 11"],"correct_answer":"10","explanation":"<code>num < 10<\/code> is false and the loop doesn't execute."},{"id":1595935801,"question":"What's the output of the code snippet?","code":"int num = 20;\r\n\r\nwhile(num > 10)\r\n{\r\n    Console.Write(num + \" \");\r\n    num -= 5;\r\n}","answers":["20","20 15","20 15 10"],"correct_answer":"20 15","explanation":"<code>num > 10<\/code> remains true until <code>num<\/code> decrements to 10.\r\n<br><br>\r\nThe loop ends when <code>num > 10<\/code> becomes false.\r\n<br><br>\r\n<code>num -= 5<\/code> decrements the value by 5."}],"puzzles":[{"id":388632754,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\n\r\nwhile(num fillword fillword ) {\r\n    Console.Write(num + \" \");\r\n    num++;\r\n}","result":"1 2 3 4 5","words":{"operators":["<","<=",">",">="],"values":["4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","5"],["<","6"]]},{"id":1239363699,"text":"Fill the missing words to match the output.","code":"int num = 12;\r\n\r\nwhile(num fillword fillword) {\r\n    Console.Write(num + \" \");\r\n    fillword ;\r\n}","result":"12 14 16 18 20","words":{"operators":["<","<=",">",">="],"values":["18","20","21"],"variables_constants":[],"others":["num++","num += 2","num--"]},"correct_patterns":[["<=","20","num += 2"],["<","21","num += 2"]]},{"id":42750000,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\n\r\nwhile(num > 0) {\r\n    fillword ;\r\n    Console.Write(num + \" \");\r\n}","result":"9 6 3 0","words":{"operators":[],"values":["9","10","12","13"],"variables_constants":[],"others":["num--","num += 3","num -= 3"]},"correct_patterns":[["12","num -= 3"]]}]},{"id":972143943,"name":"Do While Loop","tests":[{"id":299184070,"question":"What's the output of the code snippet?","code":"int num = 1;\r\n\r\ndo\r\n{\r\n    Console.Write(num + \" \");\r\n    num++;\r\n} while (num < 4);","answers":["1 2 3","1 2 3 4","2 3"],"correct_answer":"1 2 3","explanation":"<code>num < 4<\/code> remains true until <code>num<\/code> increments to 4.\r\n<br><br>\r\nThe loop ends when <code>num < 4<\/code> becomes false.\r\n<br><br>\r\n<code>num++<\/code> increments the value by 1."},{"id":1249529735,"question":"What's the output of the code snippet?","code":"int num = 1;\r\nConsole.Write(\"0 \");\r\ndo\r\n{\r\n    Console.Write(num + \" \");\r\n    num--;\r\n} while (num > 1);","answers":["0","0 1","0 1 0"],"correct_answer":"0 1","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since <code>num > 1<\/code> is false."},{"id":53440324,"question":"What's the output of the code snippet?","code":"int num = 1;\r\n\r\ndo\r\n{\r\n    Console.Write(num + \" \");\r\n    num++;\r\n} while (num > 1);","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>num > 1<\/code> remains true and the loop repeats infinitely.\r\n<br><br>\r\n<code>num++<\/code> needs to be removed or replaced with <code>num--<\/code> in order to stop it."},{"id":1171492613,"question":"What's the output of the code snippet?","code":"int num = 0;\r\n\r\ndo\r\n{\r\n    num += 2;\r\n    Console.Write(num + \" \");\r\n} while (num <= 5);","answers":["0 2 4","2 4 6","2 4 6 8"],"correct_answer":"2 4 6","explanation":"<code>num <= 5<\/code> remains true until <code>num<\/code> increments to 6.\r\n<br><br>\r\nThe loop ends when <code>num <= 5<\/code> becomes false.\r\n<br><br>\r\n<code>num += 2<\/code> increments the value by 2."},{"id":1048620738,"question":"What's the output of the code snippet?","code":"Console.Write(\"1 \");\r\ndo\r\n{\r\n    Console.Write(\"2 \");\r\n} while (false);","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since it's condition is false."}],"puzzles":[{"id":2066838513,"text":"Fill the missing words to match the output.","code":"int num = 1;\r\ndo\r\n{\r\n    Console.Write(num + \" \");\r\n    num++;\r\n} while (num fillword fillword);","result":"1 2 3 4 5 6 7","words":{"operators":["<","<=",">",">="],"values":["6","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","7"],["<","8"]]},{"id":1038455742,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\ndo\r\n{\r\n    Console.Write(num + \" \");\r\n    fillword;\r\n} while (num <= 25);","result":"10 15 20 25","words":{"operators":[],"values":["5","10","15"],"variables_constants":[],"others":["num++","num += 5"]},"correct_patterns":[["10","num += 5"]]},{"id":1988801407,"text":"Fill the missing words to match the output.","code":"int num = fillword;\r\ndo\r\n{\r\n    num++;\r\n    Console.Write(num + \" \");\r\n} while (num == fillword);","result":"1 2","words":{"operators":[],"values":["-1","0","1","2"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]}]},{"id":1923538180,"name":"For Loop","tests":[{"id":2000014979,"question":"What's the output of the code snippet?","code":"for(int i = 1; i < 5; i++)\r\n{\r\n    Console.Write(i + \" \");\r\n}","answers":["1 2 3 4","1 2 3 4 5","1 1 1 1 1"],"correct_answer":"1 2 3 4","explanation":"The loop starts with <code>i = 1<\/code>.\r\n<br><br>\r\n<code>i < 5<\/code> remains true until <code>i<\/code> increments to 5.\r\n<br><br>\r\nThe loop ends when <code>i < 5<\/code> becomes false.\r\n<br><br>\r\n<code>i++<\/code> increments the value by 1 in the end of every loop iteration."},{"id":702213696,"question":"What's the output of the code snippet?","code":"for(int i = 2; i <= 8; i+=2)\r\n{\r\n    Console.Write(i + \" \");\r\n}","answers":["2 4 6","2 4 6 8","2 3 4 5 6 7 8"],"correct_answer":"2 4 6 8","explanation":"The loop starts with <code>i = 2<\/code>.\r\n<br><br>\r\n<code>i <= 8<\/code> remains true until <code>i<\/code> increments to 10.\r\n<br><br>\r\nThe loop ends when <code>i <= 8<\/code> becomes false.\r\n<br><br>\r\n<code>i+=2<\/code> increments the value by 2 in the end of every loop iteration."},{"id":1653542401,"question":"What's the output of the code snippet?","code":"for(int i = 1 ;; i++)\r\n{\r\n    Console.Write(i + \" \");\r\n}","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"The condition is not specified so the loop repeats infinitely.\r\n<br><br>\r\nA condition such as <code>i <= 5<\/code> could be added in order to stop it."},{"id":1530669518,"question":"What's the output of the code snippet?","code":"for(int i = 11; i >= 5; i -= 3)\r\n{\r\n    Console.Write(i + \" \");\r\n}","answers":["11 8 5 2","11 8 5","11 8"],"correct_answer":"11 8 5","explanation":"The loop starts with <code>i = 11<\/code>.\r\n<br><br>\r\n<code>i >= 5<\/code> remains true until <code>i<\/code> decrements to 2.\r\n<br><br>\r\nThe loop ends when <code>i >= 5<\/code> becomes false.\r\n<br><br>\r\n<code>i -= 3<\/code> decrements the value by 3 in the end of every loop iteration."},{"id":501303695,"question":"What's the output of the code snippet?","code":"Console.Write(\"0 \");\r\nfor(int i = 1; i < 1 ; i++)\r\n{\r\n    Console.Write(i + \" \");\r\n}","answers":["0","0 1","0 1 2"],"correct_answer":"0","explanation":"The initialization is <code>i = 1<\/code>.\r\nThe condition <code>i < 1<\/code> is false so the loop doesnt't execute."}],"puzzles":[{"id":792711996,"text":"Fill the missing words to match the output.","code":"for(int i = fillword; i fillword fillword; i++) {\r\n\tConsole.Write(i + \" \");\r\n}","result":"0 1 2 3 4","words":{"operators":["<","<=",">",">="],"values":["0","1","4","5"],"variables_constants":[],"others":[]},"correct_patterns":[["0","<","5"],["0","<=","4"]]},{"id":1642918653,"text":"Fill the missing words to match the output.","code":"for (int i = 1; i fillword 11; i fillword) {\r\n    Console.Write(i + \" \");\r\n}","result":"1 3 5 7 9 11","words":{"operators":["<","<=","=="],"values":[],"variables_constants":[],"others":["++","+= 2","+= 4"]},"correct_patterns":[["<=","+= 2"]]},{"id":1519456954,"text":"Fill the missing words to match the output.","code":"for (int i = 5; i >= fillword; fillword) {\r\n    Console.Write(i + \" \");\r\n}","result":"5 4 3 2 1","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["i++","i--","i-=5","i+=5"]},"correct_patterns":[["1","i--"]]}]},{"id":1927246061,"name":"Break And Continue","tests":[{"id":1452697932,"question":"What's the output of the code snippet?","code":"for(int i = 1; i < 10; i += 3)\r\n{\r\n    Console.Write(i + \" \");\r\n\r\n    if(i == 4)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["1","1 4","1 4 7"],"correct_answer":"1 4","explanation":"The <code>break<\/code> keyword ends the loop when <code>i<\/code> reaches value of 4.\r\n\r\n<br><br>\r\n<code>i<\/code> is printed before terminating the loop via\r\n<code>break<\/code>."},{"id":255494413,"question":"What's the output of the code snippet?","code":"int num = 10;\r\n\r\nwhile(num < 20)\r\n{\r\n    Console.Write(num + \" \");\r\n    num += 4;\r\n\r\n    if(num == 18)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["10 14","10 14 18","10 14 18 22"],"correct_answer":"10 14","explanation":"The <code>break<\/code> keyword ends the loop when <code>num<\/code> reaches value of 18.\r\n\r\n<br><br>\r\n<code>num<\/code> reaches value of 18 after \"14\" is printed."},{"id":1106225354,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 6; i+= 2)\r\n{\r\n    if(i == 2)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    Console.Write(i + \" \");\r\n}","answers":["0 4","0 2 4","0 4 6"],"correct_answer":"0 4","explanation":"The loop executes for i = 0, 2 and  4.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."},{"id":983353483,"question":"What's the output of the code snippet?","code":"int number = 0;\r\n\r\nwhile(number < 7)\r\n{\r\n    number += 3;\r\n\r\n    if(number == 6)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    Console.Write(number + \" \");\r\n}","answers":["3 6 9","3 9","3"],"correct_answer":"3 9","explanation":"The loop executes for number = 3, 6, 9.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for number = 6 so all values except 6 are printed."},{"id":1933699144,"question":"What's the output of the code snippet?","code":"for(int i = 1; i <= 3; i++)\r\n{\r\n    if(i == 2)\r\n    {\r\n        continue;\r\n        break;\r\n    }\r\n\r\n    Console.Write(i + \" \");\r\n}","answers":["1","1 3","1 2 3"],"correct_answer":"1 3","explanation":"<code>continue<\/code> skips a loop iteration so the <code>break<\/code> keyword does not take any effect.\r\n<br><br>\r\nThe loop executes for i= 1, 2, 3.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for i = 2 so all values except 2 are printed."}],"puzzles":[{"id":323367547,"text":"Fill the missing words to match the output.","code":"int sum = 0;\r\nfor (int i = 1; i <= 8; i++) {\r\n    Console.Write(i + \" \");\r\n    sum += i;\r\n\r\n    if(sum == fillword ) {\r\n        fillword ;\r\n    }                \r\n}","result":"1 2 3 4","words":{"operators":[],"values":["6","10","15","21"],"variables_constants":[],"others":["continue","break"]},"correct_patterns":[["10","break"]]},{"id":1441485368,"text":"Fill the missing words to match the output.","code":"for (int i = 1; i <= 5; i++) {\r\n    if(i == fillword) {\r\n        fillword;\r\n    }\r\n    Console.Write(i + \" \");\r\n}","result":"1 2 4 5","words":{"operators":[],"values":["2","3","4","5"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["3","continue"]]},{"id":244874745,"text":"Fill the missing words to match the output.","code":"int sum = 0; \r\nfor (int i = fillword; i <= 100; i+= 2) {\r\n    Console.Write(i + \" \");\r\n    sum += i;\r\n\r\n    if (sum == fillword) {\r\n        Console.Write(sum);\r\n        fillword;\r\n    }\r\n}","result":"2 4 6 8 20","words":{"operators":[],"values":["0","1","2","20","30"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["2","20","break"]]}]},{"id":1346311094,"name":"Nested If","tests":[{"id":905316361,"question":"What's the output of the code snippet?","code":"if(true)\r\n{\r\n    Console.Write(\"1 \");\r\n\r\n    if(true)\r\n    {\r\n        Console.Write(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    Console.Write(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The code inside the outer if executes since it's condition is true thus \"1\" is printed.\r\n<br><br>\r\nBoth outer and inner if-s have true conditions, so \"2\" is printed too.\r\n<br><br>\r\nThe else block code does not execute because the outer if has true condition."},{"id":1855663062,"question":"What's the output of the code snippet?","code":"int number = 10;\r\nif(number >= 10)\r\n{\r\n    Console.Write(\"1 \");\r\n\r\n    if(number < 10)\r\n    {\r\n        Console.Write(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    Console.Write(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1","explanation":"The condition <code>number >= 10<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nThe condition <code>number < 10<\/code> is false so \"2\" is not printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number >= 10<\/code> is true ."},{"id":659049367,"question":"What's the output of the code snippet?","code":"int number = 5;\r\nif(number == 5)\r\n{\r\n    number++;\r\n    Console.Write(\"1 \");\r\n\r\n    if(number == 6)\r\n    {\r\n        Console.Write(\"2\");\r\n    }\r\n}\r\nelse\r\n{\r\n    Console.Write(\"3\");\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The condition <code>number == 5<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nAfter incrementing <code>number<\/code> the <code>number == 6<\/code> condition becomes true so \"2\" is printed.\r\n<br><br>\r\nThe else block code does not execute because <code>number == 5<\/code> is true."},{"id":436038484,"question":"What's the output of the code snippet?","code":"int number = 5;\r\nif(number == 5) {\r\n    Console.Write(\"1 \");\r\n\r\n    if(number > 0) {\r\n        Console.Write(\"2 \");\r\n\r\n        if(number > 3) {\r\n            Console.Write(\"3\");\r\n        }\r\n    }\r\n}","answers":["1","1 2","1 2 3"],"correct_answer":"1 2 3","explanation":"All of the three conditions are true so \"1\", \"2\" and \"3\" are printed."},{"id":1386318613,"question":"What's the output of the code snippet?","code":"int number = 10;\r\nif(number == 5) {\r\n    Console.Write(\"1 \");    \r\n}\r\nelse {\r\n    Console.Write(\"2 \");\r\n    if(number == 10) {\r\n        Console.Write(\"3\");\r\n    }\r\n}","answers":["1","2","2 3"],"correct_answer":"2 3","explanation":"The condition <code>number == 5<\/code> is false so the else block is executed and \"2\" is printed.\r\n<br><br>\r\n<code>number == 5<\/code> is false and <code>number == 10<\/code> is true so \"3\" is printed too."}],"puzzles":[{"id":1196203398,"text":"Fill the missing words to match the output.","code":"int score = 100;\r\n\r\nif(score > fillword) {\r\n    Console.WriteLine(\"High\");\r\n\r\n    if(score fillword fillword) {\r\n        Console.WriteLine(\"Max Score\");\r\n    }\r\n}","result":"High\r\nMax Score","words":{"operators":["=="],"values":["80","100","110"],"variables_constants":[],"others":[]},"correct_patterns":[["80","==","100"]]},{"id":972143943,"text":"Fill the missing words to match the output.","code":"int level = fillword;\r\n\r\nif(level > fillword && level <= 100 ) {\r\n    Console.WriteLine(\"Valid Level\");\r\n\r\n    if(level fillword 10 == 0) {\r\n        Console.WriteLine(\"Contains Boss\");\r\n    }\r\n}","result":"Valid Level\r\nContains Boss","words":{"operators":["-","+","\/","%"],"values":["40","0"],"variables_constants":[],"others":[]},"correct_patterns":[["40","0","%"]]},{"id":1923538180,"text":"Fill the missing words to match the output.","code":"int calories = 200;\r\n\r\nif(calories fillword 100) {\r\n    Console.WriteLine(\"High\");\r\n    calories += fillword;\r\n\r\n    if(calories fillword 300) {\r\n        Console.WriteLine(\"Very High\");\r\n    }\r\n}","result":"High\r\nVery High","words":{"operators":[">",">="],"values":["50","100"],"variables_constants":[],"others":[]},"correct_patterns":[[">","100",">="]]}]},{"id":933212787,"name":"Nested Loops","tests":[{"id":190229202,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 1; i++) {\r\n    Console.Write(i + \" \");\r\n    for (int j = 0; j < 1; j++) {\r\n        Console.Write(j + \" \");\r\n    }\r\n}","answers":["0","0 0","0 0 1 1"],"correct_answer":"0 0","explanation":"Both inner and outer loop execute only once for <code>i = 0<\/code> and <code>j = 0<\/code> ."},{"id":1308347027,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 2; i++) {\r\n    Console.Write(i + \" \");\r\n    for (int j = 0; j < 0; j++) {\r\n        Console.Write(j + \" \");\r\n    }\r\n}","answers":["0","0 0","0 1"],"correct_answer":"0 1","explanation":"The outer loop executes twice - for i = 0 and i = 1.\r\n<br><br>\r\nThe inner loop has false condition so it doesn't execute."},{"id":111733328,"question":"What's the output of the code snippet?","code":"for(int i = 0; i < 3; i++) {\r\n    Console.Write(i + \" \");\r\n    for (int j = 0; j < 1; j++) {\r\n        Console.Write(j + \" \");\r\n    }\r\n}","answers":["0 0 1 0 2 0","0 0 1 0","0 1 2"],"correct_answer":"0 0 1 0 2 0","explanation":"The outer loop executes 3 times - for i = 0, 1 and 2.\r\n<br><br>\r\nThe inner loop executes once each time the outer loop iterates. \r\n<br><br>\r\nAll zeroes except for the first one are printed by the inner loop."},{"id":2136803857,"question":"What's the output of the code snippet?","code":"for(int a = 0; a < 2; a++) {\r\n    Console.Write(a + \" \");\r\n    for (int b = 0; b < 1; b++)\r\n    {\r\n        Console.Write(b + \" \");\r\n        for (int c = 0; c < 1; c++)\r\n        {\r\n            Console.Write(c + \" \");\r\n        }\r\n    }\r\n}","answers":["0 0 0 1 1 1","0 0 1 0 0 0","0 0 0 1 0 0"],"correct_answer":"0 0 0 1 0 0","explanation":"The outer loop executes twice.\r\n<br><br>\r\nEach iteration of the outer loop makes the inner loops to execute once."},{"id":805443038,"question":"What's the output of the code snippet?","code":"int i = 1;\r\nwhile(i <= 3)\r\n{\r\n    int j = 0;\r\n\r\n    while (j < 2)\r\n    {\r\n        Console.Write(j);\r\n        j++;\r\n    }\r\n}","answers":["0 1 0 1","0 1 0 1 0 1","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"Modification such as <code>i++<\/code> is missing for the outer loop."}],"puzzles":[{"id":726400197,"text":"Fill the missing words to match the output.","code":"for(int a = 1; a <= fillword; a++)\r\n{\r\n    for(int b = 1; b <= fillword; b++ )\r\n    {\r\n        Console.WriteLine(fillword + \" \" + fillword);\r\n    }\r\n}","result":"1 1\r\n1 2\r\n2 1\r\n2 2\r\n3 1\r\n3 2","words":{"operators":[],"values":["1","2","3","4"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["3","2","a","b"]]},{"id":1844976770,"text":"Fill the missing words to match the output.","code":"for(int a = 1; a <= fillword; a++)\r\n{\r\n    for(int b = 1; b <= fillword; b++ )\r\n    {\r\n        Console.Write(fillword + \" \");\r\n    }\r\n    Console.WriteLine();\r\n}","result":"1\r\n1 2\r\n1 2 3\r\n1 2 3 4","words":{"operators":[],"values":["3","4","5","6"],"variables_constants":["a","b"],"others":[]},"correct_patterns":[["4","a","b"]]},{"id":648887363,"text":"Fill the missing words to match the output.","code":"for(int row = 1; row <= 5; row++)\r\n{\r\n    for (int col = 1; col <= row; fillword)\r\n    {\r\n        if(row fillword col) {\r\n            Console.WriteLine(fillword);\r\n        }\r\n        else {\r\n            Console.Write(\" \");\r\n        }\r\n    }\r\n}","result":"1\r\n 2\r\n  3\r\n   4\r\n    5","words":{"operators":["<","==","!="],"values":[],"variables_constants":["col","row"],"others":["col++","row++"]},"correct_patterns":[["col++","==","row"],["col++","==","col"]]}]},{"id":385375548,"name":"Tricky Questions","tests":[{"id":1790391711,"question":"What's the output of the code snippet?","code":"int a = 1;\r\nint b = 1;\r\n\r\na++;\r\n++b;\r\nConsole.Write(a + \" \" + b);","answers":["1 2","2 1","2 2"],"correct_answer":"2 2","explanation":"Both <code>a++<\/code> and <code>++b<\/code> increment the values by 1."},{"id":593778012,"question":"What's the output of the code snippet?","code":"int a = 1;\r\nint b = 1;\r\nConsole.Write(++a + \" \" + b++);","answers":["1 1","2 1","2 2"],"correct_answer":"2 1","explanation":"<code>++a <\/code> returns the incremented result\r\n<br><br>\r\n<code>b++<\/code> returns the value before incrementation."},{"id":1678341405,"question":"What's the output of the code snippet?","code":"int a = 2;\r\nint b = 2;\r\n\r\n--a;\r\nb--;\r\n\r\nConsole.Write(--a + \" \" + b--);","answers":["1 1","1 0","0 1"],"correct_answer":"0 1","explanation":"Both <code>--a<\/code> and <code>b--<\/code> decrement the value by 1.\r\n<br><br>\r\n<code>--a<\/code> returns the decremented value.\r\n<br><br>\r\n<code>b--<\/code> returns the value before decrementation."},{"id":1589482714,"question":"What's the output of the code snippet?","code":"int i = 0;\r\nfor (; i < 100; i++) ;\r\n\r\nConsole.Write(i);","answers":["0","1","100"],"correct_answer":"100","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 100.\r\n<br><br>\r\n100 is the first value of <code>i<\/code> which breaks the condition <code>i < 100<\/code>."},{"id":392344731,"question":"What's the output of the code snippet?","code":"int i = 0;\r\nfor (; i <= 10; i+=2) ;\r\n\r\nConsole.Write(i);","answers":["0","10","12"],"correct_answer":"12","explanation":"The loop starts from <code>i = 0<\/code> and ends when <code>i<\/code> reaches value of 12.\r\n<br><br>\r\n12 is the first value of <code>i<\/code> which breaks the condition <code>i <= 10<\/code>."}],"puzzles":[{"id":525491200,"text":"Fill the missing words to match the output.","code":"int a = 3;\r\nint b = 7;\r\n\r\nConsole.Write(fillword + \" \" + fillword);","result":"3 8","words":{"operators":[],"values":[],"variables_constants":[],"others":["a++","++a","b++","++b"]},"correct_patterns":[["a++","++b"]]},{"id":1342668737,"text":"Fill the missing words to match the output.","code":"int i = 0;\r\nfor (; i fillword fillword; i++) ;\r\n\r\nConsole.Write(i);","result":"101","words":{"operators":["<","<=",">",">="],"values":["99","100"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","100"]]},{"id":179019662,"text":"Fill the missing words to match the output.","code":"int i = 0;\r\nfor (; i fillword 10; i++);\r\n\r\nConsole.Write(fillword);","result":"10","words":{"operators":[">",">=","<","<="],"values":[],"variables_constants":[],"others":["i++","++i"]},"correct_patterns":[["<","i++"]]}]},{"id":1179724047,"name":"Strings","tests":[{"id":270010954,"question":"What's the output of the code snippet?","code":"string str = \"Hello\";\r\nConsole.Write(str[1]);","answers":["H","e","o"],"correct_answer":"e","explanation":"The string has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>H<\/td>\r\n            <td class=\"table-primary\">e<\/td>\r\n            <td>l<\/td>\r\n            <td>l<\/td>\r\n            <td>o<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1254959627,"question":"What's the output of the code snippet?","code":"string str1 = \"abc\";\r\nstring str2 = \"defg\";\r\n\r\nConsole.Write(str1.Length + str2.Length);","answers":["7","8","9"],"correct_answer":"7","explanation":"The <code>Length<\/code> property returns the count of the symbols:\r\n<br><br>\r\n<code>str1.Length<\/code> is 3\r\n<br>\r\n<code>str2.Length<\/code> is 4\r\n<br>\r\n3 + 4 = 7"},{"id":57816520,"question":"What's the output of the code snippet?","code":"string color = \"green\";\r\n\r\nConsole.Write(color[4]);\r\nConsole.Write(color[5]);","answers":["e n","n 0","Exception"],"correct_answer":"Exception","explanation":"<code>color<\/code> has the following structure:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>g<\/td>\r\n            <td>r<\/td>\r\n            <td>e<\/td>\r\n            <td>e<\/td>\r\n            <td>n<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br><br>\r\n<code>color[5]<\/code> accesses index that's outside of the bound (0 - 4) which results in exception."},{"id":1143428489,"question":"What's the output of the code snippet?","code":"string word = \"Arena\";\r\n\r\nConsole.WriteLine(word.Contains(\"na\"));\r\nConsole.WriteLine(word.Contains(\"A\"));","answers":["True True","True False","False True"],"correct_answer":"True True","explanation":"'na' is contained in 'Arena' so <br>\r\n<code>word.Contains(\"na\")<\/code> returns true.\r\n<br><br>\r\n'A' is contained in 'Arena' (it's first symbol) so <br>\r\n<code>word.Contains(\"A\")<\/code> returns true."},{"id":1054111062,"question":"What's the output of the code snippet?","code":"string equation = \"160 + 135 = 295\";\r\n\r\nfor(int i = 0; i < equation.Length; i++)\r\n{\r\n    string charToString = equation[i] + \"\";\r\n    if (!\"12\".Contains(charToString))\r\n    {\r\n        Console.Write(charToString);\r\n    }\r\n}","answers":["160 + 135 = 295","60 + 35 = 95","1 1 2"],"correct_answer":"60 + 35 = 95","explanation":"The for loop iterates over each symbol of the equation.\r\n<br><br>\r\nOnly symbols that are not '1' and '2' are printed. That's specified via <code>!\"12\".Contains(charToString)<\/code>.\r\n<br><br>\r\n\r\nBasically <code>1<\/code>60 + <code>1<\/code>35 = <code>2<\/code>95 is simplified to: <br>\r\n60 + 35 = 95"}],"puzzles":[{"id":1994234307,"text":"Fill the missing words to match the output.","code":"string str = 'clarity';\r\nConsole.WriteLine(str[fillword]);\r\nConsole.WriteLine(str[fillword]);\r\nConsole.WriteLine(str[fillword]);","result":"c a t","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","5"]]},{"id":797096320,"text":"Fill the missing words to match the output.","code":"string str = \"jacket\";\r\nConsole.WriteLine(str.fillword + fillword);","result":"10","words":{"operators":[],"values":["1","2","3","4","5","6","7","8"],"variables_constants":[],"others":["Size","Count","Length"]},"correct_patterns":[["Length","4"]]},{"id":1614272833,"text":"Fill the missing words to match the output.","code":"string str = \"readability\";\r\n\r\nfor (int i = 0; i < str.Length; i++)\r\n{\r\n    string charToString = str[i] + \"\";\r\n    if (fillword.fillword(fillword))\r\n    {\r\n        Console.Write(charToString);\r\n    }\r\n}","result":"a a b","words":{"operators":[],"values":["\"readability\"","\"redility\"","\"ab\""],"variables_constants":[],"others":["Contains","Has","Length","charToString"]},"correct_patterns":[["\"ab\"","Contains","charToString"]]}]}],"Advanced":[{"id":726400197,"name":"Arrays","tests":[{"id":1209521240,"question":"What's the output of the code snippet?","code":"int[] arr = { 5, 10, 15 };\r\nConsole.Write(arr[1]);","answers":["5","10","15"],"correct_answer":"10","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":46461977,"question":"What's the output of the code snippet?","code":"string[] colors = { \"blue\", \"green\", \"pink\" };\r\n\r\nfor(int i = 0; i < 2; i++)\r\n{\r\n    Console.Write(colors[i] + \" \");\r\n}","answers":["blue green","blue green pink","green pink"],"correct_answer":"blue green","explanation":"The loop executes for i = 0 and i = 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">blue<\/td>\r\n            <td class=\"table-primary\">green<\/td>\r\n            <td>pink<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2070484902,"question":"What's the output of the code snippet?","code":"int[] ages = { 10, 15, 20, 25, 30 };\r\nConsole.Write(ages.Length);","answers":["5","4","30"],"correct_answer":"5","explanation":"The <code>Length<\/code> property is the count of the array elements.\r\n<br><br>\r\nThe array has 5 elements."},{"id":1008613223,"question":"What's the output of the code snippet?","code":"int[] numbers = new int[3];\r\n\r\nConsole.Write(numbers[0] + \" \");\r\nConsole.Write(numbers[1]);","answers":["0 0","0 1","Exception"],"correct_answer":"0 0","explanation":"An array with 3 elements is created.\r\n<br><br>\r\nAll of it's elements have default value - 0.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>0<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1992513316,"question":"What's the output of the code snippet?","code":"int[] numbers = { 1, 2, 3};\r\nConsole.Write(numbers[3]);","answers":["3","1","Exception"],"correct_answer":"Exception","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nAccessing index that's outside of it's bounds results in exception."}],"puzzles":[{"id":1129889615,"text":"Fill the missing words to match the output.","code":"int[] arr = {8, 4, 5, 6, 3};\r\n\r\nConsole.Write(arr[fillword] + \" \");\r\nConsole.Write(arr[fillword] + \" \"); \r\nConsole.Write(arr[fillword]);","result":"8 5 3","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","4"]]},{"id":68017932,"text":"Fill the missing words to match the output.","code":"int[] arr = {5, 7, 9, 3};\r\n\r\nfor(int i = fillword; i < fillword; i++)\r\n{\r\n    Console.Write(arr[fillword] + \" \");\r\n}","result":"5 7 9 3","words":{"operators":[],"values":["0","1","2","3","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["0","4","i"]]},{"id":2125659853,"text":"Fill the missing words to match the output.","code":"int[] arr = {1, 2, 9, 8, 6};\r\n\r\nfor(int i = 0; i < fillword; i++)\r\n{\r\n    if(i % 2 == fillword) {\r\n        Console.Write(arr[fillword] + \" \");\r\n    }\r\n}","result":"1 9 6","words":{"operators":[],"values":["0","1","4","5","i"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","i"]]}]},{"id":1093598153,"name":"Functions","tests":[{"id":795899621,"question":"What's the output of the code snippet?","code":"class Program {\r\n    static void Main(string[] args) {\r\n        a();\r\n    }\r\n    static void a() {\r\n        Console.Write(\"1 \");\r\n    }\r\n    static void b() {\r\n        Console.Write(\"2 \");\r\n    }\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"The function <code>a<\/code> is called in the main function thus \"1 \" is printed."},{"id":1613010594,"question":"What's the output of the code snippet?","code":"static void Main(string[] args) {\r\n    int sum = getSum(2,4,3);\r\n    Console.Write(sum);\r\n}\r\n\r\nstatic int getSum(int a, int b, int c) {\r\n    return a + b + c;\r\n}","answers":["0","9","243"],"correct_answer":"9","explanation":"The <code>getSum<\/code> function is called with 3 parameters - 2, 4 and 3 which sum is 9."},{"id":1523168867,"question":"What's the output of the code snippet?","code":"static void Main(string[] args) {\r\n    printArg();\r\n}\r\n\r\nstatic void printArg(int number) {\r\n    Console.Write(number);\r\n}","answers":["0","1","Exception"],"correct_answer":"Exception","explanation":"The function <code>printArg<\/code> accepts 1 argument but none are passed to it thus exception is thrown."},{"id":327079456,"question":"What's the output of the code snippet?","code":"static void Main(string[] args) {\r\n    printName();\r\n    Console.Write(\" \");\r\n    printName(\"Joe\");\r\n}\r\n\r\nstatic void printName(string name = \"Unknown\") {\r\n    Console.Write(name);\r\n}","answers":["Unknown Unknown","Unknown Joe","Exception"],"correct_answer":"Unknown Joe","explanation":"The <code>name<\/code> argument has default value - <code>\"Unknown\"<\/code>.\r\n<br><br>\r\nWhen <code>printName<\/code> is called without argument <code>name<\/code> takes it's default value - <code>Unknown<\/code>."},{"id":1411641825,"question":"What's the output of the code snippet?","code":"static void Main(string[] args) {\r\n    int prod = getProd(1, 2, 3);\r\n    Console.Write(prod);\r\n}\r\n\r\nstatic string getProd(int a, int b, int c) {\r\n    return a * b * c;\r\n}","answers":["123","6","Exception"],"correct_answer":"Exception","explanation":"The <code>getProd<\/code> function is expected to return a string but it returns an integer thus exception is thrown."}],"puzzles":[{"id":929504906,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    fillword;\r\n    fillword;\r\n}\r\nstatic void a() {\r\n    Console.WriteLine(1);\r\n}\r\nstatic void b() {\r\n    Console.WriteLine(2);\r\n}","result":"1\r\n2","words":{"operators":[],"values":[],"variables_constants":[],"others":["a","b","a()","b()"]},"correct_patterns":[["a()","b()"]]},{"id":1746157131,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    int sum = sumNums(fillword);\r\n    Console.Write(sum);\r\n}\r\nstatic fillword sumNums(int a, int b) {\r\n    fillword a + b;\r\n}","result":"7","words":{"operators":[],"values":[],"variables_constants":[],"others":["int","void","return","sum =","2, 5","7"]},"correct_patterns":[["2, 5","int","return"]]},{"id":582573576,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    printArgs(fillword);\r\n}\r\nstatic void printArgs(int a, int b, int fillword) {\r\n    Console.Write(a + \" \" + b + \" \" + c);\r\n}","result":"1 2 5","words":{"operators":[],"values":[],"variables_constants":[],"others":["c","c = 5","1, 2","1, 2, 3"]},"correct_patterns":[["1, 2","c = 5"]]}]},{"id":1003690902,"name":"Lists","tests":[{"id":248517038,"question":"What's the output of the code snippet?","code":"List<int> list = new List<int> { 1, 3, 5, 7, 9 };\r\nConsole.Write(list[3]);","answers":["3","5","7"],"correct_answer":"7","explanation":"The list has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td >0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td class=\"table-primary\">3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>3<\/td>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">7<\/td>\r\n            <td>9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1199911279,"question":"What's the output of the code snippet?","code":"List<int> prices = new List<int> { 100, 320, 510, 180 };\r\n\r\nforeach(int price in prices)\r\n{\r\n    if(price <= 180)\r\n    {\r\n        Console.Write(price + \" \");\r\n    }\r\n}","answers":["100 180","320 510","100"],"correct_answer":"100 180","explanation":"The list has 4 elements only 2 of which meet the condition <code>price <= 180<\/code> - 100 and 180."},{"id":942297388,"question":"What's the output of the code snippet?","code":"List<int> ages = new List<int> { 15, 25, 18 };\r\nages.Add(23);\r\nages.Add(16);\r\n\r\nConsole.Write(ages.Count);","answers":["2","3","5"],"correct_answer":"5","explanation":"The list is initalized with 3 elements and afterwards 2 are added via the <code>Add<\/code> function.\r\n<br><br>\r\n3 + 2 = 5"},{"id":1927246061,"question":"What's the output of the code snippet?","code":"List<int> numbers = new List<int> { 35 };\r\nConsole.Write(numbers[1]);","answers":["0","35","Exception"],"correct_answer":"Exception","explanation":"The list has 1 element that can be accessed via [0].\r\n<br><br>\r\n[1] is outside of the list's bounds which results in exception."},{"id":730042538,"question":"What's the output of the code snippet?","code":"List<int> nums1 = new List<int> { 3, 5 };\r\nList<int> nums2 = new List<int> { 2, 4 };\r\n\r\nfor(int i = 0; i < 2; i++) {\r\n    Console.Write(nums1[i]);\r\n    Console.Write(\" \");\r\n    Console.Write(nums2[i]);\r\n    Console.Write(\" \");\r\n}","answers":["3 5 2 4","3 2 5 4","2 3 4 5"],"correct_answer":"3 2 5 4","explanation":"<code>i<\/code> takes values of 0 and 1.\r\nThe elements are printed in the following way:\r\n<br><br> \r\n<code>nums1[0]<\/code> <code>nums2[0]<\/code>\r\n<code>nums1[1]<\/code> <code>nums2[1]<\/code>\r\n<br><br>\r\nThe lists have the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>nums1 <\/th>\r\n            <td >3<\/td>\r\n            <td >5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>nums2 <\/th>\r\n            <td >2<\/td>\r\n            <td >4<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":460224969,"text":"Fill the missing words to match the output.","code":"List<int> list = new List<int> { 5, 8, 6 };\r\nlist.Add(fillword);\r\nConsole.Write(list[fillword] + \" \");\r\nConsole.Write(list[fillword] + \" \" + list[3]);","result":"5 6 7","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["7","0","2"]]},{"id":1544722838,"text":"Fill the missing words to match the output.","code":"List<int> numbers = new List<int> { 3, 7, 0, 9, 1 };\r\nforeach (int num in numbers)\r\n{\r\n    if (num fillword fillword)\r\n    {\r\n        Console.Write(num + \" \");\r\n    }\r\n}","result":"7 9","words":{"operators":["<","<=",">",">="],"values":["0","1","7","9"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","7"]]},{"id":382187863,"text":"Fill the missing words to match the output.","code":"List<int> numbers = new List<int> {fillword};\r\nnumbers.Add(5);\r\nnumbers.Add(8);\r\nif (numbers.Count == fillword) {\r\n    Console.Write(\"Count Property\");\r\n}","result":"Count Property","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["0","0, 3","0,3,4"]},"correct_patterns":[["0,3,4","5"]]}]},{"id":2088778583,"name":"Associative Arrays","tests":[{"id":1815130219,"question":"What's the output of the code snippet?","code":"Dictionary<string, double> clothes = new Dictionary<string, double>();\r\n\r\nclothes.Add(\"Sweather\", 55);\r\nclothes.Add(\"Jeans\", 45);\r\n\r\nConsole.Write(clothes[\"Jeans\"]);","answers":["0","45","55"],"correct_answer":"45","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Sweather<\/td>\r\n            <td class=\"table-primary\">Jeans<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>55<\/td>\r\n            <td class=\"table-primary\">45<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe value 45 is accessed via the \"Jeans\" key."},{"id":652595240,"question":"What's the output of the code snippet?","code":"Dictionary<string, double> fruits = new Dictionary<string, double>();\r\n\r\nfruits.Add(\"strawberry\", 2.5);\r\nfruits.Add(\"cherry\", 1.8);\r\n\r\nConsole.Write(fruits[\"mango\"]);","answers":["0","2.5","Exception"],"correct_answer":"Exception","explanation":"The associative array doesn't contain \"mango\" key\r\nthus exception is thrown.\r\n<br><br>\r\nThe associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>strawberry<\/td>\r\n            <td>cherry<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>2.5<\/td>\r\n            <td>1.8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":529200105,"question":"What's the output of the code snippet?","code":"Dictionary<string, int> personsAges = new Dictionary<string, int>();\r\n\r\npersonsAges.Add(\"John\", 22);\r\npersonsAges.Add(\"Alex\", 25);\r\n\r\nforeach (KeyValuePair<string, int> entry in personsAges)\r\n    Console.Write(entry.Key + \" \");\r\n}","answers":["John Alex","Alex John","22 25"],"correct_answer":"John Alex","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>John<\/td>\r\n            <td>Alex<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>22<\/td>\r\n            <td>25<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe for loop prints only the keys."},{"id":1346311094,"question":"What's the output of the code snippet?","code":"Dictionary<string, int> playerScores = new Dictionary<string, int>();\r\n\r\nplayerScores.Add(\"Snowy\", 123);\r\nplayerScores.Add(\"Avian\", 130);\r\n\r\nplayerScores.Remove(\"Snowy\");\r\n\r\nforeach (KeyValuePair<string, int> entry in playerScores)\r\n    Console.Write(entry.Value + \" \");\r\n}","answers":["123","130","123 130"],"correct_answer":"130","explanation":"Via the add functions 2 key-value pairs are added.\r\n<br><br>\r\nVia the remove function one of the key-value pairs is removed.\r\n<br><br>\r\nThe for loop prints all values - which is only 130.\r\n<br><br>\r\nThe final structure of the associative array is:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Avian<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>130<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":183251831,"question":"What's the output of the code snippet?","code":"Dictionary<string, string> capitals = new Dictionary<string, string>();\r\n\r\ncapitals.Add(\"France\", \"Paris\");\r\ncapitals.Add(\"Canada\", \"Ottawa\");\r\ncapitals.Add(\"Spain\", \"Madrid\");\r\n\r\ncapitals.Remove(\"Spain\");\r\nConsole.Write(capitals.Count);","answers":["0","2","3"],"correct_answer":"2","explanation":"The <code>Count<\/code> property returns the count of the key-value pairs.\r\n<br><br>\r\n3 key-value pairs are added to the associative array and afterwards 1 is removed.\r\n<br><br>\r\n3 - 1 = 2"}],"puzzles":[{"id":1333057812,"text":"Fill the missing words to match the output.","code":"Dictionary<string, int> persons = new Dictionary<string, int>();\r\npersons.Add(fillword, fillword);\r\npersons.Add(fillword, fillword);\r\n\r\nConsole.Write(persons[\"James\"] + \" \");\r\nConsole.Write(persons[\"Sophia\"]);","result":"26 22","words":{"operators":[],"values":["20","22","26","\"Jake\"","\"James\"","\"Sophia\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Sophia\"","22","\"James\"","26"],["\"James\"","26","\"Sophia\"","22"]]},{"id":1702101,"text":"Fill the missing words to match the output.","code":"Dictionary<string, string> grades = new Dictionary<string, string>();\r\ngrades.Add(\"Olivia\", \"A\");\r\ngrades.Add(\"James\", \"B\");\r\n\r\nforeach (KeyValuePair<string, string> entry in grades)\r\n    Console.WriteLine(entry.fillword+ \" \" + entry.fillword);\r\n}","result":"Olivia A\r\nJames B","words":{"operators":[],"values":["Olivia","James"],"variables_constants":[],"others":["Key","Value"]},"correct_patterns":[["Key","Value"]]},{"id":2060327058,"text":"Fill the missing words to match the output.","code":"Dictionary<string, string> colors = new Dictionary<string, string>();\r\ncolors.Add(\"White\", \"#ffffff\");\r\ncolors.Add(\"Black\", \"#000000\");\r\ncolors.Add(fillword, \"#00ff00\");\r\n\r\ncolors.Remove(\"Black\");\r\nConsole.Write(colors.fillword);","result":"2","words":{"operators":[],"values":["\"White\"","\"Black\"","\"Green\""],"variables_constants":[],"others":["Count","Keys","Values"]},"correct_patterns":[["\"Green\"","Count"]]}]},{"id":892689172,"name":"Hashset","tests":[{"id":1133597492,"question":"What's the output of the code snippet?","code":"HashSet<string> cities = new HashSet<string>();\r\n\r\ncities.Add(\"Rome\");\r\ncities.Add(\"Rome\");\r\ncities.Add(\"Beljing\");\r\nforeach(string city in cities)\r\n{\r\n    Console.Write(city + \" \");\r\n}","answers":["Rome Rome","Rome Rome Beljing","Rome Beljing"],"correct_answer":"Rome Beljing","explanation":"HashSet holds only unique values. \r\n<br><br>\r\nFor that reason \"Rome\" is contained only once."},{"id":71725813,"question":"What's the output of the code snippet?","code":"HashSet<string> names = new HashSet<string>();\r\n\r\nnames.Add(\"Michelle\");\r\nnames.Add(\"Emily\");\r\nnames.Add(\"Ally\");\r\nnames.Add(\"Ally\");\r\n\r\nConsole.Write(names.Count);","answers":["2","3","4"],"correct_answer":"3","explanation":"HashSet holds only unique values. \r\n<br><br>\r\nThe \"Ally\" value is contained only once.\r\n<br><br>\r\nThe HashSet holds 3 values - \"Michelle\", \"Emily\" and \"Ally\"."},{"id":2129302194,"question":"What's the output of the code snippet?","code":"HashSet<string> socialMedias = new HashSet<string>();\r\n\r\nsocialMedias.Add(\"Instagram\");\r\nsocialMedias.Add(\"Snapchat\");\r\n\r\nsocialMedias.Add(\"Facebook\");\r\nsocialMedias.Add(\"Facebook\");\r\nsocialMedias.Remove(\"Facebook\");\r\n\r\nConsole.Write(socialMedias.Count);","answers":["2","3","4"],"correct_answer":"2","explanation":"The HashSet holds only unique values.\r\n<br><br>\r\nWhen \"Facebook\" value is removed only 2 values remain - \"Instagram\" and \"Snapchat\"."},{"id":933212787,"question":"What's the output of the code snippet?","code":"HashSet<string> colors = new HashSet<string>();\r\n\r\ncolors.Add(\"gray\");\r\ncolors.Add(\"blue\");\r\nConsole.Write(colors.Contains(\"blue\"));","answers":["pink","false","true"],"correct_answer":"true","explanation":"The HashSet contains 2 values - \"gray\" and \"blue\".\r\n<br><br>\r\n\"blue\" is contained in the HashSet  thus the <code>Contains<\/code> method returns true."},{"id":1749865008,"question":"What's the output of the code snippet?","code":"HashSet<string> devices = new HashSet<string>();\r\n\r\ndevices.Add(\"smartphone\");\r\ndevices.Add(\"tablet\");\r\ndevices.Remove(\"tablet\");\r\n\r\nConsole.Write(devices.Contains(\"tablet\"));","answers":["tablet","true","false"],"correct_answer":"false","explanation":"The tablet value is removed from the HashSet thus the <code>Contains<\/code> method returns false."}],"puzzles":[{"id":863189075,"text":"Fill the missing words to match the output.","code":"HashSet<string> names = new HashSet<string>();\r\n\r\nnames.Add(\"Mia\");\r\nnames.Add(\"Lucas\");\r\nnames.Add(fillword);\r\nnames.Add(fillword);\r\n\r\nConsole.Write(names.Count);","result":"2","words":{"operators":[],"values":["\"Jo\"","\"Mia\"","\"Joe\"","\"Lucas\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Mia\"","\"Lucas\""],["\"Lucas\"","\"Mia\""]]},{"id":1948276752,"text":"Fill the missing words to match the output.","code":"HashSet<int> numbers = new HashSet<int>();\r\nnumbers.Add(fillword);\r\nnumbers.Add(5);\r\nnumbers.Add(fillword);\r\n\r\nnumbers.Remove(fillword);\r\nforeach (int num in numbers) {\r\n    Console.Write(num + \" \");\r\n}","result":"1 7","words":{"operators":[],"values":["1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["1","7","5"]]},{"id":785742801,"text":"Fill the missing words to match the output.","code":"HashSet<string> cities = new HashSet<string>();\r\n\r\ncities.Add(fillword);\r\ncities.Add(\"London\");\r\ncities.Add(fillword);\r\n\r\nConsole.Write(cities.fillword(fillword);","result":"true","words":{"operators":[],"values":["\"Moscow\"","\"Wellington\"","\"London\""],"variables_constants":[],"others":["Contains","Equals","IndexOf"]},"correct_patterns":[["\"Moscow\"","\"Wellington\"","Contains","\"London\""],["\"Wellington\"","\"Moscow\"","Contains","\"London\""]]}]},{"id":1876589269,"name":"Matrix","tests":[{"id":586284529,"question":"What's the output of the code snippet?","code":"int[,] matrix = {\r\n    {2, 4, 6 },\r\n    {1, 3, 5 }\r\n};\r\n\r\nConsole.Write(matrix[1,1]);","answers":["1","2","3"],"correct_answer":"3","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th class=\"btn-primary\">[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>2<\/td>\r\n            <td>4<\/td>\r\n            <td>6<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[1]<\/th>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":463871422,"question":"What's the output of the code snippet?","code":"int[,] matrix = {\r\n    { 5, 7, 8 },\r\n    { 2, 2, 3 },\r\n    { 4, 4, 9 }\r\n};\r\n\r\nConsole.Write(matrix[2,2]);","answers":["2","4","9"],"correct_answer":"9","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th class=\"btn-primary\">[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>5<\/td>\r\n            <td>7<\/td>\r\n            <td>8<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>2<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[2]<\/th>\r\n            <td>4<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1548434815,"question":"What's the output of the code snippet?","code":"int[,] matrix = {\r\n    { 0, 1, 2 },\r\n    { 3, 4, 5 },\r\n    { 6, 7, 8 }\r\n};\r\n\r\nfor(int i = 0; i < 3; i++)\r\n{\r\n    Console.Write(matrix[i, i] + \" \");\r\n}","answers":["0 4 8","0 3 6","0 1 2"],"correct_answer":"0 4 8","explanation":"Via the for loop the row-col positions of the matrix are: <br>\r\n[0, 0],  [1, 1], [2, 2].\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td>6<\/td>\r\n            <td>7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":385375548,"question":"What's the output of the code snippet?","code":"int[,] matrix = {\r\n    { 0, 1, 2 },\r\n    { 3, 4, 5 },\r\n    { 6, 7, 8 }\r\n};\r\n\r\nfor(int i = 0; i < 3; i++)\r\n{\r\n    for (int j = 0; j < 3; j++)\r\n    {\r\n        if (i == 2 || j == 2)\r\n        {\r\n            Console.Write(matrix[i, j] + \" \");\r\n        }\r\n    }\r\n}","answers":["0 1 3 4","2 5 6 7 8","6 7 8"],"correct_answer":"2 5 6 7 8","explanation":"In this case <code>i<\/code> represents the row index and <code>j<\/code> - the column.<br><br>\r\nBasically the elements of the last column and row are printed.\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td class=\"btn-primary\">6<\/td>\r\n            <td class=\"btn-primary\">7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1336769789,"question":"What's the output of the code snippet?","code":"int[,] matrix = {\r\n    { 0, 1, 0, 1, 0 },\r\n    { 1, 0, 1, 0, 1 },\r\n    { 0, 1, 0, 1, 0 },\r\n    { 1, 0, 1, 0, 1 },\r\n};\r\n\r\nint sum = 0;\r\nfor(int i = 0; i < 4; i++) {\r\n    for (int j = 0; j < 5; j++) {\r\n        if ((i + j) % 2 == 0) {\r\n            sum += matrix[i, j];\r\n        }\r\n    }\r\n}\r\nConsole.Write(sum);","answers":["0","10","6"],"correct_answer":"0","explanation":"The elements which have even sum of row and column index are sumed.  It's like a chessboard field.\r\n<br><br>\r\nAll of the summed elements are 0s which makes the\r\nvalue of the <code>sum<\/code>  variable 0.\r\n<br><br>\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n            <th>[3]<\/td>\r\n            <th>[4]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[3]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1736022942,"text":"Fill the missing words to match the output.","code":"int[,] matrix = {\r\n    {4, 1, 6, 3 },\r\n    {2, 8, 0, 7 }\r\n};\r\n\r\nConsole.Write(matrix[fillword, fillword] + \" \");\r\nConsole.Write(matrix[fillword, fillword]);","result":"3 0","words":{"operators":[],"values":["0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","3","1","2"]]},{"id":1479457631,"text":"Fill the missing words to match the output.","code":"int[,] matrix = {\r\n    { 4, 1, 6 },\r\n    { 3, 8, 0 },\r\n    { 7, 2, 5 }\r\n};\r\nfor(int i = 0; i < fillword; i++) {\r\n    Console.Write(matrix[fillword, fillword] + \" \");\r\n}","result":"1 8 2","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i"],"others":[]},"correct_patterns":[["3","i","1"]]},{"id":315874076,"text":"Fill the missing words to match the output.","code":"int[,] matrix = {\r\n    { 5, 2, 8 },\r\n    { 1, 3, 6 },\r\n    { 4, 0, 7 }\r\n};\r\n\r\nfor (int i = 0; i < 3; i++) {\r\n    for (int j = 0; j < 3; j++) {\r\n        if (i == fillword || j == fillword) {\r\n            Console.Write(matrix[fillword, j] + \" \");\r\n        }\r\n    }\r\n}","result":"5 1 4 0 7","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["i","j"],"others":[]},"correct_patterns":[["2","0","i"]]}]},{"id":546216594,"name":"Reference Passing","tests":[{"id":5348538,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int num = 5;\r\n    decrement(num);\r\n    Console.Write(num);\r\n}\r\n\r\nstatic void decrement(int num)\r\n{\r\n    num--;\r\n}","answers":["0","4","5"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 5 in the main function."},{"id":2030484603,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int num = 7;\r\n    printDecremented(num);\r\n    Console.Write(num);\r\n}\r\n\r\nstatic void printDecremented(int num)\r\n{\r\n    num--;\r\n    Console.Write(num + \" \");\r\n}","answers":["6 6","6 7","7 7"],"correct_answer":"6 7","explanation":"The <code>num<\/code> argument is not passed by reference so <code>num<\/code> remains 7 in the main function.\r\n<br><br>\r\nDespite that, the value gets decremented inside the <code>printDecremented<\/code> function."},{"id":866901048,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int num = 10;\r\n    divideBy2(ref num);\r\n    Console.Write(num);\r\n}\r\n\r\nstatic void divideBy2(ref int num)\r\n{\r\n    num \/= 2;\r\n}","answers":["0","5","10"],"correct_answer":"5","explanation":"The <code>num<\/code> argument is passed by reference so num's value is halved in the main function."},{"id":1951989753,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int num = 15;\r\n    printDividedBy3(ref num);\r\n    Console.Write(num);\r\n}\r\n\r\nstatic void printDividedBy3(ref int num)\r\n{\r\n    num \/= 3;\r\n    Console.Write(num + \" \");\r\n}","answers":["15 5","5 15","5 5"],"correct_answer":"5 5","explanation":"The <code>num<\/code> argument is passed by reference. It's value is modified in both main and <code>printDividedBy3<\/code> functions."},{"id":755834758,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int[] arr = { 0, 1 };\r\n    add1ToArray(arr);\r\n    Console.Write(arr[0] + \" \" + arr[1]);\r\n}\r\n\r\nstatic void add1ToArray(int[] arr)\r\n{\r\n    arr[0] += 1;\r\n    arr[1] += 1;\r\n}","answers":["0 1","1 1","1 2"],"correct_answer":"1 2","explanation":"Array is always passed by reference so it's elements are modified in the main function."}],"puzzles":[{"id":1266744029,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    int a = 1;\r\n    int b = 1;\r\n\r\n    increment(a, ref b);\r\n    Console.Write(a + \" \" + b);\r\n}\r\nstatic void increment(fillword, fillword) {\r\n    arg1++;\r\n    arg2++;\r\n}","result":"1 2","words":{"operators":[],"values":[],"variables_constants":[],"others":["int arg1","ref int arg1","int arg2","ref int arg2"]},"correct_patterns":[["int arg1","ref int arg2"],["int arg2","ref int arg1"]]},{"id":204806810,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    int[] arr = { 0, 1, 2 };\r\n    add1ToArr(arr);\r\n    Console.Write(arr[fillword] + \" \");\r\n    Console.Write(arr[fillword]);\r\n}\r\nstatic void add1ToArr(int[] arr) {\r\n    arr[0]++;\r\n    arr[1]++;\r\n    arr[2]++;\r\n}","result":"1 2","words":{"operators":[],"values":["-1","0","1","2","3","4"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]},{"id":1188706907,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    List<int> list = new List<int> { fillword };\r\n    int num = 2;\r\n    add1(list, num);\r\n\r\n    Console.Write(fillword + \" \" );\r\n    Console.Write(fillword);\r\n}\r\nstatic void add1(List<int> list, int num) {\r\n    list.Add(1);\r\n    num++;\r\n}","result":"3 2","words":{"operators":[],"values":[],"variables_constants":["list","num"],"others":["list.Count","1","1, 2","1, 2, 3"]},"correct_patterns":[["1, 2","list.Count","num"]]}]},{"id":422820435,"name":"Recursion","tests":[{"id":1739734855,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    Console.Write(sum(4));\r\n}\r\n\r\nstatic int sum(int num)\r\n{\r\n    if (num == 1)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    return num + sum(num - 1);\r\n}","answers":["1","4","10"],"correct_answer":"10","explanation":"The <code>sum<\/code> function sums the numbers from n to 1.\r\n<br><br> \r\nIn this case 4 + 3 + 2 + 1 = 10.\r\n<br><br>\r\nThe recursion ends when the condition <code>num == 1<\/code> is met."},{"id":1483169540,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    Console.Write(sum(3));\r\n}\r\n\r\nstatic int sum(int num)\r\n{\r\n    return num + sum(num - 1);\r\n}","answers":["3","6","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"There is no end condition of the recursion so  Stackoverflow Exception is thrown.\r\n<br><br>\r\nA suitable end condition could be: <br>\r\nif(num == 1) return 1;"},{"id":286555845,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int[] arr = { 1, 2, 3, 4};\r\n    print(arr, 0);\r\n}\r\n\r\nstatic void print(int[] arr, int index)\r\n{\r\n    if(index < arr.Length) {\r\n        Console.Write(arr[index] + \" \");\r\n        print(arr, index + 1);\r\n    }\r\n}","answers":["1","1 2 3 4","Stackoverflow Exception"],"correct_answer":"1 2 3 4","explanation":"The function prints all elements of the array by passing array and  index of element.\r\n<br><br>\r\nThe index gets incremented each time so the next element is printed.\r\n<br><br>\r\nThe recursion ends when the condition <code>index < arr.Length<\/code> becomes false."},{"id":1270390402,"question":"What's the output of the code snippet?","code":"static void Main(string[] args)\r\n{\r\n    int[] arr = { 1, 2, 3, 4, 5};\r\n    printUntilZero(arr, 0);\r\n}\r\n\r\nstatic void printUntilZero(int[] arr, int index)\r\n{\r\n    if(arr[index] != 0) {\r\n        Console.Write(arr[index] + \" \");\r\n        printUntilZero(arr, index + 1);\r\n    }\r\n}","answers":["0","1 2 3 4 5","Exception"],"correct_answer":"Exception","explanation":"The recursion is supposed to end when element with value of zero is found.\r\n<br><br>\r\nThe passed array does not contain any 0s so the recursion repeats until the index gets out of the array's bounds."},{"id":208518723,"question":"What's the output of the code snippet?","code":"static void Main(string[] args) {\r\n    int sum = calculate(7);\r\n    Console.Write(sum);\r\n}\r\n\r\nstatic int calculate(int num) {\r\n    if(num == 0) {\r\n        return 0;\r\n    }\r\n\r\n    if(num % 2 == 1) {\r\n        num--;\r\n    }\r\n\r\n    return num + calculate(num - 2);\r\n}","answers":["7","12","16"],"correct_answer":"12","explanation":"The function <code>calculate<\/code> sums the numbers 6, 4, 2 and 0.\r\n<br><br>\r\n6 + 4 + 2 + 0 = 12"}],"puzzles":[{"id":1066359320,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    int sum = sumNums(fillword);\r\n    Console.Write(sum);\r\n}\r\nstatic int sumNums(int num) {\r\n    if (num > 1) {\r\n        return fillword + sumNums(fillword);\r\n    }\r\n\r\n    return fillword;\r\n}","result":"15","words":{"operators":[],"values":["-1","0","1","3","4","5"],"variables_constants":["num","num - 1","num + 1"],"others":[]},"correct_patterns":[["5","num","num - 1","1"]]},{"id":1883006425,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    printUntil(2, fillword);\r\n}\r\nstatic void printUntil(int printNum, int stop) {\r\n    if (fillword <= stop) {\r\n        Console.Write(printNum + \" \");\r\n        printUntil(fillword, fillword);\r\n    }\r\n}","result":"2 4 8 16","words":{"operators":[],"values":["8","16","32"],"variables_constants":[],"others":["printNum","printNum + 2","printNum * 2","stop","stop * 2"]},"correct_patterns":[["16","printNum","printNum * 2","stop"]]},{"id":719357286,"text":"Fill the missing words to match the output.","code":"static void Main(string[] args) {\r\n    int[] arr = { 1, 5, 6, 7, 9 };\r\n    printElems(arr, 0);\r\n}\r\nstatic void printElems(int[] arr, int index) {\r\n    if (index < arr.Length) {\r\n        Console.Write(arr[fillword] + \" \");\r\n        printElems(fillword, index + fillword);\r\n    }\r\n}","result":"1 5 6 7 9","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["index","arr","arr.Length"]},"correct_patterns":[["index","arr","1"]]}]}],"OOP":[{"id":1844976770,"name":"Classes And Objects","tests":[{"id":669224782,"question":"How many objects are created in the code segment?","code":"class Person {};\r\nclass Smartphone {};\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tPerson jack = new Person();\r\n\t\tSmartphone sm = new Smartphone();\r\n\t}\r\n}","answers":["0","2","3"],"correct_answer":"2","explanation":"There are 2 objects - <code>jack<\/code> and <code>sm<\/code> .\r\n<br><br>\r\nAlso there  are 3 classes - <code>Person<\/code>, <code>Smartphone<\/code> and <code>Program <\/code>."},{"id":412135183,"question":"How many classes are defined in the code segment?","code":"class Cat {};\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCat cat1 = new Cat();\r\n\t\tCat cat2 = new Cat();\r\n\t\tCat cat3 = new Cat();\r\n\t}\r\n}","answers":["1","2","3"],"correct_answer":"2","explanation":"There  are 2 classes - <code>Cat <\/code> and <code>Program <\/code> .\r\n<br><br>\r\nThere are 3 objects - <code>cat1<\/code>, \r\n <code>cat2<\/code> and <code>cat3<\/code> ."},{"id":1363529420,"question":"Which of the following is a class field?","code":"class Cube {\r\n\tpublic double a;\r\n\tpublic double calcVolume() {\r\n\t\treturn a * a * a;\r\n\t}\r\n}","answers":["Cube","a","calcVolume"],"correct_answer":"a","explanation":"<ul>\r\n<li><code>a<\/code> is a class field.<\/li>\r\n<li><code>calcVolume<\/code> is a class function.<\/li>\r\n<li><code>Cube<\/code> is the class name.<\/li>\r\n<\/ul>"},{"id":199945869,"question":"What's the output of the code snippet?","code":"class Tree {}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTree tree = new Tree();\r\n\t\ttree.height = 100;\r\n\t\tConsole.WriteLine(tree.height);\r\n\t}\r\n}","answers":["100","height","Exception - height is not a class member"],"correct_answer":"Exception - height is not a class member","explanation":"The <code>Tree<\/code> class needs to have a class field height in order to avoid the exception.\r\n<br><br>\r\nSuch could be:\r\n<br>\r\n<code>public double height;<\/code>"},{"id":1285492298,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic double price;\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCar car = new Car();\r\n\t\tdouble price = 19999;\r\n\t\tcar.price = price;\r\n        \r\n\t\tprice++;\r\n\t\tConsole.Write(car.price + \" \");\r\n\t\tcar.price++;\r\n\t\tConsole.Write(car.price);\r\n\t}\r\n}","answers":["19999 19999","19999 20000","20000 20001"],"correct_answer":"19999 20000","explanation":"Modifying the <code>price<\/code> variable does not change  the value of the class member."}],"puzzles":[{"id":1670751527,"text":"Define a class.","code":"class Employee {\r\n    private fillword fillword;\r\n    fillword fillword age;\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["private","int","string","name","{","}"]},"correct_patterns":[["string","name","private","int"]]},{"id":607831268,"text":"Create Objects.","code":"class Smartphone {\r\n    private string model;\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Smartphone fillword = fillword Smartphone();\r\n        fillword obj2 fillword new Smartphone();\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["obj1","obj2","Smartphone","new","="]},"correct_patterns":[["obj1","new","Smartphone","="]]},{"id":519038117,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public string name;\r\n    public int age;\r\n    public void represent() {\r\n        Console.Write(\"My name is \" + name + \". \");\r\n        Console.Write(\"I am \" + age + \" years old.\");\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Person fillword= new Person();\r\n        person.fillword = fillword;\r\n        person.fillword= 22;\r\n        person.represent();\r\n    }\r\n}","result":"My name is Joe. I am 22 years old.","words":{"operators":[],"values":["\"Joe\"","17","22"],"variables_constants":["person"],"others":["name","years","age"]},"correct_patterns":[["person","name","\"Joe\"","age"]]}]},{"id":648887363,"name":"Public And Private","tests":[{"id":88878603,"question":"What's the output of the code snippet?","code":"class Apartment {\r\n\tprivate int roomsCount;\r\n\tpublic void setRoomsCount(int roomsVal) {\r\n\t\troomsCount = roomsVal;\r\n\t}\r\n\tpublic void printRoomsCount() {\r\n\t\tConsole.Write(roomsCount);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tApartment obj = new Apartment();\r\n\t\tobj.setRoomsCount(5);\r\n\t\tobj.printRoomsCount();\r\n\t}\r\n}","answers":["0","5","Exception"],"correct_answer":"5","explanation":"All class members that are accessed in the main function (<code>setRoomsCount<\/code> and <code>printRoomsCount<\/code>) are declared <code>public<\/code>.\r\n<br><br>\r\nFor that reason no exception is thrown."},{"id":2146519496,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tprivate string model;\r\n};\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCar obj = new Car();\r\n\t\tobj.model = \"Ford Fiesta\";\r\n\t\tConsole.Write(obj.model);\r\n\t}\r\n}","answers":["Null","Ford Fiesta","Exception"],"correct_answer":"Exception","explanation":"The <code>model<\/code> field is declared <code>private<\/code> but it's accessed outside of the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>model<\/code> needs to be declared as <code>public<\/code> member."},{"id":816212361,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tpublic double price;\r\n\tprivate void printPrice() {\r\n\t\tConsole.Write(price);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tSmartphone obj = new Smartphone();\r\n\t\tobj.price = 400;\r\n\t\tobj.printPrice();\r\n\t}\r\n}","answers":["0","400","Exception"],"correct_answer":"Exception","explanation":"The <code>printPrice<\/code> function is declared <code>private<\/code> but it's accessed outside the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>printPrice<\/code> needs to be declared as <code>public<\/code> member."},{"id":1766492502,"question":"What's the output of the code snippet?","code":"class Programer {\r\n\tpublic string name = \"\";\r\n\tprivate string favLanguage = \"C#\";\r\n\r\n\tpublic void printData() {\r\n\t\tConsole.Write(name + \" \" + favLanguage);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tProgramer programer = new Programer();\r\n\t\tprogramer.name = \"Alex\";\r\n\t\tprogramer.printData();\r\n\t}\r\n}","answers":["C#","Alex C#","Exception"],"correct_answer":"Alex C#","explanation":"All of the members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason the code executes without errors."},{"id":603957527,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n\tprivate double size = 0;\r\n\tprivate string make = \"Default\";\r\n\tpublic void printData() {\r\n\t\tConsole.Write(make + \" \" + size);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTablet tablet = new Tablet();\r\n\t\ttablet.size = 5;\r\n\t\ttablet.printData();\r\n\t}\r\n}","answers":["Default 0","Default 5","Exception"],"correct_answer":"Exception","explanation":"The <code>size<\/code> member is declared <code>private<\/code> but it's accessed outside of the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>size <\/code> needs to be declared as <code>public<\/code> member."}],"puzzles":[{"id":1469842530,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    fillword double side;\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Square obj = new Square();\r\n        fillword.fillword = 5;\r\n\r\n        Console.Write(\"Side = \" + obj.side);\r\n    }\r\n}","result":"Side = 5","words":{"operators":[],"values":["5","10"],"variables_constants":[],"others":["public","side","private","obj","square"]},"correct_patterns":[["public","obj","side"]]},{"id":138486819,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword string name;\r\n    fillword void setName(string nameArg) {\r\n        name = nameArg;\r\n    }\r\n    fillword void printName() {\r\n        Console.Write(name);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Person obj = new Person();\r\n        obj.setName(\"Candice\");\r\n        obj.printName();\r\n    }\r\n}","result":"Candice","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private"]},"correct_patterns":[["private","public","public"]]},{"id":1123436512,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n    fillword int height;\r\n    \r\n    fillword void setVal(int heightArg) {\r\n        this.height = heightArg;\r\n    }\r\n    fillword int getHeight() {\r\n        return this.height;    \r\n    }\r\n    fillword void printHeight() {\r\n        Console.Write(this.height + \" meters\");\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Peak obj = new Peak();\r\n        obj.setVal(3000);\r\n        obj.printHeight();\r\n    }\r\n}","result":"3000 meters","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","public","private","public"]]}]},{"id":525491200,"name":"This Keyword","tests":[{"id":1689045204,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tpublic string name;\r\n\tpublic int age;\r\n\tpublic void printData() {\r\n\t\tConsole.Write(this.name + \" \" + this.age);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tPerson person = new Person();\r\n\t\tperson.name = \"John\";\r\n\t\tperson.age = 19;\r\n\t\tperson.printData();\r\n\t}\r\n}","answers":["0","John 19","19 John"],"correct_answer":"John 19","explanation":"The <code>printData<\/code> function prints the name and age members that are set to be \"John\" and 19."},{"id":1565649045,"question":"What's the output of the code snippet?","code":"class Square {\r\n\tpublic double side;\r\n\tpublic double getArea() {\r\n\t\treturn this.side * this.side;\r\n\t}\r\n\tpublic void printData() {\r\n\t\tConsole.Write(\"Side = \" + this.side + \r\n\t\t\" Area = \" + this.getArea());\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tSquare square = new Square();\r\n\t\tsquare.side = 3;\r\n\t\tsquare.printData();\r\n   \t}\r\n}","answers":["Side = 0 Area = 0","Side = 3 Area = 6","Side = 3 Area = 9"],"correct_answer":"Side = 3 Area = 9","explanation":"The <code>printData<\/code> functions prints the <code>side<\/code> member (3) and the result of the <code>getArea<\/code> function (3x3 = 9)."},{"id":369494098,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tpublic double a;\r\n\tpublic double b;\r\n\tpublic double getPerimeter() {\r\n\t\treturn 2 * (this.a + b);\r\n\t}\r\n\tpublic void printData() {\r\n\t\tConsole.Write(this.a + \" \" + b + \" \" + this.getPerimeter());\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tRectangle obj = new Rectangle();\r\n\t\tobj.a = 3;\r\n\t\tobj.b = 2;\r\n\t\tobj.printData();\r\n\t}\r\n}","answers":["0 2 0","3 2 10","3 2 6"],"correct_answer":"3 2 10","explanation":"The <code>printData<\/code> functions prints the <code>a<\/code> member (3), <code>b<\/code> member (2) and the result of the <code>getPerimeter<\/code> function (2 x (3 + 2) = 10)."},{"id":1219176467,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tpublic double price;\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tProduct obj = new Product();\r\n\t\tobj.price = 10;\r\n\t\tConsole.Write(this.price);\r\n\t}\r\n}","answers":["0","10","Exception"],"correct_answer":"Exception","explanation":"<code>this<\/code> is used to access class members inside the class body.\r\n<br><br>\r\nIt makes no sense outside of the class body."},{"id":22563792,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tprivate string color;\r\n \tpublic void setColor(string color) {\r\n\t\tthis.color = color;\r\n\t}\r\n\tpublic string getColor() {\r\n\t\treturn this.color;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCar obj = new Car();\r\n\t\tobj.setColor(\"blue\");\r\n\t\tConsole.Write(obj.getColor());\r\n\t}\r\n}","answers":["null","blue","Exception"],"correct_answer":"blue","explanation":"<code>setColor<\/code> sets the value of the <code>color<\/code> field.\r\n<br><br>\r\n<code>getColor<\/code> accesses the value of the <code>color<\/code> field."}],"puzzles":[{"id":1000040353,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    public int width;\r\n    public int height;\r\n    public void printResolution() {\r\n        Console.Write(fillword.fillword+ \"x\" + fillword.fillword);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Device obj = new Device();\r\n        obj.width = 1280;\r\n        obj.height = 720;\r\n\r\n        obj.printResolution();\r\n    }\r\n}","result":"1280x720","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","width","height","resolution"]},"correct_patterns":[["this","width","this","height"]]},{"id":2085586798,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    public double side;\r\n    public double calcPerimeter() {\r\n        return fillword.fillword * 4;\r\n    }\r\n    public double calcSemiPerimeter() {\r\n        return fillword.fillword \/ 2;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Square obj = new Square();\r\n        obj.side = 3;\r\n        Console.WriteLine(\"P = \" + obj.calcPerimeter());\r\n        Console.Write(\"p = \" + obj.calcSemiPerimeter());\r\n    }\r\n}","result":"P = 12\r\np = 6","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","side","perimeter","calcPerimeter()","calcSemiPerimeter()"]},"correct_patterns":[["this","side","this","calcPerimeter()"]]},{"id":922527535,"text":"Fill the missing words to match the output.","code":"class Cube {\r\n    public double side;\r\n    public double calcVolume() {\r\n        return Math.Pow(this.side, 3);\r\n    }\r\n    public void printDetails() {\r\n        Console.WriteLine(\"Side = \" + fillword.fillword);\r\n        Console.Write(\"Volume = \" + fillword.fillword);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Cube cube = new Cube();\r\n        cube.side = 3;\r\n        cube.printDetails();\r\n    }\r\n}","result":"Side = 3\r\nVolume = 27","words":{"operators":[],"values":[],"variables_constants":[],"others":["this","this","this","side","printDetails()","calcVolume()","3"]},"correct_patterns":[["this","side","this","calcVolume()"]]}]},{"id":1342668737,"name":"Getters And Setters","tests":[{"id":2047699857,"question":"What's the output of the code snippet?","code":"class Square {\r\n\tpublic double side;\r\n\tpublic double getArea() {\r\n\t\treturn side * side;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tSquare obj = new Square();\r\n\t\tobj.side = 3;\r\n\t\tConsole.Write(obj.side + \" \" + obj.getArea());\r\n\t}\r\n}","answers":["3 3","3 9","Exception"],"correct_answer":"3 9","explanation":"The <code>getArea<\/code> function returns the result of multiplication (3 x 3 = 9).\r\n<br><br>\r\nAll of the members have public access so there is no reason for exception to be thrown."},{"id":1018268510,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tpublic int height { get; set; }\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tBuilding obj = new Building();\r\n\t\tobj.height = 18;\r\n\t\tConsole.Write(obj.height);\r\n\t}\r\n}","answers":["0","18","Exception"],"correct_answer":"18","explanation":"The member <code>height <\/code> has <code>public<\/code> getters and setters so exception is not thrown."},{"id":1969662751,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tprivate int age;\r\n\tpublic int getAge() {\r\n\t\treturn age + 1;\r\n\t}\r\n\tpublic void setAge(int ageVal) {\r\n\t\tage = ageVal + 1;\r\n\t} \r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tPerson obj = new Person();\r\n\t\tobj.setAge(18);\r\n\t\tConsole.Write(obj.getAge());\r\n\t}\r\n}","answers":["18","19","20"],"correct_answer":"20","explanation":"<code>setAge<\/code> adds 1 to the passed value.\r\n<br><br>\r\n<code>getAge<\/code> adds 1 to the <code>age <\/code> member.\r\n<br><br>\r\nThe end result is 20 (18 + 1 + 1)."},{"id":772524764,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tprivate double _height;\r\n\tpublic double height {\r\n\t\tget {\r\n\t\t\treturn _height + 1;\r\n\t\t}\r\n\t\tset {\r\n\t\t\tif(value < 0) {\r\n\t\t\t\t_height = 0; return;\r\n\t\t\t}\r\n\t\t\t_height = value;\r\n\t\t}\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tProduct obj = new Product();\r\n\t\tobj.height = -2;\r\n\t\tConsole.Write(obj.height);\r\n\t}\r\n}","answers":["-1","0","1"],"correct_answer":"1","explanation":"The setter sets value of 0 for the <code>_height<\/code> member  since -2 meets the condition <code>value < 0 <\/code>.\r\n<br><br>\r\nThe getter returns the value of <code>_height<\/code> incremented by one.\r\n<br><br>\r\nThe end result is 1 (0 + 1 = 1)."},{"id":1622731421,"question":"What's the output of the code snippet?","code":"class House {\r\n\tpublic double price {\r\n\t\tget {\r\n\t\t\treturn price + 1;\r\n\t\t}\r\n\t\tset {\r\n\t\t\tprice = value;\r\n\t\t}\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tHouse obj = new House();\r\n\t\tobj.price = 90000;\r\n\t\tConsole.Write(obj.price);\r\n\t}\r\n}","answers":["90000","90001","Exception"],"correct_answer":"Exception","explanation":"Accessing the <code>price<\/code> field inside the specified getters and setters results in endless recursion.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\nThe member that must be accessed inside the getter and setter needs to be <code>_price<\/code>."}],"puzzles":[{"id":1872873196,"text":"Fill the missing words to match the output.","code":"class TShirt {\r\n    public string fillword { fillword; fillword; }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        TShirt obj = new TShirt();\r\n        obj.color = \"Orange\";\r\n        Console.Write(obj.color);\r\n    }\r\n}","result":"Orange","words":{"operators":[],"values":[],"variables_constants":[],"others":["color","_color","get","set","\"Orange\""]},"correct_patterns":[["color","get","set"],["color","set","get"]]},{"id":542566061,"text":"Fill the missing words to match the output.","code":"class Planet {\r\n    private string _name;\r\n    public string fillword {\r\n        get {\r\n            return this.fillword;\r\n        }\r\n        set {\r\n            this.fillword = fillword;\r\n        }\r\n    }\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Planet obj = new Planet();\r\n        obj.name = \"Earth\";\r\n        Console.Write(obj.name);\r\n    }\r\n}","result":"Earth","words":{"operators":[],"values":[],"variables_constants":[],"others":["_name","_name","name","name","val","value"]},"correct_patterns":[["name","_name","_name","value"]]},{"id":452658794,"text":"Fill the missing words to match the output.","code":"class Laptop {\r\n    private decimal price;\r\n    public decimal getPrice(int discount) {\r\n        return price - (discount * price) \/ 100;\r\n    }\r\n    public void setPrice(decimal priceVal) {\r\n        price = priceVal;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Laptop obj = new Laptop();\r\n        obj.fillword(2000);\r\n        Console.Write(obj.fillword(fillword));\r\n    }\r\n}","result":"1800","words":{"operators":[],"values":["5","10","20"],"variables_constants":[],"others":["setPrice","getPrice","price"]},"correct_patterns":[["setPrice","getPrice","10"]]}]},{"id":179019662,"name":"Constructors","tests":[{"id":1500318298,"question":"What's the output of the code snippet?","code":"class Tablet {\r\n\tpublic Tablet() {\r\n\t\tConsole.Write(\"Default\");\r\n\t}\r\n\tpublic Tablet(double param) {\r\n\t\tConsole.Write(\"Parametrized\");\r\n\t}\r\n\tpublic Tablet(Tablet tablet) {\r\n\t\tConsole.Write(\"Copy\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTablet obj = new Tablet();\r\n\t}\r\n}","answers":["Default","Parametrized","Copy"],"correct_answer":"Default","explanation":"The object creation <code>new Tablet()<\/code>\r\naccepts no arguments thus the default constructor is called.\r\n<br><br>\r\nThe default constructor is: <code>public Tablet()<\/code>"},{"id":303180315,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tpublic double price;\r\n\tpublic Smartphone() {\r\n\t\tprice = 0;\r\n\t}\r\n\tpublic Smartphone(double param) {\r\n\t\tprice = param;\r\n\t}\r\n\tpublic Smartphone(Smartphone sm) {\r\n\t\tprice = sm.price + 1;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tSmartphone sm = new Smartphone(500);\r\n\t\tConsole.Write(sm.price);\r\n\t}\r\n}","answers":["0","500","501"],"correct_answer":"500","explanation":"The object creation <code> new Smartphone(500)<\/code>\r\naccepts argument of type double.\r\n<br><br>\r\nFor that reason the <code>Smartphone(double param)<\/code> constructor is called."},{"id":1422341592,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tpublic Building(double param1) {\r\n\t\tConsole.Write(\"1\");\r\n\t}\r\n\tpublic Building(double param1, double param2) {\r\n\t\tConsole.Write(\"2\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tBuilding obj = new Building(300, 400);\r\n\t}\r\n}","answers":["1","2","Exception"],"correct_answer":"2","explanation":"The object creation <code>new Building(300, 400)<\/code>\r\naccepts 2 arguments of type double.\r\n<br><br>\r\nFor that reason the <code>Building(double param1, double param2)<\/code> constructor is called."},{"id":225727897,"question":"What's the output of the code snippet?","code":"class Cat {\r\n\tCat() {\r\n\t\tConsole.Write(\"default\");\r\n\t}\r\n\tCat(string name) {\r\n\t\tConsole.Write(\"parametrized\");\r\n\t}\r\n}\r\nclass Program {\r\n \tstatic void Main(string[] args) {\r\n\t\tCat cat = new Cat(\"Tom\", 2);\r\n\t}\r\n}","answers":["default","parametrized","Exception"],"correct_answer":"Exception","explanation":"The object creation <code>new Cat(\"Tom\", 2)<\/code>\r\ncalls a constructor with  2 arguments. \r\n<br><br>\r\nThere is no constructor that accepts two arguments.\r\n<br><br>\r\nFor that reason an exception is thrown."},{"id":1176073510,"question":"What's the output of the code snippet?","code":"class Headphones {\r\n\tpublic Headphones() { }\r\n\tpublic Headphones(string model) {\r\n        \tConsole.Write(\"parametrized\");\r\n\t}\r\n\tpublic Headphones(Headphones headphones) {\r\n\t\tConsole.Write(\"copy\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tHeadphones obj1 = new Headphones();\r\n\t\tHeadphones obj2 = new Headphones(obj1);\r\n\t}\r\n}","answers":["parametrized","copy","parametrized copy"],"correct_answer":"copy","explanation":"The object creation <code>new Headphones()<\/code>\r\ncalls a constructor with  0 arguments: <code> Headphones()<\/code>.  Nothing is printed.\r\n<br><br>\r\nThe object creation <code>new Headphones(obj1)<\/code>\r\ncalls a constructor that accepts Headphones  instance: <code>Headphones(Headphones headphones) <\/code>. \"copy\" is printed."}],"puzzles":[{"id":1403528747,"text":"Fill the missing words to match the output.","code":"class Country {\r\n    public string name;\r\n    public Country() {\r\n        name = \"Unknown\";\r\n    }\r\n    public Country(string nameVal) {\r\n        name = nameVal;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword fillword = fillword fillword fillword;\r\n        Console.Write(obj.name);\r\n    }\r\n}","result":"Unknown","words":{"operators":[],"values":[],"variables_constants":[],"others":["Country","Country","new","obj","( )","(\"Iceland\")"]},"correct_patterns":[["Country","obj","new","Country","( )"]]},{"id":341656040,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public string name;\r\n    public int age;\r\n    public Person(string nameVal, int ageVal) {\r\n        name = nameVal;\r\n        age = ageVal;\r\n    }\r\n    public Person(string nameVal) {\r\n        name = nameVal;\r\n        age = 18;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Person obj1 = fillword Person(fillword);\r\n        Console.Write(obj1.age + \" \");\r\n        Person obj2 = new fillword(fillword);\r\n        Console.Write(obj2.age);\r\n    }\r\n}","result":"19 18","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"Ally\", 19","\"Teo\"","new","new","Person","Person"]},"correct_patterns":[["new","\"Ally\", 19","Person","\"Teo\""]]},{"id":1292001705,"text":"Fill the missing words to match the output.","code":"class Wallet {\r\n    public int pocketsCount;\r\n\r\n    public Wallet() { }\r\n    public Wallet(Wallet wallet) {\r\n        pocketsCount = wallet.pocketsCount;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Wallet obj1 = new fillword;\r\n        obj1.pocketsCount = 4;\r\n\r\n        Wallet obj2 = new fillword;\r\n        Console.Write(obj2.pocketsCount);\r\n    }\r\n}","result":"4","words":{"operators":[],"values":[],"variables_constants":[],"others":["Wallet(2, 2)","Wallet(4)","Wallet(obj1)","Wallet()","Wallet(2, \"blue\")"]},"correct_patterns":[["Wallet()","Wallet(obj1)"]]}]},{"id":1129889615,"name":"Class Inheritance Basics","tests":[{"id":952997095,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic void printLength() {\r\n\t\tConsole.Write(\"Long \");\r\n\t}\r\n}\r\nclass Hatchback : Car {\r\n\tpublic void printLength() {\r\n\t\tConsole.Write(\"Short \");\r\n\t}\r\n}\r\nclass Sedan : Car { }\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tHatchback hatch = new Hatchback();\r\n\t\tSedan sedan = new Sedan();\r\n\r\n\t\thatch.printLength();\r\n\t\tsedan.printLength();\r\n\t}\r\n}","answers":["Short  Short","Long Short","Short Long"],"correct_answer":"Short Long","explanation":"The <code>Hatchback<\/code> class overwrites the <code>printLength<\/code>  method.\r\n<br><br>\r\nFor that reason <code>hatch.printLength()<\/code> prints \"Short\".\r\n<br><br>\r\nThe <code>Sedan<\/code> class inherits the <code>printLength<\/code> method from the <code>Car <\/code> class.\r\n<br><br>\r\nFor that reason <code>sedan.printLength()<\/code> prints \"Long\"."},{"id":1903342756,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"extra-\");\r\n\t}\r\n}\r\nclass Smartwatch : Device {\r\n\tpublic void printSize() {\r\n\t\tbase.printSize();\r\n\t\tConsole.Write(\"small\");\r\n\t}\r\n};\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tSmartwatch sm = new Smartwatch();\r\n\t\tsm.printSize();\r\n\t}\r\n}","answers":["extra-","small","extra-small"],"correct_answer":"extra-small","explanation":"<code>sm.printSize()<\/code> calls the method from the <code>Smartwatch<\/code> class.\r\n<br><br>\r\n<code>base.printSize()<\/code> calls the method from the parent class. For that reason \"extra-\" is printed.\r\n<br><br>\r\nAfterwards \"small\" is printed."},{"id":707253349,"question":"What's the output of the code snippet?","code":"class Building {\r\n\tprivate double height;\r\n}\r\nclass House : Building {\r\n\tpublic void setHeight(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n\tpublic double getHeight() {\r\n\t\treturn height;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tHouse obj = new House();\r\n\t\tobj.setHeight(10);\r\n\t\tConsole.Write(obj.getHeight());\r\n\t}\r\n}","answers":["0","10","Exception"],"correct_answer":"Exception","explanation":"The class <code>House<\/code> does not have a <code>height<\/code> member. For that reason an exception is thrown.\r\n<br><br>\r\nThe <code>height<\/code> member needs to be declared as <code>protected<\/code> so it can be inherited by the <code>House<\/code> class."},{"id":1825895458,"question":"What's the output of the code snippet?","code":"class Fruit {\r\n\tprotected int calories;\r\n}\r\nclass Orange : Fruit {\r\n\tpublic void setCalories(int caloriesVal) {\r\n\t\tcalories = caloriesVal;\r\n\t}\r\n\tpublic int getCalories() {\r\n\t\treturn calories;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tOrange obj = new Orange();\r\n\t\tobj.setCalories(7);\r\n\t\tConsole.Write(obj.getCalories());\r\n\t}\r\n}","answers":["0","7","Exception"],"correct_answer":"7","explanation":"The <code>setCalories<\/code> and <code>getCalories<\/code> methods access and modify the <code>calories<\/code> member.\r\n<br><br>\r\nException is not thrown since the <code>protected<\/code> member is inherited by the <code>Fruit<\/code> class."},{"id":628692963,"question":"What's the output of the code snippet?","code":"class Pet {\r\n\tpublic Pet() {\r\n\t\tConsole.Write(\"pet \");\r\n\t}\r\n}\r\nclass Cat : Pet {\r\n\tpublic Cat() {\r\n\t\tConsole.Write(\"cat \");\r\n\t}\r\n}\r\nclass Dog : Pet {\r\n\tpublic Dog() : base() {\r\n\t\tConsole.Write(\"dog \");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCat cat = new Cat();\r\n\t\tDog dog = new Dog();\r\n\t}\r\n}","answers":["cat dog","cat pet dog","pet cat pet dog"],"correct_answer":"pet cat pet dog","explanation":"The parent class constructor is always called by the child class constructor even if the <code>base<\/code> keyword is not used."}],"puzzles":[{"id":1807605941,"text":"Fill the missing words to match the output.","code":"class Liquid {\r\n    public void printColor() {\r\n        Console.WriteLine(\"Transparent\");\r\n    }\r\n}\r\nclass Coke : Liquid {\r\n    public void printColor() {\r\n        Console.WriteLine(\"Black\");\r\n    }\r\n}\r\nclass Water : Liquid { }\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword obj1 = new fillword();\r\n        obj1.printColor();\r\n\r\n        fillword obj2 = new fillword();\r\n        obj2.printColor();\r\n    }\r\n}","result":"Transparent\r\nBlack","words":{"operators":[],"values":[],"variables_constants":[],"others":["Water","Water","Water","Water","Coke","Coke","Coke","Coke"]},"correct_patterns":[["Water","Water","Coke","Coke"]]},{"id":744620146,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    public Animal() {\r\n        Console.WriteLine(\"base\");\r\n    }\r\n}\r\nclass Cat : fillword{\r\n    public Cat() {\r\n        Console.WriteLine(\"child\");\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword obj = new fillword();\r\n    }\r\n}","result":"base\r\nchild","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Cat","Cat"]},"correct_patterns":[["Animal","Cat","Cat"]]},{"id":1696014387,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword string name;\r\n    public void printData() {\r\n        Console.WriteLine(name);\r\n    }\r\n}\r\nclass Singer : Person {\r\n    fillword int songsCount;\r\n    public Singer(string nameVal, int songsCountVal) {\r\n        name = nameVal;\r\n        songsCount = songsCountVal;\r\n    }\r\n    public void printData() {\r\n        fillword.printData();\r\n        Console.WriteLine(songsCount);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Singer singer = new Singer(\"Ariana\", 26);\r\n        singer.printData();\r\n    }\r\n}","result":"Ariana\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","protected","super","base","parent","Singer","Person"]},"correct_patterns":[["protected","private","base"]]}]},{"id":68017932,"name":"Class Inheritance Advanced","tests":[{"id":506345376,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n\tpublic void print() {\r\n\t\tConsole.Write(\"1 \");\r\n\t}\r\n}\r\nclass MotorVehicle : Vehicle {\r\n\tpublic void print() {\r\n\t\tbase.print();\r\n\t\tConsole.Write(\"2 \");\r\n\t}\r\n}\r\nclass Scooter : MotorVehicle {\r\n\tpublic void print() {\r\n\t\tbase.print();\r\n\t\tConsole.Write(\"3\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tScooter scooter = new Scooter();\r\n\t\tscooter.print();\r\n\t}\r\n}","answers":["3","2 3","1 2 3"],"correct_answer":"1 2 3","explanation":"<code>base.print()<\/code> calls the <code>print<\/code> method from the parent class.\r\n<br><br>\r\nBasically the <code>print<\/code> method is executed first in\r\n<code>Vehicle<\/code>, afterwards in <code>MotorVehicle <\/code> and finally in the <code>Scooter<\/code> class."},{"id":1356027745,"question":"What's the output of the code snippet?","code":"class Electronic {\r\n\tpublic Electronic() {\r\n\t\tConsole.Write(\"a \");\r\n\t}\r\n}\r\nclass OSDevice : Electronic {\r\n\tpublic OSDevice() {\r\n\t\tConsole.Write(\"b \");\r\n\t}\r\n}\r\nclass Smartphone : OSDevice {\r\n\tpublic Smartphone() {\r\n\t\tConsole.Write(\"c \");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tSmartphone obj = new Smartphone();\r\n\t}\r\n}","answers":["c","a","a b c"],"correct_answer":"a b c","explanation":"The parent class constructor is always called by the child class constructor even if the <code>base<\/code> keyword is not used.\r\n<br><br>\r\nThe code of <code>Electronic()<\/code> executes first, afterwards <code>OSDevice()<\/code> and finally <code>Smartphone()<\/code>."},{"id":159414062,"question":"Which are the members of Earth class?","code":"class SpaceObject {\r\n\tpublic string location;\r\n}\r\nclass Planet : SpaceObject {\r\n\tpublic double mass;\r\n}\r\nclass Earth : Planet {\r\n\tpublic int population;\r\n}","answers":["population","population, mass","population, mass, location"],"correct_answer":"population, mass, location","explanation":"All members that are <code>public<\/code> or <code>protected<\/code> are inherited by the parent class.\r\n<br><br>\r\nFor that reason the class <code>Earth<\/code> inherits all of the members from <code>SpaceObject<\/code> and <code>Planet<\/code>."},{"id":1110742767,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic void print() {\r\n\t\tConsole.WriteLine(\"device \");\r\n\t}\r\n}\r\nclass USBDevice : Device {}\r\nclass Mouse : USBDevice {\r\n\tpublic void print() {\r\n\t\tConsole.WriteLine(\"mouse\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tMouse obj = new Mouse();\r\n\t\tobj.print();\r\n\t}\r\n}","answers":["device","mouse","device mouse"],"correct_answer":"mouse","explanation":"The class <code>Mouse<\/code> overwrites the <code>print<\/code> method and does not call the parent method via the <code>base<\/code> keyword."},{"id":81376940,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic string size;\r\n\tpublic Animal() {\r\n\t\tsize = \"small \";\r\n\t}\r\n}\r\nclass Mammal : Animal{\r\n\tpublic Mammal() {\r\n\t\tsize = \"medium\";\r\n\t}\r\n}\r\nclass Dog : Mammal {}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tDog dog = new Dog();\r\n\t\tConsole.Write(dog.size);\r\n\t}\r\n}","answers":["small","medium","small  medium"],"correct_answer":"medium","explanation":"The parent class constructor is always called by the child class constructor even if the <code>base<\/code> keyword is not used.\r\n<br><br>\r\nThe code of <code>Animal()<\/code> executes first, afterwards <code>Mammal()<\/code> .\r\n<br><br>\r\nThe final value of the <code>size<\/code> property is set in the <code>Mammal<\/code> class constructor."}],"puzzles":[{"id":1606697968,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    public void print() { Console.Write(fillword); }\r\n}\r\nclass AudioDevice : Device {\r\n    public void print() { base.print();\r\n        Console.Write(fillword); }\r\n}\r\nclass USBDevice : Device {\r\n    public void print() { base.print();\r\n        Console.Write(fillword); }\r\n}\r\nclass Headphones : AudioDevice {\r\n    public void print() { base.print();\r\n        Console.Write(fillword); }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Headphones obj = new Headphones();\r\n        obj.print();\r\n    }\r\n}","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"0\"","\"1\"","\"a\"","\"b\"","\"c\""]},"correct_patterns":[["\"a\"","\"b\"","\"0\"","\"c\""],["\"a\"","\"b\"","\"1\"","\"c\""]]},{"id":275342257,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    public void print() { Console.Write(fillword); }\r\n}\r\nclass Tiger : Animal {\r\n    public void print() { base.print();\r\n        Console.Write(fillword); }\r\n}\r\nclass MarineAnimal : Animal {\r\n    public void print() { base.print();\r\n        Console.Write(fillword); }\r\n}\r\nclass Whale : MarineAnimal {\r\n    public void print() { base.print();\r\n        Console.Write(fillword); }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Whale obj = new Whale();\r\n        obj.print();\r\n    }\r\n}","result":"123","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"a\"","\"b\"","\"1\"","\"2\"","\"3\""]},"correct_patterns":[["\"1\"","\"a\"","\"2\"","\"3\""],["\"1\"","\"b\"","\"2\"","\"3\""]]},{"id":1226670974,"text":"Fill the missing words to match the output.","code":"class Drink {\r\n    public Drink() { Console.Write(\"a\"); }\r\n}\r\nclass fillword : Drink {\r\n    public Water() { Console.Write(\"1\"); }\r\n}\r\nclass FizzyDrink : Drink {\r\n    public FizzyDrink() { Console.Write(\"b\"); }\r\n}\r\nclass fillword : fillword {\r\n    public Coke() { Console.Write(\"c\"); }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Coke obj = new Coke();\r\n    }\r\n}","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["Drink","Drink","Water","Water","FizzyDrink","Coke"]},"correct_patterns":[["Water","Coke","FizzyDrink"]]}]},{"id":2125659853,"name":"Interfaces","tests":[{"id":2106513005,"question":"What's the output of the code snippet?","code":"interface DeliveryService {\r\n\tdouble calcDeliveryCost();\r\n}\r\nclass Product : DeliveryService {\r\n\tpublic double weight;\r\n\tpublic double calcDeliveryCost() {\r\n\t\treturn (weight \/ 10) + 2;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tProduct prod = new Product();\r\n\t\tprod.weight = 30;\r\n\t\tConsole.Write(prod.calcDeliveryCost());\r\n\t}\r\n}","answers":["3","5","Exception"],"correct_answer":"5","explanation":"The method in the interface <code>DeliveryService<\/code> is defined in the class that implements it.\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations for <code>calcDeliveryCost<\/code>  are:\r\n<br>\r\n(30 \/ 10) + 2 =\r\n<br>\r\n3 + 2 = 5"},{"id":909375018,"question":"What's the output of the code snippet?","code":"interface FuelConsumation {\r\n\tdouble estimatedFuelCostForKms(int km);\r\n}\r\nclass Truck : FuelConsumation {}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTruck truck = new Truck();\r\n\t\tConsole.Write(truck.estimatedFuelCostForKms(100));\r\n\t}\r\n}","answers":["0","100","Exception"],"correct_answer":"Exception","explanation":"The <code>Truck<\/code> class implements <code>FuelConsumation<\/code> but does not define the <code>estimatedFuelCostForKms<\/code> method.\r\n<br><br>\r\nFor that reason exception is thrown."},{"id":1759515115,"question":"What's the output of the code snippet?","code":"interface SalaryPayment {\r\n\tdouble calcSalary();\r\n}\r\ninterface InsurancePayment {\r\n\tdouble calcMonthInsurance();\r\n}\r\nclass Employee : SalaryPayment, InsurancePayment {\r\n\tpublic double calcSalary() {\r\n\t\treturn 25;\r\n\t}\r\n\tpublic double calcMonthInsurance() {\r\n\t\treturn 5;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tEmployee emp = new Employee();\r\n\t\tConsole.Write(emp.calcSalary() + \" \");\r\n\t\tConsole.Write(emp.calcMonthInsurance());\r\n\t}\r\n}","answers":["25 5","5 25","Cannot implement more than 1 interface"],"correct_answer":"25 5","explanation":"A class can implement more than 1 interface\r\n<br><br>\r\n\r\nThe <code>Employee<\/code> class implements 2 interfaces and defines all of the methods that the interfaces have.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":563425704,"question":"What's the output of the code snippet?","code":"interface ElectricCost {\r\n\tdouble getCostPerHour();\r\n}\r\nclass Appliance : ElectricCost {\r\n\tpublic double getCostPerHour() {\r\n\t\treturn 5;\r\n\t}\r\n}\r\nclass Cooker : Appliance, ElectricCost { }\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCooker cooker = new Cooker();\r\n\t\tConsole.Write(cooker.getCostPerHour());\r\n\t}\r\n}","answers":["0","5","Exception"],"correct_answer":"5","explanation":"The interface <code>ElectricCost<\/code> requires the classes which implement it to define a <code>getCostPerHour<\/code> method.\r\n<br><br>\r\nThe class <code>Cooker<\/code> inherits such from the <code>Appliance<\/code> class so exception is not thrown.\r\n<br><br>\r\nThe code <code>cooker.getCostPerHour()<\/code> calls the method from the parent class - <code>Appliance<\/code>."},{"id":440029545,"question":"What's the output of the code snippet?","code":"interface Cost {\r\n\tdouble getMonthlyCost();\r\n}\r\nclass Restaurant : Cost {\r\n\tpublic int employeesCount;\r\n\tpublic double getMonthlyCost() {\r\n\t\treturn employeesCount * 1000 + 1000;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tRestaurant obj = new Restaurant();\r\n\t\tobj.employeesCount = 9;\r\n\t\tConsole.Write(obj.getMonthlyCost());\r\n\t}\r\n}","answers":["9000","10000","11000"],"correct_answer":"10000","explanation":"The <code>Restaurant<\/code> class implements the interface <code>Cost<\/code> and defines the <code>getMonthlyCost<\/code> method.\r\n\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations behind the <code>getMonthlyCost<\/code>\r\nare:\r\n<br>\r\n9 * 1000 + 1000 =\r\n<br>\r\n9000 + 1000 = 10000"}],"puzzles":[{"id":63087423,"text":"Fill the missing words to match the output.","code":"fillword fillword {\r\n    double fillword fillword;\r\n}\r\nclass AirConditioner : Appliance {\r\n    public double calcConsumation(int hours) {\r\n        return hours * 2.5;\r\n    }\r\n}\r\n\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        AirConditioner obj = new AirConditioner();\r\n        Console.Write(obj.calcConsumation(2));\r\n    }\r\n}","result":"5","words":{"operators":[],"values":[],"variables_constants":[],"others":["class","interface","AirConditioner","calcConsumation","Appliance","()","(int hours)"]},"correct_patterns":[["interface","Appliance","calcConsumation","(int hours)"]]},{"id":1148699388,"text":"Fill the missing words to match the output.","code":"interface BatteryLifespan {\r\n    int calcBatteryLifespan(int hours);\r\n}\r\nclass Smartphone fillword fillword {\r\n    public int fillword fillword {\r\n        return 100 - 2 * hours;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Smartphone obj = new Smartphone();\r\n        Console.Write(obj.calcBatteryLifespan(12));\r\n    }\r\n}","result":"76","words":{"operators":[],"values":[],"variables_constants":[],"others":[":","implements","( )","(int hours)","Smartphone","calcBatteryLifespan","BatteryLifespan"]},"correct_patterns":[[":","BatteryLifespan","calcBatteryLifespan","(int hours)"]]},{"id":1025827517,"text":"Fill the missing words.","code":"interface Insurance {\r\n    decimal calcInsurance(int months);\r\n}\r\ninterface FuelConsumation {\r\n    decimal calcCostPer100Km();\r\n}\r\nclass Car : fillword, fillword {\r\n    private int engineSize;\r\n    public decimal fillword(int months) {\r\n        return  30 * months;\r\n    }\r\n    public decimal fillword() {\r\n        return engineSize \/ 1000 + 3; \r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Insurance","interface","FuelConsumation","calcCostPer100Km","calcInsurance"]},"correct_patterns":[["Insurance","FuelConsumation","calcInsurance","calcCostPer100Km"],["FuelConsumation","Insurance","calcInsurance","calcCostPer100Km"]]}]},{"id":929504906,"name":"Abstract Classes","tests":[{"id":1559195958,"question":"What's the output of the code snippet?","code":"abstract class Device {\r\n\tDevice() {\r\n\t\tConsole.Write(\"device\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tDevice obj = new Device();\r\n\t}\r\n}","answers":["device","Exception","Empty result"],"correct_answer":"Exception","explanation":"<code>Device obj = new Device()<\/code> creates object of an abstract class.\r\n<br><br>\r\nCreating object of an abstract class results in exception ."},{"id":361992439,"question":"What's the output of the code snippet?","code":"abstract class ComputerComponent {\r\n\tpublic string name;\r\n\tpublic string getName() {\r\n\t\treturn name;\r\n\t}\r\n}\r\nclass Processor : ComputerComponent {\r\n\tpublic Processor() {\r\n\t\tname = \"processor\";\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tProcessor obj = new Processor();\r\n\t\tConsole.Write(obj.name);\r\n\t}\r\n}","answers":["processor","Null","Exception"],"correct_answer":"processor","explanation":"The <code>Processor<\/code> class is not abstract.\r\n<br><br>\r\nFor that reason creating <code>Processor<\/code> object does not result in exception."},{"id":1312862388,"question":"What's the output of the code snippet?","code":"abstract class Enterprise {\r\n\tpublic abstract double calcYearExpenses();\r\n}\r\nclass ITCompany : Enterprise {\r\n\tpublic ITCompany() {\r\n\t\tConsole.Write(\"IT\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tITCompany obj = new ITCompany();\r\n\t}\r\n}","answers":["IT","Exception","Null"],"correct_answer":"Exception","explanation":"The parent class <code>Enterprise<\/code> has an abstract method - <code>calcYearExpenses<\/code>.\r\n<br><br>\r\nThe  inheritor - <code>ITCompany<\/code> does not define a\r\n<code>calcYearExpenses<\/code> which results in exception."},{"id":16109685,"question":"What's the output of the code snippet?","code":"abstract class Shop {\r\n\tpublic abstract double calcRevenue();\r\n}\r\nclass OnlineShop : Shop {\r\n\tpublic int sellsCount;\r\n\tpublic override double calcRevenue() {\r\n\t\treturn sellsCount * 10;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tOnlineShop obj = new OnlineShop();\r\n\t\tobj.sellsCount = 50;\r\n\t\tConsole.Write(obj.calcRevenue());\r\n\t}\r\n}","answers":["0","500","Exception"],"correct_answer":"500","explanation":"The class <code>OnlineShop<\/code> extends the abstract class <code>Shop<\/code> and defines it's abstract method - <code>calcRevenue<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations for the <code>calcRevenue<\/code> method are:\r\n<br>\r\n50 * 10 = 500"},{"id":2040197170,"question":"What's the output of the code snippet?","code":"abstract class Animal {\r\n\tpublic abstract void makeSound();\r\n}\r\nclass MarineAnimal : Animal {\r\n\tpublic override void makeSound() {\r\n\t\tConsole.Write(\"No Sound\");\r\n\t}\r\n}\r\nclass Fish : MarineAnimal { }\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tFish fish = new Fish();\r\n\t\tfish.makeSound();\r\n\t}\r\n}","answers":["No Sound","Null","Exception"],"correct_answer":"No Sound","explanation":"The <code>MarineAnimal<\/code> class inherits the abstract <code>Animal<\/code> class  and defines it's abstract method - <code>makeSound<\/code> .\r\n<br><br>\r\nThe <code>Fish<\/code> class inherits the <code>makeSound<\/code> method from the <code>MarineAnimal<\/code> class.\r\n<br><br>\r\nFor that reason exception is not thrown."}],"puzzles":[{"id":2009662074,"text":"Fill the missing words to match the output.","code":"abstract class Device { }\r\nclass Tablet : Device { }\r\n\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword obj = new fillword();\r\n        Console.Write(\"Code that won't throw exception.\");\r\n    }\r\n}","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Device","Tablet","Tablet"]},"correct_patterns":[["Tablet","Tablet"]]},{"id":679354939,"text":"Fill the missing words to match the output.","code":"abstract class Pet {\r\n    public fillword void fillword();\r\n}\r\nclass Cat : Pet {\r\n    public fillword void fillword() {\r\n        Console.Write(\"meow\");\r\n    }    \r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Cat obj = new Cat();\r\n        obj.makeSound();\r\n    }\r\n}","result":"meow","words":{"operators":[],"values":[],"variables_constants":[],"others":["abstract","printSound","makeSound","makeSound","override"]},"correct_patterns":[["abstract","makeSound","override","makeSound"]]},{"id":1629703672,"text":"Fill the missing words.","code":"abstract class Polygon {\r\n    public fillword void printAnglesCount();\r\n}\r\nabstract class Shape {\r\n    public fillword void printArea();\r\n}\r\nclass Circle : Shape {\r\n    private double radius;\r\n    public override void fillword() {\r\n        Console.Write(3.14 * radius * radius);\r\n    }\r\n}\r\nclass Pentagon : Polygon {\r\n    public override void fillword() {\r\n        Console.Write(5);\r\n    }  \r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["radius","abstract","abstract","printAnglesCount","printArea","override"]},"correct_patterns":[["abstract","abstract","printArea","printAnglesCount"]]}]},{"id":1746157131,"name":"Static Members","tests":[{"id":844043251,"question":"What's the output of the code snippet?","code":"class Tree {\r\n\tpublic static int count;\r\n\tpublic Tree() {\r\n\t\tcount++;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTree.count = 0;\r\n\t\tTree obj1 = new Tree();\r\n\t\tTree obj2 = new Tree();\r\n\t\tTree obj3 = new Tree();\r\n\t\tConsole.Write(Tree.count);\r\n\t}\r\n}","answers":["0","2","3"],"correct_answer":"3","explanation":"The static member <code>count<\/code> increments each time when object is created.\r\n<br><br>\r\nIt's incremented in the class constructor - <code>count++;<\/code>"},{"id":1962685360,"question":"What's the output of the code snippet?","code":"class Circle {\r\n\tpublic static double pi;\r\n\tpublic Circle() {\r\n\t\tpi = 3.141;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCircle.pi = 3.14;\r\n\t\tCircle obj = new Circle();\r\n\t\tConsole.Write(Circle.pi);\r\n\t}\r\n}","answers":["3.14","3.141","0"],"correct_answer":"3.141","explanation":"The static member <code>pi<\/code> is last modified at the class constructor - 3.141."},{"id":765547377,"question":"What's the output of the code snippet?","code":"class Dog {\r\n\tpublic static void makeSound() {\r\n\t\tConsole.Write(\"Bark\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tDog.makeSound();\r\n\t}\r\n}","answers":["Bark","Null","Exception"],"correct_answer":"Bark","explanation":"<code>makeSound<\/code> does not access any non-static class members.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":1716941630,"question":"What's the output of the code snippet?","code":"class Animal {\r\n\tpublic static void makeSound() {\r\n\t\tConsole.Write(\"no sound \");\r\n\t}\r\n}\r\nclass Wolf : Animal { }\r\nclass Cat : Animal {\r\n\tpublic static void makeSound() {\r\n\t\tConsole.Write(\"meow \");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tWolf.makeSound();\r\n\t\tCat.makeSound();\r\n\t}\r\n}","answers":["meow no sound","no sound no sound","no sound meow"],"correct_answer":"no sound meow","explanation":"<code>Wolf<\/code> inherits it's static <code>makeSound<\/code> function from it's parent - <code>Animal<\/code>.\r\n<br><br>\r\nCat inherits <code>Animal<\/code> but overwrites the <code>makeSound<\/code> method."},{"id":1492816639,"question":"What's the output of the code snippet?","code":"class Person {\r\n\tpublic string name;\r\n\tpublic static void printName() {\r\n\t\tConsole.Write(name);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tPerson p = new Person();\r\n\t\tp.name = \"Emily\";\r\n\t\tPerson.printName();\r\n\t}\r\n}","answers":["Emily","Exception","Null"],"correct_answer":"Exception","explanation":"The static <code>printName<\/code> function accesses non-static member - <code>name<\/code> which results in exception."}],"puzzles":[{"id":1540386233,"text":"Fill the missing words.","code":"class Circle {\r\n    public fillword pi;\r\n    public fillword radius;\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Circle.pi = 3.14;\r\n        Circle obj = new Circle();\r\n        obj.radius = 5;\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Circle","double","static double","pi","radius"]},"correct_patterns":[["static double","double"]]},{"id":478448966,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    public string name;\r\n    public fillword present() {\r\n        Console.WriteLine(\"My name is \" + name + \".\");\r\n    }\r\n    public fillword sayHi() {\r\n        Console.WriteLine(\"Hi!\");\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword.sayHi();\r\n        Person obj = new Person();\r\n        obj.name = \"Jake\";\r\n        obj.present();\r\n    }\r\n}","result":"Hi!\r\nMy name is Jake.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Person","name","present","void","static void"]},"correct_patterns":[["void","static void","Person"]]},{"id":1428794631,"text":"Fill the missing words to match the output.","code":"class Building {\r\n    public double height;\r\n    public static int objCount;\r\n    public void printHeight() {\r\n        Console.WriteLine(height);\r\n    }\r\n    public static void printCount() {\r\n        Console.WriteLine(objCount);\r\n    }\r\n    public Building(double height) {\r\n        fillword.height = height;\r\n        fillword.objCount++;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword.objCount = 0;\r\n        Building obj1 = new Building(100);\r\n        Building obj2 = new Building(120);\r\n        Console.WriteLine(fillword.objCount);\r\n        Console.WriteLine(fillword.height);\r\n    }\r\n}","result":"2\r\n120","words":{"operators":[],"values":[],"variables_constants":[],"others":["Building","Building","Building","Building","obj1","obj2","this"]},"correct_patterns":[["this","Building","Building","Building","obj2"]]}]},{"id":582573576,"name":"Encapsulation Principle","tests":[{"id":296727228,"question":"What's the output of the code snippet?","code":"class TShirt {\r\n\tprivate string color;\r\n\tpublic TShirt(string colorVal) {\r\n\t\tcolor = colorVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTShirt obj = new TShirt(\"blue\");\r\n\t\tConsole.Write(obj.color);\r\n\t}\r\n}","answers":["blue","Null","Exception"],"correct_answer":"Exception","explanation":"<code>Console.Write(obj.color)<\/code> accesses the <code>private<\/code> <code>color<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>color<\/code> needs to be defined as <code>public<\/code> member."},{"id":1247597181,"question":"What's the output of the code snippet?","code":"class PocketBook {\r\n\tprivate double price;\r\n\tpublic PocketBook(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tPocketBook obj = new PocketBook(200);\r\n\t\tConsole.Write(obj.getPrice());\r\n\t}\r\n}","answers":["200","Null","Exception"],"correct_answer":"200","explanation":"All <code>PocketBook<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":50459194,"question":"What's the output of the code snippet?","code":"class Monitor {\r\n\tpublic string model;\r\n\tpublic Monitor(string modelVal) {\r\n\t\tmodel = modelVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tMonitor obj = new Monitor(\"My Monitor\");\r\n\t\tConsole.Write(obj.model);\r\n\t}\r\n}","answers":["My Monitor","Null","Exception"],"correct_answer":"My Monitor","explanation":"All <code>Monitor<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":1169563131,"question":"What's the output of the code snippet?","code":"class HeadPhones {\r\n\tprivate double price;\r\n\tpublic void setPrice(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tHeadPhones obj = new HeadPhones();\r\n\t\tobj.setPrice(100);\r\n\t\tConsole.Write(obj.price);\r\n\t}\r\n}","answers":["0","100","Exception"],"correct_answer":"Exception","explanation":"<code>Console.Write(obj.price)<\/code> accesses the <code>private<\/code> <code>price<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>price<\/code> needs to be defined as <code>public<\/code> member."},{"id":1046166968,"question":"What's the output of the code snippet?","code":"class Book {\r\n\tprivate string title;\r\n\tpublic void setTitle(string titleVal) {\r\n\t\ttitle = titleVal;\r\n\t}\r\n\tpublic string getTitle() {\r\n\t\treturn title;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tBook obj = new Book();\r\n\t\tobj.setTitle(\"Sample\");\r\n\t\tConsole.Write(obj.getTitle());\r\n\t}\r\n}","answers":["Null","Sample","Exception"],"correct_answer":"Sample","explanation":"All <code>Book<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."}],"puzzles":[{"id":266259652,"text":"Fill the missing words to match the output.","code":"class Car {\r\n    fillword string make;\r\n    fillword string model;\r\n    fillword void setData(string makeVal, string modelVal) {\r\n        this.make = makeVal;\r\n        this.model = modelVal;\r\n    }\r\n    fillword void printData() { \r\n        Console.Write(this.make + \" \" + this.model);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Car car = new Car();\r\n        car.setData(\"Ford\", \"Fiesta\");\r\n        car.printData();\r\n    }\r\n}","result":"Ford Fiesta","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","private","public","public"]]},{"id":1082387589,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword string id;\r\n    fillword string name;\r\n    fillword int age;\r\n    fillword Person(string id, string name, int age) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Person person = new Person(\"s9f1sf95\", \"Thomas\", 22);\r\n        Console.Write(person.name + \" \");\r\n        Console.Write(person.age);\r\n    }\r\n}","result":"Thomas 22","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public","public"]},"correct_patterns":[["private","public","public","public"]]},{"id":959450178,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    fillword double side;\r\n    fillword Square(double sideVal) {\r\n        side = sideVal;\r\n    }\r\n    fillword double calcArea() {\r\n        return side * side;\r\n    }\r\n    fillword double calcPerimeter() {\r\n        return 4 * side;\r\n    }\r\n    fillword void printData() {\r\n        Console.WriteLine(\"Area = \" + calcArea());\r\n        Console.WriteLine(\"Perimeter = \" + calcPerimeter());\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Square obj = new Square(3);\r\n        obj.printData();\r\n    }\r\n}","result":"Area = 9\r\nPerimeter = 12","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private","private","private"]},"correct_patterns":[["private","public","private","private","public"]]}]},{"id":460224969,"name":"Abstraction Principle","tests":[{"id":1997036921,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tprivate double a;\r\n\tprivate double b;\r\n\tpublic Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic double calcArea() {\r\n\t\treturn a * b;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tRectangle obj = new Rectangle(2, 3);\r\n\t\tConsole.Write(obj.calcArea());\r\n\t}\r\n}","answers":["4","5","6"],"correct_answer":"6","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n2 x 3 = 6"},{"id":700284166,"question":"What's the output of the code snippet?","code":"class Cube {\r\n\tprivate double side;\r\n\tpublic Cube(double sideVal) {\r\n\t\tside = sideVal;\r\n\t}\r\n\tpublic double calcVolume() {\r\n\t\treturn Math.Pow(side, 3);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCube obj = new Cube(2);\r\n\t\tConsole.Write(obj.calcVolume());\r\n\t}\r\n}","answers":["2","6","8"],"correct_answer":"8","explanation":"Calculations behind <code>calcVolume<\/code> method:\r\n<br><br>\r\n2 ^ 3 = <br>\r\n2 x 2 x 2 = <br>\r\n4 x 2 = 8"},{"id":1650564295,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tprivate double a;\r\n\tprivate double b;\r\n\tpublic Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic double calcDiagonal() {\r\n\t\treturn Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tRectangle obj = new Rectangle(4, 3);\r\n\t\tConsole.Write(obj.calcDiagonal());\r\n\t}\r\n}","answers":["5","7","25"],"correct_answer":"5","explanation":"Calculations behind <code>calcDiagonal<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">4 ^ 2 + 3 ^ 2<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">4 * 4 + 3 * 3<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">16 + 9<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">25<\/span> = <br>\r\n5"},{"id":1528216708,"question":"What's the output of the code snippet?","code":"class Trapezoid {\r\n\tprivate double a, b, h;\r\n\tpublic Trapezoid(double aVal, double bVal, double hVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t\th = hVal;\r\n\t}\r\n\tpublic double calcArea() {\r\n\t\treturn (a + b) \/ 2 * h;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTrapezoid obj = new Trapezoid(1, 3, 5);\r\n\t\tConsole.Write(obj.calcArea());\r\n\t}\r\n}","answers":["10","18","20"],"correct_answer":"10","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n(1 + 3) \/ 2 * 5 = <br>\r\n4 \/ 2 * 5 = <br>\r\n2 * 5 = <br>\r\n10"},{"id":498850885,"question":"What's the output of the code snippet?","code":"class Rectangle {\r\n\tprivate double a;\r\n\tprivate double b;\r\n\tpublic Rectangle(double aVal, double bVal) {\r\n\t\ta = aVal;\r\n\t\tb = bVal;\r\n\t}\r\n\tpublic double calcPerimeter() {\r\n\t\treturn 2 * a + 2 * b;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tRectangle obj = new Rectangle(1, 3);\r\n\t\tConsole.Write(obj.calcPerimeter());\r\n\t}\r\n}","answers":["4","6","8"],"correct_answer":"8","explanation":"Calculations behind <code>calcPerimeter<\/code> method:\r\n<br><br>\r\n2 * 1 + 2 * 3 = <br>\r\n2 + 6 = <br>\r\n8 <br>"}],"puzzles":[{"id":1944398851,"text":"Fill the missing words to match the output.","code":"class Rectangle {\r\n    private double a;\r\n    private double b;\r\n    public Rectangle(double aVal, double bVal) {\r\n    \ta = aVal;\r\n    \tb = bVal;\r\n    }\r\n    public double calcArea() {\r\n    \treturn a * b;\r\n    }\r\n    public double calcPerimeter() {\r\n        return 2 * (a + b);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Rectangle obj = new Rectangle(1, 3);\r\n        Console.WriteLine(fillword.fillword);\r\n        Console.WriteLine(fillword.fillword);\r\n    }\r\n}","result":"3\r\n8","words":{"operators":[],"values":[],"variables_constants":["obj","obj"],"others":["a","b","calcArea()","calcPerimeter()","Rectangle"]},"correct_patterns":[["obj","calcArea()","obj","calcPerimeter()"]]},{"id":881479616,"text":"Fill the missing words to match the output.","code":"class Square {\r\n    private double side;\r\n    public Square(double side) {\r\n    \tthis.side = side;\r\n    }\r\n    public double calcArea() {\r\n        return side * side;\r\n    }\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        Square obj1 = new Square(fillword);\r\n        Square obj2 = new Square(fillword);\r\n        Console.WriteLine(obj1.calcArea());\r\n        Console.WriteLine(obj2.calcArea());\r\n    }\r\n}","result":"9\r\n16","words":{"operators":[],"values":["2","3","4","5","6","9","16"],"variables_constants":[],"others":[]},"correct_patterns":[["3","4"]]},{"id":1832873857,"text":"Fill the missing words to match the output.","code":"class Shape {\r\n\tprivate int angles;\r\n    public Shape(int angles) {\r\n        this.angles = angles;\r\n    }\r\n    public int calcDiagonalsCount() {\r\n        int diagonalsCount = 0;\r\n        int step = 2;\r\n\r\n        for (int i = 4; i <= this.angles; i++) {\r\n            diagonalsCount += step;\r\n            step++;\r\n        }\r\n        return diagonalsCount;\r\n    }\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        Shape obj1 = new Shape(fillword);\r\n        Shape obj2 = new Shape(fillword);\r\n        Console.WriteLine(obj1.calcDiagonalsCount());\r\n        Console.WriteLine(obj2.calcDiagonalsCount());\r\n    }\r\n}","result":"2\r\n9","words":{"operators":[],"values":["2","3","4","5","6","7","8","9"],"variables_constants":[],"others":[]},"correct_patterns":[["4","6"]]}]},{"id":1544722838,"name":"Inheritance Principle","tests":[{"id":1449720834,"question":"Which are the members of Employee class?","code":"class Person {\r\n\tprotected string name;\r\n}\r\nclass Employee : Person {\r\n\tprivate double salary;\r\n}\r\nclass Programer : Employee {\r\n\tprivate string favoriteLang;\r\n}","answers":["name","name, salary","name, salary, favoriteLang"],"correct_answer":"name, salary","explanation":"The <code>Employee<\/code> class inherits the <code>protected<\/code> member <code>name<\/code> from it's parent - <code>Person<\/code>."},{"id":253566915,"question":"What's the output of the code snippet?","code":"class Device {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"large\");\r\n\t}\r\n}\r\nclass Tablet : Device {};\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tTablet tablet = new Tablet();\r\n\t\ttablet.printSize();\r\n\t}\r\n}","answers":["large","null","Exception"],"correct_answer":"large","explanation":"<code>Tablet<\/code> inherits the <code>printSize<\/code> function from it's parent - <code>Device<\/code>."},{"id":1103249280,"question":"What's the output of the code snippet?","code":"class Glasses {\r\n\tpublic void printShadeIndex() {\r\n\t\tConsole.WriteLine(\"low \");\r\n\t}\r\n}\r\nclass Sunglasses : Glasses {\r\n\tpublic void printShadeIndex() {\r\n\t\tConsole.WriteLine(\"high\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tGlasses obj = new Glasses();\r\n\t\tobj.printShadeIndex();\r\n\t}\r\n}","answers":["low","high","low high"],"correct_answer":"low","explanation":"The <code>Glasses<\/code> class has <code>printShadeIndex<\/code> method which prints \"low\"."},{"id":980901697,"question":"What's the output of the code snippet?","code":"class Bird {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"small \");\r\n\t}\r\n}\r\nclass Eagle : Bird {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"large \");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tEagle obj = new Eagle();\r\n\t\tobj.printSize();\r\n\t}\r\n}","answers":["small","large","small large"],"correct_answer":"large","explanation":"The <code>Eagle<\/code> class overwrites the <code>printSize<\/code> function.\r\n<br><br>\r\nThe overwritten method prints \"large \" ."},{"id":1931771662,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"small \");\r\n\t}\r\n}\r\nclass HatchBack : Car {\r\n\tpublic void printSize() {\r\n\t\tbase.printSize();\r\n\t\tConsole.Write(\"medium\");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tHatchBack obj = new HatchBack();\r\n\t\tobj.printSize();\r\n\t}\r\n}","answers":["small","medium","small medium"],"correct_answer":"small medium","explanation":"The <code>HatchBack<\/code> class has <code>printSize<\/code> function which calls it's parent method (via <code>base.printSize()<\/code>) and afterwards prints \"medium\"."}],"puzzles":[{"id":129401206,"text":"Fill the missing words to match the output.","code":"class Device {\r\n    public void printSizeCategory() {\r\n        Console.Write(\"Small\");\r\n    }\r\n}\r\nclass Laptop : Device {\r\n    public void printSizeCategory() {\r\n        Console.Write(\"Large\");\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        fillword obj = new fillword();\r\n        obj.printSizeCategory();\r\n    }\r\n}","result":"Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Laptop","Device","Device"]},"correct_patterns":[["Laptop","Laptop"]]},{"id":2019270967,"text":"Fill the missing words to match the output.","code":"class Electronic {\r\n    public void printConsumation() {\r\n        Console.WriteLine(\"Low\");\r\n    }\r\n}\r\nclass fillword fillword fillword {}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Smartphone obj = new Smartphone();\r\n        obj.printConsumation();\r\n    }\r\n}","result":"Low","words":{"operators":[],"values":[],"variables_constants":[],"others":["Electronic","Smartphone","extends",":"]},"correct_patterns":[["Smartphone",":","Electronic"]]},{"id":822657268,"text":"Fill the missing words to match the output.","code":"class Person {\r\n    fillword string name;\r\n    public void printData() {\r\n        Console.WriteLine(name);\r\n    }\r\n}\r\nclass Employee : Person {\r\n    fillword double salary;\r\n    public Employee(string nameVal, double salaryVal) {\r\n        name = nameVal;\r\n        salary = salaryVal;\r\n    }\r\n    public void printData() {\r\n        fillword.printData();\r\n        Console.WriteLine(salary);\r\n    }\r\n}\r\nclass Program {\r\n    static void Main(string[] args) {\r\n        Employee obj = new Employee(\"Jim\", 26);\r\n        obj.printData();\r\n    }\r\n}","result":"Jim\r\n26","words":{"operators":[],"values":[],"variables_constants":[],"others":["Employee","Person","base","private","protected"]},"correct_patterns":[["protected","private","base"]]}]},{"id":382187863,"name":"Polymorphism Principle","tests":[{"id":902340303,"question":"What's the output of the code snippet?","code":"class Calculator {\r\n\tpublic double solve(double a, double b) {\r\n\t\treturn a - b;\r\n\t}\r\n\tpublic double solve(double a, double b, double c) {\r\n\t\treturn a + b + c;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCalculator obj = new Calculator();\r\n\t\tConsole.Write(obj.solve(5, 2) + \" \");\r\n\t\tConsole.Write(obj.solve(2, 2, 2));\r\n\t}\r\n}","answers":["3 6","3 8","7 8"],"correct_answer":"3 6","explanation":"There are 2 <code>solve<\/code> functions. Which one of them is called depends on the passed parameters.\r\n<br><br>\r\n<code>obj.solve(5, 2)<\/code> calls <code>solve(double a, double b)<\/code> .\r\n<br><br>\r\n<code>obj.solve(2, 2, 2)<\/code> calls <code>solve(double a, double b, double c)<\/code> ."},{"id":1853734540,"question":"What's the output of the code snippet?","code":"class Display {\r\n\tpublic void printRatio(string size) {\r\n\t\tConsole.Write(size + \" \");\r\n\t}\r\n\tpublic void printRatio(int size) {\r\n\t\tConsole.Write(size + \"x\" + size);\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tDisplay display = new Display();\r\n\t\tdisplay.printRatio(\"1\u00d73\");\r\n\t\tdisplay.printRatio(1);\r\n\t}\r\n}","answers":["1\u00d73 1x1","1\u00d73 1","1\u00d73 1x3"],"correct_answer":"1\u00d73 1x1","explanation":"There are 2 <code>printRatio<\/code> functions. Which one of them is called depends on the passed parameter.\r\n<br><br>\r\n<code>display.printRatio(\"1\u00d73\")<\/code> calls <code>printRatio(string size)<\/code> .\r\n<br><br>\r\n<code>display.printRatio(1)<\/code> calls <code>printRatio(int size)<\/code> ."},{"id":656596557,"question":"What's the output of the code snippet?","code":"class Vehicle {\r\n\tpublic void printConsumation() {\r\n\t\tConsole.Write(\"medium \");\r\n\t}\r\n}\r\nclass Truck : Vehicle {\r\n\tpublic void printConsumation() {\r\n\t\tConsole.Write(\"high \");\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tVehicle vehicle = new Vehicle();\r\n\t\tvehicle.printConsumation();\r\n\r\n\t\tTruck truck = new Truck();\r\n\t\ttruck.printConsumation();\r\n\t}\r\n}","answers":["medium medium","high high","medium high"],"correct_answer":"medium high","explanation":"The <code>Truck<\/code> class overwrites the <code>printConsumation<\/code> method that's inherited by it's parent - <code>Vehicle<\/code>.\r\n<br><br>\r\n<code>vehicle.printConsumation()<\/code> prints \"medium\".\r\n<br><br>\r\n<code>truck.printConsumation()<\/code> prints \"high\"."},{"id":433585674,"question":"The following code snipet is","code":"class Printer {\r\n\tpublic void listArgs(string arg) {\r\n\t\tConsole.Write(arg);\r\n\t}\r\n\tpublic void listArgs(string arg1, string arg2) {\r\n\t\tConsole.Write(arg1 + \" \" + arg2);\r\n\t}\r\n}","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Compile Time Polymorphism","explanation":"Compile Time Polymorphism occurs in function overloading.\r\n<br><br>\r\nFunction overloading - many functions with the same name accept different arguments."},{"id":1384389067,"question":"The following code snipet is","code":"class PolarAnimal {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"small\");\r\n\t}\r\n}\r\nclass PolarBear : PolarAnimal  {\r\n\tpublic void printSize() {\r\n\t\tConsole.Write(\"large\");\r\n\t}\r\n}","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Runtime Polymorphism","explanation":"Runtime Polymorphism occurs in function overriding .\r\n<br><br>\r\nfunction overriding - base class ( <code>PolarAnimal<\/code> ) has a function that's being overwritten in a child class ( <code>PolarBear<\/code> )."}],"puzzles":[{"id":669224782,"text":"Fill the missing words to match the output.","code":"class Sumator {\r\n    public int sum(int a, int b) {\r\n        return a + b;\r\n    }\r\n    public int sum(int a, int b, int c) {\r\n        return a + b + c;\r\n    }\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        Sumator sumator = new Sumator();\r\n        Console.WriteLine(sumator.sum(fillword));\r\n        Console.WriteLine(sumator.sum(fillword));\r\n    }\r\n}","result":"6\r\n7","words":{"operators":[],"values":[],"variables_constants":[],"others":["1, 1","3, 2","1, 5","1, 1, 1","2, 1, 1","2, 3, 2"]},"correct_patterns":[["1, 5","2, 3, 2"]]},{"id":412135183,"text":"Fill the missing words to match the output.","code":"class Animal {\r\n    public void printSize() {\r\n        Console.WriteLine(\"Small\");\r\n    }\r\n}\r\nclass Whale : Animal {\r\n    public void printSize() {\r\n        Console.WriteLine(\"Large\");\r\n    }\r\n}\r\nclass Cat : Animal { }\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        fillword obj1 = new fillword();\r\n        obj1.printSize();\r\n        fillword obj2 = new fillword();\r\n        obj2.printSize();\r\n    }\r\n}","result":"Small\r\nLarge","words":{"operators":[],"values":[],"variables_constants":[],"others":["Whale","Whale","Whale","Whale","Cat","Cat","Cat","Cat"]},"correct_patterns":[["Cat","Cat","Whale","Whale"]]},{"id":1363529420,"text":"Fill the missing words to match the output.","code":"class Vehicle {\r\n    public void printFuelCost() {\r\n        Console.WriteLine(\"none\");\r\n    }\r\n}\r\nclass MotorVehicle : Vehicle {\r\n    public void printFuelCost() {\r\n        Console.WriteLine(\"medium\");\r\n    }\r\n}\r\nclass Car : MotorVehicle {}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        fillword obj = new fillword();\r\n        obj.printFuelCost();\r\n    }\r\n}","result":"medium","words":{"operators":[],"values":[],"variables_constants":[],"others":["Vehicle","Vehicle","Car","Car"]},"correct_patterns":[["Car","Car"]]}]},{"id":1333057812,"name":"Collection Of Classes","tests":[{"id":187251080,"question":"What's the output of the code snippet?","code":"List<int> myList = new List<int> { 2, 5, 6, 10 };\r\nConsole.Write(myList.Count);","answers":["2","3","4"],"correct_answer":"4","explanation":"The <code>Count<\/code> property returns the count of list's  elements.\r\n<br><br>\r\n<code>myList<\/code> contains 4 elements thus 4 is printed."},{"id":1306417481,"question":"What's the output of the code snippet?","code":"class Product {\r\n\tpublic double price;\r\n\tpublic Product(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Product> myList = new List<Product>();\r\n\t\tfor(int i = 1; i <= 3; i++) {\r\n\t\t\tProduct prod = new Product(i * 11);\r\n\t\t\tmyList.Add(prod);\r\n\t\t}\r\n\r\n\t\tConsole.Write(myList[2].price);\r\n\t}\r\n}","answers":["11","22","33"],"correct_answer":"33","explanation":"After the elements are added, the list has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>11<\/td>\r\n            <td>22<\/td>\r\n            <td class=\"table-primary\">33<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":109279510,"question":"What's the output of the code snippet?","code":"class Employee {\r\n\tpublic string name;\r\n\tpublic Employee(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n}\r\nclass Company {\r\n\tpublic List<Employee> employees;\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tCompany company = new Company();\r\n\t\tcompany.employees = new List<Employee>();\r\n\t\tstring[] names = new string[] { \"Matthew\", \"John\", \"Jaden\", \"Ferb\" };\r\n\r\n\t\tfor(int i = 0; i < names.Length; i++) {\r\n\t\t\tEmployee emp = new Employee(names[i]);\r\n\t\t\tcompany.employees.Add(emp);\r\n\t\t}\r\n \t\tConsole.Write(company.employees[2].name);\r\n\t}\r\n}","answers":["John","Jaden","Ferb"],"correct_answer":"Jaden","explanation":"After the elements are added, the list has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Matthew<\/td>\r\n            <td>John<\/td>\r\n            <td class=\"table-primary\">Jaden<\/td>\r\n            <td>Ferb<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":2134350039,"question":"What's the output of the code snippet?","code":"class Tree {\r\n\tpublic double height;\r\n\tpublic Tree(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Tree> trees = new List<Tree>();\r\n\t\ttrees.Add(new Tree(10));\r\n\t\ttrees.Add(new Tree(19));\r\n\t\ttrees.Add(new Tree(21));\r\n\t\ttrees.Add(new Tree(22));\r\n\t\t\r\n\t\tforeach(Tree tree in trees) {\r\n\t\t\tif(tree.height % 2 == 0) {\r\n\t\t\t\tConsole.Write(tree.height + \" \");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","answers":["19 21","10 19","10 22"],"correct_answer":"10 22","explanation":"From all tree heights - 10, 19, 21, 22, only 2 meet the condition <code>tree.height % 2 == 0<\/code> - 10 and 22.\r\n<br><br>\r\nThe condition <code>tree.height % 2 == 0<\/code> is true if the height is an even number."},{"id":837073044,"question":"What's the output of the code snippet?","code":"class Car {\r\n\tpublic int hp;\r\n\tpublic Car(int hpVal) {\r\n\t\thp = hpVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Car> cars = new List<Car>();\r\n\t\tcars.Add(new Car(100));\r\n\t\tcars.Add(new Car(110));\r\n\t\tcars.Add(new Car(90));\r\n\t\tcars.Add(new Car(70));\r\n\t\tforeach (Car car in cars) {\r\n\t\t\tif(car.hp >= 100) {\r\n\t\t\t\tConsole.Write(car.hp + \" \");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","answers":["100 110","110","70 90"],"correct_answer":"100 110","explanation":"From all hps - 70, 90, 100, 110, only 2 meet the condition <code>car.hp >= 100<\/code> - 100 and 110."}],"puzzles":[{"id":199945869,"text":"Fill the missing words to match the output.","code":"class Peak {\r\n\tpublic double height;\r\n\tpublic Peak(double heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Peak> peaks = new List<Peak>();\r\n\t\tpeaks.Add(new Peak(2000));\r\n\t\tpeaks.Add(new Peak(3000));\r\n\t\tpeaks.Add(new Peak(4000));\r\n\t\tpeaks.Add(new Peak(5000));\r\n\t\t\r\n\t\tforeach(Peak peak in peaks) {\r\n\t\t\tif(peak.height fillword fillword) {\r\n\t\t\t\tConsole.Write(peak.height + \" \");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","result":"4000 5000","words":{"operators":[">=","<="],"values":["4000","3000"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","4000"]]},{"id":1285492298,"text":"Fill the missing words to match the output.","code":"class Student {\r\n\tpublic int age;\r\n\tpublic Student(int ageVal) {\r\n\t\tage = ageVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        List<fillword> fillword = new List<fillword>();\r\n        for (int i = 10; i <= 20; i++) {\r\n            students.Add(new Student(i));\r\n        }\r\n        foreach (Student student in students) {\r\n        \tif(student.age > fillword) {\r\n        \t\tConsole.Write(student.age + \" \");\r\n        \t}\r\n        }\r\n}","result":"16 17 18 19 20","words":{"operators":[],"values":["15","16"],"variables_constants":["students","students"],"others":["Student","Student"]},"correct_patterns":[["Student","students","Student","15"]]},{"id":88878603,"text":"Fill the missing words to match the output.","code":"class Product {\r\n\tpublic decimal price;\r\n\tpublic Product(decimal priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Product> prods = new List<Product>();\r\n\t\tfor (int i = 11; i <= 17; i++) {\r\n\t\t\tprods.Add(fillword fillword fillword);\r\n\t\t}\r\n\t\tforeach (Product prod in prods) {\r\n\t\t\tif(prod.price >= 150) {\r\n        \t\t\tConsole.Write(prod.price + \" \");\r\n        \t\t}\r\n        \t}\r\n\t}\r\n}","result":"150 160 170","words":{"operators":[],"values":[],"variables_constants":[],"others":["Product","prods","(i)","(i * 10)","List","new"]},"correct_patterns":[["new","Product","(i * 10)"]]}]},{"id":1702101,"name":"Compareto Method","tests":[{"id":1787418709,"question":"What's the output of the code snippet?","code":"class Car : IComparable {\r\n\tpublic int hp;\r\n\tpublic Car(int hpVal) {\r\n\t\thp = hpVal;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\tCar car = (Car)obj;\r\n\t\tif(car.hp > this.hp) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (car.hp == this.hp) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Car> cars = new List<Car>();\r\n\t\tcars.Add(new Car(80));\r\n\t\tcars.Add(new Car(70));\r\n\t\tcars.Add(new Car(90));\r\n\t\tcars.Sort();\r\n\t\tConsole.Write(cars[0].hp);\r\n\t}\r\n}","answers":["70","80","90"],"correct_answer":"70","explanation":"After sorting the list, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">70<\/td>\r\n            <td>80<\/td>\r\n            <td>90<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":591329298,"question":"What's the output of the code snippet?","code":"class Person : IComparable {\r\n\tpublic string name;\r\n\tpublic Person(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\tPerson person = (Person)obj;\r\n\t\tif(person.name.Length > this.name.Length) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (person.name.Length == this.name.Length) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Person> persons = new List<Person>();\r\n\t\tpersons.Add(new Person(\"Alexander\"));\r\n\t\tpersons.Add(new Person(\"Alex\"));\r\n\t\tpersons.Add(new Person(\"Alexa\"));\r\n\t\tpersons.Sort();\r\n\t\tConsole.Write(persons[2].name);\r\n\t}\r\n}","answers":["Alex","Alexa","Alexander"],"correct_answer":"Alexander","explanation":"After sorting the list by length of names, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Alex<\/td>\r\n            <td>Alexa<\/td>\r\n            <td class=\"table-primary\">Alexander<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1709382611,"question":"What's the output of the code snippet?","code":"class Tree : IComparable {\r\n\tpublic int height;\r\n\tpublic Tree(int heightVal) {\r\n\t\theight = heightVal;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\tTree tree = (Tree)obj;\r\n\t\tif(tree.height < this.height) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (tree.height == this.height) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Tree> trees = new List<Tree>();\r\n\t\ttrees.Add(new Tree(60));\r\n\t\ttrees.Add(new Tree(70));\r\n\t\ttrees.Add(new Tree(50));\r\n\t\ttrees.Sort();\r\n\t\tConsole.Write(trees[0].height);\r\n\t}\r\n}","answers":["50","60","70"],"correct_answer":"70","explanation":"After sorting the list, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">70<\/td>\r\n            <td>60<\/td>\r\n            <td>50<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1586510736,"question":"What's the output of the code snippet?","code":"class City : IComparable {\r\n\tpublic string name;\r\n\tpublic City(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\tCity town = (City)obj;\r\n\t\tif(town.name.Length < this.name.Length) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (town.name.Length == this.name.Length) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<City> cities = new List<City>();\r\n\t\tcities.Add(new City(\"Madrid\"));\r\n\t\tcities.Add(new City(\"Tokyo\"));\r\n\t\tcities.Add(new City(\"Chicago\"));\r\n\t\tcities.Sort();\r\n\t\tConsole.Write(cities[2].name);\r\n\t}\r\n}","answers":["Tokyo","Madrid","Chicago"],"correct_answer":"Tokyo","explanation":"After sorting the list, it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>Chicago<\/td>\r\n            <td>Madrid<\/td>\r\n            <td class=\"table-primary\">Tokyo<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":390421329,"question":"What's the output of the code snippet?","code":"class Product : IComparable {\r\n\tpublic double price;\r\n\tpublic Product(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\treturn 0;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Product> products = new List<Product>();\r\n\t\tproducts.Add(new Product(4));\r\n\t\tproducts.Add(new Product(5));\r\n\t\tproducts.Add(new Product(3));\r\n\t\tproducts.Sort();\r\n\t\tConsole.Write(products[1].price);\r\n\t}\r\n}","answers":["3","4","5"],"correct_answer":"5","explanation":"The <code>CompareTo<\/code> method returns 0 which doesn't sort the list.\r\n<br>\r\nStructure of the list:\r\n<br>\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>4<\/td>\r\n            <td class=\"table-primary\">5<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":2146519496,"text":"Fill the missing words to match the output.","code":"class Person :  fillword {\r\n\tpublic int height;\r\n\tpublic Person(int height) {\r\n\t\tthis.height = height;\r\n\t}\r\n\tpublic int fillword(object obj) {\r\n\t\tPerson person = (Person)obj;\r\n\t\tif(person.height > this.height) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (this.height == person.height) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Person> people = new List<Person>();\r\n\t\tpeople.Add(new Person(160));\r\n\t\tpeople.Add(new Person(180));\r\n\t\tpeople.Add(new Person(170));\r\n\t\tfillword.fillword;\r\n\t\tforeach (Person person in people) {\r\n\t\t\tConsole.Write(person.height + \" \");\r\n\t\t}\r\n\t}\r\n}","result":"160 170 180","words":{"operators":[],"values":[],"variables_constants":[],"others":["people","Compare","CompareTo","IComparable","Sort()","Order()"]},"correct_patterns":[["IComparable","CompareTo","people","Sort()"]]},{"id":816212361,"text":"Fill the missing words to match the output.","code":"class Tablet : IComparable {\r\n\tpublic double size;\r\n\tpublic Tablet(double size) {\r\n\t\tthis.size = size;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\tTablet tablet = (Tablet)obj;\r\n\t\tif(tablet.size > this.size) {\r\n\t\t\treturn fillword;\r\n\t\t}\r\n\t\telse if (tablet.size == this.size) {\r\n\t\t\treturn fillword;\r\n\t\t}\r\n\t\treturn fillword;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        \tList<Tablet> list = new List<Tablet>();\r\n        \tlist.Add(new Tablet(10));\r\n        \tlist.Add(new Tablet(7));\r\n        \tlist.Add(new Tablet(8));\r\n        \tlist.Sort();\r\n        \tforeach (Tablet person in list) {\r\n            \t\tConsole.Write(person.size + \" \");\r\n        \t}\r\n\t}\r\n}","result":"7 8 10","words":{"operators":[],"values":[],"variables_constants":[],"others":["-1","-1","0","0","1","1"]},"correct_patterns":[["-1","0","1"]]},{"id":1766492502,"text":"Fill the missing words to match the output.","code":"class Product : IComparable {\r\n\tpublic decimal price;\r\n\tpublic Product(decimal price) {\r\n\t\tthis.price = price;\r\n\t}\r\n\tpublic int CompareTo(object obj) {\r\n\t\tProduct product = (Product)obj;\r\n\t\tif(product.price < this.price) {\r\n\t\t\treturn fillword;\r\n\t\t}\r\n\t\telse if (product.price == this.price) {\r\n\t\t\treturn fillword;\r\n\t\t}\r\n\t\treturn fillword;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Product> list = new List<Product>();\r\n\t\tlist.Add(new Product(15));\r\n\t\tlist.Add(new Product(50));\r\n\t\tlist.Add(new Product(30));\r\n\t\tlist.Sort();\r\n\t\tforeach (Product prod in list) {\r\n\t\t\tConsole.Write(prod.price + \" \");\r\n\t\t}\r\n\t}\r\n}","result":"50 30 15","words":{"operators":[],"values":["-1","-1","0","0","1","1"],"variables_constants":[],"others":[]},"correct_patterns":[["-1","0","1"]]}]},{"id":2060327058,"name":"Equals Method","tests":[{"id":1240103710,"question":"What's the output of the code snippet?","code":"class Mouse : IEquatable<Mouse> {\r\n\tpublic string color;\r\n\tpublic Mouse(string colorVal) {\r\n\t\tcolor = colorVal;\r\n\t}\r\n\tpublic bool Equals(Mouse mouse) {\r\n\t\treturn color == mouse.color;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Mouse> mouses = new List<Mouse>();\r\n\t\tmouses.Add(new Mouse(\"Black\"));\r\n\t\tmouses.Add(new Mouse(\"White\"));\r\n\t\tConsole.Write(mouses.Contains(new Mouse(\"White\")));\r\n\t}\r\n}","answers":["true","false","White"],"correct_answer":"true","explanation":"The rule whether an object is contained in the list is specified in the <code>Equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match the color of list's element.\r\n<br><br>\r\n\"White\" is a color that's contained in the list thus \"true\" is printed."},{"id":43948767,"question":"What's the output of the code snippet?","code":"class Smartwatch : IEquatable<Smartwatch> {\r\n\tpublic double price;\r\n\tpublic Smartwatch(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t}\r\n\tpublic bool Equals(Smartwatch smartWatch) {\r\n\t\treturn price == smartWatch.price;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Smartwatch> list = new List<Smartwatch>();\r\n\t\tlist.Add(new Smartwatch(40));\r\n\t\tlist.Add(new Smartwatch(50));\r\n\t\tConsole.Write(list.Contains(new Smartwatch(60)));\r\n\t}\r\n}","answers":["true","false","60"],"correct_answer":"false","explanation":"The rule whether an object is contained in the list is specified in the <code>Equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match the price of list's element.\r\n<br><br>\r\n\"60\" is a price that's not contained in the list thus \"false\" is printed."},{"id":2068036252,"question":"What's the output of the code snippet?","code":"class Car : IEquatable<Car> {\r\n\tpublic string make;\r\n\tpublic string model;\r\n\tpublic Car(string makeVal, string modelVal) {\r\n\t\tmake = makeVal;\r\n\t\tmodel = modelVal;\r\n\t}\r\n\tpublic bool Equals(Car car) {\r\n\t\treturn make == car.make && model == car.model;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Car> list = new List<Car>();\r\n\t\tlist.Add(new Car(\"Toyota\", \"Yaris\"));\r\n\t\tlist.Add(new Car(\"Toyota\", \"Colrolla\"));\r\n\t\tConsole.Write(list.Contains(new Car(\"Toyota\", \"Colrolla\")));\r\n\t\tConsole.Write(\" \");\r\n\t\tConsole.Write(list.Contains(new Car(\"Toyota\", \"Tundra\")));\r\n\t}\r\n}","answers":["true true","true false","false false"],"correct_answer":"true false","explanation":"The rule whether an object is contained in the list is specified in the <code>Equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match both make and model of list's element.\r\n<br><br>\r\n\"Toyota\" - \"Colrolla\" is a combination of make and model that is contained in the list thus \"true\" is printed.\r\n<br><br>\r\n\"Toyota\" - \"Tundra\" is a combination of make and model that is not contained in the list thus \"false\" is printed."},{"id":1039194717,"question":"What's the output of the code snippet?","code":"class Processor : IEquatable<Processor> {\r\n\tpublic string manufacturer;\r\n\tpublic string model;\r\n\tpublic Processor(string manufacturerVal, string modelVal) {\r\n\t\tmanufacturer = manufacturerVal;\r\n\t\tmodel = modelVal;\r\n\t}\r\n\tpublic bool Equals(Processor processor) {\r\n\t\treturn manufacturer == processor.manufacturer;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Processor> list = new List<Processor>();\r\n\t\tlist.Add(new Processor(\"Intel\", \"I7\"));\r\n\t\tlist.Add(new Processor(\"Intel\", \"I9\"));\r\n\t\tlist.Add(new Processor(\"AMD\", \"Ryzen\"));\r\n\t\tConsole.Write(list.Contains(new Processor(\"Intel\", \"I3\")));\r\n\t\tConsole.Write(\" \");\r\n\t\tConsole.Write(list.Contains(new Processor(\"AMD\", \"Ryzen\")));\r\n\t}\r\n}","answers":["false false","false true","true true"],"correct_answer":"true true","explanation":"The rule whether an object is contained in the list is specified in the <code>Equals<\/code> method.\r\n<br><br>\r\nIn order to be contained in the list the object must match the manufacturer of list's element.\r\n<br><br>\r\nBoth \"Intel\" and \"AMD\" are manufacturers that are contained in the list thus \"true\" is printed."},{"id":1990588954,"question":"What's the output of the code snippet?","code":"class Person : IEquatable<Person> {\r\n\tpublic string name;\r\n\tpublic Person(string nameVal) {\r\n\t\tname = nameVal;\r\n\t}\r\n\tpublic bool Equals(Person person) {\r\n\t\treturn false;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tPerson person = new Person(\"James\");\r\n\t\tList<Person> list = new List<Person>();\r\n\t\tlist.Add(person);\r\n\t\t\r\n\t\tConsole.Write(list.Contains(person));\r\n\t}\r\n}","answers":["true","false","James"],"correct_answer":"false","explanation":"The rule whether an object is contained in the list is specified in the <code>Equals<\/code> method.\r\n<br><br>\r\nThe <code>Equals<\/code> method returns false.\r\n<br><br>\r\nFor that reason the <code>Contains<\/code> method always returns false no matter the passed argument."}],"puzzles":[{"id":603957527,"text":"Fill the missing words to match the output.","code":"class Product : IEquatable<Product> {\r\n\tpublic double price;\r\n\tpublic string name;\r\n\tpublic Product(double priceVal) {\r\n\t\tprice = priceVal;\r\n\t\tname = \"Unknown\";\r\n\t}\r\n\tpublic bool Equals(Product product) {\r\n\t\treturn fillword == fillword.fillword;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Product> list = new List<Product>();\r\n        \tlist.Add(new Product(15));\r\n        \tlist.Add(new Product(50));\r\n        \r\n        \tProduct prod = new Product(50);\r\n        \tConsole.Write(list.Contains(prod));\r\n\t}\r\n}","result":"true","words":{"operators":[],"values":[],"variables_constants":[],"others":["price","price","name","name","product"]},"correct_patterns":[["price","product","price"]]},{"id":1689045204,"text":"Fill the missing words to match the output.","code":"class Mouse : IEquatable<Mouse> {\r\n\tpublic string make;\r\n\tpublic double price;\r\n\tpublic Mouse(string make, double price) {\r\n\t\tthis.make = make;\r\n\t\tthis.price = price;\r\n\t}\r\n\tpublic bool Equals(Mouse mouse) {\r\n\t\treturn make == mouse.make fillword \r\n                price == mouse.price;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tList<Mouse> list = new List<Mouse>();\r\n        \tMouse obj1 = new Mouse(\"hp\", 15);\r\n        \tMouse obj2 = new Mouse(\"hp\", 20);\r\n\r\n        \tlist.Add(new Mouse(\"ASUS\", 15));\r\n        \tlist.Add(new Mouse(\"hp\", 20));\r\n        \r\n        \tConsole.Write(list.fillword(obj1) + \" \");\r\n        \tConsole.Write(list.fillword(obj2));\r\n\t}\r\n}","result":"false true","words":{"operators":["&&","||"],"values":[],"variables_constants":[],"others":["Contains","Contains","Has","Has"]},"correct_patterns":[["&&","Contains","Contains"]]},{"id":1565649045,"text":"Fill the missing words to match the output.","code":"class HeadPhones : IEquatable<HeadPhones> {\r\n        public string make;\r\n        public decimal price;\r\n\r\n\tpublic HeadPhones(string make, decimal price) {\r\n                this.make = make;\r\n                this.price = price;\r\n        }\r\n\tpublic bool Equals(HeadPhones hp) {\r\n\t\treturn fillword == hp.fillword fillword \r\n                fillword == hp.fillword;\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n        List<HeadPhones> list = new List<HeadPhones>();\r\n        HeadPhones obj1 = new HeadPhones(\"X\", 75);\r\n        HeadPhones obj2 = new HeadPhones(\"Z\", 80);\r\n\r\n        list.Add(new HeadPhones(\"X\", 75));\r\n        list.Add(new HeadPhones(\"Z\", 50));\r\n        \r\n        Console.Write(list.Contains(obj1) + \" \");\r\n        Console.Write(list.Contains(obj2));\r\n\t}\r\n}","result":"true false","words":{"operators":["&&","||"],"values":[],"variables_constants":[],"others":["make","make","price","price"]},"correct_patterns":[["make","make","&&","price","price"],["price","price","&&","make","make"]]}]},{"id":863189075,"name":"Try Catch","tests":[{"id":793380315,"question":"What's the output of the code snippet?","code":"class Program {\r\n\tstatic void Main(string[] args) {\r\n\t\ttry {\r\n\t\t\tConsole.Write(\"1 \");\r\n\t\t} catch(Exception ex) {\r\n\t\t\tConsole.Write(\"2 \");\r\n\t\t}\r\n\t\tConsole.Write(\"3\");\r\n\t}\r\n}","answers":["1 2","2 3","1 3"],"correct_answer":"1 3","explanation":"No exception is thrown so the catch  block is not executed and \"2\" is not printed."},{"id":1644111256,"question":"What's the output of the code snippet?","code":"class Program {\r\n\tstatic void Main(string[] args) {\r\n\t\ttry {\r\n\t\t\tConsole.Write(\"1 \");\r\n\t\t\tthrow new Exception();\r\n\t\t} catch(Exception ex) {\r\n\t\t\tConsole.Write(\"2 \");\r\n\t\t}\r\n\t}\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"Since exception is thrown the catch block is executed thus \"2\" is printed."},{"id":1521239385,"question":"What's the output of the code snippet?","code":"class Program {\r\n\tstatic void Main(string[] args) {\r\n\t\ttry {\r\n\t\t\tConsole.Write(\"1 \");\r\n\t\t\tthrow new Exception(\"2 \");\r\n\t\t\tConsole.Write(\"3 \");\r\n\t\t}\r\n\t\tcatch (Exception ex) {\r\n\t\t\tConsole.Write(ex.Message);\r\n\t\t\tConsole.Write(\"4\");\r\n\t\t}\r\n\t}\r\n}","answers":["1 3","1 2 4","1 3 2 4"],"correct_answer":"1 2 4","explanation":"Since exception is thrown the catch block executes.\r\n<br><br>\r\n<code>ex.Message<\/code> is the message that's passed to the thrown exception - \"2\".\r\n<br><br>\r\n\"3\" is not printed because the try block execution ends when exception is thrown."},{"id":324101350,"question":"What's the output of the code snippet?","code":"class Smartphone {\r\n\tprivate double price;\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\tpublic void setPrice(double num) {\r\n\t\tif (num <= 0) {\r\n\t\t\tthrow new Exception(\"Invalid Price\");\r\n\t\t}\r\n\t}\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tConsole.Write(\"1 \");\r\n\t\ttry {\r\n\t\t\tSmartphone smartphone = new Smartphone();\r\n\t\t\tsmartphone.setPrice(-5);\r\n\t\t}\r\n\t\tcatch (Exception ex) {\r\n\t\t\tConsole.Write(ex.Message);\r\n\t\t}\r\n\t}\r\n}","answers":["1","Invalid Price","1 Invalid Price"],"correct_answer":"1 Invalid Price","explanation":"The passed price (-5) meets the condition <code>num <= 0<\/code> thus exception is thrown and the catch block executes.\r\n<br><br>\r\n<code>ex.Message<\/code> is the message that's passed to the thrown exception - \"Invalid Price\"."},{"id":1409647783,"question":"What's the output of the code snippet?","code":"class Program {\r\n\tstatic void Main(string[] args) {\r\n\t\tConsole.Write(\"1 \");\r\n\t\ttry {\r\n\t\t\tConsole.Write(\"2 \");\r\n\t\t\tthrow new Exception();\r\n\t\t\tConsole.Write(\"3 \");\r\n\t\t}\r\n\t\tcatch (Exception ex) {\r\n\t\t\tConsole.Write(\"4 \");\r\n\t\t}\r\n\t}\r\n}","answers":["1 4","1 2 4","1 2 3 4"],"correct_answer":"1 2 4","explanation":"Since exception is thrown the catch block executes thus \"4\" is printed.\r\n<br><br>\r\n\"3\" is not printed because the try block execution ends when exception is thrown."}],"puzzles":[{"id":369494098,"text":"Fill the missing words to match the output.","code":"try {\r\n    throw new Exception(fillword);\r\n} catch(Exception ex) {\r\n    Console.Write(ex.Message);\r\n    Console.Write(fillword);\r\n}\r\nConsole.Write(fillword);","result":"A B C","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"A \"","\"B \"","\"C\"","\"D \""]},"correct_patterns":[["\"A \"","\"B \"","\"C\""]]},{"id":1219176467,"text":"Fill the missing words to match the output.","code":"try {\r\n    Console.Write(fillword);\r\n    throw new Exception(fillword);\r\n} catch(Exception ex) {\r\n    Console.Write(fillword);\r\n    Console.Write(fillword);\r\n}","result":"1 2 3","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"1 \"","\"2 \"","\"3 \"","ex.Message"]},"correct_patterns":[["\"1 \"","\"2 \"","ex.Message","\"3 \""]]},{"id":22563792,"text":"Fill the missing words to match the output.","code":"class Calculator {\r\n    public double divide(double a, double b) {\r\n        if (b == 0) {\r\n            throw new Exception(\"Cannot divide by zero\");        \r\n        }\r\n        return a \/ b;\r\n    }\r\n}\r\nclass Program {\r\n\tstatic void Main(string[] args) {\r\n\t\ttry {\r\n\t\t\tCalculator calc = new Calculator();\r\n\t\t\tcalc.divide(fillword, fillword);\r\n\t\t} catch(Exception ex) {\r\n\t\t\tConsole.Write(fillword);\r\n\t\t}\r\n\t}\r\n}","result":"Cannot divide by zero","words":{"operators":[],"values":["0","3"],"variables_constants":[],"others":["ex.Message","ex"]},"correct_patterns":[["3","0","ex.Message"]]}]}]},"projects":[{"id":1304630954,"name":"Rectangle Calculator","description":"<p>Create a rectangle calculator on your desktop \/ laptop.<\/p>\r\n\r\n<p>The program must read two parameters:<\/p>\r\n<ul>\r\n    <li><b>rectangle's width<\/b> - positive floating point number.<\/li>\r\n    <li><b>rectangle's height<\/b> - another positive floating point number.<\/li>\r\n<\/ul>\r\n\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula: 2 x (width + height).<\/li>\r\n    <li><b>Area<\/b>. It's calculated via the formula: width x height.<\/li>\r\n    <li ><b>Diagonal<\/b>. It's calculated via the formula:<img src=\"imgs\/projects\/diagonal-formula.png\" style=\"\r\n    height: 45px;\r\n    display: block;\"><\/li>\r\n<\/ul>\r\n\r\n<p>Hint: You may use the function Math.Sqrt to calculate square root and Math.Pow to calculate power for the diagonal formula.<\/p>\r\n\r\n<p>Test your code using the inputs and outputs specified below:<\/p>","inputs":["3<br>4","2.2<br>3.5","6<br>8"],"outputs":["Perimeter = 14 <br> Area = 12 <br> Diagonal = 5","Perimeter = 11.4 <br> Area = 7.7 <br> Diagonal = 4.13400532171888","Perimeter = 28 <br> Area = 48 <br> Diagonal = 10"],"solution":"using System; \/\/ This line allows usage for Console.ReadLine and Console.WriteLine\r\n\u200b\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \/\/ Read user's input and cast it to double:\r\n            double width = double.Parse(Console.ReadLine());\r\n            double height = double.Parse(Console.ReadLine());\r\n\u200b\r\n            \/\/ Basic calculations:\r\n            double perimeter = 2 * (width + height);\r\n            double area = width * height;\r\n\u200b\r\n            \/\/ Use Math.Sqrt to calculate square root and Math.Pow to calculate power.\r\n            double diagonal = Math.Sqrt( Math.Pow(width, 2) + Math.Pow(height, 2) );\r\n\u200b\r\n            \/\/ Print calculations:\r\n            Console.WriteLine(\"Perimeter = \" + perimeter);\r\n            Console.WriteLine(\"Area = \" + area);\r\n            Console.WriteLine(\"Diagonal = \" + diagonal);\r\n        }\r\n    }\r\n}","stars":1,"requirements":["Calculations"]},{"id":901665824,"name":"Digitized Time","description":"<p>Many timers show time in the format mm:ss (minutes, seconds) but keep track only on the seconds. <p>\r\n<p>Write a program on your desktop \/ laptop which reads a seconds parameter (positive integer that's between 0 and 3600) and prints the time in the format mm:ss.<\/p>\r\n\r\n<p>For example 130 seconds is equivalent to 2 minute and 10 seconds (2 * 60 + 10 = 130) which is formated as \"02:10\".<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["30","120","65","695","1","3599"],"outputs":["00:30","02:00","01:05","11:35","00:01","59:59"],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int totalSeconds = int.Parse(Console.ReadLine()); \/\/ Read input and convert it to int.\r\n\r\n            int minutes = totalSeconds \/ 60; \/\/ If totalSeconds \/ 60 has value of 2.90 it's parsed to int as 2.  \r\n            int seconds = totalSeconds - minutes * 60; \/\/ Extract seconds from minutes and total seconds.\r\n\r\n            string output = \"\";\r\n            if (minutes < 10)\r\n            {\r\n                output += \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n            }\r\n            output += minutes + \":\";\r\n\r\n            if (seconds < 10)\r\n            {\r\n                output += \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n            }\r\n            output += seconds;\r\n\r\n            Console.WriteLine(output);\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":1382668076,"name":"Price Management","description":"<p>Penny has groceries stores in multiple Italian cities. Some of the cities are more expensive than others so the price is different for every city.<\/p>\r\n<p>Help Penny to manage her groceries prices by creating a program on your desktop \/ laptop which accepts two arguments:<\/p>\r\n<ul>\r\n     <li> <b>City<\/b> - string which has one of three values - \"Milan\", \"Rome\", \"Florence\".<\/li>\r\n     <li> <b>Fruit<\/b> - string which has one of three values - \"Orange\", \"Apple\", \"Cherry\".<\/li>\r\n<\/ul>\r\n<p>The program must print the cost of the fruit per kilogram in the specified city.<\/p>\r\n\r\n<p>The prices for fruits per kilogram are displayed in the following table:<\/p>\r\n\r\n<table>\r\n    <thead>\r\n           <tr>\r\n                 <td><\/td>\r\n                 <td>Milan<\/td>\r\n                 <td>Rome<\/td>\r\n                 <td>Florence<\/td>\r\n           <\/tr>\r\n    <\/thead>\r\n    <tbody>\r\n           <tr>\r\n                  <td>Orange<\/td>\r\n                  <td>2.56<\/td>\r\n                  <td>3.20<\/td>\r\n                  <td>4.23<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Apple<\/td>\r\n                  <td>2.86<\/td>\r\n                  <td>3.60<\/td>\r\n                  <td>4.56<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Cherry<\/td>\r\n                  <td>2.00<\/td>\r\n                  <td>2.80<\/td>\r\n                  <td>3.64<\/td>\r\n           <\/tr>\r\n  <\/tbody>\r\n<\/table>\r\n\r\n<p>For example the price per kilogram for orange in Rome is 3.20 and the price per kilogram for cherry in Florence is 3.64.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["Milan<br>Orange","Florence<br>Orange","Florence<br>Cherry","Rome<br>Cherry"],"outputs":["2.56","4.23","3.64","2.80"],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \/\/ Read user's input:\r\n            string city = Console.ReadLine();\r\n            string fruit = Console.ReadLine();\r\n\r\n            if (city == \"Milan\")\r\n            {\r\n                if (fruit == \"Orange\")\r\n                {\r\n                    Console.WriteLine(\"2.56\");\r\n                }\r\n                else if (fruit == \"Apple\")\r\n                {\r\n                    Console.WriteLine(\"2.86\");\r\n                }\r\n                else if (fruit == \"Cherry\")\r\n                {\r\n                    Console.WriteLine(\"2.00\");\r\n                }\r\n            }\r\n            else if (city == \"Rome\")\r\n            {\r\n                if (fruit == \"Orange\")\r\n                {\r\n                    Console.WriteLine(\"3.20\");\r\n                }\r\n                else if (fruit == \"Apple\")\r\n                {\r\n                    Console.WriteLine(\"3.60\");\r\n                }\r\n                else if (fruit == \"Cherry\")\r\n                {\r\n                    Console.WriteLine(\"2.80\");\r\n                }\r\n            }\r\n            else if (city == \"Florence\")\r\n            {\r\n                if (fruit == \"Orange\")\r\n                {\r\n                    Console.WriteLine(\"4.23\");\r\n                }\r\n                else if (fruit == \"Apple\")\r\n                {\r\n                    Console.WriteLine(\"4.56\");\r\n                }\r\n                else if (fruit == \"Cherry\")\r\n                {\r\n                    Console.WriteLine(\"3.64\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Condition Statements"]},{"id":186578669,"name":"Currency Converter","description":"<p>Write a currency converter on your desktop \/ laptop which accepts 3 arguments:<\/p>\r\n<ul>\r\n    <li><b>Amount<\/b> - positive floating point number<\/li>\r\n    <li><b>Input currency<\/b> - string representing currency<\/li>\r\n    <li><b>Output currency<\/b> - another string representing currency<\/li>\r\n<\/ul>\r\n\r\n<p>The supported currencies are: USD, EUR and GBP. For the sake of simplicity it's assumed that their exchange rate is always the following:<\/p>\r\n\r\n<table class=\"table\">\r\n<tbody>\r\n<tr>\r\n\t<td rowspan=\"2\">1 USD<\/td>\r\n\t<td>0.84 EUR<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>&nbsp;0.72&nbsp;GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 EUR<\/td>\r\n\t<td>1.18 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>0.86 GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 GBP<\/td>\r\n\t<td>1.38 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>1.16 EUR<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>For example 2 EUR are 2.36 USD (2 * 1.18 = 2.36).<\/p>\r\n<p>Also the output needs to be rounded up to two digits after decimal point.<\/p>\r\n\r\n<p>Make sure it's printed \"Invalid Input\" if an unsupported currency is entered.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["2<br>EUR<br>GBP","1.12<br>USD<br>EUR","2.54<br>GBP<br>EUR","3.56<br>ABC<br>EUR","3.56<br>USD<br>ABC"],"outputs":["1.72","0.94","2.95","Invalid input.","Invalid input."],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \/\/ Read user's input and cast it to decimal:\r\n            \/\/ decimal is considered the best type for storing money due to it's precision\r\n            decimal amount = decimal.Parse(Console.ReadLine());\r\n\r\n            string currencyFrom = Console.ReadLine();\r\n            string currencyTo = Console.ReadLine();\r\n\r\n            \/\/ Decimal types need to have 'M' suffix.\r\n            decimal multiplier = 0M;\r\n\r\n            if (currencyFrom == \"USD\")\r\n            {\r\n                if (currencyTo == \"EUR\")\r\n                {\r\n                    multiplier = 0.84M;\r\n                }\r\n                else if (currencyTo == \"GBP\")\r\n                {\r\n                    multiplier = 0.72M;\r\n                }\r\n            }\r\n            else if (currencyFrom == \"EUR\")\r\n            {\r\n                if (currencyTo == \"USD\")\r\n                {\r\n                    multiplier = 1.18M;\r\n                }\r\n                else if (currencyTo == \"GBP\")\r\n                {\r\n                    multiplier = 0.86M;\r\n                }\r\n            }\r\n            else if (currencyFrom == \"GBP\")\r\n            {\r\n                if (currencyTo == \"USD\")\r\n                {\r\n                    multiplier = 1.38M;\r\n                }\r\n                else if (currencyTo == \"EUR\")\r\n                {\r\n                    multiplier = 1.16M;\r\n                }\r\n            }\r\n\r\n            if (multiplier == 0)\r\n            {\r\n                \/\/ Neither of the checks has modified it's value.\r\n                \/\/ So inform user about invalid input.\r\n                Console.WriteLine(\"Invalid input.\");\r\n            }\r\n            else\r\n            {\r\n                \/\/ Valid Input\r\n                \/\/ Calculate and round output up to two digits after decimal point.\r\n\r\n                decimal output = amount * multiplier;\r\n                Console.WriteLine(Math.Round(output, 2));\r\n            }\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":108017259,"name":"Multiplication Table","description":"<p>Write a program on your desktop \/ laptop that prints multiplication table.<\/p>\r\n<p>The program must accept 1 argument:<\/p>\r\n<ul>\r\n    <li><b>number<\/b> - positive integer.<\/li>\r\n<\/ul>\r\n<p>The multiplication table must contain information about the multiplications for the input number and the numbers from 1 to 10.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["3","5","0"],"outputs":["3 x 3 = 3 <br> 3 x 2 = 6 <br> 3 x 3 = 9 <br> 3 x 4 = 12 <br> 3 x 5 = 15 <br> 3 x 6 = 18 <br> 3 x 7 = 21 <br> 3 x 8 = 24 <br> 3 x 9 = 27 <br> 3 x 10 = 30","5 x 1 = 5 <br> 5 x 2 = 10 <br> 5 x 3 = 15 <br> 5 x 4 = 20 <br> 5 x 5 = 25 <br> 5 x 6 = 30 <br> 5 x 7 = 35 <br> 5 x 8 = 40 <br> 5 x 9 = 45 <br> 5 x 10 = 50","0 x 1 = 0 <br> 0 x 2 = 0 <br> 0 x 3 = 0 <br> 0 x 4 = 0 <br> 0 x 5 = 0 <br> 0 x 6 = 0 <br> 0 x 7 = 0 <br> 0 x 8 = 0 <br> 0 x 9 = 0 <br> 0 x 10 = 0"],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int number = int.Parse(Console.ReadLine());\r\n\r\n            for(int i = 1; i <= 10; i++)\r\n            {\r\n                Console.WriteLine(number + \" x \" + i + \" = \" + number * i);\r\n            }\r\n        }\r\n    }\r\n}","stars":2,"requirements":["Calculations","Loops"]},{"id":2133153320,"name":"Play Button","description":"<p>Write a program on your desktop \/ laptop that prints a play button made of stars.<\/p>\r\n\r\n<p>The program must accept one argument:<\/p>\r\n<ul>\r\n    <li><b>rows<\/b> - positive integer<\/li>\r\n<\/ul>\r\n<p>If the input number is even (like 0, 2, 4, 6 etc...) or negative print the message \"Invalid input.\".<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: You don't have to write nested loops if you don't want to. You can repeat a string like this: <br>\r\n<code>string row = new String('*', 4);<\/code> which creates the following string: \"****\".<\/p>","inputs":["1","3","5","7","2","0","-1"],"outputs":["<div style=\"letter-spacing: 5px;\">*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>****<br>***<br>**<br>*<\/div>","Invalid input.","Invalid input.","Invalid input."],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \/\/ Read user's input:\r\n            int number = int.Parse(Console.ReadLine());\r\n\r\n            if(number % 2 == 0 || number <= 0)\r\n            {\r\n                \/\/ Inform user that input is negative.\r\n                Console.WriteLine(\"Invalid input.\");\r\n\r\n                return; \/\/ Terminate the program.\r\n            }\r\n\r\n            \/\/ Print the upper part:\r\n            for(int i = 1; i <= number \/ 2; i++)\r\n            {\r\n                \/\/ repeat '*' i times.\r\n                \/\/ Example: new String('*', 3) would create the string \"***\".\r\n                string row = new String('*', i);\r\n                Console.WriteLine(row);\r\n            }\r\n\r\n            \/\/ Print the middle row:\r\n            string middleRow = new String('*', number \/ 2 + 1);\r\n            Console.WriteLine(middleRow);\r\n\r\n            \/\/ Print the below part:\r\n            for (int i = number \/ 2; i >= 1; i--)\r\n            {\r\n                string row = new String('*', i);\r\n                Console.WriteLine(row);\r\n            }\r\n        }\r\n    }\r\n}","stars":3,"requirements":["Loops"]},{"id":835351017,"name":"Digits Counter","description":"<p>Write a program on your desktop \/ laptop which prints the occurrences of digits in input number.<\/p>\r\n<p>The program must read a positive integer.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details:<\/p>","inputs":["112266863","15968929","01230"],"outputs":["0 -> 0 <br> 1 -> 2 <br> 2 -> 2 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 3 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 0","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 0 <br> 4 -> 0 <br> 5 -> 1 <br> 6 -> 1 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 3","0 -> 1 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 0 <br> 7 -> 0 <br> 8 -> 0 <br> 9 -> 0"],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \/\/ Read user's input. Integer parsing removes the leading 0s.\r\n            \/\/ For example 00123 is parsed as 123.\r\n            int number = int.Parse(Console.ReadLine());\r\n            string inputNumeric = number.ToString();\r\n\r\n            for(int i = 0; i <= 9; i++) \/\/ For numbers in range [0, 9].\r\n            {\r\n                int occurrences = 0;\r\n\r\n                foreach (char digit in inputNumeric) \/\/ For each digit of the input number.\r\n                {\r\n                    \/\/ Converting both i and digit to string allows for easier comparison.\r\n                    if(i.ToString() == digit.ToString())\r\n                    {\r\n                        occurrences++;\r\n                    }\r\n                }\r\n\r\n                Console.WriteLine(i + \" -> \" + occurrences);\r\n            }\r\n        }\r\n    }\r\n}","stars":3,"requirements":["Loops"]},{"id":1786679734,"name":"Chess Tournament","description":"<p>Write a program on your desktop \/ laptop which prints data about the ages of the participant in chess tournament.<\/p>\r\n<p>The program should read the following parameters:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - positive integer representing the count of the participant.<\/li>\r\n    <li><b>ages<\/b> - positive integers, each typed on a new line, representing the ages of the participant.<\/li>\r\n<\/ul>\r\n\r\nThe output of the program must provide data about:\r\n<ul>\r\n    <li><b>Minimum age<\/b> - the age of the youngest participant.<\/li>\r\n    <li><b>Maximum age<\/b> - the age of the oldest participant.<\/li>\r\n    <li><b>Average age<\/b><\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: you may use array for storing the participants ages.<\/p>","inputs":["3<br> 19<br> 21<br>20","2<br>18<br>19","3<br>15<br>15<br>18"],"outputs":["Min: 19 <br> Max: 21 <br> Average: 20","Min: 18 <br> Max: 19 <br> Average: 18","Min: 15 <br> Max: 18 <br> Average: 16"],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \/\/ Read user's input.\r\n            int count = int.Parse(Console.ReadLine());\r\n\r\n            \/\/ Create array and set values to it's elements:\r\n            int[] ages = new int[count];\r\n\r\n            for(int i = 0; i < count; i++)\r\n            {\r\n                ages[i] = int.Parse(Console.ReadLine());\r\n            }\r\n\r\n            \/\/ Loop array and find output data:\r\n            int minAge = ages[0];\r\n            int maxAge = ages[0];\r\n            int sum = 0; \/\/ Used to calculate average age.\r\n\r\n            foreach (int age in ages)\r\n            {\r\n                if(age < minAge)\r\n                {\r\n                    minAge = age;\r\n                }\r\n\r\n                if(age > maxAge)\r\n                {\r\n                    maxAge = age;\r\n                }\r\n\r\n                sum += age;\r\n            }\r\n\r\n            int averageAge = sum \/ count;\r\n\r\n            Console.WriteLine(\"Min: \" + minAge);\r\n            Console.WriteLine(\"Max: \" + maxAge);\r\n            Console.WriteLine(\"Average: \" + averageAge);\r\n        }\r\n    }\r\n}","stars":3,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":1708183860,"name":"Gaming Shop","description":"<p>Steve has a gaming shop and needs your help with inserting games and recording sells.<\/p>\r\n\r\n<p>Write a program on your desktop \/ laptop which reads commands.<\/p>\r\n<p>There are 3 types of commands:<\/p>\r\n<ul>\r\n    <li>\r\n        <b>Product Insertion<\/b> - it's in the format: <br>\r\n          \"insert-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It creates new game with the specified quantity or increases the quantity if the game is already added.\r\n    <\/li>\r\n    <li>\r\n        <b>Product Sell<\/b> - it's in the format: <br>\r\n          \"sell-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It decreases the quantity of the specified game. You can assume that the sold quantity will always be less or equal to the available one.\r\n    <\/li>\r\n    <li>\r\n        <b>Terminate program<\/b> - if a command with value \"end\" is entered, then a report of available games and their quantity is printed. Afterwards the program is terminated.\r\n    <\/li>\r\n<\/ul> \r\n\r\n<p>Notice that sold out games (with quantity of 0) must not be included in the end report.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: since game names are considered unique, the best practice would be to use dictionary for storing data with key - the game name and value - it's quantity.<\/p>","inputs":["insert-Minecraft-5<br>insert-Rocket League-10<br>end","insert-Counter Strike-10<br>sell-Counter Strike-3<br>end","insert-Fortnite-10<br>insert-pubg-10<br>sell-Fortnite-10<br>sell-pubg-7<br>end"],"outputs":["Minecraft: 5<br> Rocket League: 10","Counter Strike: 7","pubg: 3"],"solution":"using System;\r\nusing System.Collections.Generic; \/\/ This line is included so Dictionary can be used.\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Dictionary<string, int> gamesData = new Dictionary<string, int>();\r\n\r\n            while(true) \/\/ Infinite loop which repeats until it's forcefully stopped via the break keyword.\r\n            {\r\n                string command = Console.ReadLine();\r\n\r\n                \/\/ Get command components by spliting.\r\n                \/\/ Example: if command has value \"insert-game-15\" then parameters would be array with 3 elements - \"insert\", \"game\" and \"15\"\r\n                string[] parameters = command.Split('-');\r\n\r\n                string commandName = parameters[0];\r\n\r\n                if(commandName == \"end\")\r\n                {\r\n                    break; \/\/ Forcefully terminate the loop and proceed with the report.\r\n                }\r\n\r\n                string gameName = parameters[1];\r\n                int quantity = int.Parse(parameters[2]);\r\n\r\n                if (commandName == \"insert\")\r\n                {\r\n                    \/\/ The insert command is used for:\r\n                    \/\/ - Adding new game to the store with the specified quantity.\r\n                    \/\/ - Increasing quantity to already added game.\r\n                    \/\/ Both cases need to be handled separately.\r\n\r\n                    if (gamesData.ContainsKey(gameName))\r\n                    {\r\n                        \/\/ Increase quantity to already added game\r\n                        gamesData[gameName] += quantity;\r\n                    }\r\n                    else\r\n                    {\r\n                        \/\/ Adding new game to the store with the specified quantity.\r\n                        gamesData.Add(gameName, quantity);\r\n                    }\r\n                }\r\n                else if(commandName == \"sell\") \/\/ Handle selling:\r\n                {\r\n                    \/\/ Decrease quantity when game is sold.\r\n                    gamesData[gameName] -= quantity;\r\n\r\n                    if(gamesData[gameName] == 0)\r\n                    {\r\n                        \/\/ Don't store data for games that have been sold out.\r\n                        gamesData.Remove(gameName);\r\n                    }\r\n                }\r\n            }\r\n\r\n            \/\/ Print report:\r\n            foreach (KeyValuePair<string, int> game in gamesData)\r\n            {\r\n                \/\/ Print report in format name: quantity.\r\n                Console.WriteLine(game.Key + \": \" + game.Value);\r\n            }\r\n        }\r\n    }\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":589541751,"name":"Tic Tac Toe","description":"<p>Write a program on your desktop \/ laptop which checks who wins on in tic tac toe match.<\/p>\r\n<p>If you don't know how to play tic tac toe, you can learn the rules from\r\n<a href=\"https:\/\/www.wikihow.com\/Play-Tic-Tac-Toe\">here<\/a>.<\/p>\r\n\r\n<p>The input parameters of the program are 3. Each represents a line of the tic tac toe board.<\/p>\r\n<p>The program prints one of the following:<\/p>\r\n<ul>\r\n    <li><b>\"X wins\"<\/b> if X wins<\/li>\r\n    <li><b>\"O wins\"<\/b> if O wins<\/li>\r\n    <li><b>\"Tie\"<\/b> if neither of the players wins.<\/li>\r\n<\/ul>\r\n<p>You can assume that the input will always represent a legit tic tac toe endgame so you don't have to validate it.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: the best data structure that represents a tic tac toe board would be matrix with 3 rows and 3 columns.<\/p>","inputs":["ooo<br>xx-<br>---","xo-<br>oxo<br>x-x","xox<br>oox<br>xxo"],"outputs":["O wins","X wins","Tie"],"solution":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            char[,] board = new char[3, 3];\r\n\r\n            for(int i = 0; i < 3; i++)\r\n            {\r\n                string line = Console.ReadLine();\r\n\r\n                board[i, 0] = line[0];\r\n                board[i, 1] = line[1];\r\n                board[i, 2] = line[2];\r\n            }\r\n\r\n            if(winsTicTacToe(board, 'x'))\r\n            {\r\n                Console.WriteLine(\"X wins\");\r\n            }\r\n            else if (winsTicTacToe(board, 'o'))\r\n            {\r\n                Console.WriteLine(\"O wins\");\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Tie\");\r\n            }\r\n        }\r\n\r\n        static bool winsTicTacToe(char[,] board, char symbol)\r\n        {\r\n            for(int i = 0; i < 3; i++)\r\n            {\r\n                if ((board[i, 0] == symbol && board[i, 1] == symbol && board[i, 2] == symbol) ||  \/\/ If line is filled only with x or o.\r\n                    board[0, i] == symbol && board[1, i] == symbol && board[2, i] == symbol) \/\/ If column is filled only with x or o.\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            \/\/ Check if one of the diagonals is filled only with x or o\r\n            if(board[1, 1] == symbol && \r\n                ((board[0, 0] == symbol && board[2, 2] == symbol) ||\r\n                (board[0, 2] == symbol && board[2, 0] == symbol))\r\n            )\r\n            {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n}","stars":4,"requirements":["Condition Statements","Data Structures","Functions"]},{"id":388632754,"name":"Car Dealership","description":"<p>Write a program on your desktop \/ laptop which reads data for cars and print data only for those which make is the same as the specified one.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of cars which will be entered.<\/li>\r\n    <li><b>car's data<\/b> - the data for a single car in the format:<br>\r\n&lt;make&gt; &lt;model&gt; &lt;hp&gt;  &lt;price&gt; .<\/li>\r\n    <li><b>filter make<\/b> - string.<\/li>\r\n<\/ul>\r\n<p>The data for each car is entered on a separate line.<\/p>\r\n<p>The car dealership offers a 10 % discount for people who've bought a car from the same warehouse in the last 6 years. That discount must be included in the output. Also the prices of the cars must be printed as numbers with 2 digits after the decimal point.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Car<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to calculate discount<\/li>\r\n    <li>ToString method<\/li>\r\n    <li>Collection for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000<br>Volkswagen<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000.00 (22500 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Toyotta Corolla 120 23000<br>Ford Fiesta 80 18000<br>Toyotta Aygo 75 16000<br>Toyotta<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Toyotta Corolla 120 23000.00 (20700.00 for loyal customers)<br>Toyotta Aygo 75 16000.00 (14400.00 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"using System;\r\nusing System.Collections.Generic; \/\/ So the list collection is used.\r\n\r\nnamespace Project\r\n{\r\n    class Car\r\n    {\r\n        \/\/ Members accessed via getters and setters:\r\n        public string make { get; set; }\r\n        public string model { get; set; }\r\n        public int hp { get; set; }\r\n        public decimal price { get; set; }\r\n\r\n        \/\/ Parameterized constructor for creating objects:\r\n        public Car(string make, string model, int hp, decimal price)\r\n        {\r\n            this.make = make;\r\n            this.model = model;\r\n            this.hp = hp;\r\n            this.price = price;\r\n        }\r\n\r\n        public decimal calculateDiscount()\r\n        {\r\n            \/\/ Calculate price with 10 % discount (90 % of the ordinary price):\r\n            return price * 9 \/ 10;\r\n        }\r\n\r\n        \/\/ String representation of the class object:\r\n        public override string ToString()\r\n        {\r\n            \/\/ ToString(\"0.00\") is used to show 2 digits after the decimal point.\r\n            return make + \" \" + model + \" \" + hp + \" \" + price.ToString(\"0.00\") +\r\n                \" (\" + calculateDiscount().ToString(\"0.00\") + \" for loyal customers)\";\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int count = int.Parse(Console.ReadLine());\r\n\r\n            List<Car> cars = new List<Car>();\r\n\r\n            for (int i = 0; i < count; i++)\r\n            {\r\n                string[] carData = Console.ReadLine().Split(' ');\r\n\r\n                string make = carData[0];\r\n                string model = carData[1];\r\n                int hp = int.Parse(carData[2]);\r\n                decimal price = decimal.Parse(carData[3]);\r\n\r\n                \/\/ Create object based on the input data and add it to list\r\n                Car obj = new Car(make, model, hp, price);\r\n                cars.Add(obj);\r\n            }\r\n\r\n            string filterMake = Console.ReadLine();\r\n\r\n            foreach (Car car in cars)\r\n            {\r\n                \/\/ Filter cars by make:\r\n                if (car.make == filterMake)\r\n                {\r\n                    \/\/ Print the string representations specified with the ToString method:\r\n                    Console.WriteLine(car);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures","Functions","OOP"]},{"id":1585836277,"name":"Students Scores","description":"<p>Write a program on your desktop \/ laptop which reads data for students scores on exam and prints it back sorted.<\/p>\r\n<p>The input parameters are:<\/p>\r\n<ul>\r\n    <li><b>count<\/b> - the number of student's scores which will be entered.<\/li>\r\n    <li><b>exam data<\/b> - the data for a single exam score in the format:<br>\r\n&lt;student's first name&gt; &lt;student's last name&gt; &lt;exam score&gt; .<\/li>\r\n<\/ul>\r\n<p>The data for each student score is entered on a separate line.<\/p>\r\n<p>The output must include grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Student<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to get grade<\/li>\r\n    <li>ToString method<\/li>\r\n    <li>List collection for storing class objects<\/li>\r\n     <li>Sorting via the <b>CompareTo<\/b> method<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>John Smith 81<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>John Smith 81 B<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>2<br>Alex  Ethan 77<br> Joe Hawke 82<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Joe Hawke 82 B<br>Alex  Ethan 77 C<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>3<br>Olivia Smith 88<br> Jack DiIlan 88 <br> Gabriel Doe 93<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Gabriel Doe 93 A <br> Jack DiIlan 88 B <br> Olivia Smith 88 B<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"using System;\r\nusing System.Collections.Generic; \/\/ So the list collection is used.\r\n\r\nnamespace Project\r\n{\r\n    \/\/ ICompariable interface is used for sorting implementation\r\n    \/\/ specified with the CompareTo method\r\n    class Student : IComparable\r\n    {\r\n        \/\/ Members accessed via getters and setters:\r\n        public string firstName { get; set; }\r\n        public string lastName { get; set; }\r\n        public int examScore { get; set; }\r\n\r\n        public char grade\r\n        {\r\n            get\r\n            {\r\n                \/\/ Find out grade based on points:\r\n\r\n                if (examScore < 50)\r\n                    return 'F';\r\n                if (examScore < 60)\r\n                    return 'E';\r\n                if (examScore < 70)\r\n                    return 'D';\r\n                if (examScore < 80)\r\n                    return 'C';\r\n                if (examScore < 90)\r\n                    return 'B';\r\n\r\n                return 'A';\r\n            }\r\n        }\r\n\r\n        \/\/ Parameterized constructor for creating objects:\r\n        public Student(string firstName, string lastName, int examScore)\r\n        {\r\n            this.firstName = firstName;\r\n            this.lastName = lastName;\r\n            this.examScore = examScore;\r\n        }\r\n\r\n        \/\/ String representation of the class object:\r\n        public override string ToString()\r\n        {\r\n            return firstName + \" \" + lastName + \" \" + examScore + \" \" + grade;\r\n        }\r\n\r\n        \/\/ Method which sorts list of student by grade descendingly.\r\n        \/\/ It's called when the Sort method is called.\r\n        public int CompareTo(object obj)\r\n        {\r\n            Student student = (Student)obj;\r\n\r\n            if (student.grade > grade)\r\n            {\r\n                return -1;\r\n            }\r\n            else if (student.grade == grade)\r\n            {\r\n                return 0;\r\n            }\r\n\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int count = int.Parse(Console.ReadLine());\r\n\r\n            List<Student> students = new List<Student>();\r\n\r\n            for (int i = 0; i < count; i++)\r\n            {\r\n                string[] studentsData = Console.ReadLine().Split(' ');\r\n\r\n                string firstName = studentsData[0];\r\n                string lastName = studentsData[1];\r\n                int examScores = int.Parse(studentsData[2]);\r\n\r\n                \/\/ Create object based on the input data and add it to list:\r\n                Student obj = new Student(firstName, lastName, examScores);\r\n                students.Add(obj);\r\n            }\r\n\r\n            \/\/ Sort list via the CompareTo method:\r\n            students.Sort();\r\n\r\n            foreach (Student student in students)\r\n            {\r\n                \/\/ Prints the string representation specified with the ToString method:\r\n                Console.WriteLine(student);\r\n            }\r\n        }\r\n    }\r\n}","stars":5,"requirements":["Condition Statements","Loops","Data Structures","Functions","OOP"]}],"challenges":[{"id":1382668076,"name":"Square Calculator","description_html":"<p>Create a square calculator.<\/p>\r\n\r\n<p>The program reads one parameter: <b>square's side<\/b><\/p>\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Area<\/b>. It's calculated via the formula:<br> <b>side x side<\/b>.<\/li>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula:<br> <b>4 x side<\/b>.<\/li>\r\n<\/ul>\r\n<p>x in the formulas means multiplication.<\/p>\r\n\r\n<p>Examples:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Input<\/th>\r\n         <th>Output<\/th>\r\n         <th>Explanation<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td>3<\/td>\r\n           <td>Area = 9<br>Perimeter = 12<\/td>\r\n           <td>Area = 3 x 3 = 9<br>Perimeter = 4 x 3 = 12<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>5<\/td>\r\n           <td>Area = 25<br>Perimeter = 20<\/td>\r\n           <td>Area = 5 x 5 = 25<br>Perimeter = 4 x 5 = 20<\/td>\r\n     <\/tr>\r\n<\/tbody>\r\n<\/table>","stars":1,"chapters":{"descriptions":["Read user's input and parse it as a floating point number.","Calculate area and perimeter of the square by performing the following multiplications:<br><br>\r\narea = side x side <br>\r\nperimeter = 4 x side;","Print perimeter and area of the square."],"codes":["fillword side = fillword.Parse(fillword.ReadLine());","double area = fillword fillword fillword;\r\ndouble perimeter = fillword * side;","Console.fillword(\"Area = \" fillword area);\r\nfillword.WriteLine(\"Perimeter = \" fillword perimeter);"],"words":[["int","int","double","double","Console","Console"],["side","side ","side","4","+","+","*","*"],["Console","Console","WriteLine","WriteLine","+","+","*","*"]],"solutions":[["double","double","Console"],["side","*","side","4"],["WriteLine","+","Console","+"]]},"is_premium":0,"solution_code":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            double side = double.Parse(Console.ReadLine());\r\n\r\n            double area = side * side;\r\n            double perimeter = 4 * side;\r\n\r\n            Console.WriteLine(\"Area = \" + area);\r\n            Console.WriteLine(\"Perimeter = \" + perimeter);\r\n        }\r\n    }\r\n}","topics":["Calculations"]},{"id":1852012513,"name":"Degrees Converter","description_html":"<p>Write a program which converts fahrenheit degrees to celsius.<\/p>\r\n<p>The program reads one argument - a floating point number representing fahrenheit degrees.<\/p>\r\n<p>The program must print the celsius degrees rounded to 2 decimal places.<\/p>\r\n<p>The result is calculated via the formula:<\/p>\r\n<img src=\"imgs\/challenges\/fahrenheit-converter.png\" style=\"\r\n    height: 30px;\r\n    width: auto;\r\n\">\r\n<p>Examples:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Input<\/th>\r\n         <th>Output<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td>50<\/td>\r\n           <td>C = 10.00<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>78<\/td>\r\n           <td>C = 25.56<\/td>\r\n     <\/tr>\r\n<\/tbody>\r\n<\/table>","stars":1,"chapters":{"descriptions":["Read user's input and cast it to a floating point number.","<p>Calculate celsius via the formula:<\/p>\r\n<img src=\"imgs\/challenges\/fahrenheit-converter.png\" style=\"\r\n    height: 30px;\r\n    width: auto;\r\n\">","Round celsius to 2 decimal points."],"codes":["double fa = double.fillword(fillword.fillword());","double celsius = (fillword - fillword) fillword fillword;","Console.WriteLine(\"C = \" + fillword.fillword(fillword, fillword));"],"words":[["ReadLine","Parse","Console","Console"],["fa","fa","32","0.5556","+","-","*","\/"],["Round","celsius","celsius","2","Math"]],"solutions":[["Parse","Console","ReadLine"],["fa","32","*","0.5556"],["Math","Round","celsius","2"]]},"is_premium":0,"solution_code":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            double fa = double.Parse(Console.ReadLine());\r\n            double celsius = (fa - 32) * 0.5556;\r\n\r\n            Console.WriteLine(\"C = \" + Math.Round(celsius, 2));\r\n        }\r\n    }\r\n}","topics":["Calculations"]},{"id":432322415,"name":"Fixed Deposit","description_html":"<p>Write a program which calculates fixed deposit.<\/p>\r\n<p>To calculate it you can use the following formula:<\/p>\r\n<img src=\"imgs\/challenges\/compound_interest.jpg\" style=\"height: 45px;width: auto;\">\r\n\r\n<p>The input of the program consists of:<\/p>\r\n<ul>\r\n<li><b>P<\/b> -  investment amount<\/li>\r\n<li><b>r<\/b> - rate of Interest (per year)<\/li>\r\n<li><b>n<\/b> - duration of fixed deposit (in years)<\/li>\r\n<\/ul>\r\n\r\n<p>The program must print the maturity amount of the fixed deposit rounded to 2 decimals.<\/p>\r\n<p>Examples:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Input<\/th>\r\n         <th>Output<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td>P = 1000<br>r = 2<br>n = 1<\/td>\r\n           <td>1020 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>P = 1232<br>r = 3<br>n = 4<\/td>\r\n           <td>1386.63 $<\/td>\r\n     <\/tr>\r\n<\/tbody>\r\n<\/table>","stars":1,"chapters":{"descriptions":["<p>Read users input and parse it to the correct data type:<\/p>\r\n<ul>\r\n<li><b>P<\/b> -  investment amount - floating point number<\/li>\r\n<li><b>r<\/b> - rate of Interest (per year) - floating point number<\/li>\r\n<li><b>n<\/b> - duration of fixed deposit (in years) - integer number<\/li>\r\n<\/ul>","<p>Calculare the deposit by using the following formula:<\/p>\r\n<img src=\"imgs\/challenges\/compound_interest.jpg\" style=\"height: 45px;width: auto;\">","<p>Print the deposit rounded up to two decimals and append the symbol \"$\".<\/p>\r\n<p>Sample output: 10235.65 $<\/p>"],"codes":["fillword p = double.Parse(Console.ReadLine());\r\ndouble r = fillword.Parse(Console.ReadLine());\r\nfillword n = int.Parse(Console.ReadLine());","double a = p * Math.fillword((1 + fillword fillword 100), fillword);","Console.WriteLine(fillword.fillword(a, 2) fillword fillword);"],"words":[["int","int","double","double","string","string"],["p","n","r","+","\/","*","Pow","Ceil"],["Math","Ceil","Floor","Round","+","*","\" $\""]],"solutions":[["double","double","int"],["Pow","r","\/","n"],["Math","Round","+","\" $\""]]},"is_premium":1,"solution_code":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            double p = double.Parse(Console.ReadLine());\r\n            double r = double.Parse(Console.ReadLine());\r\n            int n = int.Parse(Console.ReadLine());\r\n\r\n            double a = p * Math.Pow((1 + r \/ 100), n);\r\n            Console.WriteLine(Math.Round(a, 2) + \" $\");\r\n        }\r\n    }\r\n}","topics":["Calculations"]},{"id":1304630954,"name":"Taxi Prices","description_html":"<p>Write a program which calculates \u0430 taxi fare.<\/p>\r\n\r\n<p>The input of the program consists of:<\/p>\r\n<ul>\r\n<li><b>seconds<\/b> -  how many seconds passed during the ride - integer<\/li>\r\n<li><b>mileage<\/b> - the travelled distance - floating point number<\/li>\r\n<li><b>type<\/b> - either \"day\" or \"night\" - string.<\/li>\r\n<\/ul>\r\n\r\n<p>To calculate the taxi fare use the following formula:<\/p>\r\n<img src=\"imgs\/challenges\/taxi-formula.png\" style=\"\r\n    height: 28px;\r\n    width: auto;\r\n\">\r\n<p>The x symbol means multiplication.<\/p>\r\n<p>During nighttime(if type is equal to \"night\") the price is doubled.<\/p>\r\n\r\n<p>Examples:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Input<\/th>\r\n         <th>Output<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td>seconds = 120 <br> mileage = 2.2 <br> type = \"day\"<\/td>\r\n           <td>7.04 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>seconds = 120 <br> mileage = 2.2 <br> type = \"night\"<\/td>\r\n           <td>14.08 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>seconds = 300 <br> mileage = 4.1 <br> type = \"day\"<\/td>\r\n           <td>12.92 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>seconds = 300 <br> mileage = 4.1 <br> type = \"night\"<\/td>\r\n           <td>25.84 $<\/td>\r\n     <\/tr>\r\n<\/tbody>\r\n<\/table>","stars":1,"chapters":{"descriptions":["<p>Read users input and parse it to the correct data type:<\/p>","<p>Calculate the price using the following formula:<\/p>\r\n<img src=\"imgs\/challenges\/taxi-formula.png\" style=\"\r\n    height: 28px;\r\n    width: auto;\r\n\">\r\n<p>x means multiplication.<\/p>","Multiply the price by 2 for night drives.","<p>Print the price and add \"$ \" suffix.<\/p>\r\n<p>Example: 12.20 $<\/p>"],"codes":["fillword seconds = int.Parse(Console.ReadLine());\r\nfillword mileage = double.Parse(Console.ReadLine());\r\nfillword type = Console.ReadLine();","double price = 2 fillword 0.02 fillword seconds fillword 1.2 fillword mileage;","if(type == fillword)\r\n{\r\n    price fillword fillword;\r\n}","fillword.fillword(fillword fillword \" $\");"],"words":[["int","int","double","double","string","string"],["+","+","-","-","*","*","\/","\/"],["\"day\"","\"night\"","+=","-=","*=","1","2","3"],["WriteLine","price","Console","+","-","*","."]],"solutions":[["int","double","string"],["+","*","+","*"],["\"night\"","*=","2"],["Console","WriteLine","price","+"]]},"is_premium":1,"solution_code":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int seconds = int.Parse(Console.ReadLine());\r\n            double mileage = double.Parse(Console.ReadLine());\r\n            string type = Console.ReadLine();\r\n\r\n            double price = 2 + 0.02 * seconds + 1.2 * mileage;\r\n\r\n            if(type == \"night\")\r\n            {\r\n                price *= 2;\r\n            }\r\n\r\n            Console.WriteLine(price + \" $\");\r\n        }\r\n    }\r\n}","topics":["Calculations","If Statements"]},{"id":108017259,"name":"Grade Assessment","description_html":"<p>Write a program which calculates test grade based on points.<\/p>\r\n<p>The input of the program is:<\/p><br>\r\n<p><b>points<\/b> - integer number in the range 0 - 100.<\/p>\r\n\r\n<p>The output is the test grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Examples:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Input<\/th>\r\n         <th>Output<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td>54<\/td>\r\n           <td>E<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>90<\/td>\r\n           <td>A<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>88<\/td>\r\n           <td>B<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>33<\/td>\r\n           <td>F<\/td>\r\n     <\/tr>\r\n<\/tbody>\r\n<\/table>","stars":2,"chapters":{"descriptions":["<p>Read users input and parse it to the correct data type:<\/p>","<p>Determine grade based on points:<\/p>","Print grade."],"codes":["int points = fillword.Parse(fillword.ReadLine());","char grade = fillword;\r\n\r\nfillword (points < fillword) {\r\n    grade = 'F';\r\n}\r\nfillword (points < 60) {\r\n    grade = 'E';\r\n}\r\nelse if (points < 70) {\r\n    grade = 'D';\r\n}\r\nelse if (points < 80) {\r\n    grade = 'C';\r\n}\r\nelse if (points < 90) {\r\n    grade = 'B';\r\n}","fillword.fillword(fillword);"],"words":[["char","int","Console","ReadLine"],["if","else if","else","'A'","'F'","50","100"],["WriteLine","Console","grade"]],"solutions":[["int","Console"],["'A'","if","50","else if"],["Console","WriteLine","grade"]]},"is_premium":1,"solution_code":"using System;\r\n\r\nnamespace Project\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int points = int.Parse(Console.ReadLine());\r\n\r\n            char grade = 'A';\r\n\r\n            if(points < 50)\r\n            {\r\n                grade = 'F';\r\n            }\r\n            else if (points < 60)\r\n            {\r\n                grade = 'E';\r\n            }\r\n            else if (points < 70)\r\n            {\r\n                grade = 'D';\r\n            }\r\n            else if (points < 80)\r\n            {\r\n                grade = 'C';\r\n            }\r\n            else if (points < 90)\r\n            {\r\n                grade = 'B';\r\n            }\r\n\r\n            Console.WriteLine(grade);\r\n        }\r\n    }\r\n}","topics":["If Statements"]},{"id":2133153320,"name":"Speed Ticket","description_html":"<p>Write a program which calculates speeding penalty.<\/p>\r\n<p>The program reads two arguments:<\/p>\r\n<ul>\r\n      <li><b>speed<\/b> - integer number representing vehicle's speed (in km per hour).<\/li>\r\n      <li><b>area<\/b> - string either \"town\" or \"outside-of-town\".<\/li>\r\n<\/ul>\r\n\r\n<p>The following table determines the rules:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Area<\/th>\r\n         <th>Speed<\/th>\r\n         <th>Penalty<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td rowspan=\"4\">town<\/td>\r\n           <td>0 - 50<\/td>\r\n           <td>0 $<\/td>\r\n     <\/tr>\r\n<tr>\r\n           <td>51 - 60<\/td>\r\n           <td>60 $<\/td>\r\n     <\/tr><tr>\r\n           <td>61 - 80<\/td>\r\n           <td>150 $<\/td>\r\n     <\/tr><tr>\r\n           <td>81 and above<\/td>\r\n           <td>300 $<\/td>\r\n     <\/tr><tr>\r\n           <td rowspan=\"4\">outside-<br>\r\n    of-town<\/td>\r\n           <td>0 - 80<\/td>\r\n           <td>0 $<\/td>\r\n     <\/tr><tr>\r\n           <td>80 - 90<\/td>\r\n           <td>45 $<\/td>\r\n     <\/tr><tr>\r\n           <td>90 - 120<\/td>\r\n           <td>100$<\/td>\r\n     <\/tr><tr>\r\n           <td>121 and above<\/td>\r\n           <td>200$<\/td>\r\n     <\/tr><\/tbody>\r\n<\/table>\r\n\r\n<p>Examples:<\/p>\r\n<table>\r\n<tbody>\r\n    <tr>\r\n         <th>Input<\/th>\r\n         <th>Output<\/th>\r\n    <\/tr>\r\n    <tr>\r\n           <td>Speed = 45<br>Area = \"town\"<\/td>\r\n           <td>0 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>Speed = 65<br>Area = \"town\"<\/td>\r\n           <td>150 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>Speed = 105<br>Area = \"outside-of-town\"<\/td>\r\n           <td>100 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>Speed = 150<br>Area = \"outside-of-town\"<\/td>\r\n           <td>200 $<\/td>\r\n     <\/tr>\r\n    <tr>\r\n           <td>Speed = 60<br>Area = \"outside-of-town\"<\/td>\r\n           <td>0 $<\/td>\r\n     <\/tr>\r\n<\/tbody>\r\n<\/table>","stars":2,"chapters":{"descriptions":["xx"],"codes":["zz fillword"],"words":[["xx"]],"solutions":[["xx"]]},"is_premium":1,"solution_code":"xx","topics":["If Statements"]}]},"PHP":{"urlName":"php","mode":"text\/x-php","tutorials":{"Basics":[{"id":1832873857,"name":"Data Types","tests":[{"id":1289934046,"question":"Which type is suitable for describing car's model?","code":null,"answers":["int","string","bool"],"correct_answer":"string","explanation":"<ul>\r\n<li>string is suitable for describing a sequence of symbols.<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":93844639,"question":"Which type is suitable for describing person's age?","code":null,"answers":["int","double","string"],"correct_answer":"int","explanation":"<ul>\r\n<li>int - whole numbers (like 5, 6, 10).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85 ).<\/li>\r\n<\/ul>"},{"id":2118390876,"question":"Which type is suitable for describing distance?","code":null,"answers":["char","double","string"],"correct_answer":"double","explanation":"<ul>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<li>string - a sequence of symbols.<\/li>\r\n<li>char - a single symbol.<\/li>\r\n<\/ul>"},{"id":820589597,"question":"Which type is suitable for describing a single symbol?","code":null,"answers":["boolean","int","char"],"correct_answer":"char","explanation":"<ul>\r\n<li>char - a single symbol.<\/li>\r\n<li>Int - whole number.<\/li>\r\n<li>boolean - true or false.<\/li>\r\n<\/ul>"},{"id":1771984858,"question":"Which type is suitable for describing if person is famous (true or false)?","code":null,"answers":["boolean","double","int"],"correct_answer":"boolean","explanation":"<ul>\r\n<li>boolean - true or false (famous or not famous).<\/li>\r\n<li>int - whole numbers.<\/li>\r\n<li>double - floating point numbers (like 3.52, 4.85).<\/li>\r\n<\/ul>"}],"puzzles":[{"id":941567617,"text":"Define a variable.","code":"<?php\r\nfillword = fillword;","result":null,"words":{"operators":[],"values":[],"variables_constants":["name","$name","'Alex'"],"others":[]},"correct_patterns":[["$name","'Alex'"]]},{"id":1925992014,"text":"Define variables about person's name and age.","code":"<?php\r\n$name fillword fillword;\r\n$age = fillword;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["'Jim'","Jim","=","19"]},"correct_patterns":[["=","'Jim'","19"]]},{"id":728854031,"text":"Print the variable.","code":"<?php\r\n$color = 'Blue';\r\nfillword fillword;","result":"Blue","words":{"operators":[],"values":[],"variables_constants":["color","'color'","$color","echo"],"others":[]},"correct_patterns":[["echo","$color"]]}]},{"id":669224782,"name":"Calculations","tests":[{"id":574846875,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 5 + 6 - 2;\r\necho $number;","answers":["9","10","11"],"correct_answer":"9","explanation":"5 + 6 - 2 =  <br>\r\n11 - 2 =  <br>\r\n9"},{"id":1693947736,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 6 * 3 - 1;\r\necho $number;","answers":["12","17","18"],"correct_answer":"17","explanation":"6 * 3 - 1 = <br>\r\n18 - 1 = <br>\r\n17"},{"id":1571075865,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 18 \/ 3 + 3;\r\necho $number;","answers":["3","6","9"],"correct_answer":"9","explanation":"18 \/ 3 + 3 = <br>\r\n6 + 3 = <br>\r\n9"},{"id":373937830,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = (14 + 7) \/ 7;\r\necho $number;","answers":["3","15","22"],"correct_answer":"3","explanation":"(14 + 7) \/ 7 = <br>\r\n21 \/ 7 = <br>\r\n3"},{"id":1224668775,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 14 % 3;\r\necho $number;","answers":["2","3","4"],"correct_answer":"2","explanation":"14 : 3 = <b>4<\/b>.67 <br><br>\r\n14 - 3 * 4 = <br>\r\n14 - 12 =<br>\r\n2"}],"puzzles":[{"id":1814399436,"text":"Fill the missing words to match the output.","code":"<?php\r\n$number = 6 fillword 2;\r\necho $number;","result":"12","words":{"operators":["+","%","*","\/"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["*"]]},{"id":650815885,"text":"Fill the missing words to match the output.","code":"<?php\r\n$combine = \"Blue \" fillword \"Sky\";\r\necho $combine;","result":"Blue Sky","words":{"operators":[".","*","-","+","%"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["."]]},{"id":528468298,"text":"Fill the missing words to match the output.","code":"<?php\r\n$division = 12 fillword 4;\r\n$remainder = 17 fillword  5;\r\n\r\necho $division;\r\necho $remainder;","result":"3 2","words":{"operators":["+","\/","%","^"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["\/","%"]]}]},{"id":1460341590,"name":"Assignments","tests":[{"id":800808297,"question":"What's the output of the code snippet?","code":"<?php\r\n$val = 8;\r\n$val = 2;\r\necho $val;","answers":["2","8","10"],"correct_answer":"2","explanation":"The last value set to the variable <code>val<\/code> is 2.\r\n<br><br>\r\nSo <code>val<\/code> has value of 2 when it's printed."},{"id":1617460534,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 2;\r\n$num = $num + 3;\r\necho $num;","answers":["2","3","5"],"correct_answer":"5","explanation":"$num = 2\r\n<br>\r\n$num = 2 + 3\r\n<br>\r\n$num = 5"},{"id":1495047415,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 4;\r\n$num *= 3;\r\n\r\necho $num;","answers":["3","9","12"],"correct_answer":"12","explanation":"$num = 4 <br>\r\n$num *= 3\r\n<br>\r\n$num = $num * 3\r\n<br>\r\n$num = 4 * 3<br>\r\n$num = 12"},{"id":331463860,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 4 + 6;\r\n$num \/= 2;\r\n$num *= 3;\r\n\r\necho $num;","answers":["5","15","60"],"correct_answer":"15","explanation":"$num = 4 + 6; <br>\r\n$num = 10 <br>\r\n<br>\r\n$num \/= 2; <br>\r\n$num = $num \/ 2; <br>\r\n$num = 10 \/ 2; <br>\r\n$num = 5 <br>\r\n<br>\r\n$num *= 3; <br>\r\n$num = $num * 3; <br>\r\n$num = 5 * 3; <br>\r\n$num = 15"},{"id":1417075829,"question":"What's the output of the code snippet?","code":"<?php\r\n$a = 3;\r\n$b = 2;\r\n\r\n$a *= $b;\r\n$b *= $a;\r\n\r\necho $b;","answers":["6","12","72"],"correct_answer":"12","explanation":"$a = 3 <br>\r\n$b = 2 <br>\r\n<br>\r\n$a *= $b <br>\r\n$a = $a * $b <br>\r\n$a = 3 * 2 <br>\r\n$a = 6 <br>\r\n<br>\r\n$b *= $a <br>\r\n$b = $b * $a <br>\r\n$b = 2 * 6 <br>\r\n$b = 12"}],"puzzles":[{"id":464602205,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = fillword;\r\n$num = fillword;\r\n\r\necho $num;\r\n$num = fillword;","result":"8","words":{"operators":[],"values":["1","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["1","8","7"],["7","8","1"]]},{"id":1550214170,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 5;\r\n$num fillword fillword;\r\necho $num;","result":"15","words":{"operators":[],"values":["1","2","3"],"variables_constants":["+=","*=","\/="],"others":[]},"correct_patterns":[["*=","3"]]},{"id":353011675,"text":"Fill the missing words to match the output.","code":"$num fillword 10;\r\n$num fillword 5;\r\n$num fillword 2;\r\n$num fillword 1;\r\n\r\necho $num;","result":"29","words":{"operators":["=","+=","-=","*=","\/="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["=","+=","*=","-="]]}]},{"id":412135183,"name":"If Statement","tests":[{"id":27465252,"question":"What's the output of the code snippet?","code":"<?php\r\n$age = 18;\r\n\r\nif ($age >= 21) {\r\n\techo \"a \";\r\n}\r\nif ($age < 30) {\r\n\techo \"b\";\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>$age = 18<\/code>\r\n<br><br>\r\n<code>$age >= 21<\/code> is false.\r\n<br><br>\r\n<code>$age < 30<\/code> is true so \"b\" is printed."},{"id":2052076005,"question":"What's the output of the code snippet?","code":"<?php\r\n$pagesCount = 100;\r\n\r\nif ($pagesCount > 100) {\r\n\techo \"a \";\r\n}\r\nif ($pagesCount >= 100) {\r\n\techo \"b\";\r\n}","answers":["a","b","a b"],"correct_answer":"b","explanation":"<code>$pagesCount = 100<\/code>\r\n<br><br>\r\n\r\n<code>$pagesCount > 100<\/code> is false. <br><br>\r\n<code>$pagesCount >= 100<\/code> is true so \"b\" is printed."},{"id":855986594,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 3;\r\n\r\nif ($num == 3) {\r\n\techo \"a \";\r\n}\r\nif ($num != 3) {\r\n\techo \"b\";\r\n}","answers":["a","b","a b"],"correct_answer":"a","explanation":"<code>$num = 3<\/code>\r\n<br><br>\r\n\r\n<code>$num == 3<\/code> is true so \"a\" is printed.\r\n<br><br>\r\n<code>$num != 3<\/code> is false (because num is equal to 3)."},{"id":1974104419,"question":"What's the output of the code snippet?","code":"<?php\r\n$score = 87;\r\n\r\nif ($score <= 87) {\r\n\techo \"1 \";\r\n}\r\nif ($score == 87) {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>$score = 87<\/code>\r\n<br><br>\r\n\r\n<code>$score <= 87<\/code> is true so \"1\" is printed.\r\n<br><br>\r\n<code>$score == 87<\/code> is true so \"2\" is printed."},{"id":777949472,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 77;\r\n$rem = $num % 2;\r\n\r\nif ($rem == 0) {\r\n\techo \"even \";\r\n}\r\nif ($rem == 1) {\r\n\techo \"odd \";\r\n}","answers":["even","odd","even odd"],"correct_answer":"odd","explanation":"77 % 2 is equal to 1 ($rem is 1) so odd is printed.\r\n<br><br>\r\nThe only condition that's true is <code>$rem == 1<\/code> ."}],"puzzles":[{"id":1345120523,"text":"Fill the missing words to match the output.","code":"<?php\r\n$price = 300;\r\n\r\nif($price fillword 500) {\r\n    echo \"High\";\r\n}","result":"High","words":{"operators":["<","==",">"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["<"]]},{"id":181471432,"text":"Fill the missing words to match the output.","code":"<?php\r\n$number = 7;\r\nif($number fillword 7) {\r\n    echo \"Special Number \";\r\n}\r\n\r\n$volume = 101;\r\nif($volume fillword 100) {\r\n    echo \"Large\";\r\n}","result":"Special Number Large","words":{"operators":["<",">","=="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["==",">"]]},{"id":1132865673,"text":"Fill the missing words to match the output.","code":"<?php\r\n$number = 5;\r\n\r\nif($number fillword 0) {\r\n    echo \"Different\";\r\n}","result":"Different","words":{"operators":["==","!=","<","<="],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!="]]}]},{"id":1523168867,"name":"Logical Operators","tests":[{"id":1728295137,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 7;\r\n\r\nif ($num > 7 || $num < 21) {\r\n\techo \"1 \";\r\n}\r\nif ($num > 10 || $num < 15) {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"<code>$num = 7<\/code>\r\n<br><br>\r\n<code>$num > 7 || $num < 21<\/code> is true because <code>$num < 21<\/code> is true .\r\n<br><br>\r\n<code>$num > 10 || $num < 15<\/code> is true because <code>$num < 15<\/code> is true.\r\n<br><br>\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1504759982,"question":"What's the output of the code snippet?","code":"<?php\r\n$age = 17;\r\n\r\nif ($age > 13 && $age < 21) {\r\n\techo \"1 \";\r\n}\r\nif ($age > 21 && $age < 60) {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>$age = 17<\/code>\r\n<br><br>\r\n<code>$age > 13 && $age < 21<\/code> is true because both operands are true.\r\n<br><br>\r\n<code>$age > 21 && $age < 60<\/code> is false because <code>$age > 21<\/code> is false.\r\n<br><br>\r\n\r\nUsing && means that If any of the two operands is false, then  the condition becomes false."},{"id":308670575,"question":"What's the output of the code snippet?","code":"<?php\r\n$level = 5;\r\n\r\nif ($level > 0 && $level < 11) {\r\n\techo \"valid \";\r\n}\r\nif ($level == 5 || $level == 7) {\r\n\techo \"special \";\r\n}","answers":["valid","special","valid special"],"correct_answer":"valid special","explanation":"<code>$level = 5<\/code>\r\n<br><br>\r\n<code>$level > 0 && $level < 11<\/code> is true because both operands are true ($level is between 0 and 11).\r\n<br><br>\r\n<code>$level == 5 || $level == 7<\/code> is true because <code>$level == 5<\/code> is true.\r\n<br><br>\r\nUsing && means that If any of the two operands is false, then  the condition becomes false.\r\n<br><br>\r\n\r\nUsing || means that If any of the two operands is true, then  the condition becomes true."},{"id":1258950700,"question":"What's the output of the code snippet?","code":"<?php\r\n$height = 165;\r\n\r\nif (!($height == 160)) {\r\n\techo \"1 \";\r\n}\r\nif (!($height > 150 && $height < 200)) {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>$height = 165<\/code>\r\n<br><br>\r\n<code>$height == 160<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>$height > 150 && $height < 200<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."},{"id":230634477,"question":"What's the output of the code snippet?","code":"<?php\r\n$code = 301;\r\n\r\nif (!($code >= 100 && $code <= 200)) {\r\n\techo \"1 \";\r\n}\r\nif (!($code >= 400 || $code == 301)) {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>$code = 301<\/code>\r\n<br><br>\r\n<code>$code >= 100 && $code <= 200<\/code> is false <br>\r\n<code>!false<\/code> is <code>true<\/code> so \"1\" is printed.\r\n<br><br>\r\n<code>$code >= 400 || $code == 301<\/code> is <code>true<\/code> <br>\r\n<code>!true<\/code> is <code>false<\/code> so \"2\" is not printed."}],"puzzles":[{"id":69945430,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 1;\r\n\r\nif($num == 1 fillword $num == 2) {\r\n    echo \"1 or 2\";\r\n}","result":"1 or 2","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["||"]]},{"id":2128111639,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 4;\r\n\r\nif($num >= 1 fillword $num <= 9) {\r\n    echo\"Between 1 and 9 \";\r\n}\r\n\r\nif($num == 3 fillword  $num == 4) {\r\n    echo \"3 or 4\";\r\n}","result":"Between 1 and 9\r\n3 or 4","words":{"operators":["||","&&","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["&&","||"]]},{"id":931957716,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 1;\r\nif(fillword($num != 1)) {\r\n    echo \"Equal To One\";\r\n}","result":"Equal To One","words":{"operators":["&","|","!"],"values":[],"variables_constants":[],"others":[]},"correct_patterns":[["!"]]}]},{"id":1363529420,"name":"If Else Statements","tests":[{"id":1181504426,"question":"What's the output of the code snippet?","code":"<?php\r\n$age = 17;\r\n\r\nif ($age == 17) {\r\n\techo \"1 \";\r\n}\r\nelse {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>$age = 17<\/code>\r\n<br><br>\r\n\r\n<code>$age == 17<\/code> is true so the code inside if clause is executed.\r\n<br><br>\r\nThe code inside the else block is not executed."},{"id":1058108267,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 5;\r\n\r\nif ($num == 3) {\r\n\techo \"1 \";\r\n}\r\nelse {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"2","explanation":"<code>$num = 5<\/code>\r\n<br><br>\r\n<code>$num == 3<\/code> is false so the code inside the else clause is executed.\r\n<br><br>\r\nThe code inside the if block is not executed."},{"id":1908773672,"question":"What's the output of the code snippet?","code":"$num = 15;\r\n\r\nif ($num == 14) {\r\n\techo \"1 \";\r\n}\r\nelse if ($num == 15) {\r\n\techo \"2 \";\r\n}\r\nelse {\r\n\techo \"3 \";\r\n}","answers":["2","2 3","1 3"],"correct_answer":"2","explanation":"<code>$num = 15<\/code>\r\n<br><br>\r\n\r\n<code>$num == 14<\/code> is false but <code>$num == 15<\/code> is true so the code inside the else if clause is executed.\r\n<br><br>\r\nThe code inside the if and else blocks is not executed."},{"id":711635689,"question":"What's the output of the code snippet?","code":"<?php\r\n$score = 90;\r\n\r\nif ($score <= 50) {\r\n\techo \"low\";\r\n}\r\nelse if ($score <= 75) {\r\n\techo \"medium\";\r\n}\r\nelse {\r\n\techo \"high\";\r\n}","answers":["low","medium","high"],"correct_answer":"high","explanation":"<code>$score = 90<\/code>\r\n<br><br>\r\nBoth <code>$score <= 50<\/code> and <code>$score <= 75<\/code> are false. \r\n<br><br>\r\nThat's the reason why the code inside the else block is executed."},{"id":1663029942,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 75;\r\n\r\nif ($num <= 50) {\r\n\r\n}\r\nelse if ($num <= 75) {\r\n\techo \"1 \";\r\n}\r\nelse if ($num <= 80) {\r\n\techo \"2\";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>$num = 75<\/code>\r\n<br><br>\r\n<code>$num <= 50<\/code> is false and <code>$num <= 75<\/code> is true thus \"1\" is printed.\r\n<br><br>\r\nSince  the condition of the first else-if block is true, the next one (<code>$num <= 80<\/code>) is not checked."}],"puzzles":[{"id":1748085653,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 5;\r\nif($num fillword 10) {\r\n    echo \"More than 10\";\r\n}\r\nfillword  {\r\n    echo \"Less than 10\";\r\n}","result":"Less than 10","words":{"operators":["<","<=",">",">="],"values":[],"variables_constants":[],"others":["else","if"]},"correct_patterns":[[">=","else"],[">","else"]]},{"id":585550674,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 1;\r\n\r\nif($num == fillword) {\r\n    echo \"Equal to 0\";\r\n}\r\nfillword fillword ($num == fillword) {\r\n    echo \"Equal to 1\";\r\n}","result":"Equal to 1","words":{"operators":[],"values":["0","1"],"variables_constants":[],"others":["if","else","=="]},"correct_patterns":[["0","else","if","1"]]},{"id":462154515,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 7;\r\n\r\nif($num == fillword) {\r\n    echo \"A\";\r\n}\r\nelse if($num == fillword) {\r\n    echo \"B\";\r\n}\r\nfillword {\r\n    echo \"C\";\r\n}","result":"C","words":{"operators":[],"values":["5","6","7"],"variables_constants":[],"others":["if","else","else if"]},"correct_patterns":[["5","6","else"],["6","5","else"]]}]},{"id":942297388,"name":"Switch Statement","tests":[{"id":634188407,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 2;\r\n\r\nswitch ($num) {\r\n\tcase 1:\r\n\t\techo \"a\";\r\n\t\tbreak;\r\n\tcase 2:\r\n\t\techo \"b\";\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\techo \"c\";\r\n\t\tbreak;\r\n}","answers":["a","b","c"],"correct_answer":"b","explanation":"<code>$num<\/code> is equal to 2 so the case 2 block is executed."},{"id":510726708,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 10;\r\n\r\nswitch ($num) {\r\n\tcase 10:\r\n\t\techo \"a \";\r\n\t\tbreak;\r\n\tcase 20:\r\n\t\techo \"b \";\r\n\t\tbreak;\r\n\tdefault:\r\n\t\techo \"c\";\r\n\t\tbreak;\r\n}","answers":["a","b","a c"],"correct_answer":"a","explanation":"<code>$num<\/code> is equal to 10 so the case 10 block is executed."},{"id":1462124021,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 5;\r\n\r\nswitch ($num) {\r\n\tcase 3:\r\n\t\techo \"a \";\r\n\t\tbreak;\r\n\tcase 4:\r\n\t\techo \"b \";\r\n\t\tbreak;\r\n\tdefault:\r\n        echo \"c\";\r\n\t\tbreak;\r\n}","answers":["a","b","c"],"correct_answer":"c","explanation":"<code>$num<\/code> is neither 3 nor 4 so the default block is executed."},{"id":164322738,"question":"What's the output of the code snippet?","code":"<?php\r\n$age = 15;\r\n\r\nswitch ($age) {\r\n\tcase 10:\r\n\tcase 11:\r\n\tcase 12:\r\n\tcase 13:\r\n\t\techo \"Middle School \";\r\n\t\tbreak;\r\n\tcase 14:\r\n\tcase 15:\r\n\tcase 16:\r\n\tcase 17:\r\n\tcase 18:\r\n\t\techo \"High School \";\r\n\t\tbreak;\r\n\tdefault:\r\n\t\techo \"Primary School\";\r\n\t\tbreak;\r\n}","answers":["Primary School","Middle School","High School"],"correct_answer":"High School","explanation":"<code>$age<\/code> is matched by case 15 so \"High School\" is printed."},{"id":1115192691,"question":"What's the output of the code snippet?","code":"<?php\r\n$level = 8;\r\n\r\nswitch ($level) {\r\n\tcase 1:\r\n\tcase 2:\r\n\tcase 3:\r\n\tcase 4:\r\n\t\techo \"Easy\";\r\n\t\tbreak;\r\n\tcase 5:\r\n\tcase 6:\r\n\tcase 7:\r\n\t\techo \"Medium \";\r\n\t\tbreak;\r\n\tdefault:\r\n        echo \"Tricky\";\r\n\t\tbreak;\r\n}","answers":["Easy","Medium","Tricky"],"correct_answer":"Tricky","explanation":"<code>$level<\/code> is not matched by any of the cases (from 1 to 7) so the default block is executed."}],"puzzles":[{"id":1547176656,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 2;\r\nswitch($num) {\r\n    case fillword:\r\n        echo \"a\";\r\n        break;\r\n    fillword fillword:\r\n        echo \"b\";\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2"],"variables_constants":[],"others":["case","switch"]},"correct_patterns":[["1","case","2"]]},{"id":384641681,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 3;\r\nswitch($num) {\r\n    case fillword:\r\n        echo \"a\";\r\n        break;\r\n    case fillword:\r\n        echo \"b\";\r\n        break;\r\n    fillword :\r\n        echo \"c\";\r\n        break;\r\n}","result":"c","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","default"]},"correct_patterns":[["1","2","default"],["2","1","default"]]},{"id":1334987358,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = fillword;\r\nswitch($num) {\r\n    case 1:\r\n        echo \"a\";\r\n        break;\r\n    fillword fillword :\r\n    case 3:\r\n        echo \"b\";\r\n        break;\r\n    default:\r\n        echo \"c\";\r\n        break;\r\n}","result":"b","words":{"operators":[],"values":["1","2","3"],"variables_constants":[],"others":["case","break"]},"correct_patterns":[["3","case","2"]]}]},{"id":199945869,"name":"While Loop","tests":[{"id":992779568,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 0;\r\nwhile ($num < 3)\r\n{\r\n\techo $num . \" \";\r\n\t$num++;\r\n}","answers":["1 2 3","0 1 2","0 1 2 3"],"correct_answer":"0 1 2","explanation":"<code>$num = 0<\/code>\r\n<br><br>\r\nLoop ends when <code>$num<\/code> reaches value of 3.\r\n<br><br>\r\n3 is the first value that's false for the condition <code>$num < 3<\/code>.\r\n<br><br>\r\n<code>$num++<\/code> increments the value by 1."},{"id":2110897393,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 1;\r\nwhile ($num < 5)\r\n{\r\n\techo $num . \" \";\r\n}","answers":["1 2 3 4","1 2 3 4 5","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>$num = 1<\/code>\r\n<br><br>\r\nThe condition <code>$num < 5<\/code> is always true since there is no modification like <code>$num++<\/code>."},{"id":914807998,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 2;\r\nwhile ($num < 7)\r\n{\r\n\t$num += 2;\r\n\techo $num . \" \";\r\n}","answers":["2 4 6 8","4 6","4 6 8"],"correct_answer":"4 6 8","explanation":"<code>$num = 2<\/code>\r\n<br><br>\r\n<code>$num < 7<\/code> remains true until <code>$num<\/code> reaches value of 8.\r\n<br><br>\r\nThe loop ends when <code>$num < 7<\/code> becomes false.\r\n<br><br>\r\n<code>$num += 2<\/code> increments the value by 2."},{"id":1865153663,"question":"What's the output of the code snippet?","code":"$num = 10;\r\necho $num . \" \";\r\n\r\nwhile ($num < 10)\r\n{\r\n\techo $num . \" \";\r\n\t$num++;\r\n}","answers":["10","10 10","10 11"],"correct_answer":"10","explanation":"<code>$num < 10<\/code> is false and the loop doesn't execute."},{"id":567811132,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 20;\r\n\r\nwhile ($num > 10)\r\n{\r\n\techo $num . \" \";\r\n\t$num -= 5;\r\n}","answers":["20","20 15","20 15 10"],"correct_answer":"20 15","explanation":"<code>$num > 10<\/code> remains true until <code>$num<\/code> decrements to 10.\r\n<br><br>\r\nThe loop ends when <code>$num > 10<\/code> becomes false.\r\n<br><br>\r\n<code>$num -= 5<\/code> decrements the value by 5."}],"puzzles":[{"id":4680223,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 1;\r\n\r\nwhile($num fillword fillword ) {\r\n    echo $num . \" \";\r\n    $num++;\r\n}","result":"1 2 3 4 5","words":{"operators":["<","<=",">",">="],"values":["4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","5"],["<","6"]]},{"id":2062841308,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 12;\r\n\r\nwhile($num fillword fillword) {\r\n    echo $num . \" \";\r\n    fillword;\r\n}","result":"12 14 16 18 20","words":{"operators":["<","<=",">",">="],"values":["18","20","21"],"variables_constants":[],"others":["$num++","$num += 2","$num--"]},"correct_patterns":[["<=","20","$num += 2"],["<","21","$num += 2"]]},{"id":865637789,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = fillword;\r\n\r\nwhile($num > 0) {\r\n    fillword ;\r\n    echo $num . \" \";\r\n}","result":"9 6 3 0","words":{"operators":[],"values":["9","10","12","13"],"variables_constants":[],"others":["$num--","$num += 3","$num -= 3"]},"correct_patterns":[["12","$num -= 3"]]}]},{"id":1285492298,"name":"Do While Loop","tests":[{"id":445464573,"question":"What's the output of the code snippet?","code":"$num = 1;\r\n\r\ndo\r\n{\r\n\techo $num . \" \";\r\n\t$num++;\r\n} while ($num < 4);","answers":["1 2 3","1 2 3 4","2 3"],"correct_answer":"1 2 3","explanation":"<code>$num < 4<\/code> remains true until <code>$num<\/code> increments to 4.\r\n<br><br>\r\nThe loop ends when <code>$num < 4<\/code> becomes false.\r\n<br><br>\r\n<code>$num++<\/code> increments the value by 1."},{"id":1395810234,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 1;\r\necho \"0 \";\r\ndo\r\n{\r\n\techo $num . \" \";\r\n\t$num--;\r\n} while ($num > 1)","answers":["0","0 1","0 1 0"],"correct_answer":"0 1","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since <code>$num > 1<\/code> is false."},{"id":367492987,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 1;\r\n\r\ndo\r\n{\r\n\techo $num . \" \";\r\n\t$num++;\r\n} while ($num > 1);","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"<code>$num > 1<\/code> remains true and the loop repeats infinitely.\r\n<br><br>\r\n<code>$num++<\/code> needs to be removed or replaced with <code>$num--<\/code> in order to stop it."},{"id":1317773112,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 0;\r\n\r\ndo\r\n{\r\n\t$num += 2;\r\n\techo $num . \" \";\r\n} while ($num <= 5);","answers":["0 2 4","2 4 6","2 4 6 8"],"correct_answer":"2 4 6","explanation":"<code>$num <= 5<\/code> remains true until <code>$num<\/code> increments to 6.\r\n<br><br>\r\nThe loop ends when <code>$num <= 5<\/code> becomes false.\r\n<br><br>\r\n<code>$num += 2<\/code> increments the value by 2."},{"id":121159417,"question":"What's the output of the code snippet?","code":"<?php\r\necho \"1 \";\r\ndo\r\n{\r\n\techo\"2 \";\r\n} while (false);","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"A do while loop executes at least once despite it's condition.\r\n<br><br>\r\nThe loop executes only once since it's condition is false."}],"puzzles":[{"id":1951249754,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = 1;\r\ndo\r\n{\r\n    echo $num . \" \";\r\n    $num++;\r\n} while ($num fillword fillword);","result":"1 2 3 4 5 6 7","words":{"operators":["<","<=",">",">="],"values":["6","7","8"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","7"],["<","8"]]},{"id":787666203,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = fillword;\r\ndo\r\n{\r\n    echo $num . \" \";\r\n    fillword;\r\n} while ($num <= 25);","result":"10 15 20 25","words":{"operators":[],"values":["5","10","15"],"variables_constants":[],"others":["$num++","$num += 5"]},"correct_patterns":[["10","$num += 5"]]},{"id":1739060440,"text":"Fill the missing words to match the output.","code":"<?php\r\n$num = fillword;\r\ndo\r\n{\r\n    $num++;\r\n    echo $num . \" \";\r\n} while ($num == fillword);","result":"1 2","words":{"operators":[],"values":["-1","0","1","2"],"variables_constants":[],"others":[]},"correct_patterns":[["0","1"]]}]},{"id":88878603,"name":"For Loop","tests":[{"id":2045632134,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 1; $i < 5; $i++)\r\n{\r\n\techo $i . \" \";\r\n}","answers":["1 2 3 4","1 2 3 4 5","1 1 1 1 1"],"correct_answer":"1 2 3 4","explanation":"The loop starts with <code>$i = 1<\/code>.\r\n<br><br>\r\n<code>$i < 5<\/code> remains true until <code>$i<\/code> increments to 5.\r\n<br><br>\r\nThe loop ends when <code>$i < 5<\/code> becomes false.\r\n<br><br>\r\n<code>$i++<\/code> increments the value by 1 in the end of every loop iteration."},{"id":848494151,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 2; $i <= 8; $i += 2)\r\n{\r\n\techo $i . \" \";\r\n}","answers":["2 4 6","2 4 6 8","2 3 4 5 6 7 8"],"correct_answer":"2 4 6 8","explanation":"The loop starts with <code>$i = 2<\/code>.\r\n<br><br>\r\n<code>$i <= 8<\/code> remains true until <code>$i<\/code> increments to 10.\r\n<br><br>\r\nThe loop ends when <code>$i <= 8<\/code> becomes false.\r\n<br><br>\r\n<code>$i+=2<\/code> increments the value by 2 in the end of every loop iteration."},{"id":1799822852,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 1 ;; $i++)\r\n{\r\n\techo $i . \" \";\r\n}","answers":["1","1 2","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"The condition is not specified so the loop repeats infinitely.\r\n<br><br>\r\nA condition such as <code>$i <= 5<\/code> could be added in order to stop it."},{"id":770980293,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 11; $i >= 5; $i -= 3)\r\n{\r\n\techo $i . \" \";\r\n}","answers":["11 8 5 2","11 8 5","11 8"],"correct_answer":"11 8 5","explanation":"The loop starts with <code>$i = 11<\/code>.\r\n<br><br>\r\n<code>$i >= 5<\/code> remains true until <code>$i<\/code> decrements to 2.\r\n<br><br>\r\nThe loop ends when <code>$i >= 5<\/code> becomes false.\r\n<br><br>\r\n<code>$i -= 3<\/code> decrements the value by 3 in the end of every loop iteration."},{"id":1721325954,"question":"What's the output of the code snippet?","code":"<?php\r\necho \"0 \";\r\nfor ($i = 1; $i < 1; $i++)\r\n{\r\n\techo $i . \" \";\r\n}","answers":["0","0 1","0 1 2"],"correct_answer":"0","explanation":"The initialization is <code>$i = 1<\/code>.\r\nThe condition <code>$i < 1<\/code> is false so the loop doesnt't execute."}],"puzzles":[{"id":1481905305,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor($i = fillword; $i fillword fillword; $i++) {\r\n\techo $i . \" \";\r\n}","result":"0 1 2 3 4","words":{"operators":["<","<=",">",">="],"values":["0","1","4","5"],"variables_constants":[],"others":[]},"correct_patterns":[["0","<","5"],["0","<=","4"]]},{"id":318321702,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor ($i = 1; $i fillword 11; $i fillword) {\r\n    echo $i . \" \";\r\n}","result":"1 3 5 7 9 11","words":{"operators":["<","<=","=="],"values":[],"variables_constants":[],"others":["++","+= 2","+= 4"]},"correct_patterns":[["<=","+= 2"]]},{"id":1269716967,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor ($i = 5; $i >= fillword; fillword) {\r\n    echo $i . \" \";\r\n}","result":"5 4 3 2 1","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["$i++","$i--","$i-=5","$i+=5"]},"correct_patterns":[["1","$i--"]]}]},{"id":529200105,"name":"Break And Continue","tests":[{"id":1598978371,"question":"What's the output of the code snippet?","code":"<?php\r\nfor($i = 1; $i < 10; $i += 3)\r\n{\r\n    echo $i . \" \";\r\n\r\n    if($i == 4)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["1","1 4","1 4 7"],"correct_answer":"1 4","explanation":"The <code>break<\/code> keyword ends the loop when <code>$i<\/code> reaches value of 4.\r\n\r\n<br><br>\r\n<code>$i<\/code> is printed before terminating the loop via\r\n<code>break<\/code>."},{"id":301111552,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 10;\r\n\r\nwhile($num < 20)\r\n{\r\n    echo $num . \" \";\r\n    $num += 4;\r\n\r\n    if($num == 18)\r\n    {\r\n        break;\r\n    }\r\n}","answers":["10 14","10 14 18","10 14 18 22"],"correct_answer":"10 14","explanation":"The <code>break<\/code> keyword ends the loop when <code>$num<\/code> reaches value of 18.\r\n\r\n<br><br>\r\n<code>$num<\/code> reaches value of 18 after \"14\" is printed."},{"id":1252505793,"question":"What's the output of the code snippet?","code":"<?php\r\nfor($i = 0; $i < 6; $i+= 2)\r\n{\r\n    if($i == 2)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    echo $i . \" \";\r\n}","answers":["0 4","0 2 4","0 4 6"],"correct_answer":"0 4","explanation":"The loop executes for $i = 0, 2 and  4.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for $i = 2 so all values except 2 are printed."},{"id":55892110,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 0;\r\n\r\nwhile ($number < 7)\r\n{\r\n\t$number += 3;\r\n\r\n\tif ($number == 6)\r\n\t{\r\n\t\tcontinue;\r\n\t}\r\n\r\n\techo $number . \" \";\r\n}","answers":["3 6 9","3 9","3"],"correct_answer":"3 9","explanation":"The loop executes for $number = 3, 6, 9.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for $number = 6 so all values except 6 are printed."},{"id":1174009935,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 1; $i <= 3; $i++)\r\n{\r\n\tif ($i == 2)\r\n\t{\r\n\t\tcontinue;\r\n\t\tbreak;\r\n\t}\r\n\r\n\techo $i . \" \";\r\n}","answers":["1","1 3","1 2 3"],"correct_answer":"1 3","explanation":"<code>continue<\/code> skips a loop iteration so the <code>break<\/code> keyword does not take any effect.\r\n<br><br>\r\nThe loop executes for $i= 1, 2, 3.\r\n<br><br>\r\nThe <code>continue<\/code> keyword skips the iteration for $i = 2 so all values except 2 are printed."}],"puzzles":[{"id":206796708,"text":"Fill the missing words to match the output.","code":"<?php\r\n$sum = 0;\r\nfor ($i = 1; $i <= 8; $i++) {\r\n    echo $i . \" \";\r\n    $sum += $i;\r\n\r\n    if($sum == fillword) {\r\n        fillword;\r\n    }                \r\n}","result":"1 2 3 4","words":{"operators":[],"values":["6","10","15","21"],"variables_constants":[],"others":["continue","break"]},"correct_patterns":[["10","break"]]},{"id":1158125413,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor ($i = 1; $i <= 5; $i++) {\r\n    if($i == fillword) {\r\n        fillword;\r\n    }\r\n    echo $i . \" \";\r\n}","result":"1 2 4 5","words":{"operators":[],"values":["2","3","4","5"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["3","continue"]]},{"id":1068807970,"text":"Fill the missing words to match the output.","code":"<?php\r\n$sum = 0; \r\nfor ($i = fillword; $i <= 100; $i+= 2) {\r\n    echo $i . \" \";\r\n    $sum += $i;\r\n\r\n    if ($sum == fillword) {\r\n        echo $sum;\r\n        fillword;\r\n    }\r\n}","result":"2 4 6 8 20","words":{"operators":[],"values":["0","1","2","20","30"],"variables_constants":[],"others":["break","continue"]},"correct_patterns":[["2","20","break"]]}]},{"id":2129302194,"name":"Nested If","tests":[{"id":1051596812,"question":"What's the output of the code snippet?","code":"<?php\r\nif (true)\r\n{\r\n\techo \"1 \";\r\n\r\n\tif (true)\r\n\t{\r\n\t\techo \"2\";\r\n\t}\r\n}\r\nelse\r\n{\r\n\techo \"3\";\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The code inside the outer if executes since it's condition is true thus \"1\" is printed.\r\n<br><br>\r\nBoth outer and inner if-s have true conditions, so \"2\" is printed too.\r\n<br><br>\r\nThe else block code does not execute because the outer if has true condition."},{"id":2001943501,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 10;\r\nif ($number >= 10)\r\n{\r\n\techo \"1 \";\r\n\r\n\tif ($number < 10)\r\n\t{\r\n\t\techo \"2\";\r\n\t}\r\n}\r\nelse\r\n{\r\n\techo \"3\";\r\n}","answers":["1","1 2","3"],"correct_answer":"1","explanation":"The condition <code>$number >= 10<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nThe condition <code>$number < 10<\/code> is false so \"2\" is not printed.\r\n<br><br>\r\nThe else block code does not execute because <code>$number >= 10<\/code> is true ."},{"id":671112074,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 5;\r\nif ($number == 5)\r\n{\r\n\t$number++;\r\n\techo \"1 \";\r\n\r\n\tif ($number == 6)\r\n\t{\r\n\t\techo \"2\";\r\n\t}\r\n}\r\nelse\r\n{\r\n\techo \"3\";\r\n}","answers":["1","1 2","3"],"correct_answer":"1 2","explanation":"The condition <code>$number == 5<\/code> is true so \"1\" is printed and the code inside it executes.\r\n<br><br>\r\nAfter incrementing <code>$number<\/code> the <code>$number == 6<\/code> condition becomes true so \"2\" is printed.\r\n<br><br>\r\nThe else block code does not execute because <code>$number == 5<\/code> is true."},{"id":1656060747,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 5;\r\nif ($number == 5) {\r\n\techo \"1 \";\r\n\r\n\tif ($number > 0) {\r\n\t\techo \"2 \";\r\n\r\n\t\tif ($number > 3) {\r\n\t\t\techo \"3\";\r\n\t\t}\r\n\t}\r\n}","answers":["1","1 2","1 2 3"],"correct_answer":"1 2 3","explanation":"All of the three conditions are true so \"1\", \"2\" and \"3\" are printed."},{"id":1532599048,"question":"What's the output of the code snippet?","code":"<?php\r\n$number = 10;\r\nif ($number == 5) {\r\n\techo \"1 \";\r\n}\r\nelse {\r\n\techo \"2 \";\r\n\tif ($number == 10) {\r\n\t\techo \"3\";\r\n\t}\r\n}","answers":["1","2","2 3"],"correct_answer":"2 3","explanation":"The condition <code>$number == 5<\/code> is false so the else block is executed and \"2\" is printed.\r\n<br><br>\r\n<code>$number == 5<\/code> is false and <code>$number == 10<\/code> is true so \"3\" is printed too."}],"puzzles":[{"id":1884935907,"text":"Fill the missing words to match the output.","code":"<?php\r\n$score = 100;\r\n\r\nif($score > fillword) {\r\n    echo \"High \";\r\n\r\n    if($score fillword fillword) {\r\n        echo \"Max Score\";\r\n    }\r\n}","result":"High Max Score","words":{"operators":["=="],"values":["80","100","110"],"variables_constants":[],"others":[]},"correct_patterns":[["80","==","100"]]},{"id":688846496,"text":"Fill the missing words to match the output.","code":"<?php\r\n$level = fillword;\r\n\r\nif($level > fillword && $level <= 100 ) {\r\n    echo \"Valid Level \";\r\n\r\n    if($level fillword 10 == 0) {\r\n        echo \"Contains Boss\";\r\n    }\r\n}","result":"Valid Level Contains Boss","words":{"operators":["-","+","\/","%"],"values":["40","0"],"variables_constants":[],"others":[]},"correct_patterns":[["40","0","%"]]},{"id":1672681057,"text":"Fill the missing words to match the output.","code":"<?php\r\n$calories = 200;\r\n\r\nif($calories fillword 100) {\r\n    echo \"High \";\r\n    $calories += fillword;\r\n\r\n    if($calories fillword 300) {\r\n        echo \"Very High\";\r\n    }\r\n}","result":"High Very High","words":{"operators":[">",">="],"values":["50","100"],"variables_constants":[],"others":[]},"correct_patterns":[[">","100",">="]]}]},{"id":1548434815,"name":"Nested Loops","tests":[{"id":470727369,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 0; $i < 1; $i++) {\r\n\techo $i . \" \";\r\n\tfor ($j = 0; $j < 1; $j++) {\r\n\t\techo $j . \" \";\r\n\t}\r\n}","answers":["0","0 0","0 0 1 1"],"correct_answer":"0 0","explanation":"Both inner and outer loop execute only once for <code>$i = 0<\/code> and <code>$j = 0<\/code> ."},{"id":1454627478,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 0; $i < 2; $i++) {\r\n\techo $i . \" \";\r\n\tfor ($j = 0; $j < 0; $j++) {\r\n\t\techo $j . \" \";\r\n\t}\r\n}","answers":["0","0 0","0 1"],"correct_answer":"0 1","explanation":"The outer loop executes twice - for $i = 0 and $i = 1.\r\n<br><br>\r\nThe inner loop has false condition so it doesn't execute."},{"id":258013783,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($i = 0; $i < 3; $i++) {\r\n\techo $i . \" \";\r\n\tfor ($j = 0; $j < 1; $j++) {\r\n\t\techo $j . \" \";\r\n\t}\r\n}","answers":["0 0 1 0 2 0","0 0 1 0","0 1 2"],"correct_answer":"0 0 1 0 2 0","explanation":"The outer loop executes 3 times - for $i = 0, 1 and 2.\r\n<br><br>\r\nThe inner loop executes once each time the outer loop iterates. \r\n<br><br>\r\nAll zeroes except for the first one are printed by the inner loop."},{"id":1075124756,"question":"What's the output of the code snippet?","code":"<?php\r\nfor ($a = 0; $a < 2; $a++) {\r\n\techo $a . \" \";\r\n\tfor ($b = 0; $b < 1; $b++)\r\n\t{\r\n\t\techo $b . \" \";\r\n\t\tfor ($c = 0; $c < 1; $c++)\r\n\t\t{\r\n\t\t\techo $c . \" \";\r\n\t\t}\r\n\t}\r\n}","answers":["0 0 0 1 1 1","0 0 1 0 0 0","0 0 0 1 0 0"],"correct_answer":"0 0 0 1 0 0","explanation":"The outer loop executes twice.\r\n<br><br>\r\nEach iteration of the outer loop makes the inner loops to execute once."},{"id":985277909,"question":"What's the output of the code snippet?","code":"<?php\r\n$i = 1;\r\nwhile ($i <= 3)\r\n{\r\n\t$j = 0;\r\n\r\n\twhile ($j < 2)\r\n\t{\r\n\t\techo $j . ' ';\r\n\t\t$j++;\r\n\t}\r\n}","answers":["0 1 0 1","0 1 0 1 0 1","Infinite Loop"],"correct_answer":"Infinite Loop","explanation":"Modification such as <code>$i++<\/code> is missing for the outer loop."}],"puzzles":[{"id":610285102,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor($a = 1; $a <= fillword; $a++)\r\n{\r\n    for($b = 1; $b <= fillword; $b++ )\r\n    {\r\n        echo fillword . \" \" . fillword;\r\n        echo \"<br>\"; \/\/ prints new line\r\n    }\r\n}","result":"1 1\r\n1 2\r\n2 1\r\n2 2\r\n3 1\r\n3 2","words":{"operators":[],"values":["1","2","3","4"],"variables_constants":["$a","$b"],"others":[]},"correct_patterns":[["3","2","$a","$b"]]},{"id":487936495,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor($a = 1; $a <= fillword; $a++)\r\n{\r\n    for($b = 1; $b <= fillword; $b++ )\r\n    {\r\n        echo fillword . \" \";\r\n    }\r\n    echo \"<br>\"; \/\/ Prints new line.\r\n}","result":"1\r\n1 2\r\n1 2 3\r\n1 2 3 4","words":{"operators":[],"values":["3","4","5","6"],"variables_constants":["$a","$b"],"others":[]},"correct_patterns":[["4","$a","$b"]]},{"id":1471836588,"text":"Fill the missing words to match the output.","code":"<?php\r\nfor($row = 1; $row <= 5; $row++)\r\n{\r\n    for ($col = 1; $col <= $row; fillword)\r\n    {\r\n        if($row fillword $col) {\r\n            echo fillword;\r\n            echo \"<br>\"; \/\/ Prints new line.\r\n        }\r\n        else {\r\n            echo \"&nbsp;\"; \/\/ Prints space\r\n        }\r\n    }\r\n}","result":"1\r\n 2\r\n  3\r\n   4\r\n    5","words":{"operators":["<","==","!="],"values":[],"variables_constants":["$col","$row"],"others":["$col++","$row++"]},"correct_patterns":[["$col++","==","$row"],["$col++","==","$col"]]}]},{"id":866901048,"name":"Tricky Questions","tests":[{"id":1936672146,"question":"What's the output of the code snippet?","code":"<?php\r\n$a = 1;\r\n$b = 1;\r\n\r\n$a++;\r\n++$b;\r\necho $a . \" \" . $b;","answers":["1 2","2 1","2 2"],"correct_answer":"2 2","explanation":"Both <code>$a++<\/code> and <code>++$b<\/code> increment the values by 1."},{"id":874276179,"question":"What's the output of the code snippet?","code":"<?php\r\n$a = 1;\r\n$b = 1;\r\necho ++$a . \" \" . $b++;","answers":["1 1","2 1","2 2"],"correct_answer":"2 1","explanation":"<code>++$a <\/code> returns the incremented result\r\n<br><br>\r\n<code>$b++<\/code> returns the value before incrementation."},{"id":1858110736,"question":"What's the output of the code snippet?","code":"<?php\r\n$a = 2;\r\n$b = 2;\r\n\r\n--$a;\r\n$b--;\r\n\r\necho --$a . \" \" . $b--;\r\n?>","answers":["1 1","1 0","0 1"],"correct_answer":"0 1","explanation":"Both <code>--$a<\/code> and <code>$b--<\/code> decrement the value by 1.\r\n<br><br>\r\n<code>--$a<\/code> returns the decremented value.\r\n<br><br>\r\n<code>$b--<\/code> returns the value before decrementation."},{"id":662021329,"question":"What's the output of the code snippet?","code":"$i = 0;\r\nfor (; $i < 100; $i++);\r\n\r\necho $i;","answers":["0","1","100"],"correct_answer":"100","explanation":"The loop starts from <code>$i = 0<\/code> and ends when <code>$i<\/code> reaches value of 100.\r\n<br><br>\r\n100 is the first value of <code>$i<\/code> which breaks the condition <code>$i < 100<\/code>."},{"id":404407454,"question":"What's the output of the code snippet?","code":"<?php\r\n$i = 0;\r\nfor (; $i <= 10; $i += 2);\r\n\r\necho $i;","answers":["0","10","12"],"correct_answer":"12","explanation":"The loop starts from <code>$i = 0<\/code> and ends when <code>$i<\/code> reaches value of 12.\r\n<br><br>\r\n12 is the first value of <code>$i<\/code> which breaks the condition <code>$i <= 10<\/code>."}],"puzzles":[{"id":141463917,"text":"Fill the missing words to match the output.","code":"<?php\r\n$a = 3;\r\n$b = 7;\r\n\r\necho fillword . \" \" . fillword;","result":"3 8","words":{"operators":[],"values":[],"variables_constants":[],"others":["$a++","++$a","$b++","++$b"]},"correct_patterns":[["$a++","++$b"]]},{"id":1091809578,"text":"Fill the missing words to match the output.","code":"<?php\r\n$i = 0;\r\nfor (; $i fillword fillword; $i++);\r\n\r\necho $i;","result":"101","words":{"operators":["<","<=",">",">="],"values":["99","100"],"variables_constants":[],"others":[]},"correct_patterns":[["<=","100"]]},{"id":1002492139,"text":"Fill the missing words to match the output.","code":"<?php\r\n$i = 0;\r\nfor (; $i fillword 10; $i++);\r\n\r\necho fillword;","result":"10","words":{"operators":[">",">=","<","<="],"values":[],"variables_constants":[],"others":["$i++","++$i"]},"correct_patterns":[["<","$i++"]]}]},{"id":163064599,"name":"Strings","tests":[{"id":219937842,"question":"What's the output of the code snippet?","code":"<?php\r\n$str = \"Hello\";\r\necho $str[1];","answers":["H","e","o"],"correct_answer":"e","explanation":"The string has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>H<\/td>\r\n            <td class=\"table-primary\">e<\/td>\r\n            <td>l<\/td>\r\n            <td>l<\/td>\r\n            <td>o<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1204297715,"question":"What's the output of the code snippet?","code":"<?php\r\n$str1 = \"abc\";\r\n$str2 = \"defg\";\r\n\r\necho (strlen($str1) + strlen($str2));","answers":["7","8","9"],"correct_answer":"7","explanation":"The <code>strlen<\/code> function returns the count of the symbols:\r\n<br><br>\r\n<code>strlen($str1)<\/code> is 3\r\n<br>\r\n<code>strlen($str2)<\/code> is 4\r\n<br>\r\n3 + 4 = 7"},{"id":947732400,"question":"What's the output of the code snippet?","code":"<?php\r\n$color = \"green\";\r\n\r\necho $color[4];\r\necho $color[5];","answers":["e n","n 0","Warning"],"correct_answer":"Warning","explanation":"<code>$color<\/code> has the following structure:\r\n\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>g<\/td>\r\n            <td>r<\/td>\r\n            <td>e<\/td>\r\n            <td>e<\/td>\r\n            <td>n<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br><br>\r\n<code>$color[5]<\/code> accesses index that's outside of the bound (0 - 4) which results in warning."},{"id":1898078065,"question":"What's the output of the code snippet?","code":"<?php\r\n$word = \"Arena\";\r\n\r\nif(strpos($word, \"na\") !== false) {\r\n    echo '1';\r\n}\r\n\r\nif(strpos($word, \"A\") !== false) {\r\n    echo '2';\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"'na' is contained in 'Arena' so <br>\r\n<code>strpos($word, \"na\") !== false<\/code> returns true.\r\n<br><br>\r\n'A' is contained in 'Arena' (it's first symbol) so <br>\r\n<code>strpos($word, \"A\") !== false<\/code> returns true."},{"id":735543102,"question":"What's the output of the code snippet?","code":"<?php\r\n$equation = \"160 + 135 = 295\";\r\n\r\nfor($i = 0; $i < strlen($equation); $i++)\r\n{\r\n    $symbol = $equation[$i];\r\n    \r\n    if (strpos(\"12\", $symbol) === false)\r\n    {\r\n        echo $symbol;\r\n    }\r\n}","answers":["160 + 135 = 295","60 + 35 = 95","1 1 2"],"correct_answer":"60 + 35 = 95","explanation":"The for loop iterates over each symbol of the equation.\r\n<br><br>\r\nOnly symbols that are not '1' and '2' are printed. That's specified via <code>strpos(\"12\", $symbol) === false<\/code>.\r\n<br><br>\r\n\r\nBasically <code>1<\/code>60 + <code>1<\/code>35 = <code>2<\/code>95 is simplified to: <br>\r\n60 + 35 = 95"}],"puzzles":[{"id":1337960344,"text":"Fill the missing words to match the output.","code":"<?php\r\n$str = 'clarity';\r\necho $str[fillword];\r\necho $str[fillword];\r\necho $str[fillword];","result":"c a t","words":{"operators":[],"values":["0","1","2","3","4","5","6","7"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","5"]]},{"id":7128921,"text":"Fill the missing words to match the output.","code":"<?php\r\n$str = \"jacket\";\r\necho fillword($str) + fillword;","result":"10","words":{"operators":[],"values":["1","2","3","4","5","6","7","8"],"variables_constants":[],"others":["size","length","strlen"]},"correct_patterns":[["strlen","4"]]},{"id":2031216358,"text":"Fill the missing words to match the output.","code":"<?php\r\n$str = \"readability\";\r\n\r\nfor ($i = 0; $i < strlen($str); $i++)\r\n{\r\n    $symbol = $str[$i];\r\n    \r\n    if (fillword(fillword, fillword) !== false)\r\n    {\r\n        echo $symbol;\r\n    }\r\n}","result":"a a b","words":{"operators":[],"values":["\"readability\"","\"redility\"","\"ab\""],"variables_constants":[],"others":["length","size","strpos","$symbol","$str","$charToString"]},"correct_patterns":[["strpos","\"ab\"","$symbol"]]}]}],"Advanced":[{"id":2146519496,"name":"Arrays","tests":[{"id":1389356127,"question":"What's the output of the code snippet?","code":"<?php\r\n$arr = [5, 10, 15];\r\necho $arr[1];","answers":["5","10","15"],"correct_answer":"10","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>5<\/td>\r\n            <td class=\"table-primary\">10<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":192676892,"question":"What's the output of the code snippet?","code":"<?php\r\n$colors = [\"blue\", \"green\", \"pink\"];\r\n\r\nfor ($i = 0; $i < 2; $i++)\r\n{\r\n\techo $colors[$i] . \" \";\r\n}","answers":["blue green","blue green pink","green pink"],"correct_answer":"blue green","explanation":"The loop executes for $i = 0 and $i = 1.\r\n<br><br>\r\nThe array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td class=\"table-primary\">0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td class=\"table-primary\">blue<\/td>\r\n            <td class=\"table-primary\">green<\/td>\r\n            <td>pink<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1277241309,"question":"What's the output of the code snippet?","code":"<?php\r\n$ages = [10, 15, 20, 25, 30];\r\necho count($ages);","answers":["5","4","30"],"correct_answer":"5","explanation":"The <code>count<\/code> function returns the count of the array elements.\r\n<br><br>\r\nThe array has 5 elements."},{"id":114706330,"question":"What's the output of the code snippet?","code":"<?php\r\n$numbers = [];\r\necho $numbers[0];","answers":["Warning","0","Exception"],"correct_answer":"Warning","explanation":"The array does not contain any elements.\r\n<br><br>\r\nAccessing indexes that are out of array's bounds results in warning.\r\n<br><br>\r\nAlso <code>$numbers[0]<\/code> returns null."},{"id":2138793819,"question":"What's the output of the code snippet?","code":"<?php\r\n$numbers = [1, 2, 3];\r\nif($numbers[3] === null) {\r\n\techo '1';\r\n}\r\nelse {\r\n\techo '2';\r\n}","answers":["1","2","Exception"],"correct_answer":"1","explanation":"The array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nAccessing index that's outside of it's bounds returns null and also results in warning."}],"puzzles":[{"id":2088104104,"text":"Fill the missing words to match the output.","code":"<?php\r\n$arr = [8, 4, 5, 6, 3];\r\n\r\necho $arr[fillword] . \" \";\r\necho $arr[fillword] . \" \";\r\necho $arr[fillword];","result":"8 5 3","words":{"operators":[],"values":["-1","0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","2","4"]]},{"id":890900585,"text":"Fill the missing words to match the output.","code":"<?php\r\n$arr = [5, 7, 9, 3];\r\n\r\nfor($i = fillword; $i < fillword; $i++) {\r\n    echo $arr[fillword] . \" \";\r\n}","result":"5 7 9 3","words":{"operators":[],"values":["0","1","2","3","4","5","$i"],"variables_constants":[],"others":[]},"correct_patterns":[["0","4","$i"]]},{"id":1875849270,"text":"Fill the missing words to match the output.","code":"<?php\r\n$arr = [1, 2, 9, 8, 6];\r\n\r\nfor($i = 0; $i < fillword; $i++)\r\n{\r\n    if($i % 2 == fillword) {\r\n        echo $arr[fillword] . \" \";\r\n    }\r\n}","result":"1 9 6","words":{"operators":[],"values":["0","1","4","5","$i"],"variables_constants":[],"others":[]},"correct_patterns":[["5","0","$i"]]}]},{"id":1407244816,"name":"Functions","tests":[{"id":808421144,"question":"What's the output of the code snippet?","code":"<?php\r\na();\r\n\r\nfunction a() {\r\n\techo \"1 \";\r\n}\r\nfunction b() {\r\n\techo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1","explanation":"<code>a();<\/code> calls the <code>a<\/code> function thus \"1\" is printed."},{"id":1792845529,"question":"What's the output of the code snippet?","code":"<?php\r\n$sum = getSum(2,4,3);\r\necho $sum;\r\n\r\nfunction getSum($a, $b, $c) {\r\n    return $a + $b + $c;\r\n}","answers":["0","9","243"],"correct_answer":"9","explanation":"The <code>getSum<\/code> function is called with 3 parameters - 2, 4 and 3 which sum is 9."},{"id":595707494,"question":"What's the output of the code snippet?","code":"<?php\r\nprintArg();\r\n\r\nfunction printArg($number) {\r\n    echo $number;\r\n}","answers":["0","1","Exception"],"correct_answer":"Exception","explanation":"The function <code>printArg<\/code> accepts 1 argument but none are passed to it thus exception is thrown."},{"id":1681319463,"question":"What's the output of the code snippet?","code":"<?php\r\nprintName();\r\necho \" \";\r\nprintName(\"Joe\");\r\n\r\nfunction printName($name = \"Unknown\") {\r\n    echo $name;\r\n}","answers":["Unknown Unknown","Unknown Joe","Exception"],"correct_answer":"Unknown Joe","explanation":"A default value is set to the <code>$name<\/code> argument - <code>\"Unknown\"<\/code>.\r\n<br><br>\r\nWhen <code>printName<\/code> is called without argument <code>$name<\/code> takes it's default value - <code>Unknown<\/code>."},{"id":1591411172,"question":"What's the output of the code snippet?","code":"<?php\r\necho getProd(3);\r\n\r\nfunction getProd($num1, $num2 = 2) {\r\n    return $num1 * $num2;\r\n}","answers":["2","3","6"],"correct_answer":"6","explanation":"The <code>$num2<\/code> argument has a default value - <code>2<\/code>.\r\n<br><br>\r\nSince <code>getProd(3)<\/code> does not pass value for  <code>$num2<\/code>, it takes it's default value - <code>2<\/code>."}],"puzzles":[{"id":545018871,"text":"Fill the missing words to match the output.","code":"<?php\r\n\r\nfillword;\r\nfillword;\r\n\r\nfunction a() {\r\n    echo '1 ';\r\n}\r\nfunction b() {\r\n    echo '2 ';\r\n}","result":"1 2","words":{"operators":[],"values":[],"variables_constants":[],"others":["a","b","a()","b()"]},"correct_patterns":[["a()","b()"]]},{"id":421622708,"text":"Fill the missing words to match the output.","code":"<?php\r\n\r\n$sum = sumNums(fillword);\r\necho $sum;\r\n\r\nfillword sumNums($a, $b) {\r\n    fillword $a + $b;\r\n}","result":"7","words":{"operators":[],"values":[],"variables_constants":[],"others":["function","return","get","2, 5","7"]},"correct_patterns":[["2, 5","function","return"]]},{"id":1406505845,"text":"Fill the missing words to match the output.","code":"<?php\r\n\r\nprintArgs(fillword);\r\n\r\nfunction printArgs($a, $b, fillword) {\r\n    echo $a . \" \" . $b . \" \" . $c;\r\n}","result":"1 2 5","words":{"operators":[],"values":[],"variables_constants":[],"others":["$c","$c = 5","1, 2","1, 2, 3"]},"correct_patterns":[["1, 2","$c = 5"]]}]},{"id":345368017,"name":"Associative Arrays","tests":[{"id":394797477,"question":"What's the output of the code snippet?","code":"<?php\r\n$clothes = [];\r\n$clothes[\"Sweather\"] = 55;\r\n$clothes[\"Jeans\"] = 45;\r\n\r\necho $clothes[\"Jeans\"];","answers":["0","45","55"],"correct_answer":"45","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Sweather<\/td>\r\n            <td class=\"table-primary\">Jeans<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>55<\/td>\r\n            <td class=\"table-primary\">45<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe value 45 is accessed via the \"Jeans\" key."},{"id":1211973986,"question":"What's the output of the code snippet?","code":"<?php\r\n$fruits= [];\r\n$fruits[\"strawberry\"] = 2.5;\r\n$fruits[\"cherry\"] = 1.8;\r\n\r\necho $fruits[\"mango\"];","answers":["0","2.5","null"],"correct_answer":"null","explanation":"The associative array doesn't contain \"mango\" key\r\nthus null is returned.\r\n<br><br>\r\nThe associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>strawberry<\/td>\r\n            <td>cherry<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>2.5<\/td>\r\n            <td>1.8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":48390435,"question":"What's the output of the code snippet?","code":"$personsAges = [];\r\n\r\n$personsAges[\"John\"] = 22;\r\n$personsAges[\"Alex\"] = 25;\r\n\r\nforeach ($personsAges as $key => $value) {\r\n    echo $key . \" \";\r\n}","answers":["John Alex","Alex John","22 25"],"correct_answer":"John Alex","explanation":"The associative array has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>John<\/td>\r\n            <td>Alex<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>22<\/td>\r\n            <td>25<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<br>\r\nThe for loop prints only the keys."},{"id":2073460960,"question":"What's the output of the code snippet?","code":"<?php\r\n$playerScores = [];\r\n\r\n$playerScores[\"Snowy\"] = 123;\r\n$playerScores[\"Avian\"] = 130;\r\n\r\nunset($playerScores[\"Snowy\"]);\r\n\r\nforeach ($playerScores as $key => $value) {\r\n    echo $value . \" \";\r\n}","answers":["123","130","123 130"],"correct_answer":"130","explanation":"2 key-value pairs are added.\r\n<br><br>\r\nVia the unset function one of the key-value pairs is removed.\r\n<br><br>\r\nThe for loop prints all values - which is only 130.\r\n<br><br>\r\nThe final structure of the associative array is:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Keys<\/th>\r\n            <td>Avian<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>130<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1010540705,"question":"What's the output of the code snippet?","code":"<?php\r\n$capitals = [];\r\n\r\n$capitals[\"France\"] = \"Paris\";\r\n$capitals[\"Canada\"] = \"Ottawa\";\r\n$capitals[\"Spain\"] = \"Madrid\";\r\n\r\nunset($capitals[\"Spain\"]);\r\necho count($capitals);","answers":["0","2","3"],"correct_answer":"2","explanation":"The <code>count<\/code> function returns the count of the key-value pairs.\r\n<br><br>\r\n3 key-value pairs are added to the associative array and afterwards 1 is removed.\r\n<br><br>\r\n3 - 1 = 2"}],"puzzles":[{"id":343585586,"text":"Fill the missing words to match the output.","code":"<?php\r\n\r\n$persons = [];\r\n$persons[fillword] = fillword;\r\n$persons[fillword] = fillword;\r\n\r\necho $persons[\"James\"] . \" \";\r\necho $persons[\"Sophia\"];","result":"26 22","words":{"operators":[],"values":["20","22","26","\"Jake\"","\"James\"","\"Sophia\""],"variables_constants":[],"others":[]},"correct_patterns":[["\"Sophia\"","22","\"James\"","26"],["\"James\"","26","\"Sophia\"","22"]]},{"id":1294979827,"text":"Fill the missing words to match the output.","code":"<?php\r\n$grades = [];\r\n$grades[\"Olivia\"] = \"A\";\r\n$grades[\"James\"] = \"B\";\r\n\r\nforeach ($grades as $key => $value) {\r\n    echo fillword . \" \" . fillword;\r\n    echo \"<br>\"; \/\/ Prints new line.\r\n}","result":"Olivia A\r\nJames B","words":{"operators":[],"values":["Olivia","James"],"variables_constants":[],"others":["$key","$value"]},"correct_patterns":[["$key","$value"]]},{"id":131920560,"text":"Fill the missing words to match the output.","code":"<?php\r\n$colors = [];\r\n$colors[\"White\"] = \"#ffffff\";\r\n$colors[\"Black\"] = \"#000000\";\r\n$colors[fillword] = \"#00ff00\";\r\n\r\nunset($colors[\"Black\"]);\r\necho fillword($colors);","result":"2","words":{"operators":[],"values":["\"White\"","\"Black\"","\"Green\""],"variables_constants":[],"others":["count","keys","values"]},"correct_patterns":[["\"Green\"","count"]]}]},{"id":133113183,"name":"Matrix","tests":[{"id":1994965102,"question":"What's the output of the code snippet?","code":"<?php\r\n$matrix = [\r\n    [2, 4, 6],\r\n    [1, 3, 5]\r\n];\r\n\r\necho $matrix[1][1];","answers":["1","2","3"],"correct_answer":"3","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th class=\"btn-primary\">[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>2<\/td>\r\n            <td>4<\/td>\r\n            <td>6<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[1]<\/th>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">3<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":798875695,"question":"What's the output of the code snippet?","code":"<?php\r\n$matrix = [\r\n    [5, 7, 8],\r\n    [2, 2, 3],\r\n    [4, 4, 9]\r\n];\r\n\r\necho $matrix[2][2];","answers":["2","4","9"],"correct_answer":"9","explanation":"The matrix has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th class=\"btn-primary\">[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>5<\/td>\r\n            <td>7<\/td>\r\n            <td>8<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>2<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th class=\"btn-primary\">[2]<\/th>\r\n            <td>4<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">9<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1614939116,"question":"What's the output of the code snippet?","code":"<?php\r\n$matrix = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n];\r\n\r\nfor($i = 0; $i < 3; $i++)\r\n{\r\n    echo $matrix[$i][$i] . \" \";\r\n}","answers":["0 4 8","0 3 6","0 1 2"],"correct_answer":"0 4 8","explanation":"Via the for loop the row-col positions of the matrix are: <br>\r\n[0][0],  [1][1], [2][2].\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td class=\"btn-primary\">4<\/td>\r\n            <td>5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td>6<\/td>\r\n            <td>7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":1526145965,"question":"What's the output of the code snippet?","code":"<?php\r\n$matrix = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n];\r\n\r\nfor($i = 0; $i < 3; $i++)\r\n{\r\n    for ($j = 0; $j < 3; $j++)\r\n    {\r\n        if ($i == 2 || $j == 2)\r\n        {\r\n            echo $matrix[$i][$j] . \" \";\r\n        }\r\n    }\r\n}","answers":["0 1 3 4","2 5 6 7 8","6 7 8"],"correct_answer":"2 5 6 7 8","explanation":"In this case <code>$i<\/code> represents the row index and <code>$j<\/code> - the column.<br><br>\r\nBasically the elements of the last column and row are printed.\r\n\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"btn-primary\">2<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>3<\/td>\r\n            <td>4<\/td>\r\n            <td class=\"btn-primary\">5<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td class=\"btn-primary\">6<\/td>\r\n            <td class=\"btn-primary\">7<\/td>\r\n            <td class=\"btn-primary\">8<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":329532266,"question":"What's the output of the code snippet?","code":"<?php\r\n$matrix = [\r\n    [ 0, 1, 0, 1, 0 ],\r\n    [ 1, 0, 1, 0, 1 ],\r\n    [ 0, 1, 0, 1, 0 ],\r\n    [ 1, 0, 1, 0, 1 ],\r\n];\r\n\r\n$sum = 0;\r\nfor($i = 0; $i < 4; $i++) {\r\n    for ($j = 0; $j < 5; $j++) {\r\n        if (($i + $j) % 2 == 0) {\r\n            $sum += $matrix[$i][$j];\r\n        }\r\n    }\r\n}\r\necho $sum;","answers":["0","10","6"],"correct_answer":"0","explanation":"The elements which have even sum of row and column index are sumed.  It's like a chessboard field.\r\n<br><br>\r\nAll of the summed elements are 0s which makes the\r\nvalue of the <code>sum<\/code>  variable 0.\r\n<br><br>\r\nStructure of the matrix:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th><\/th>\r\n            <th>[0]<\/td>\r\n            <th>[1]<\/td>\r\n            <th>[2]<\/td>\r\n            <th>[3]<\/td>\r\n            <th>[4]<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>[0]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[1]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[2]<\/th>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n    <\/tr>\r\n    <tr>\r\n            <th>[3]<\/th>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n            <td  class=\"btn-primary\">0<\/td>\r\n            <td>1<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":2021724785,"text":"Fill the missing words to match the output.","code":"<?php\r\n$matrix = [\r\n    [4, 1, 6, 3 ],\r\n    [2, 8, 0, 7 ]\r\n];\r\n\r\necho $matrix[fillword][fillword] . \" \";\r\necho $matrix[fillword][fillword];","result":"3 0","words":{"operators":[],"values":["0","1","2","3","4","5","6"],"variables_constants":[],"others":[]},"correct_patterns":[["0","3","1","2"]]},{"id":825635390,"text":"Fill the missing words to match the output.","code":"<?php\r\n$matrix = [\r\n    [ 4, 1, 6 ],\r\n    [ 3, 8, 0 ],\r\n    [ 7, 2, 5 ]\r\n];\r\nfor($i = 0; $i < fillword; $i++) {\r\n    echo $matrix[fillword][fillword] . \" \";\r\n}","result":"1 8 2","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["$i"],"others":[]},"correct_patterns":[["3","$i","1"]]},{"id":1809538559,"text":"Fill the missing words to match the output.","code":"<?php\r\n$matrix = [\r\n    [ 5, 2, 8 ],\r\n    [ 1, 3, 6 ],\r\n    [ 4, 0, 7 ]\r\n];\r\n\r\nfor ($i = 0; $i < 3; $i++) {\r\n    for ($j = 0; $j < 3; $j++) {\r\n        if ($i == fillword || $j == fillword) {\r\n            echo $matrix[fillword][$j] . \" \";\r\n        }\r\n    }\r\n}","result":"5 1 4 0 7","words":{"operators":[],"values":["0","1","2","3","4"],"variables_constants":["$i","$j"],"others":[]},"correct_patterns":[["2","0","$i"]]}]},{"id":2023507228,"name":"Reference Passing","tests":[{"id":1414095659,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 5;\r\ndecrement($num);\r\necho $num;\r\n\r\n\r\nfunction decrement($num) {\r\n    $num--;\r\n}","answers":["0","4","5"],"correct_answer":"5","explanation":"The <code>$num<\/code> argument is not passed by reference so <code>$num<\/code> remains 5 outside the <code>decrement<\/code> function."},{"id":251495144,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 7;\r\nprintDecremented($num);\r\necho $num;\r\n\r\nfunction printDecremented($num)\r\n{\r\n    $num--;\r\n    echo $num . \" \";\r\n}","answers":["6 6","6 7","7 7"],"correct_answer":"6 7","explanation":"The <code>$num<\/code> argument is not passed by reference so <code>$num<\/code> remains 7 outside the <code>printDecremented<\/code> function.\r\n<br><br>\r\nDespite that, the value gets decremented inside the <code>printDecremented<\/code> function."},{"id":1201840809,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 10;\r\ndivideBy2($num);\r\necho $num;\r\n\r\nfunction divideBy2(&$num)\r\n{\r\n    $num \/= 2;\r\n}","answers":["0","5","10"],"correct_answer":"5","explanation":"The <code>$num<\/code> argument is passed by reference so num's value is halved outside the <code>divideBy2<\/code> function."},{"id":945275510,"question":"What's the output of the code snippet?","code":"<?php\r\n$num = 15;\r\nprintDividedBy3($num);\r\necho $num;\r\n\r\nfunction printDividedBy3(&$num)\r\n{\r\n    $num \/= 3;\r\n    echo $num . \" \";\r\n}","answers":["15 5","5 15","5 5"],"correct_answer":"5 5","explanation":"The <code>$num<\/code> argument is passed by reference. It's value is modified inside and outside the  <code>printDividedBy3<\/code> functions."},{"id":1896145463,"question":"What's the output of the code snippet?","code":"<?php\r\n$arr = [0, 1];\r\nadd1ToArray($arr);\r\necho $arr[0] . \" \" . $arr[1];\r\n\r\nfunction add1ToArray($arr)\r\n{\r\n    $arr[0] += 1;\r\n    $arr[1] += 1;\r\n}","answers":["0 1","1 1","1 2"],"correct_answer":"0 1","explanation":"Array is always passed by reference so it's elements are modified outside the <code>add1ToArray<\/code> function."}],"puzzles":[{"id":747142588,"text":"Fill the missing words to match the output.","code":"<?php\r\n$a = 1;\r\n$b = 1;\r\n\r\nincrement($a, $b);\r\necho $a . \" \" . $b;\r\n\r\nfunction increment(fillword, fillword) {\r\n\t$arg1++;\r\n\t$arg2++;\r\n}","result":"1 2","words":{"operators":[],"values":[],"variables_constants":[],"others":["$arg1","&$arg1","$arg2","&$arg2"]},"correct_patterns":[["$arg1","&$arg2"],["$arg2","&$arg1"]]},{"id":1698471293,"text":"Fill the missing words to match the output.","code":"<?php\r\n$arr = [0, 1, 2];\r\nadd1ToArr($arr);\r\necho $arr[fillword] . \" \";\r\necho $arr[fillword];\r\n\r\nfunction add1ToArr($arr) {\r\n\t$arr[0]++;\r\n\t$arr[1]++;\r\n\t$arr[2]++;\r\n}","result":"1 2","words":{"operators":[],"values":["-1","0","1","2","3","4"],"variables_constants":[],"others":[]},"correct_patterns":[["1","2"]]},{"id":1608629562,"text":"Fill the missing words to match the output.","code":"<?php\r\n$arr = [fillword];\r\n$num = 2;\r\nadd1($arr, $num);\r\n\r\necho fillword . \" \";\r\necho fillword;\r\n\r\n\r\nfunction add1(&$arr, $num) {\r\n\tarray_push($arr, 1);\r\n\t$num++;\r\n}","result":"3 2","words":{"operators":[],"values":[],"variables_constants":["$arr","$num"],"others":["count($arr)","1","1, 2","1, 2, 3"]},"correct_patterns":[["1, 2","count($arr)","$num"]]}]},{"id":826369245,"name":"Recursion","tests":[{"id":732499444,"question":"What's the output of the code snippet?","code":"<?php\r\necho sum(4);\r\n\r\nfunction sum($num)\r\n{\r\n    if ($num == 1)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    return $num + sum($num - 1);\r\n}","answers":["1","4","10"],"correct_answer":"10","explanation":"The <code>sum<\/code> function sums the numbers from n to 1.\r\n<br><br> \r\nIn this case 4 + 3 + 2 + 1 = 10.\r\n<br><br>\r\nThe recursion ends when the condition <code>$num === 1<\/code> is met."},{"id":1818111413,"question":"What's the output of the code snippet?","code":"<?php\r\necho sum(3);\r\n\r\nfunction sum($num)\r\n{\r\n    return $num + sum($num - 1);\r\n}","answers":["3","6","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"There is no end condition of the recursion so  Stackoverflow Exception is thrown.\r\n<br><br>\r\nA suitable end condition could be: <br>\r\nif($num == 1) return 1;"},{"id":620973426,"question":"What's the output of the code snippet?","code":"<?php\r\n$arr = [1, 2, 3, 4];\r\nprintArr($arr, 0);\r\n\r\nfunction printArr($arr, $index)\r\n{\r\n    if($index < count($arr)) {\r\n        echo $arr[$index] . \" \";\r\n        printArr($arr, $index + 1);\r\n    }\r\n}","answers":["1","1 2 3 4","Stackoverflow Exception"],"correct_answer":"1 2 3 4","explanation":"The function prints all elements of the array by passing array and  index of element.\r\n<br><br>\r\nThe index gets incremented each time so the next element is printed.\r\n<br><br>\r\nThe recursion ends when the condition <code>$index < count($arr)<\/code> becomes false."},{"id":531655987,"question":"What's the output of the code snippet?","code":"<?php\r\n\r\n$arr = [ 1, 2, 3, 4, 5];\r\nprintUntilZero($arr, 0);\r\n\r\n\r\nfunction printUntilZero($arr, $index)\r\n{\r\n    if($arr[$index] !== 0) {\r\n        echo $arr[$index] . \" \";\r\n        printUntilZero($arr, $index + 1);\r\n    }\r\n}","answers":["0","1 2 3 4 5","Stackoverflow Exception"],"correct_answer":"Stackoverflow Exception","explanation":"The recursion is supposed to end when element with value of zero is found.\r\n<br><br>\r\nThe passed array does not contain any 0s so the recursion repeats itself infinitely."},{"id":1348766960,"question":"What's the output of the code snippet?","code":"<?php\r\n$sum = calculate(7);\r\necho $sum;\r\n\r\nfunction calculate($num) {\r\n    if($num == 0) {\r\n        return 0;\r\n    }\r\n\r\n    if($num % 2 == 1) {\r\n        $num--;\r\n    }\r\n\r\n    return $num + calculate($num - 2);\r\n}","answers":["7","12","16"],"correct_answer":"12","explanation":"The function <code>calculate<\/code> sums the numbers 6, 4, 2 and 0.\r\n<br><br>\r\n6 + 4 + 2 + 0 = 12"}],"puzzles":[{"id":278322427,"text":"Fill the missing words to match the output.","code":"<?php\r\n$sum = sumNums(fillword);\r\necho $sum;\r\n\r\nfunction sumNums($num) {\r\n    if ($num > 1) {\r\n        return fillword + sumNums(fillword);\r\n    }\r\n\r\n    return fillword;\r\n}","result":"15","words":{"operators":[],"values":["-1","0","1","3","4","5"],"variables_constants":["$num","$num - 1","$num + 1"],"others":[]},"correct_patterns":[["5","$num","$num - 1","1"]]},{"id":1228668088,"text":"Fill the missing words to match the output.","code":"<?php\r\nprintUntil(2, fillword);\r\n\r\nfunction printUntil($printNum, $stop) {\r\n    if (fillword <= $stop) {\r\n        echo $printNum . \" \";\r\n        printUntil(fillword, fillword);\r\n    }\r\n}","result":"2 4 8 16","words":{"operators":[],"values":["8","16","32"],"variables_constants":["$printNum","$printNum + 2","$printNum * 2","$stop","$stop * 2"],"others":[]},"correct_patterns":[["16","$printNum","$printNum * 2","$stop"]]},{"id":65543289,"text":"Fill the missing words to match the output.","code":"<?php\r\n$arr = [1, 5, 6, 7, 9];\r\nprintElems($arr, 0);\r\n\r\nfunction printElems($arr, $index) {\r\n    if ($index < count($arr)) {\r\n        echo $arr[fillword] . \" \";\r\n        printElems(fillword, $index + fillword);\r\n    }\r\n}","result":"1 5 6 7 9","words":{"operators":[],"values":["-1","0","1"],"variables_constants":[],"others":["$index","$arr","count($arr)"]},"correct_patterns":[["$index","$arr","1"]]}]}],"OOP":[{"id":816212361,"name":"Classes And Objects","tests":[{"id":941567617,"question":"How many objects are created in the code segment?","code":"<?php\r\nclass Person {}\r\nclass Laptop {}\r\nclass Monitor {}\r\n\r\n$jack = new Person();\r\n$laptop = new Laptop();","answers":["0","2","3"],"correct_answer":"2","explanation":"There are 2 objects - <code>$jack<\/code> and <code>$laptop<\/code>.\r\n<br><br>\r\nAlso there  are 3 classes - <code>Person<\/code>, <code>Laptop<\/code> and <code>Monitor<\/code>."},{"id":1925992014,"question":"How many classes are defined in the code segment?","code":"<?php\r\nclass Apartment {}\r\n\r\n$ap1 = new Apartment();\r\n$ap2 = new Apartment();\r\n$ap3 = new Apartment();","answers":["1","2","3"],"correct_answer":"1","explanation":"There is 1 class - <code>Apartment<\/code> .\r\n<br><br>\r\nThere are 3 objects - <code>$ap1<\/code>, <code>$ap2<\/code> and <code>$ap3<\/code> ."},{"id":728854031,"question":"Which of the following is a class member?","code":"<?php\r\nclass Cube {\r\n    public $a;\r\n    public function calcVolume() {\r\n        return $this->a * $this->a * $this->a;\r\n    }\r\n}\r\n\r\n$c = new Cube();","answers":["calcVolume","Cube","$c"],"correct_answer":"calcVolume","explanation":"<ul>\r\n<li><code>calcVolume<\/code> is a class member.<\/li>\r\n<li><code>Square <\/code> is the class name.<\/li>\r\n<li><code>$c<\/code> is a class object.<\/li>\r\n<\/ul>"},{"id":1814399436,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Parrot {}\r\n\r\n$parrot = new Parrot();\r\n$parrot->name = 'Rico';\r\necho $parrot->name;","answers":["name","Rico","Exception"],"correct_answer":"Rico","explanation":"A <code>$name<\/code> member is not defined in the class body but that's not a cause for exception."},{"id":650815885,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Headphones {\r\n    public $price;\r\n}\r\n\r\n$obj = new Headphones();\r\n$price = 75;\r\n$obj->price = $price;\r\n\r\n$price++;\r\necho $obj->price . \" \";\r\n$obj->price++;\r\necho $obj->price;","answers":["75 75","75 76","76 77"],"correct_answer":"75 76","explanation":"Modifying the <code>$price<\/code> variable does not change  the value of the class member."}],"puzzles":[{"id":1151155206,"text":"Define a class.","code":"<?php\r\nclass Employee {\r\n    fillword fillword;\r\n    fillword fillword;\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","$name","$age"]},"correct_patterns":[["private","$name","private","$age"],["private","$age","private","$name"]]},{"id":1027760071,"text":"Create Objects.","code":"<?php\r\nclass Smartphone {\r\n    private string $model;\r\n}\r\n\r\nfillword = fillword Smartphone();\r\nfillword fillword new Smartphone();","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["$obj1","$obj2","Smartphone","=","new"]},"correct_patterns":[["$obj1","new","$obj2","="],["$obj2","new","$obj1","="]]},{"id":2012708740,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    public $name;\r\n    public $age;\r\n    public function represent() {\r\n        echo \"My name is \" . $this->name . \". \";\r\n        echo \"I am \" . $this->age . \" years old.\";\r\n    }\r\n}\r\n\r\nfillword = new Person();\r\n$person->fillword = fillword;\r\n$person->fillword= 22;\r\n$person->represent();","result":"My name is Joe. I am 22 years old.","words":{"operators":[],"values":["\"Joe\"","17","22"],"variables_constants":["$person"],"others":["name","years","age"]},"correct_patterns":[["$person","name","\"Joe\"","age"]]}]},{"id":1589482714,"name":"Public And Private","tests":[{"id":1345120523,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Skyscraper {\r\n    private $height;\r\n    public function setHeight($heightVal) {\r\n        $this->height = $heightVal;\r\n    }\r\n    public function printHeight() {\r\n        echo $this->height;\r\n    }\r\n}\r\n\r\n$obj = new Skyscraper();\r\n$obj->setHeight(170);\r\n$obj->printHeight();","answers":["0","170","Exception"],"correct_answer":"170","explanation":"All class members that are accessed outside the class body (<code>setHeight<\/code> and <code>printHeight<\/code>) are declared <code>public<\/code>.\r\n<br><br>\r\nFor that reason no exception is thrown."},{"id":181471432,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Processor {\r\n    private $manufacturer;\r\n}\r\n\r\n$obj = new Processor();\r\n$obj->manufacturer = \"Intel\";\r\necho $obj->manufacturer;","answers":["Intel","null","Exception"],"correct_answer":"Exception","explanation":"The <code>manufacturer<\/code> field is declared <code>private<\/code> but it's accessed outside the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>manufacturer<\/code> needs to be declared as <code>public<\/code> member."},{"id":1132865673,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Smartwatch {\r\n    public $price;\r\n    private function printPrice() {\r\n        echo $this->price;\r\n    }\r\n}\r\n\r\n$obj = new Smartwatch();\r\n$obj->price = 100;\r\n$obj->printPrice();","answers":["null","100","Exception"],"correct_answer":"Exception","explanation":"The <code>printPrice<\/code> function is declared <code>private<\/code> but it's accessed outside the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>printPrice<\/code> needs to be declared as <code>public<\/code> member."},{"id":69945430,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Programer {\r\n    public $name = \"\";\r\n    private $favLanguage = \"PHP\";\r\n    public function printData() {\r\n        echo $this->name . \" \" . $this->favLanguage;\r\n    }\r\n}\r\n\r\n$programer = new Programer();\r\n$programer->name = \"Alex\";\r\n$programer->printData();","answers":["PHP","Alex PHP","Exception"],"correct_answer":"Alex PHP","explanation":"All of the members that are accessed outside the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason the code executes without errors."},{"id":2128111639,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Smartphone {\r\n    private $price;\r\n    private $make = \"Unknown\";\r\n    public function printData() {\r\n        echo $this->make . \" \" . $this->size;\r\n    }\r\n}\r\n\r\n$smartphone = new Smartphone();\r\n$smartphone->price = 450;\r\n$smartphone->printData();","answers":["Unknown 450","450","Exception"],"correct_answer":"Exception","explanation":"The <code>$price<\/code> member is declared <code>private<\/code> but it's accessed outside the class body.\r\n<br><br>\r\nIn order to execute the code without errors, <code>$price<\/code> needs to be declared as <code>public<\/code> member."}],"puzzles":[{"id":681287493,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Square {\r\n    fillword $side;\r\n}\r\n\r\n$obj = new Square();\r\nfillword->fillword = 5;\r\n\r\necho \"Side = \" . $obj->side;","result":"Side = 5","words":{"operators":[],"values":["5","10"],"variables_constants":[],"others":["public","side","private","$obj","Square"]},"correct_patterns":[["public","$obj","side"]]},{"id":1632157442,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    fillword $name;\r\n    fillword function setName($nameArg) {\r\n        $this->name = $nameArg;\r\n    }\r\n    fillword function printName() {\r\n        echo $this->name;\r\n    }\r\n}\r\n\r\n$obj = new Person();\r\n$obj->setName(\"Candice\");\r\n$obj->printName();","result":"Candice","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private"]},"correct_patterns":[["private","public","public"]]},{"id":1543364291,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Peak {\r\n    fillword $height;\r\n    \r\n    fillword function setVal($heightArg) {\r\n        $this->height = $heightArg;\r\n    }\r\n    fillword function getHeight() {\r\n        return $this->height;    \r\n    }\r\n    fillword function printHeight() {\r\n        echo $this->height . \" meters\";\r\n    }\r\n}\r\n\r\n$obj = new Peak();\r\n$obj->setVal(3000);\r\n$obj->printHeight();","result":"3000 meters","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","public","private","public"]]}]},{"id":1766492502,"name":"This Keyword","tests":[{"id":931957716,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Person {\r\n    public $name;\r\n    public $age;\r\n    public function printData() {\r\n        echo $this->name . ' ' . $this->age;\r\n    }\r\n}\r\n\r\n$person = new Person();\r\n$person->name = \"Jack\";\r\n$person->age = 20;\r\n$person->printData();","answers":["Jack 20","Jack","20"],"correct_answer":"Jack 20","explanation":"The <code>printData<\/code> function prints the name and age members that are set to be \"Jack\" and 20."},{"id":1748085653,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Square {\r\n    public $side;\r\n    public function getArea() {\r\n        return $this->side * $this->side;\r\n    }\r\n    public function printData() {\r\n        echo \"Side = \" . $this->side .\r\n                \" Area = \" . $this->getArea();\r\n    }\r\n}\r\n$square = new Square();\r\n$square->side = 6;\r\n$square->printData();","answers":["Side = 0 Area = 0","Side = 6 Area = 24","Side = 6 Area = 36"],"correct_answer":"Side = 6 Area = 36","explanation":"The <code>printData<\/code> functions prints the <code>$side<\/code> member (6) and the result of the <code>getArea<\/code> function (6x6 = 36)."},{"id":585550674,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Rectangle {\r\n    public $a;\r\n    public $b;\r\n    public function getPerimeter() {\r\n        return 2 * ($this->a + $this->b);\r\n    }\r\n    public function printData() {\r\n        echo $this->a . \" \" . $this->b . \" \" . \r\n        $this->getPerimeter();\r\n    }\r\n}\r\n$obj = new Rectangle();\r\n$obj->a = 3;\r\n$obj->b = 6;\r\n$obj->printData();","answers":["0 0 0","3 6 18","3 6 9"],"correct_answer":"3 6 18","explanation":"The <code>printData<\/code> functions prints the <code>$a<\/code> member (3), <code>$b<\/code> member (6) and the result of the <code>getPerimeter<\/code> function (2 x (3 + 6) = 18)."},{"id":462154515,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Computer {\r\n    public $price;\r\n}\r\n\r\n$obj = new Computer();\r\n$obj->price = 800;\r\necho $this->price;","answers":["0","800","Exception"],"correct_answer":"Exception","explanation":"<code>this<\/code> is used to access class members inside the class body.\r\n<br><br>\r\nIt makes no sense outside of the class body."},{"id":1547176656,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Jacket {\r\n    private $color;\r\n    public function setColor($color) {\r\n        $this->color = $color;\r\n    }\r\n    public function getColor() {\r\n        return $this->color;\r\n    }\r\n}\r\n\r\n$obj = new Jacket();\r\n$obj->setColor(\"blue\");\r\necho $obj->getColor();","answers":["blue","null","Exception"],"correct_answer":"blue","explanation":"<code>setColor<\/code> sets the value of the <code>$color<\/code> field.\r\n<br><br>\r\n<code>getColor<\/code> accesses the value of the <code>$color<\/code> field."}],"puzzles":[{"id":480444032,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Device {\r\n    public $width;\r\n    public $height;\r\n    public function printResolution() {\r\n        echo fillword->fillword . \"x\" . fillword->fillword;\r\n    }\r\n}\r\n\r\n$obj = new Device();\r\n$obj->width = 1280;\r\n$obj->height = 720;\r\n\r\n$obj->printResolution();","result":"1280x720","words":{"operators":[],"values":[],"variables_constants":[],"others":["$this","$this","$this","width","height","resolution"]},"correct_patterns":[["$this","width","$this","height"]]},{"id":1431772737,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Square {\r\n    public $side;\r\n    public function calcPerimeter() {\r\n        return fillword->fillword * 4;\r\n    }\r\n    public function calcSemiPerimeter() {\r\n        return fillword->fillword \/ 2;\r\n    }\r\n}\r\n\r\n$obj = new Square();\r\n$obj->side = 3;\r\necho \"P = \" . $obj.calcPerimeter();\r\necho \"<br>\"; \/\/ Prints new line.\r\necho \"p = \" . $obj.calcSemiPerimeter();","result":"P = 12\r\np = 6","words":{"operators":[],"values":[],"variables_constants":[],"others":["$this","$this","$this","side","perimeter","calcPerimeter()","calcSemiPerimeter()"]},"correct_patterns":[["$this","side","$this","calcPerimeter()"]]},{"id":235159054,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Cube {\r\n    public $side;\r\n    public function calcVolume() {\r\n        return $this->side ** 3;\r\n    }\r\n    public function printDetails() {\r\n        echo \"Side = \" . fillword->fillword;\r\n        echo \"<br>\"; \/\/ Prints new line.\r\n        echo \"Volume = \" . fillword->fillword;\r\n    }\r\n}\r\n\r\n$cube = new Cube();\r\n$cube->side = 3;\r\n$cube->printDetails();","result":"Side = 3\r\nVolume = 27","words":{"operators":[],"values":[],"variables_constants":[],"others":["$this","$this","$this","side","printDetails()","calcVolume()","3"]},"correct_patterns":[["$this","side","$this","calcVolume()"]]}]},{"id":603957527,"name":"Getters And Setters","tests":[{"id":384641681,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Square {\r\n    public $side;\r\n    public function getArea() {\r\n        return $this->side * $this->side;\r\n    }\r\n}\r\n$obj = new Square();\r\n$obj->side = 8;\r\necho $obj->side . \" \" . $obj->getArea();","answers":["8 32","8 64","Exception"],"correct_answer":"8 64","explanation":"The <code>getArea<\/code> function returns the result of multiplication (8 x 8 = 64).\r\n<br><br>\r\nAll of the members have public access so there is no reason for exception to be thrown."},{"id":1334987358,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Building {\r\n    private $height;\r\n    public function getHeight() {\r\n        return $this->height;\r\n    }\r\n    public function setHeight($height) {\r\n        $this->height = $height + 1;\r\n    }\r\n}\r\n$obj = new Building();\r\n$obj->setHeight(44);\r\necho $obj->getHeight();","answers":["45","44","Exception"],"correct_answer":"45","explanation":"The members <code>setHeight<\/code> and <code>getHeight<\/code> have <code>public<\/code> access so exception is not thrown.\r\n<br><br>\r\n<code>setHeight<\/code> sets the passed value incremented by one:\r\n<br>\r\n44 + 1 = 45"},{"id":4680223,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Flat {\r\n    private $roomsCount;\r\n    public function getRoomsCount() {\r\n        return $this->roomsCount + 1;\r\n    }\r\n    public function setRoomsCount($roomsCount) {\r\n        $this->roomsCount = $roomsCount + 1;\r\n    }\r\n}\r\n\r\n$obj = new Flat();\r\n$obj->setRoomsCount(5);\r\necho $obj->getRoomsCount();","answers":["7","6","5"],"correct_answer":"7","explanation":"<code>setRoomsCount<\/code> adds 1 to the passed value.\r\n<br><br>\r\n<code>getRoomsCount<\/code> adds 1 to the <code>$roomsCount<\/code> member.\r\n<br><br>\r\nThe end result is 7 (5 + 1 + 1)."},{"id":2062841308,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Chair {\r\n    public $price;\r\n    private function getPrice() {\r\n        return $this->price + 1;\r\n    }\r\n}\r\n\r\n$chair = new Chair();\r\n$chair->price = 95;\r\necho $chair->getPrice();","answers":["95","96","Exception"],"correct_answer":"Exception","explanation":"<code>getPrice<\/code> is declared as <code>private<\/code> but it's accessed outside of the class body thus exception is thrown.\r\n<br><br>\r\n<code>getPrice<\/code> needs to be <code>public<\/code> in order to execute the code without errors."},{"id":865637789,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Laptop {\r\n    public $price;\r\n    public function setPrice($value) {\r\n        if($value < 0) {\r\n            $this->price = 0;\r\n            return;\r\n        }\r\n        $this->price = $value;\r\n    }\r\n}\r\n\r\n$laptop = new Laptop();\r\n$laptop->setPrice(-1);\r\necho $laptop->price;","answers":["0","-1","Exception"],"correct_answer":"0","explanation":"<code>setPrice<\/code> sets value of 0 for the  \r\n <code>$price<\/code> member  since -1 meets the condition <code>$value < 0 <\/code>."}],"puzzles":[{"id":1084840399,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass TShirt {\r\n    private $color;\r\n    public function setColor($colorVal) {\r\n        $this->fillword fillword fillword;\r\n    }\r\n    public function getColor() {\r\n        fillword $this->fillword;\r\n    }\r\n}\r\n\r\n$obj = new TShirt();\r\n$obj->setColor(\"Orange\");\r\necho $obj->getColor();","result":"Orange","words":{"operators":[],"values":[],"variables_constants":[],"others":["color","color","$colorVal","$colorVal","return","return","=","="]},"correct_patterns":[["color","=","$colorVal","return","color"]]},{"id":962492812,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Planet {\r\n    private $name;\r\n    public function setName($nameVal) {\r\n        $this->name = $nameVal;\r\n    }\r\n    public function getName() {\r\n        return $this->name;\r\n    }\r\n}\r\n$obj = new Planet();\r\nfillword->fillword(fillword);\r\necho fillword->fillword();","result":"Earth","words":{"operators":[],"values":[],"variables_constants":[],"others":["$obj","$obj","setName","setName","getName","getName","\"Earth\"","\"Earth\""]},"correct_patterns":[["$obj","setName","\"Earth\"","$obj","getName"]]},{"id":1912772941,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Laptop {\r\n    private $price;\r\n    public function getPrice($discount) {\r\n        return $this->price - ($discount * $this->price) \/ 100;\r\n    }\r\n    public function setPrice($priceVal) {\r\n        $this->price = $priceVal;\r\n    }\r\n}\r\n$obj = new Laptop();\r\n$obj->fillword(2000);\r\necho $obj->fillword(fillword);","result":"1800","words":{"operators":[],"values":["5","10","20"],"variables_constants":["setPrice","getPrice","price"],"others":[]},"correct_patterns":[["setPrice","getPrice","10"]]}]},{"id":1565649045,"name":"Constructors","tests":[{"id":1951249754,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Planet {\r\n    public function Planet() {\r\n        echo \"object \";\r\n    }\r\n}\r\n\r\n$obj = new Planet();\r\necho \"creation\";","answers":["object","creation","object creation"],"correct_answer":"object creation","explanation":"<code>$obj = new Planet()<\/code> calls the class constructor - <code>Planet<\/code> function which prints \"object \".\r\n<br><br>\r\nAfterwards \"creation\" is printed."},{"id":787666203,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Keyboard {\r\n    public $price;\r\n    public function Keyboard() {\r\n        $this->price = 0;\r\n    }\r\n}\r\n\r\n$obj = new Keyboard();\r\n$obj->price = 20;\r\necho $obj->price;","answers":["0","20","null"],"correct_answer":"20","explanation":"<code>$obj = new Keyboard()<\/code> calls the constructor - the <code>Keyboard<\/code> function which sets value to the <code>price<\/code> property.\r\n<br><br>\r\nAfterwards <code>$obj->price = 20<\/code> overwrites the value of the <code>$price<\/code> property."},{"id":1739060440,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Camera {\r\n    public function __construct () {\r\n        echo ' 1 ';       \r\n    }\r\n}\r\n\r\necho ' 2 ';\r\n$camera = new Camera();","answers":["1 2","2 1","2"],"correct_answer":"2 1","explanation":"First <code>echo ' 2 '<\/code> executes which prints \"2\".\r\n<br><br>\r\nAfterwards <code>new Camera()<\/code> runs. It calls the <code>__construct<\/code> method which prints \"1\"."},{"id":1481905305,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Pet {\r\n    public $name;\r\n\r\n    public function __construct ($name) {\r\n        $this->name = $name;\r\n    }\r\n}\r\n\r\n$obj = new Pet(\"Kit-Kat\");\r\necho $obj->name;","answers":["null","Kit-Kat","Exception"],"correct_answer":"Kit-Kat","explanation":"<code>new Pet(\"Kit-Kat\")<\/code> calls the <code>__construct<\/code> method and passes <code>\"Kit-Kat\"<\/code> value for the <code>$name<\/code> property."},{"id":318321702,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Monitor {\r\n    public $width;\r\n    public $height;\r\n\r\n    public function __construct ($width, $height) {\r\n        $this->width = $width;\r\n        $this->height = $height;\r\n    }\r\n}\r\n\r\n$obj = new Monitor(1000);\r\necho $obj->width . ' ' . $obj->height;","answers":["1000 1000","1000 null","Exception"],"correct_answer":"Exception","explanation":"The object creation <code>new Monitor(1000)<\/code> passes 1 parameter but the constructor (<code>__construct ($width, $height)<\/code>) accepts 2 parameters.\r\n<br><br>\r\nParameter's count mismatch causes exception."}],"puzzles":[{"id":884455690,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    public $name;\r\n    public $age;\r\n    public function __construct($nameVal, $ageVal) {\r\n        $this->name = $nameVal;\r\n        $this->age = $ageVal;\r\n    }\r\n}\r\n$obj = fillword fillword fillword;\r\necho $obj->name . ' ' . $obj->age;","result":"Teo 21","words":{"operators":[],"values":[],"variables_constants":[],"others":["(\"Ally\", 19)","(\"Teo\", 21)","new","new","Person","Person"]},"correct_patterns":[["new","Person","(\"Teo\", 21)"]]},{"id":1835325643,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Wallet {\r\n    public $pocketsCount;\r\n\r\n    public fillword fillword fillword {\r\n        $this->pocketsCount = $pocketsCount;\r\n    }\r\n}\r\n$obj = new Wallet(4);\r\necho $obj->pocketsCount;","result":"4","words":{"operators":[],"values":[],"variables_constants":[],"others":["function","construct","constructor","__construct","()","($pocketsCount)"]},"correct_patterns":[["function","__construct","($pocketsCount)"]]},{"id":638187656,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Country {\r\n    public $name;\r\n    public function __construct($name = null) {\r\n        $this->name = $name ?? \"Unknown\";\r\n    }\r\n}\r\n$obj1 = fillword fillword fillword;\r\necho $obj1->name . ' ';\r\n\r\n$obj2 = fillword fillword fillword;\r\necho $obj2->name;","result":"Unknown Iceland","words":{"operators":[],"values":[],"variables_constants":[],"others":["Country","Country","new","new","()","()","(\"Iceland\")","(\"Iceland\")"]},"correct_patterns":[["new","Country","()","new","Country","(\"Iceland\")"]]}]},{"id":369494098,"name":"Class Inheritance Basics","tests":[{"id":1269716967,"question":"What's the output of the code snippet?","code":"<?php\r\nclass MemomyDevice {\r\n    public function printPhysicalSize() {\r\n        echo \"large \";\r\n    }\r\n}\r\nclass FlashDrive extends MemomyDevice {\r\n    public function printPhysicalSize() {\r\n        echo \"medium \";\r\n    }\r\n}\r\nclass HardDisk extends MemomyDevice { }\r\n\r\n$flashDrive = new FlashDrive();\r\n$hardDisk = new HardDisk();\r\n\r\n$flashDrive->printPhysicalSize();\r\n$hardDisk->printPhysicalSize();","answers":["large  large","medium  medium","medium large"],"correct_answer":"medium large","explanation":"The <code>FlashDrive<\/code> class overwrites the <code>printPhysicalSize<\/code>  method.\r\n<br><br>\r\nFor that reason <code>$flashDrive->printPhysicalSize()<\/code> prints \"medium\".\r\n<br><br>\r\nThe <code>HardDisk<\/code> class inherits the <code>printPhysicalSize<\/code> method from the <code>MemomyDevice <\/code> class.\r\n<br><br>\r\nFor that reason <code>$hardDisk->printPhysicalSize()<\/code> prints \"large\"."},{"id":206796708,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Device {\r\n    public function printSize() {\r\n        echo \"extra \";\r\n    }\r\n}\r\nclass Smartwatch extends Device {\r\n    public function printSize() {\r\n        parent::printSize();\r\n        echo \"small\";\r\n    }\r\n}\r\n\r\n$obj = new Smartwatch();\r\n$obj->printSize();","answers":["extra","small","extra small"],"correct_answer":"extra small","explanation":"<code>$obj->printSize()<\/code> calls the method from the <code>Smartwatch<\/code> class.\r\n<br><br>\r\n<code>parent::printSize()<\/code> calls the method from the parent class. For that reason \"extra \" is printed.\r\n<br><br>\r\nAfterwards \"small\" is printed."},{"id":1158125413,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Product {\r\n    public $price;\r\n    \r\n    private function getPrice() {\r\n        return $this->price;\r\n    }\r\n}\r\nclass Pocketbook extends Product {\r\n    public function printPrice() {\r\n        echo $this->getPrice();\r\n    }\r\n}\r\n\r\n$pb = new Pocketbook();\r\n$pb->price = 15;\r\n$pb->printPrice();","answers":["15","null","Exception"],"correct_answer":"Exception","explanation":"The <code>printPrice<\/code> method prints the result of <code>$this->getPrice()<\/code>.\r\n<br><br>\r\nThe <code>getPrice<\/code> method is not inherited from the <code>Product<\/code> class because it's defined <code>private<\/code>.\r\n<br><br>\r\nTo avoid the exception <code>getPrice<\/code> needs to be defined as <code>protected<\/code> or <code>public<\/code> member so it can be inherited."},{"id":1068807970,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Pet {\r\n    public function __construct() {\r\n        echo \"pet \";\r\n    }\r\n}\r\nclass Fish extends Pet {\r\n    public function __construct() {\r\n        parent::__construct();\r\n        echo \"fish \";\r\n    }\r\n}\r\nclass Cat extends Pet {\r\n    public function __construct() {\r\n        echo \"cat \";\r\n    }\r\n}\r\n\r\n$cat = new Cat();\r\n$fish = new Fish();","answers":["cat fish","cat pet fish","pet cat pet fish"],"correct_answer":"cat pet fish","explanation":"<code>new Cat()<\/code> prints \"cat\".\r\n<br><br>\r\n<code>new Fish()<\/code> prints \"pet fish\".\r\n<br><br>\r\nThe <code>Fish<\/code> class constructor calls the parent class constructor - <code>Pet<\/code> via <code>parent::__construct()<\/code>."},{"id":1884935907,"question":"Which are the members of Apple class?","code":"<?php\r\nclass Fruit {\r\n    protected $calories;\r\n    private $weight;\r\n}\r\nclass Apple extends Fruit {}","answers":["calories","weight","calories and weight"],"correct_answer":"calories","explanation":"A child class inherits only <code>protected<\/code> and <code>public<\/code> members.\r\n<br><br>\r\nFor that reason <code>Apple<\/code> inherits only the <code>$calories<\/code> member."}],"puzzles":[{"id":415111241,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Liquid {\r\n    public function printColor() {\r\n        echo \"Transparent \";\r\n    }\r\n}\r\nclass Coke extends Liquid {\r\n    public function printColor() {\r\n        echo \"Black\";\r\n    }\r\n}\r\nclass Water extends Liquid { }\r\n\r\n$obj1 = new fillword();\r\n$obj1->printColor();\r\n\r\n$obj2 = new fillword();\r\n$obj2->printColor();","result":"Transparent Black","words":{"operators":[],"values":[],"variables_constants":[],"others":["Coke","Coke","Water","Water"]},"correct_patterns":[["Water","Coke"]]},{"id":1365456918,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Animal {\r\n    public function __construct() {\r\n        echo \"base \";\r\n    }\r\n}\r\nclass Cat extends fillword{\r\n    public function __construct() {\r\n        parent::__construct();\r\n        echo \"child\";\r\n    }\r\n}\r\n\r\n$obj = new fillword();","result":"base child","words":{"operators":[],"values":[],"variables_constants":[],"others":["Animal","Animal","Cat","Cat"]},"correct_patterns":[["Animal","Cat"]]},{"id":168844247,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    fillword $name;\r\n    public function printData() {\r\n        echo $this->name . ' ';\r\n    }\r\n}\r\nclass Singer extends Person {\r\n    fillword $songsCount;\r\n    public function __construct($nameVal, $songsCountVal) {\r\n        $this->name = $nameVal;\r\n        $this->songsCount = $songsCountVal;\r\n    }\r\n    public function printData() {\r\n        fillword::printData();\r\n        echo $this->songsCount;\r\n    }\r\n}\r\n\r\n$singer = new Singer(\"Ariana\", 26);\r\n$singer->printData();","result":"Ariana 26","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","protected","super","base","parent","Singer"]},"correct_patterns":[["protected","private","parent"]]}]},{"id":1219176467,"name":"Class Inheritance Advanced","tests":[{"id":688846496,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Vehicle {\r\n    public function print() {\r\n        echo \"a \";\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    public function print() {\r\n        parent::print();\r\n        echo \"b \";\r\n    }\r\n}\r\nclass Car extends MotorVehicle {\r\n    public function print() {\r\n        parent::print();\r\n        echo \"c\";\r\n    }\r\n}\r\n\r\n$car = new Car();\r\n$car->print();","answers":["c","b c","a b c"],"correct_answer":"a b c","explanation":"<code>parent::print()<\/code> calls the <code>print<\/code> method from the parent class.\r\n<br><br>\r\nBasically the <code>print<\/code> method is executed first in\r\n<code>Vehicle<\/code>, afterwards in <code>MotorVehicle <\/code> and finally in the <code>Car<\/code> class."},{"id":1672681057,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Electronic {\r\n    public function __construct() {\r\n        echo \"1 \";\r\n    }\r\n}\r\nclass OSDevice extends Electronic {\r\n    public function __construct() {\r\n        echo \"2 \";\r\n    }\r\n}\r\nclass Tablet extends OSDevice {\r\n    public function __construct() {\r\n        echo \"3 \";\r\n    }\r\n}\r\n\r\n$obj = new Tablet();","answers":["3","2 3","1 2 3"],"correct_answer":"3","explanation":"<code>new Tablet()<\/code> calls the <code>__construct<\/code> method in the <code>Tablet<\/code> class.\r\n<br><br>\r\nIt doesn't call the parent class constructor so \"1\" and \"2\" are not printed."},{"id":610285102,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Product {\r\n    public function __construct() {\r\n        echo \"1 \";\r\n    }\r\n}\r\nclass Electronic extends Product {\r\n    public function __construct() {\r\n        parent::__construct();\r\n        echo \"2 \";\r\n    }\r\n}\r\nclass Tablet extends Electronic {\r\n    public function __construct() {\r\n        parent::__construct();\r\n        echo \"3 \";\r\n    }\r\n}\r\n\r\n$obj = new Tablet();","answers":["3","2 3","1 2 3"],"correct_answer":"1 2 3","explanation":"The parent class constructor is called by the child class constructor via <code>parent::__construct()<\/code>.\r\n<br><br>\r\nThe code of <code>Product<\/code> constructor executes first, afterwards <code>Electronic<\/code> constructor  and finally <code>Tablet<\/code> constructor."},{"id":487936495,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Device {\r\n    public function print() {\r\n        echo \"device \";\r\n    }\r\n}\r\nclass MobileDevice extends Device {}\r\nclass Smartphone extends MobileDevice {\r\n    public function print() {\r\n        echo \"smartphone\";\r\n    }\r\n}\r\n$sm = new Smartphone();\r\n$sm->print();","answers":["device","smartphone","device smartphone"],"correct_answer":"smartphone","explanation":"The class <code>Smartphone<\/code> overwrites the <code>print<\/code> method and does not call the parent method via <code>parent::print()<\/code>."},{"id":1471836588,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Animal {\r\n    public $size;\r\n    public function __construct() {\r\n        $this->size = \"small \";\r\n    }\r\n}\r\nclass Mammal extends Animal{\r\n    public function __construct() {\r\n        $this->size = \"large \";\r\n    }\r\n}\r\nclass Giraffe extends Mammal {}\r\n\r\n$obj = new Giraffe();\r\necho $obj->size;","answers":["small","large","small large"],"correct_answer":"large","explanation":"<code>new Giraffe()<\/code> calls the constructor of the <code>Giraffe<\/code> class which is inherited by the <code>Mammal <\/code> class.\r\n<br><br>\r\nThe value for the <code>size<\/code> property is set in the <code>Mammal<\/code> class constructor."}],"puzzles":[{"id":1288010644,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Device {\r\n    public function print() { echo fillword; }\r\n}\r\nclass AudioDevice extends Device {\r\n    public function print() { parent::print();\r\n        echo fillword; }\r\n}\r\nclass USBDevice extends Device {\r\n    public function print() { parent::print();\r\n        echo fillword; }\r\n    }\r\nclass Headphones extends AudioDevice {\r\n    public function print() { parent::print();\r\n        echo fillword; }\r\n}\r\n\r\n$obj = new Headphones();\r\n$obj->print();","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"0\"","\"1\"","\"a\"","\"b\"","\"c\""]},"correct_patterns":[["\"a\"","\"b\"","\"0\"","\"c\""],["\"a\"","\"b\"","\"1\"","\"c\""]]},{"id":90807125,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Animal {\r\n    public function print() { echo fillword; }\r\n}\r\nclass Tiger extends Animal {\r\n    public function print() { parent::print();\r\n        echo fillword; }\r\n}\r\nclass MarineAnimal extends Animal {\r\n    public function print() { parent::print();\r\n        echo fillword; }\r\n}\r\nclass Whale extends MarineAnimal {\r\n    public function print() { parent::print();\r\n        echo fillword; }\r\n}\r\n\r\n$obj = new Whale();\r\n$obj->print();","result":"123","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"a\"","\"b\"","\"1\"","\"2\"","\"3\""]},"correct_patterns":[["\"1\"","\"a\"","\"2\"","\"3\""],["\"1\"","\"b\"","\"2\"","\"3\""]]},{"id":2115943186,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Drink {\r\n    public function __construct() { echo \"a\"; }\r\n}\r\nclass fillword extends Drink {\r\n    public function __construct() { parent::__construct();\r\n        echo \"1\"; }\r\n}\r\nclass FizzyDrink extends Drink {\r\n    public function __construct() { parent::__construct();\r\n        echo \"b\"; }\r\n}\r\nclass fillword extends fillword {\r\n    public function __construct() { parent::__construct();\r\n        echo \"c\"; }\r\n}\r\n$obj = new Coke();","result":"abc","words":{"operators":[],"values":[],"variables_constants":[],"others":["Drink","Drink","Water","Water","FizzyDrink","Coke"]},"correct_patterns":[["Water","Coke","FizzyDrink"]]}]},{"id":392344731,"name":"Interfaces","tests":[{"id":141463917,"question":"What's the output of the code snippet?","code":"<?php\r\ninterface DeliveryService {\r\n    public function calcDeliveryCost();\r\n}\r\nclass Smartphone implements DeliveryService {\r\n    public $price;\r\n    public function calcDeliveryCost() {\r\n        return ($this->price \/ 100) + 5;\r\n    }\r\n}\r\n\r\n$sm = new Smartphone();\r\n$sm->price = 400;\r\necho $sm->calcDeliveryCost();","answers":["4","9","Exception"],"correct_answer":"9","explanation":"The method in the interface <code>DeliveryService<\/code> is defined in the class that implements it.\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations for <code>calcDeliveryCost<\/code>  are:\r\n<br>\r\n(400 \/ 100) + 5 =\r\n<br>\r\n4 + 5 = 9"},{"id":1091809578,"question":"What's the output of the code snippet?","code":"<?php\r\ninterface FuelConsumation {\r\n    function estimatedFuelCostForKms($km);\r\n}\r\nclass Scooter implements FuelConsumation {}\r\n\r\n$obj = new Scooter();\r\necho $obj->estimatedFuelCostForKms(60);","answers":["0","60","Exception"],"correct_answer":"Exception","explanation":"The <code>Car<\/code> class implements <code>FuelConsumation<\/code> but does not define the <code>estimatedFuelCostForKms<\/code> method.\r\n<br><br>\r\nFor that reason exception is thrown."},{"id":1002492139,"question":"What's the output of the code snippet?","code":"<?php\r\ninterface SalaryPayment {\r\n    function calcSalary();\r\n}\r\ninterface InsurancePayment {\r\n    function calcMonthInsurance();\r\n}\r\nclass Employee implements SalaryPayment, InsurancePayment {\r\n    public function calcSalary() {\r\n        return 10000;\r\n    }\r\n    public function calcMonthInsurance() {\r\n        return 1700;\r\n    }\r\n}\r\n\r\n$emp = new Employee();\r\necho $emp->calcSalary() . \" \";\r\necho $emp->calcMonthInsurance();","answers":["10000 1700","1700 10000","Cannot implement more than 1 interface"],"correct_answer":"10000 1700","explanation":"A class can implement more than 1 interface\r\n<br><br>\r\n\r\nThe <code>Employee<\/code> class implements 2 interfaces and defines all of the methods that the interfaces have.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":2088104104,"question":"What's the output of the code snippet?","code":"<?php\r\ninterface ElectricCost {\r\n    function getCostPerHour();\r\n}\r\nclass Appliance implements ElectricCost {\r\n    public function getCostPerHour() {\r\n        return 7;\r\n    }\r\n}\r\nclass Cooker extends Appliance implements ElectricCost { }\r\n\r\n$cooker = new Cooker();\r\necho $cooker->getCostPerHour();","answers":["0","7","Exception"],"correct_answer":"7","explanation":"The interface <code>ElectricCost<\/code> requires the classes which implement it to define a <code>getCostPerHour<\/code> method.\r\n<br><br>\r\nThe class <code>Cooker<\/code> inherits such from the <code>Appliance<\/code> class so exception is not thrown.\r\n<br><br>\r\nThe code <code>$cooker->getCostPerHour()<\/code> calls the method from the parent class - <code>Appliance<\/code>."},{"id":890900585,"question":"What's the output of the code snippet?","code":"<?php\r\ninterface Cost {\r\n    function getMonthlyCost();\r\n}\r\nclass Restaurant extends Cost {\r\n    public $employeesCount;\r\n    public function getMonthlyCost() {\r\n        return $this->employeesCount * 1000;\r\n    }\r\n}\r\n\r\n$obj = new Restaurant();\r\n$obj->employeesCount = 7;\r\necho $obj->getMonthlyCost();","answers":["0","7000","Exception"],"correct_answer":"Exception","explanation":"The statement <code>class Restaurant extends Cost<\/code>\r\nis incorrect.\r\n<br><br>\r\nIt needs to be replaced with  <br>\r\n<code>class Restaurant implements Cost<\/code>"}],"puzzles":[{"id":818141907,"text":"Fill the missing words to match the output.","code":"<?php\r\nfillword fillword {\r\n    function fillword fillword;\r\n}\r\nclass AirConditioner implements Appliance {\r\n    public function calcConsumation($hours) {\r\n        return $hours * 2.5;\r\n    }\r\n}\r\n\r\n$obj = new AirConditioner();\r\necho $obj->calcConsumation(2);","result":"5","words":{"operators":[],"values":[],"variables_constants":[],"others":["class","interface","AirConditioner","calcConsumation","Appliance","()","($hours)"]},"correct_patterns":[["interface","Appliance","calcConsumation","($hours)"]]},{"id":1769011856,"text":"Fill the missing words to match the output.","code":"<?php\r\ninterface BatteryLifespan {\r\n    public function calcBatteryLifespan($hours);\r\n}\r\nclass Smartphone fillword fillword {\r\n    public function fillword fillword {\r\n        return 100 - 2 * $hours;\r\n    }\r\n}\r\n$obj = new Smartphone();\r\necho $obj->calcBatteryLifespan(12);","result":"76","words":{"operators":[],"values":[],"variables_constants":[],"others":[":","implements","()","($hours)","Smartphone","calcBatteryLifespan","BatteryLifespan"]},"correct_patterns":[["implements","BatteryLifespan","calcBatteryLifespan","($hours)"]]},{"id":572856913,"text":"Fill the missing words to match the output.","code":"<?php\r\ninterface Insurance {\r\n    public function calcInsurance($months);\r\n}\r\ninterface FuelConsumation {\r\n    public function calcCostPer100Km();\r\n}\r\nclass Car implements fillword, fillword {\r\n    private $engineSize;\r\n    public function fillword($months) {\r\n        return  30 * $months;\r\n    }\r\n    public function fillword() {\r\n        return $this->engineSize \/ 1000 + 3;\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Insurance","interface","FuelConsumation","calcCostPer100Km","calcInsurance"]},"correct_patterns":[["Insurance","FuelConsumation","calcInsurance","calcCostPer100Km"],["FuelConsumation","Insurance","calcInsurance","calcCostPer100Km"]]}]},{"id":22563792,"name":"Abstract Classes","tests":[{"id":1875849270,"question":"What's the output of the code snippet?","code":"<?php\r\nabstract class SpaceObject {\r\n    public function __construct() {\r\n        echo \"space object\";\r\n    }\r\n}\r\n\r\n$obj = new SpaceObject();","answers":["space object","null","Exception"],"correct_answer":"Exception","explanation":"<code>$obj = new SpaceObject()<\/code> creates object of an abstract class.\r\n<br><br>\r\nCreating object of an abstract class results in exception."},{"id":545018871,"question":"What's the output of the code snippet?","code":"<?php\r\nabstract class Component {\r\n    public $name;\r\n    public function getName() {\r\n        return $this->name;\r\n    }\r\n}\r\nclass CPU extends Component {\r\n    public function __construct() {\r\n        $this->name = \"CPU\";\r\n    }\r\n}\r\n$obj = new CPU();\r\necho $obj->name;","answers":["CPU","null","Exception"],"correct_answer":"CPU","explanation":"The <code>CPU<\/code> class is not abstract.\r\n<br><br>\r\nFor that reason creating <code>CPU<\/code> object does not result in exception."},{"id":421622708,"question":"What's the output of the code snippet?","code":"<?php\r\nabstract class Enterprise {\r\n    public abstract function calcYearExpenses();\r\n}\r\nclass TechShop extends Enterprise {\r\n    public function __construct() {\r\n        echo \"TechShop\";\r\n    }\r\n}\r\n\r\n$obj = new TechShop();","answers":["TechShop","Exception","null"],"correct_answer":"Exception","explanation":"The parent class <code>Enterprise<\/code> has an abstract method - <code>calcYearExpenses<\/code>.\r\n<br><br>\r\nThe  inheritor - <code>TechShop<\/code> does not define a\r\n<code>calcYearExpenses<\/code> method which results in exception."},{"id":1406505845,"question":"What's the output of the code snippet?","code":"<?php\r\nabstract class Shop {\r\n    public abstract function calcRevenue();\r\n}\r\nclass ClothesShop extends Shop {\r\n    public $sellsCount;\r\n    public function calcRevenue() {\r\n        return $this->sellsCount * 5;\r\n    }\r\n}\r\n\r\n$obj = new ClothesShop();\r\n$obj->sellsCount = 20;\r\necho $obj->calcRevenue();","answers":["20","100","Exception"],"correct_answer":"100","explanation":"The class <code>ClothesShop<\/code> extends the abstract class <code>Shop<\/code> and defines it's abstract method - <code>calcRevenue<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown.\r\n<br><br>\r\nThe calculations for the <code>calcRevenue<\/code> method are:\r\n<br>\r\n20 * 5 = 100"},{"id":343585586,"question":"What's the output of the code snippet?","code":"<?php\r\nabstract class Animal {\r\n    public abstract function makeSound();\r\n}\r\nclass MarineAnimal extends Animal {\r\n    public function makeSound() {\r\n        echo \"No Sound\";\r\n    }\r\n}\r\nclass Fish extends MarineAnimal { }\r\n\r\n$fish = new Fish();\r\n$fish->makeSound();","answers":["null","No Sound","Exception"],"correct_answer":"No Sound","explanation":"The <code>MarineAnimal<\/code> class inherits the abstract <code>Animal<\/code> class  and defines it's abstract method - <code>makeSound<\/code> .\r\n<br><br>\r\nThe <code>Fish<\/code> class inherits the <code>makeSound<\/code> method from the <code>MarineAnimal<\/code> class.\r\n<br><br>\r\nFor that reason exception is not thrown."}],"puzzles":[{"id":1690974750,"text":"Fill the missing words to match the output.","code":"<?php\r\nabstract class Device { }\r\nclass Tablet extends Device { }\r\n\r\n$obj = new fillword();\r\necho \"Code that won't throw exception.\";","result":"Code that won't throw exception.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Device","Tablet"]},"correct_patterns":[["Tablet"]]},{"id":1568622047,"text":"Fill the missing words to match the output.","code":"<?php\r\nabstract class Pet {\r\n    public fillword function fillword();\r\n}\r\nclass Cat extends Pet {\r\n    public function fillword() {\r\n        echo \"meow\";\r\n    }\r\n}\r\n\r\n$obj = new Cat();\r\n$obj->makeSound();","result":"meow","words":{"operators":[],"values":[],"variables_constants":[],"others":["abstract","printSound","printSound","makeSound","makeSound","override"]},"correct_patterns":[["abstract","makeSound","makeSound"]]},{"id":372008348,"text":"Fill the missing words.","code":"<?php\r\nabstract class Polygon {\r\n    public fillword function printAnglesCount();\r\n}\r\nabstract class Shape {\r\n    public fillword function printArea();\r\n}\r\nclass Circle extends Shape {\r\n    private $radius;\r\n    public function fillword() {\r\n        $rad = $this->radius;\r\n        echo 3.14 * $rad * $rad;\r\n    }\r\n}\r\nclass Pentagon extends Polygon {\r\n    public function fillword() {\r\n        echo 5;\r\n    }\r\n}","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["radius","abstract","abstract","printAnglesCount","printArea","override"]},"correct_patterns":[["abstract","abstract","printArea","printAnglesCount"]]}]},{"id":2047699857,"name":"Static Members","tests":[{"id":1294979827,"question":"What's the output of the code snippet?","code":"<?php\r\nclass User {\r\n    public static $count;\r\n    public function __construct() {\r\n        User::$count++;\r\n    }\r\n}\r\nUser::$count = 0;\r\n$obj1 = new User();\r\n$obj2 = new User();\r\n$obj3 = new User();\r\necho User::$count;","answers":["0","2","3"],"correct_answer":"3","explanation":"The static member <code>$count<\/code> increments each time when object is created.\r\n<br><br>\r\nIt's incremented in the class constructor - <code>User::$count++<\/code>."},{"id":131920560,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Circle {\r\n    public static $pi;\r\n    public function __construct() {\r\n        Circle::$pi = 3.1415;\r\n    }\r\n}\r\n\r\nCircle::$pi = 3.14;\r\n$obj = new Circle();\r\necho Circle::$pi;","answers":["3.14","3.141","3.1415"],"correct_answer":"3.1415","explanation":"The static member <code>pi<\/code> is last modified at the class constructor - 3.1415."},{"id":2021724785,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Tiger {\r\n    public static function makeSound() {\r\n        echo \"Roar \";\r\n    }\r\n}\r\nclass Dog {\r\n    public static function makeSound() {\r\n        echo \"Bark\";\r\n    }\r\n}\r\nTiger::makeSound();","answers":["Roar","Bark","Roar Bark"],"correct_answer":"Roar","explanation":"<code>Tiger.makeSound()<\/code> calls the <code>makeSound<\/code> function of the <code>Tiger<\/code> class.\r\n<br><br>\r\n<code>makeSound<\/code> does not access any non-static class members.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":825635390,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Applience {\r\n    public static function printConsumation() {\r\n        echo \"low\";\r\n    }\r\n}\r\nclass Blender extends Applience { }\r\nBlender::printConsumation();","answers":["low","null","Exception"],"correct_answer":"low","explanation":"<code>Blender<\/code> inherits the <code>printConsumation<\/code> method from it's parent - <code>Applience<\/code>.\r\n<br><br>\r\nBasically <code>Blender.printConsumation()<\/code> calls the method <code>printConsumation<\/code> of the parent class - <code>Applience<\/code>."},{"id":1809538559,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Cat {\r\n    public $name;\r\n    public static function printName() {\r\n        echo $this->name;\r\n    }\r\n}\r\n\r\n$cat = new Cat();\r\n$cat->name = \"Felix\";\r\n$cat->printName();","answers":["Felix","Null","Exception"],"correct_answer":"Exception","explanation":"The static <code>printName<\/code> function accesses non-static member - <code>name<\/code> which results in exception."}],"puzzles":[{"id":1221625181,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Circle {\r\n    fillword $pi;\r\n    fillword $radius;\r\n}\r\n\r\nCircle::$pi = 3.14;\r\n$obj = new Circle();\r\n$obj->radius = 5;","result":null,"words":{"operators":[],"values":[],"variables_constants":[],"others":["Circle","public","public static","pi","radius"]},"correct_patterns":[["public static","public"]]},{"id":25535770,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    public $name;\r\n    public fillword present() {\r\n        echo \"My name is \" . $this->name . \".\";\r\n    }\r\n    public fillword sayHi() {\r\n        echo \"Hi! \";\r\n    }\r\n}\r\nfillword::sayHi();\r\n$obj = new Person();\r\n$obj->name = \"Jake\";\r\n$obj->present();","result":"Hi! My name is Jake.","words":{"operators":[],"values":[],"variables_constants":[],"others":["Person","name","present","function","static function"]},"correct_patterns":[["function","static function","Person"]]},{"id":2049623259,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Building {\r\n    public $height;\r\n    public static $objCount;\r\n    public function printHeight() {\r\n        echo $this->height;\r\n    }\r\n    public static function printCount() {\r\n        echo Building::$objCount;\r\n    }\r\n    public function __construct($height) {\r\n        fillword->height = $height;\r\n        fillword::$objCount++;\r\n    }\r\n}\r\n\r\nfillword::$objCount = 0;\r\n$obj1 = new Building(100);\r\n$obj2 = new Building(120);\r\necho fillword::$objCount . ' ';\r\necho fillword->height;","result":"2 120","words":{"operators":[],"values":[],"variables_constants":[],"others":["Building","Building","Building","Building","$obj1","$obj2","$this"]},"correct_patterns":[["$this","Building","Building","Building","$obj2"]]}]},{"id":1209521240,"name":"Traits","tests":[{"id":747142588,"question":"What's the output of the code snippet?","code":"<?php\r\ntrait Device {\r\n    public $size = 'Default Size';\r\n}\r\nclass TV {\r\n    use Device;\r\n}\r\n\r\n$tv = new TV();\r\necho $tv->size;","answers":["Default Size","Null","Exception"],"correct_answer":"Default Size","explanation":"The <code>TV<\/code> class inherits the <code>$size<\/code> member from the <code>Device<\/code> trait."},{"id":1698471293,"question":"What's the output of the code snippet?","code":"<?php\r\ntrait Animal {\r\n    public function makeSound() {\r\n        echo 'Roar';\r\n    }\r\n}\r\nclass Cat {\r\n    use Animal;\r\n}\r\n\r\n$cat = new Cat();\r\necho $cat->makeSound();","answers":["Roar","Null","Exception"],"correct_answer":"Roar","explanation":"The <code>Cat<\/code> class inherits the <code>makeSound<\/code> method from the <code>Animal<\/code> trait."},{"id":1608629562,"question":"What's the output of the code snippet?","code":"<?php\r\ntrait Vehicle {\r\n    public function calcConsumation($km) {\r\n        return 0;\r\n    }\r\n}\r\nclass Scooter {\r\n    use Vehicle;\r\n\r\n    public function calcConsumation($km) {\r\n        return $km \/ 100 * 2;\r\n    }\r\n}\r\n\r\n$scooter = new Scooter();\r\necho $scooter->calcConsumation(100);","answers":["0","2","Exception"],"correct_answer":"2","explanation":"<code>Scooter<\/code> inherits <code>calcConsumation<\/code> method from the <code>Vehicle<\/code> trait.\r\n<br><br>\r\nAlso the <code>Scooter<\/code> class overwrites the <code>calcConsumation<\/code> method.\r\n<br><br>\r\nFor that reason <code>$scooter->calcConsumation(100)<\/code> returns \"2\"."},{"id":278322427,"question":"What's the output of the code snippet?","code":"<?php\r\ntrait Glasses {\r\n    public abstract function getDiopter();\r\n}\r\ntrait Shader {\r\n    public function getShadeIndex() {\r\n        return 'medium ';\r\n    }\r\n}\r\nclass Sunglasses {\r\n    use Glasses, Shader;\r\n\r\n    public function getDiopter() {\r\n        return 'none ';\r\n    }\r\n}\r\n$obj = new Sunglasses();\r\necho $obj->getDiopter() . ' ';\r\necho $obj->getShadeIndex();","answers":["medium none","Exception","none medium"],"correct_answer":"none medium","explanation":"The <code>Sunglasses<\/code> class overwrites the abstract <code>getDiopter<\/code> method so exception is not thrown.\r\n<br><br>\r\nThe <code>Sunglasses<\/code> class inherits the <code>getShadeIndex<\/code> method from the <code>Shader<\/code> trait."},{"id":1228668088,"question":"What's the output of the code snippet?","code":"<?php\r\ntrait Electric {\r\n    public function print() {\r\n        echo 'Electric ';\r\n    }\r\n}\r\ntrait Blanket {\r\n    public function print() {\r\n        echo 'Blanket ';\r\n    }\r\n}\r\nclass ElectricBlanket {\r\n    use Electric, Blanket;\r\n}\r\n$obj = new ElectricBlanket();\r\n$obj->print();","answers":["Electric","Blanket","Exception"],"correct_answer":"Exception","explanation":"A method cannot be inherited by 2 traits directly.\r\n<br><br>\r\nOne of the alternatives can be chosen to avoid the exception:\r\n<ul>\r\n<li>Only one of the two traits needs to be inherited.<\/li>\r\n<li><code>ElectricBlanket<\/code> needs to overwrite the <code>print<\/code> method.<\/li>\r\n<\/ul>"}],"puzzles":[{"id":1021306008,"text":"Fill the missing words to match the output.","code":"<?php\r\ntrait Greetings {\r\n    public function sayHi() {\r\n        echo \"Hi!\";\r\n    }\r\n}\r\nclass Person {\r\n    fillword fillword;\r\n}\r\n\r\n$obj = new Person();\r\n$obj->sayHi();","result":"Hi!","words":{"operators":[],"values":[],"variables_constants":[],"others":["extends","use","includes","sayHi","Greetings"]},"correct_patterns":[["use","Greetings"]]},{"id":1972110425,"text":"Fill the missing words to match the output.","code":"<?php\r\nfillword Resolution {\r\n    public $width;\r\n    public $height;\r\n    public function printResolution() {\r\n        echo $this->width . 'x' . $this->height;\r\n    }\r\n}\r\nfillword Smartphone {\r\n    use Resolution;\r\n}\r\n\r\n$obj = new fillword();\r\n$obj->width = 1080;\r\n$obj->height = 1920;\r\n\r\n$obj->fillword;","result":"1080x1920","words":{"operators":[],"values":[],"variables_constants":[],"others":["trait","trait","class","class","Smartphone","Smartphone","printResolution()","Resolution"]},"correct_patterns":[["trait","class","Smartphone","printResolution()"]]},{"id":774973414,"text":"Fill the missing words to match the output.","code":"<?php\r\nfillword Insurance {\r\n    public function printInsuranceCost($months) {\r\n        echo $months * 30;\r\n    }\r\n}\r\nfillword FuelConsumation {\r\n    public function printConsumation($km) {\r\n        echo 0.05 * $km;\r\n    }\r\n}\r\nclass Vehicle {};\r\nclass Car fillword fillword {\r\n    fillword fillword, fillword;\r\n}\r\n\r\n$obj = new Car();\r\n$obj->printInsuranceCost(12); \r\necho ' ';\r\n$obj->printConsumation(100);","result":"360 5","words":{"operators":[],"values":[],"variables_constants":[],"others":["use","extends","trait","trait","FuelConsumation","Insurance","Vehicle"]},"correct_patterns":[["trait","trait","extends","Vehicle","use","Insurance","FuelConsumation"],["trait","trait","extends","Vehicle","use","FuelConsumation","Insurance"]]}]},{"id":1018268510,"name":"Encapsulation Principle","tests":[{"id":65543289,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Sweatshirt {\r\n    private $color;\r\n    public function __construct($colorVal) {\r\n        $this->color = $colorVal;\r\n    }\r\n}\r\n$obj = new Sweatshirt(\"gray\");\r\necho $obj->color;","answers":["gray","null","Exception"],"correct_answer":"Exception","explanation":"<code>echo $obj->color<\/code> accesses the <code>private<\/code> <code>color<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>$color<\/code> needs to be defined as <code>public<\/code> member."},{"id":1151155206,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Product {\r\n    private $price;\r\n    public function getPrice() {\r\n        return $this->price;\r\n    }\r\n    public function setPrice($price) {\r\n        $this->price = $price;\r\n    }\r\n}\r\n$obj = new Product();\r\n$obj->setPrice(100);\r\necho $obj->getPrice();","answers":["0","100","Exception"],"correct_answer":"100","explanation":"All <code>Product<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":1027760071,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Smartphone {\r\n    public $model;\r\n    public function __construct($modelVal) {\r\n        $this->model = $modelVal;\r\n    }\r\n}\r\n$obj = new Smartphone(\"My Model\");\r\necho $obj->model;","answers":["My Model","null","Exception"],"correct_answer":"My Model","explanation":"All <code>Smartphone<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."},{"id":2012708740,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Tablet {\r\n    private $price;\r\n    public function setPrice($priceVal) {\r\n        $this->price = $priceVal;\r\n    }\r\n}\r\n$obj = new Tablet();\r\n$obj->setPrice(300);\r\necho $obj->price;","answers":["300","null","Exception"],"correct_answer":"Exception","explanation":"<code>echo $obj->price<\/code> accesses the <code>private<\/code> <code>$price<\/code> member outside of the class body.\r\n<br><br>\r\nFor that reason exception is thrown.\r\n<br><br>\r\n<code>$price<\/code> needs to be defined as <code>public<\/code> member."},{"id":681287493,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Book {\r\n    private $title;\r\n    public function setTitle($titleVal) {\r\n        $this->title = $titleVal;\r\n    }\r\n    public function getTitle() {\r\n        return $this->title;\r\n    }\r\n}\r\n$obj = new Book();\r\n$obj->setTitle(\"Sample\");\r\necho $obj->getTitle();","answers":["null","Sample","Exception"],"correct_answer":"Sample","explanation":"All <code>Book<\/code> members that are accessed outside of the class body are declared as <code>public<\/code>.\r\n<br><br>\r\nFor that reason exception is not thrown."}],"puzzles":[{"id":1625704359,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Car {\r\n    fillword $make;\r\n    fillword $model;\r\n    fillword function setData($makeVal, $modelVal) {\r\n        $this->make = $makeVal;\r\n        $this->model = $modelVal;\r\n    }\r\n    fillword function printData() {\r\n        echo $this->make . \" \" . $this->model;\r\n    }\r\n}\r\n\r\n$car = new Car();\r\n$car->setData(\"Ford\", \"Fiesta\");\r\n$car->printData();","result":"Ford Fiesta","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public"]},"correct_patterns":[["private","private","public","public"]]},{"id":1502308196,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    fillword $id;\r\n    fillword $name;\r\n    fillword $age;\r\n    fillword function __construct($id, $name, $age) {\r\n        $this->id = $id;\r\n        $this->name = $name;\r\n        $this->age = $age;\r\n    }\r\n}\r\n\r\n$person = new Person(\"s9f1sf95\", \"Thomas\", 22);\r\necho $person->name . \" \";\r\necho $person->age;","result":"Thomas 22","words":{"operators":[],"values":[],"variables_constants":[],"others":["private","private","private","public","public","public"]},"correct_patterns":[["private","public","public","public"]]},{"id":306153253,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Square {\r\n    fillword $side;\r\n    fillword function __construct($sideVal) {\r\n        $this->side = $sideVal;\r\n    }\r\n    fillword function calcArea() {\r\n        return $this->side * $this->side;\r\n    }\r\n    fillword function calcPerimeter() {\r\n        return 4 * $this->side;\r\n    }\r\n    fillword function printData() {\r\n        echo \"Area = \" . $this->calcArea();\r\n        echo \"<br>\"; \/\/ Prints new line\r\n        echo \"Perimeter = \" . $this->calcPerimeter();\r\n    }\r\n}\r\n\r\n$obj = new Square(3);\r\n$obj->printData();","result":"Area = 9\r\nPerimeter = 12","words":{"operators":[],"values":[],"variables_constants":[],"others":["public","public","private","private","private","private"]},"correct_patterns":[["private","public","private","private","public"]]}]},{"id":1969662751,"name":"Abstraction Principle","tests":[{"id":1632157442,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Rectangle {\r\n    private $a;\r\n    private $b;\r\n    public function __construct($aVal, $bVal) {\r\n        $this->a = $aVal;\r\n        $this->b = $bVal;\r\n    }\r\n    public function calcArea() {\r\n        return $this->a * $this->b;\r\n    }\r\n}\r\n$obj = new Rectangle(7, 1);\r\necho $obj->calcArea();","answers":["7","8","14"],"correct_answer":"7","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n7 x 1 = 7"},{"id":1543364291,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Cube {\r\n    private $side;\r\n    public function __construct($sideVal) {\r\n        $this->side = $sideVal;\r\n    }\r\n    public function calcVolume() {\r\n        return pow($this->side, 3);\r\n    }\r\n}\r\n$obj = new Cube(6);\r\necho $obj->calcVolume();","answers":["6","36","216"],"correct_answer":"216","explanation":"Calculations behind <code>calcVolume<\/code> method:\r\n<br><br>\r\n6 ^ 3 = <br>\r\n6 x 6 x 6 = <br>\r\n36 x 6 = 216"},{"id":480444032,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Rectangle {\r\n    private $a;\r\n    private $b;\r\n    public function __construct($aVal, $bVal) {\r\n        $this->a = $aVal;\r\n        $this->b = $bVal;\r\n    }\r\n    public function calcDiagonal() {\r\n        return sqrt(pow($this->a, 2) + pow($this->b, 2));\r\n    }\r\n}\r\n$obj = new Rectangle(6, 8);\r\necho $obj->calcDiagonal();","answers":["10","90","100"],"correct_answer":"10","explanation":"Calculations behind <code>calcDiagonal<\/code> method:\r\n<br><br>\r\n&radic;<span style=\"text-decoration: overline\">6 ^ 2 + 8 ^ 2<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">6 * 6 + 8 * 8<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">36 + 64<\/span> = <br>\r\n&radic;<span style=\"text-decoration: overline\">100<\/span> = <br>\r\n10"},{"id":1431772737,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Trapezoid {\r\n    private $a, $b, $h;\r\n    public function __construct($aVal, $bVal, $hVal) {\r\n        $this->a = $aVal;\r\n        $this->b = $bVal;\r\n        $this->h = $hVal;\r\n    }\r\n    public function calcArea() {\r\n        return ($this->a + $this->b) \/ 2 * $this->h;\r\n    }\r\n}\r\n$obj = new Trapezoid(10, 20, 2);\r\necho $obj->calcArea();","answers":["60","30","15"],"correct_answer":"30","explanation":"Calculations behind <code>calcArea<\/code> method:\r\n<br><br>\r\n(10 + 20) \/ 2 * 2 = <br>\r\n30 \/ 2 * 2 = <br>\r\n15 * 2 = <br>\r\n30"},{"id":235159054,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Rectangle {\r\n    private $a;\r\n    private $b;\r\n    public function __construct($aVal, $bVal) {\r\n        $this->a = $aVal;\r\n        $this->b = $bVal;\r\n    }\r\n    public function calcPerimeter() {\r\n        return 2 * ($this->a + $this->b);\r\n    }\r\n}\r\n$obj = new Rectangle(5, 10);\r\necho $obj->calcPerimeter();","answers":["15","30","45"],"correct_answer":"30","explanation":"Calculations behind <code>calcPerimeter<\/code> method:\r\n<br><br>\r\n2 * (5 + 10) = <br>\r\n2 * 15 = <br>\r\n30 <br>"}],"puzzles":[{"id":1424795362,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Rectangle {\r\n    private $a;\r\n    private $b;\r\n    public function __construct($aVal, $bVal) {\r\n        $this->a = $aVal;\r\n        $this->b = $bVal;\r\n    }\r\n    public function calcArea() {\r\n        return $this->a * $this->b;\r\n    }\r\n    public function calcPerimeter() {\r\n        return 2 * ($this->a + $this->b);\r\n    }\r\n}\r\n\r\n$obj = new Rectangle(1, 3);\r\necho fillword->fillword . ' ';\r\necho fillword->fillword;","result":"3 8","words":{"operators":[],"values":[],"variables_constants":["$obj","$obj"],"others":["a","b","calcArea()","calcPerimeter()","Rectangle"]},"correct_patterns":[["$obj","calcArea()","$obj","calcPerimeter()"]]},{"id":227657379,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Square {\r\n    private $side;\r\n    public function __construct($side) {\r\n        $this->side = $side;\r\n    }\r\n    public function calcArea() {\r\n        return $this->side * $this->side;\r\n    }\r\n}\r\n\r\n$obj1 = new Square(fillword);\r\n$obj2 = new Square(fillword);\r\necho $obj1->calcArea() . ' ';\r\necho $obj2->calcArea();","result":"9 16","words":{"operators":[],"values":["2","3","4","5","6","9","16"],"variables_constants":[],"others":[]},"correct_patterns":[["3","4"]]},{"id":1179051616,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Shape {\r\n    private $angles;\r\n    public function __construct($angles) {\r\n        $this->angles = $angles;\r\n    }\r\n    public function calcDiagonalsCount() {\r\n        $diagonalsCount = 0;\r\n        $step = 2;\r\n\r\n        for ($i = 4; $i <= $this->angles; $i++) {\r\n            $diagonalsCount += $step;\r\n            $step++;\r\n        }\r\n        return $diagonalsCount;\r\n    }\r\n}\r\n\r\n$obj1 = new Shape(fillword);\r\n$obj2 = new Shape(fillword);\r\necho $obj1->calcDiagonalsCount() . ' ';\r\necho $obj2->calcDiagonalsCount();","result":"2 9","words":{"operators":[],"values":["2","3","4","5","6","7","8","9"],"variables_constants":[],"others":[]},"correct_patterns":[["4","6"]]}]},{"id":772524764,"name":"Inheritance Principle","tests":[{"id":1084840399,"question":"Which are the members of Teacher class?","code":"<?php\r\nclass Person {\r\n    protected $age;\r\n}\r\nclass Employee extends Person {\r\n    protected $salary;\r\n}\r\nclass Teacher extends Employee {\r\n    private $subjects;\r\n}","answers":["subjects","salary, subjects","age, salary, subjects"],"correct_answer":"age, salary, subjects","explanation":"The <code>Employee<\/code> class inherits the <code>protected<\/code> members <code>name<\/code> and <code>salary<\/code> from it's parents - \r\n<code>Employee<\/code> and <code>Person<\/code>."},{"id":962492812,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Device {\r\n    public function printSize() {\r\n        echo \"medium\";\r\n    }\r\n}\r\nclass Smartphone extends Device {};\r\n$smartphone = new Smartphone();\r\n$smartphone->printSize();","answers":["Null","medium","exception"],"correct_answer":"medium","explanation":"<code>Smartphone<\/code> inherits the <code>printSize<\/code> function from it's parent - <code>Device<\/code>."},{"id":1912772941,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Glasses {\r\n    public function printShadeIndex() {\r\n        echo \"low \";\r\n    }\r\n}\r\nclass Sunglasses extends Glasses {\r\n    public function printShadeIndex() {\r\n        echo \"high\";\r\n    }\r\n}\r\n\r\n$obj = new Sunglasses();\r\n$obj->printShadeIndex();","answers":["low","high","low high"],"correct_answer":"high","explanation":"<code>Sunglasses<\/code> inherits the <code>Glasses <\/code>  class.\r\n<br><br>\r\nIt overwrites the <code>printShadeIndex<\/code> method to print \"high\"."},{"id":884455690,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Bird {\r\n    public function printSize() {\r\n        echo \"small \";\r\n    }\r\n}\r\nclass Eagle extends Bird {\r\n    public function printSize() {\r\n        echo \"large \";\r\n    }\r\n}\r\n$obj = new Bird();\r\n$obj->printSize();","answers":["small","large","small large"],"correct_answer":"small","explanation":"The <code>Bird<\/code> class has <code>printSize<\/code> method which prints \"small\"."},{"id":1835325643,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Car {\r\n    public function printSize() {\r\n        echo \"medium \";\r\n    }\r\n}\r\nclass Sedan extends Car {\r\n    public function printSize() {\r\n        parent::printSize();\r\n        echo \"long\";\r\n    }\r\n}\r\n$obj = new Sedan();\r\n$obj->printSize();","answers":["medium","long","medium long"],"correct_answer":"medium long","explanation":"The <code>Sedan<\/code> class has <code>printSize<\/code> function which calls it's parent method (via <code>parent::printSize()<\/code>) and afterwards prints \"long\"."}],"puzzles":[{"id":954926625,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Device {\r\n    public function printSizeCategory() {\r\n        echo \"Small \";\r\n    }\r\n}\r\nclass Laptop extends Device {\r\n    public function printSizeCategory() {\r\n        echo \"Large \";\r\n    }\r\n}\r\n\r\n$obj = new fillword();\r\n$obj->printSizeCategory();","result":"Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Laptop","Device"]},"correct_patterns":[["Laptop"]]},{"id":1905795566,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Electronic {\r\n    public function printConsumation() {\r\n        echo \"Low\";\r\n    }\r\n}\r\nclass fillword fillword fillword {}\r\n\r\n$obj = new Smartphone();\r\n$obj->printConsumation();","result":"Low","words":{"operators":[],"values":[],"variables_constants":[],"others":["Electronic","Smartphone","extends",":"]},"correct_patterns":[["Smartphone","extends","Electronic"]]},{"id":709706159,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Person {\r\n    fillword $name;\r\n    public function printData() {\r\n        echo $this->name . ' ';\r\n    }\r\n}\r\nclass Employee extends Person {\r\n    fillword $salary;\r\n    public function __construct($nameVal, $salaryVal) {\r\n        $this->name = $nameVal;\r\n        $this->salary = $salaryVal;\r\n    }\r\n    public function printData() {\r\n        fillword::printData();\r\n        echo $this->salary;\r\n    }\r\n}\r\n\r\n$obj = new Employee(\"Jim\", 26);\r\n$obj->printData();","result":"Jim 26","words":{"operators":[],"values":[],"variables_constants":[],"others":["Employee","super","private","protected","parent"]},"correct_patterns":[["protected","private","parent"]]}]},{"id":1622731421,"name":"Polymorphism Principle","tests":[{"id":638187656,"question":"What's the output of the code snippet?","code":"<?php\r\nclass OSDevice {\r\n    public function printSize() {\r\n        echo 'medium ';\r\n    }\r\n}\r\nclass SmartTV extends OSDevice  {\r\n    public function printSize() {\r\n        echo 'large ';\r\n    }\r\n}\r\n\r\n$obj = new SmartTV();\r\n$obj->printSize();","answers":["medium","large","medium large"],"correct_answer":"large","explanation":"<code>SmartTV <\/code> inherits <code>OSDevice<\/code> and overwrites the <code>printSize<\/code> method.\r\n<br><br>\r\n<code>$obj->printSize()<\/code> prints \"large\"."},{"id":415111241,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Bird {\r\n    public function printSize() {\r\n        echo 'small ';\r\n    }\r\n}\r\nclass Seagull extends Bird  {\r\n    public function printSize() {\r\n        echo 'medium';\r\n    }\r\n}\r\n$bird = new Bird();\r\n$bird->printSize();","answers":["small","medium","small medium"],"correct_answer":"small","explanation":"The <code>Bird<\/code> class has it's own <code>printSize<\/code> method.\r\n<br><br>\r\n<code>$bird->printSize()<\/code> prints \"small\"."},{"id":1365456918,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Vehicle {\r\n    public function printConsumation() {\r\n        echo 'none ';\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    public function printConsumation() {\r\n        echo 'high ';\r\n    }\r\n}\r\nclass Truck extends MotorVehicle {}\r\n\r\n$truck = new Truck();\r\n$truck->printConsumation();","answers":["none","high","none high"],"correct_answer":"high","explanation":"The <code>Truck<\/code> class inherits the  <code>printConsumation<\/code> method from it's parent - <code>MotorVehicle<\/code>.\r\n<br><br>\r\n<code>$truck->printConsumation()<\/code> prints \"high\"."},{"id":168844247,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Animal {\r\n    public function printSize() {\r\n        echo 'very ';\r\n    }\r\n}\r\nclass Koala extends Animal {\r\n    public function printSize() {\r\n        parent::printSize();\r\n        echo 'small';\r\n    }\r\n}\r\n$obj = new Koala();\r\n$obj->printSize();","answers":["very","small","very small"],"correct_answer":"very small","explanation":"<code>$obj->printSize()<\/code> calls the method from the <code>Koala<\/code> class.\r\n<br><br>\r\n<code>parent::printSize()<\/code> calls the method from the parent class. For that reason \"very \" is printed.\r\n<br><br>\r\nAfterwards \"small\" is printed."},{"id":1288010644,"question":"What kind of polymorphism is the code snippet?","code":"<?php\r\nclass PolarAnimal {\r\n    public function printWeight() {\r\n        echo \"heavy\";\r\n    }\r\n}\r\nclass SnowyOwl extends PolarAnimal  {\r\n    public function printWeight() {\r\n        echo \"light\";\r\n    }\r\n}","answers":["Compile Time Polymorphism","Runtime Polymorphism","Not a Polymorphism"],"correct_answer":"Runtime Polymorphism","explanation":"Runtime polymorphism occurs in function overriding .\r\n<br><br>\r\nfunction overriding - base class ( <code>PolarAnimal<\/code> ) has a function that's being overwritten in a child class ( <code>SnowyOwl<\/code> ).\r\n<br><br>\r\nCompile time polymorphism does not occur in PHP."}],"puzzles":[{"id":1827823980,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Animal {\r\n    public function printSize() {\r\n        echo \"Small \";\r\n    }\r\n}\r\nclass Whale extends Animal {\r\n    public function printSize() {\r\n        echo \"Large \";\r\n    }\r\n}\r\nclass Cat extends Animal { }\r\n\r\n$obj1 = new fillword();\r\n$obj1->printSize();\r\n$obj2 = new fillword();\r\n$obj2->printSize();","result":"Small Large","words":{"operators":[],"values":[],"variables_constants":[],"others":["Whale","Whale","Cat","Cat"]},"correct_patterns":[["Cat","Whale"]]},{"id":631669037,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Vehicle {\r\n    public function printFuelCost() {\r\n        echo \"none\";\r\n    }\r\n}\r\nclass MotorVehicle extends Vehicle {\r\n    public function printFuelCost() {\r\n        echo \"medium\";\r\n    }\r\n}\r\nclass Car extends MotorVehicle {}\r\n\r\n$obj = new fillword();\r\n$obj->printFuelCost();","result":"medium","words":{"operators":[],"values":[],"variables_constants":[],"others":["Vehicle","Car"]},"correct_patterns":[["Car"]]},{"id":508272874,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass App {\r\n    public function categorizeDevice() {\r\n        return \"any\";\r\n    }\r\n}\r\nclass MobileApp extends App {\r\n    public function categorizeDevice() {\r\n        return \"small\";\r\n    }\r\n}\r\nclass DesktopApp extends App {\r\n    public function categorizeDevice() {\r\n        return \"large\";\r\n    }\r\n}\r\nclass WebApp extends App {}\r\n\r\n$arr = [new fillword, new fillword, new fillword];\r\nforeach($arr as $obj) {\r\n    echo $obj->categorizeDevice() . ' ';\r\n}","result":"any small large","words":{"operators":[],"values":[],"variables_constants":[],"others":["MobileApp","MobileApp","DesktopApp","DesktopApp","WebApp","WebApp"]},"correct_patterns":[["WebApp","MobileApp","DesktopApp"]]}]},{"id":1500318298,"name":"Array Of Class Objects","tests":[{"id":90807125,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Product {\r\n    public $price;\r\n}\r\n$prods = [];\r\n\r\nfor($i = 1; $i <= 4; $i++) {\r\n    $obj = new Product();\r\n    $obj->price = $i * 12;\r\n    $prods[] = $obj;\r\n}\r\n\r\nforeach($prods as $prod) {\r\n    if($prod->price > 25) {\r\n        echo $prod->price . ' ';\r\n    }\r\n}","answers":["48","36 48","12 24 36 48"],"correct_answer":"36 48","explanation":"After the elements are added, the array has the following prices:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>12<\/td>\r\n            <td>24<\/td>\r\n            <td>36<\/td>\r\n            <td>48<\/td>\r\n    <\/tr>\r\n<\/table>\r\nOnly two of them meet the condition <code>$prod->price > 25<\/code> - 36 and 48"},{"id":2115943186,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Company {\r\n    public $employees;\r\n}\r\nclass Employee {\r\n    public $name;\r\n}\r\n\r\n$names = ['Eathan', 'Sarah', 'Leo', 'Teo', 'Andrew'];\r\n$company = new Company();\r\n$company->employees = [];\r\n\r\nfor($i = 0; $i < count($names); $i++) {\r\n    $employee = new Employee();\r\n    $employee->name = $names[$i];\r\n    array_push($company->employees, $employee);\r\n}\r\n\r\necho $company->employees[3]->name;","answers":["Sarah","Leo","Teo"],"correct_answer":"Teo","explanation":"After the elements are added, the array has the following names:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td>2<\/td>\r\n            <td class=\"table-primary\">3<\/td>\r\n            <td>4<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Values<\/th>\r\n            <td>Eathan<\/td>\r\n            <td>Sarah<\/td>\r\n            <td>Leo<\/td>\r\n            <td class=\"table-primary\">Teo<\/td>\r\n            <td>Andrew<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":818141907,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Car {\r\n    public $hp;\r\n    public function __construct($hp) {\r\n        $this->hp = $hp;\r\n    }\r\n}\r\n\r\n$cars = [ new Car(80), new Car(90), \r\n    new Car(100), new Car(110) ];\r\n\r\nforeach($cars as $car) {\r\n    if($car->hp > 100) {\r\n        echo $car->hp . ' ';\r\n    }\r\n}","answers":["110","100 110","80 90"],"correct_answer":"110","explanation":"From all hps - 80, 90, 100, 110, only 1 meets the condition <code>$car->hp > 100<\/code> - 110."},{"id":1769011856,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Student {\r\n    public $age;\r\n    public function __construct($age) {\r\n        $this->age = $age;\r\n    }\r\n}\r\n$students = [ new Student(12), new Student(18),\r\nnew Student(14), new Student(16) ];\r\n\r\nusort($students, function($a, $b) {\r\n    if($a->age < $b->age) {\r\n        return -1;\r\n    }\r\n    else if ($a->age === $b->age) {\r\n        return 0;\r\n    }\r\n    return 1;\r\n});\r\necho $students[2]->age;","answers":["14","16","18"],"correct_answer":"16","explanation":"After sorting the array by student's age it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td>1<\/td>\r\n            <td class=\"table-primary\">2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>12<\/td>\r\n            <td>14<\/td>\r\n            <td class=\"table-primary\">16<\/td>\r\n            <td>18<\/td>\r\n    <\/tr>\r\n<\/table>"},{"id":572856913,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Product {\r\n    public $price;\r\n    public function __construct($price) {\r\n        $this->price = $price;\r\n    }\r\n}\r\n$prods = [ new Product(15), new Product(55),\r\nnew Product(30), new Product(40) ];\r\n\r\nusort($prods, function($a, $b) {\r\n    if($a->price > $b->price) {\r\n        return -1;\r\n    }\r\n    else if ($a->price === $b->price) {\r\n        return 0;\r\n    }\r\n    return 1;\r\n});\r\necho $prods[1]->price;","answers":["30","40","55"],"correct_answer":"40","explanation":"After sorting the array by product's price it has the following structure:\r\n<table class=\"table table-bordered text-center\">\r\n    <tr>\r\n            <th>Index<\/th>\r\n            <td>0<\/td>\r\n            <td class=\"table-primary\">1<\/td>\r\n            <td>2<\/td>\r\n            <td>3<\/td>\r\n     <\/tr>\r\n    <tr>\r\n            <th>Value<\/th>\r\n            <td>55<\/td>\r\n            <td class=\"table-primary\">40<\/td>\r\n            <td>30<\/td>\r\n            <td>15<\/td>\r\n    <\/tr>\r\n<\/table>"}],"puzzles":[{"id":1358479531,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Peak {\r\n    public $height;\r\n    public function __construct($heightVal) {\r\n        $this->height = $heightVal;\r\n    }\r\n}\r\n$peaks = [new Peak(2000), new Peak(3000),\r\n    new Peak(4000), new Peak(5000)];\r\n    \r\nforeach($peaks as $peak) {\r\n    if($peak->height fillword fillword) {\r\n        echo $peak->height . \" \";\r\n    }\r\n}","result":"4000 5000","words":{"operators":[">=","<="],"values":["4000","3000"],"variables_constants":[],"others":[]},"correct_patterns":[[">=","4000"]]},{"id":162390120,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Student {\r\n    public $age;\r\n    public function __construct($ageVal) {\r\n        $this->age = $ageVal;\r\n    }\r\n}\r\n\r\nfillword = [];\r\nfor ($i = 10; $i <= 20; $i++) {\r\n    $students[] = new Student($i);\r\n}\r\nforeach($students as $student) {\r\n    if($student->age > fillword) {\r\n        echo $student->age . \" \";\r\n    }\r\n}","result":"16 17 18 19 20","words":{"operators":[],"values":["15","16"],"variables_constants":["$students","$students"],"others":["Student","Student"]},"correct_patterns":[["$students","15"]]},{"id":1112670249,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Product {\r\n    public $price;\r\n    public function __construct($priceVal) {\r\n        $this->price = $priceVal;\r\n    }\r\n}\r\n\r\n$prods = [];\r\nfor ($i = 11; $i <= 17; $i++) {\r\n    $prods[] = fillword fillword fillword;\r\n}\r\nforeach ($prods as $prod) {\r\n    if($prod->price >= 150) {\r\n        echo $prod->price . \" \";\r\n    }\r\n}","result":"150 160 170","words":{"operators":[],"values":[],"variables_constants":[],"others":["Product","prods","($i)","($i * 10)","[]","new"]},"correct_patterns":[["new","Product","($i * 10)"]]}]},{"id":303180315,"name":"Try Catch","tests":[{"id":1690974750,"question":"What's the output of the code snippet?","code":"<?php\r\ntry {\r\n    echo \"1 \";\r\n} \r\ncatch(Exception $ex) {\r\n    echo \"2 \";\r\n}\r\necho \"3\";","answers":["1","1 3","1 2 3"],"correct_answer":"1 3","explanation":"No exception is thrown so the catch  block is not executed and \"2\" is not printed."},{"id":1568622047,"question":"What's the output of the code snippet?","code":"<?php\r\ntry {\r\n    echo \"1 \";\r\n    throw new Exception();\r\n} \r\ncatch(Exception $ex) {\r\n    echo \"2 \";\r\n}","answers":["1","2","1 2"],"correct_answer":"1 2","explanation":"Since exception is thrown the catch block is executed thus \"2\" is printed."},{"id":372008348,"question":"What's the output of the code snippet?","code":"<?php\r\ntry {\r\n    echo '1 ';\r\n    throw new Exception('2 ');\r\n    echo '3 ';\r\n}\r\ncatch (Exception $ex) {\r\n    echo $ex->getMessage();\r\n    echo '4';\r\n}","answers":["1 3","1 2 3 4","1 2 4"],"correct_answer":"1 2 4","explanation":"Since exception is thrown the catch block executes.\r\n<br><br>\r\n<code>$ex->getMessage()<\/code> is the message that's passed to the thrown exception - \"2\".\r\n<br><br>\r\n'3' is not printed since the try block terminates when exception is thrown."},{"id":1221625181,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Smartwatch {\r\n\tpublic function setPrice($num) {\r\n\t\tif ($num <= 0) {\r\n\t\t\tthrow new Exception(' Invalid Price ');\r\n\t\t}\r\n\t}\r\n}\r\n\r\ntry {\r\n    $smartphone = new Smartwatch();\r\n    $smartphone->setPrice(0);\r\n    echo $smartphone->price;\r\n}\r\ncatch (Exception $ex) {\r\n   echo $ex->getMessage();\r\n}","answers":["Invalid Price","0","0 Invalid Price"],"correct_answer":"Invalid Price","explanation":"The passed price (0) meets the condition <code>$num <= 0<\/code> thus exception is thrown and the catch block executes.\r\n<br><br>\r\n<code>$ex->getMessage()<\/code> is the message that's passed to the thrown exception - \"Invalid Price\".\r\n<br><br>\r\n<code>echo $smartphone->price;<\/code> does not execute since the try block terminates when exception is thrown."},{"id":25535770,"question":"What's the output of the code snippet?","code":"<?php\r\nclass Person {};\r\n\r\ntry {\r\n    $p = new Person();\r\n    echo '1';\r\n    throw new Exception(' 2');\r\n    echo ' 3';\r\n}\r\ncatch(Exception $ex) {\r\n    echo ' 4';\r\n}","answers":["1 4","1 3 4","1 2 3 4"],"correct_answer":"1 4","explanation":"Since exception is thrown the catch block is excecuted. For that reason \"4\" is printed.\r\n<br><br>\r\n'3' is not printed since the try block terminates when exception is thrown."}],"puzzles":[{"id":990323702,"text":"Fill the missing words to match the output.","code":"<?php\r\ntry {\r\n    throw new Exception(fillword);\r\n} catch(Exception $ex) {\r\n    echo $ex->getMessage();\r\n    echo fillword;\r\n}\r\necho fillword;","result":"A B C","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"A \"","\"B \"","\"C\"","\"D \""]},"correct_patterns":[["\"A \"","\"B \"","\"C\""]]},{"id":2108965815,"text":"Fill the missing words to match the output.","code":"<?php\r\ntry {\r\n    echo fillword;\r\n    throw new Exception(fillword);\r\n} catch(Exception $ex) {\r\n    echo fillword;\r\n    echo fillword;\r\n}","result":"1 2 3","words":{"operators":[],"values":[],"variables_constants":[],"others":["\"1 \"","\"2 \"","\"3 \"","$ex->getMessage()"]},"correct_patterns":[["\"1 \"","\"2 \"","$ex->getMessage()","\"3 \""]]},{"id":911827828,"text":"Fill the missing words to match the output.","code":"<?php\r\nclass Calculator {\r\n    public function divide($a, $b) {\r\n        if ($b == 0) {\r\n            throw new Exception(\"Cannot divide by zero\");\r\n        }\r\n        return $a \/ $b;\r\n    }\r\n}\r\n\r\ntry {\r\n    $calc = new Calculator();\r\n    $calc->divide(fillword, fillword);\r\n} catch(Exception $ex) {\r\n    echo fillword;\r\n}","result":"Cannot divide by zero","words":{"operators":[],"values":["0","3"],"variables_constants":[],"others":["$ex","$ex->getMessage()"]},"correct_patterns":[["3","0","$ex->getMessage()"]]}]}]},"projects":[{"id":1479457631,"name":"Rectangle Calculator","description":"<p>Create a rectangle calculator on your desktop \/ laptop.<\/p>\r\n\r\n<p>The input of the programs are the values of the following variables:<\/p>\r\n<ul>\r\n    <li><b>$width<\/b> - positive floating point number representing rectangle's width.<\/li>\r\n    <li><b>$height<\/b> - positive floating point number representing rectangle's height..<\/li>\r\n<\/ul>\r\n\r\n<p>The output of the program should print data about:<\/p>\r\n<ul>\r\n    <li><b>Perimeter<\/b>. It's calculated via the formula: 2 x (width + height).<\/li>\r\n    <li><b>Area<\/b>. It's calculated via the formula: width x height.<\/li>\r\n    <li ><b>Diagonal<\/b>. It's calculated via the formula:<img src=\"imgs\/projects\/diagonal-formula.png\" style=\"\r\n    height: 45px;\r\n    display: block;\"><\/li>\r\n<\/ul>\r\n\r\n<p>Hint: You may use the function sqrt to calculate square root and pow to calculate power for the diagonal formula.<\/p>\r\n\r\n<p>Test your code using the inputs and outputs specified below:<\/p>","inputs":["$width = 3;<br>$height = 4;","$width = 2.2;<br>$height = 3.5;","$width = 6;<br>$height = 8;"],"outputs":["Perimeter = 14 <br> Area = 12 <br> Diagonal = 5","Perimeter = 11.4 <br> Area = 7.7 <br> Diagonal = 4.1340053217189","Perimeter = 28 <br> Area = 48 <br> Diagonal = 10"],"solution":"<?php\r\n\r\n$width = 3; \/\/ Replace it with other test value.\r\n$height = 4; \/\/ Replace it with other test value.\r\n\r\n\/\/ Basic calculations:\r\n$perimeter = 2 * ($width + $height);\r\n$area = $width * $height;\r\n\r\n\/\/ Use sqrt to calculate square root and pow to calculate power.\r\n$diagonal = sqrt( pow($width, 2) + pow($height, 2) );\r\n\r\n\/\/ Print calculations:\r\necho \"Perimeter = \" . $perimeter . \"<br>\"; \/\/ <br> prints new line.\r\necho \"Area = \" . $area . \"<br>\";\r\necho \"Diagonal = \" . $diagonal;","stars":1,"requirements":["Calculations"]},{"id":315874076,"name":"Digitized Time","description":"<p>Many timers show time in the format mm:ss (minutes, seconds) but keep track only on the seconds. <p>\r\n<p>Write a program on your desktop \/ laptop which converts seconds (positive integer that's between 0 and 3600) in the format mm:ss.<\/p>\r\n<p>The seconds are specified via the $totalSeconds variable.<\/p>\r\n\r\n<p>For example 130 seconds is equivalent to 2 minute and 10 seconds (2 * 60 + 10 = 130) which is formated as \"02:10\".<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["$totalSeconds = 30;","$totalSeconds = 120;","$totalSeconds = 65;","$totalSeconds = 695;","$totalSeconds = 1;","$totalSeconds = 3599;"],"outputs":["00:30","02:00","01:05","11:35","00:01","59:59"],"solution":"<?php\r\n\r\n$totalSeconds = 30; \/\/ Replace it with other test value.\r\n\r\n$minutes = intval($totalSeconds \/ 60); \/\/ If totalSeconds \/ 60 has value of 2.90 it's parsed to int as 2.  \r\n$seconds = $totalSeconds - $minutes * 60; \/\/ Extract seconds from minutes and total seconds.\r\n\r\n$output = \"\";\r\nif ($minutes < 10)\r\n{\r\n\t$output .= \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n}\r\n$output .= $minutes . \":\";\r\n\r\nif ($seconds < 10)\r\n{\r\n\t$output .= \"0\"; \/\/ Add leading 0 for single digit numbers.\r\n}\r\n\r\n$output .= $seconds;\r\n\r\necho $output;","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":1266744029,"name":"Price Management","description":"<p>Penny has groceries stores in multiple Italian cities. Some of the cities are more expensive than others so the price is different for every city.<\/p>\r\n<p>Help Penny to manage her groceries prices by creating a program on your desktop \/ laptop.<br>\r\nThe input is specified via the following variables:<\/p>\r\n<ul>\r\n     <li> <b>$city<\/b> - string which has one of three values - \"Milan\", \"Rome\", \"Florence\".<\/li>\r\n     <li> <b>$fruit<\/b> - string which has one of three values - \"Orange\", \"Apple\", \"Cherry\".<\/li>\r\n<\/ul>\r\n<p>The program must print the cost of the fruit per kilogram in the specified city.<\/p>\r\n\r\n<p>The prices for fruits per kilogram are displayed in the following table:<\/p>\r\n\r\n<table>\r\n    <thead>\r\n           <tr>\r\n                 <td><\/td>\r\n                 <td>Milan<\/td>\r\n                 <td>Rome<\/td>\r\n                 <td>Florence<\/td>\r\n           <\/tr>\r\n    <\/thead>\r\n    <tbody>\r\n           <tr>\r\n                  <td>Orange<\/td>\r\n                  <td>2.56<\/td>\r\n                  <td>3.20<\/td>\r\n                  <td>4.23<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Apple<\/td>\r\n                  <td>2.86<\/td>\r\n                  <td>3.60<\/td>\r\n                  <td>4.56<\/td>\r\n           <\/tr>\r\n           <tr>\r\n                  <td>Cherry<\/td>\r\n                  <td>2.00<\/td>\r\n                  <td>2.80<\/td>\r\n                  <td>3.64<\/td>\r\n           <\/tr>\r\n  <\/tbody>\r\n<\/table>\r\n\r\n<p>For example the price per kilogram for orange in Rome is 3.20 and the price per kilogram for cherry in Florence is 3.64.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["$city = 'Milan';<br>$fruit = 'Orange';","$city = 'Florence';<br>$fruit = 'Orange';","$city = 'Florence';<br>$fruit = 'Cherry';","$city = 'Rome';<br>$fruit = 'Cherry';"],"outputs":["2.56","4.23","3.64","2.80"],"solution":"<?php\r\n\r\n$city = \"Milan\"; \/\/ Replace it with other test value.\r\n$fruit = \"Orange\"; \/\/ Replace it with other test value.\r\n\r\nif ($city == \"Milan\")\r\n{\r\n    if ($fruit == \"Orange\")\r\n    {\r\n        echo \"2.56\";\r\n    }\r\n    else if ($fruit == \"Apple\")\r\n    {\r\n        echo \"2.86\";\r\n    }\r\n    else if ($fruit == \"Cherry\")\r\n    {\r\n        echo \"2.00\";\r\n    }\r\n}\r\nelse if ($city == \"Rome\")\r\n{\r\n    if ($fruit == \"Orange\")\r\n    {\r\n        echo \"3.20\";\r\n    }\r\n    else if ($fruit == \"Apple\")\r\n    {\r\n        echo \"3.60\";\r\n    }\r\n    else if ($fruit == \"Cherry\")\r\n    {\r\n        echo \"2.80\";\r\n    }\r\n}\r\nelse if ($city == \"Florence\")\r\n{\r\n    if ($fruit == \"Orange\")\r\n    {\r\n        echo \"4.23\";\r\n    }\r\n    else if ($fruit == \"Apple\")\r\n    {\r\n        echo \"4.56\";\r\n    }\r\n    else if ($fruit == \"Cherry\")\r\n    {\r\n        echo \"3.64\";\r\n    }\r\n}","stars":2,"requirements":["Condition Statements"]},{"id":204806810,"name":"Currency Converter","description":"<p>Write a currency converter on your desktop \/ laptop which prints the amount of the currency exchange.\r\n<br> The input of the program is set via the following variables:<\/p>\r\n<ul>\r\n    <li><b>$amount<\/b> - positive floating point number<\/li>\r\n    <li><b>$inputCurrency<\/b> - string representing currency<\/li>\r\n    <li><b>$outputCurrency<\/b> - another string representing currency<\/li>\r\n<\/ul>\r\n\r\n<p>The supported currencies are: USD, EUR and GBP. For the sake of simplicity it's assumed that their exchange rate is always the following:<\/p>\r\n\r\n<table class=\"table\">\r\n<tbody>\r\n<tr>\r\n\t<td rowspan=\"2\">1 USD<\/td>\r\n\t<td>0.84 EUR<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>&nbsp;0.72&nbsp;GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 EUR<\/td>\r\n\t<td>1.18 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>0.86 GBP<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td rowspan=\"2\">1 GBP<\/td>\r\n\t<td>1.38 USD<\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td>1.16 EUR<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>For example 2 EUR are 2.36 USD (2 * 1.18 = 2.36).<\/p>\r\n<p>Also the output needs to be rounded up to two digits after decimal point.<\/p>\r\n\r\n<p>Make sure it's printed \"Invalid Input\" if an unsupported currency is entered.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["$amount = 2;<br>$inputCurrency = \"EUR\";<br>$outputCurrency = \"GBP\";","$amount = 1.12;<br>$inputCurrency = \"USD\";<br>$outputCurrency=\"EUR\";","$amount =2.54;<br>$inputCurrency = \"GBP\";<br>$outputCurrency = \"EUR\";","$amount = 3.56;<br>$inputCurrency = \"ABC\";<br>$outputCurrency = \"EUR\";","$amount = 3.56;<br>$inputCurrency = \"USD\";<br>$outputCurrency=\"ABC\";"],"outputs":["1.72","0.94","2.95","Invalid input.","Invalid input."],"solution":"<?php\r\n\r\n$amount = 2; \/\/ Replace it with other test value.\r\n$inputCurrency = 'EUR'; \/\/ Replace it with other test value.\r\n$outputCurrency = 'GBP'; \/\/ Replace it with other test value.\r\n\r\n$multiplier = 0;\r\n\r\nif ($inputCurrency == \"USD\")\r\n{\r\n    if ($outputCurrency == \"EUR\")\r\n    {\r\n        $multiplier = 0.84;\r\n    }\r\n    else if ($outputCurrency == \"GBP\")\r\n    {\r\n        $multiplier = 0.72;\r\n    }\r\n}\r\nelse if ($inputCurrency == \"EUR\")\r\n{\r\n    if ($outputCurrency == \"USD\") {\r\n        $multiplier = 1.18;\r\n    }\r\n    else if ($outputCurrency == \"GBP\")\r\n    {\r\n        $multiplier = 0.86;\r\n    }\r\n}\r\nelse if ($inputCurrency == \"GBP\")\r\n{\r\n    if ($outputCurrency == \"USD\")\r\n    {\r\n        $multiplier = 1.38;\r\n    }\r\n    else if ($outputCurrency == \"EUR\")\r\n    {\r\n        $multiplier = 1.16;\r\n    }\r\n}\r\n\r\nif ($multiplier == 0)\r\n{\r\n    \/\/ Neither of the checks has modified it's value.\r\n    \/\/ So inform user about invalid input.\r\n    echo \"Invalid input.\";\r\n}\r\nelse\r\n{\r\n    \/\/ Valid Input\r\n    \/\/ Calculate and round output up to two digits after decimal point.\r\n\r\n    $output = $amount * $multiplier;\r\n    echo round($output, 2);\r\n}","stars":2,"requirements":["Calculations","Condition Statements"]},{"id":1188706907,"name":"Multiplication Table","description":"<p>Write a program on your desktop \/ laptop that prints multiplication table.<\/p>\r\n<p>The input is specified via one variable:<\/p>\r\n<ul>\r\n    <li><b>$number<\/b> - positive integer.<\/li>\r\n<\/ul>\r\n<p>The multiplication table must contain information about the multiplications for the input number and the numbers from 1 to 10.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["$number = 3;","$number = 5;","$number = 0;"],"outputs":["3 x 3 = 3 <br> 3 x 2 = 6 <br> 3 x 3 = 9 <br> 3 x 4 = 12 <br> 3 x 5 = 15 <br> 3 x 6 = 18 <br> 3 x 7 = 21 <br> 3 x 8 = 24 <br> 3 x 9 = 27 <br> 3 x 10 = 30","5 x 1 = 5 <br> 5 x 2 = 10 <br> 5 x 3 = 15 <br> 5 x 4 = 20 <br> 5 x 5 = 25 <br> 5 x 6 = 30 <br> 5 x 7 = 35 <br> 5 x 8 = 40 <br> 5 x 9 = 45 <br> 5 x 10 = 50","0 x 1 = 0 <br> 0 x 2 = 0 <br> 0 x 3 = 0 <br> 0 x 4 = 0 <br> 0 x 5 = 0 <br> 0 x 6 = 0 <br> 0 x 7 = 0 <br> 0 x 8 = 0 <br> 0 x 9 = 0 <br> 0 x 10 = 0"],"solution":"<?php\r\n\r\n$number = 3; \/\/ Replace with other input value.\r\n\r\nfor($i = 1; $i <= 10; $i++)\r\n{\r\n    echo $number . \" x \" . $i . \" = \" . $number * $i . \"<br>\";\r\n}","stars":2,"requirements":["Calculations","Loops"]},{"id":1066359320,"name":"Play Button","description":"<p>Write a program on your desktop \/ laptop that prints a play button made of stars.<\/p>\r\n\r\n<p>The input is set via one variable:<\/p>\r\n<ul>\r\n    <li><b>$number<\/b> - positive integer representing the count of figure rows.<\/li>\r\n<\/ul>\r\n<p>If the input number is even (like 0, 2, 4, 6 etc...) or negative print the message \"Invalid input.\".<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: You don't have to write nested loops if you don't want to. You can repeat a string like this: <br>\r\n<code>$row = str_repeat(\"*\", 4);<\/code> which creates the following string: \"****\".<\/p>","inputs":["$number= 1;","$number = 3;","$number = 5;","$number = 7;","$number = 2;","$number = 0;","$number = -1;"],"outputs":["<div style=\"letter-spacing: 5px;\">*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>**<br>*<\/div>","<div style=\" margin: 0 auto; text-align: left; width: fit-content; letter-spacing: 5px; \">*<br>**<br>***<br>****<br>***<br>**<br>*<\/div>","Invalid input.","Invalid input.","Invalid input."],"solution":"<?php\r\n\r\n\/\/ Read user's input:\r\n$number = 7; \/\/ Replace it with other test values.\r\n\r\nif($number % 2 == 0 || $number <= 0)\r\n{\r\n    \/\/ Inform user that input is negative.\r\n    echo \"Invalid input.\";\r\n\r\n    return; \/\/ Terminate the program.\r\n}\r\n\r\n\/\/ Print the upper part:\r\nfor($i = 1; $i <= $number \/ 2; $i++)\r\n{\r\n    \/\/ repeat '*' i times.\r\n    \/\/ Example: str_repeat('*', 3) would create the string \"***\".\r\n    $row = str_repeat('*', $i);\r\n    echo $row . \"<br>\"; \/\/ <br> prints new line.\r\n}\r\n\r\n\/\/ Print the middle row:\r\n$middleRow = str_repeat('*', $number \/ 2 + 1);\r\necho $middleRow . \"<br>\";\r\n\r\n\/\/ Print the below part:\r\nfor ($i = $number \/ 2; $i >= 1; $i--)\r\n{\r\n    $row = str_repeat('*', $i) . \"<br>\";\r\n    echo $row;\r\n}","stars":3,"requirements":["Loops"]},{"id":1883006425,"name":"Digits Counter","description":"<p>Write a program on your desktop \/ laptop which prints the occurrences of digits in input number.<\/p>\r\n<p>The input is set via the variable $number - a positive integer.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details.<\/p>\r\n<p>Hint: You don't have to write nested loops if you don't want to. You can count occurances via the function substr_count.<br>\r\nExample:<br>\r\n<code>&lt;?php<br><br>\r\n$num = 1595;<br>\r\necho substr_count($num, 5);\r\n<\/code><br>\r\nPrints 2.\r\n<\/p>","inputs":["$number = 112266863;","$number = 15968929;","$number = 123;"],"outputs":["0 -> 0 <br> 1 -> 2 <br> 2 -> 2 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 3 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 0","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 0 <br> 4 -> 0 <br> 5 -> 1 <br> 6 -> 1 <br> 7 -> 0 <br> 8 -> 1 <br> 9 -> 3","0 -> 0 <br> 1 -> 1 <br> 2 -> 1 <br> 3 -> 1 <br> 4 -> 0 <br> 5 -> 0 <br> 6 -> 0 <br> 7 -> 0 <br> 8 -> 0 <br> 9 -> 0"],"solution":"<?php\r\n\r\n$number = 112266863; \/\/ Replace it with other test value.\r\n\r\nfor($i = 0; $i <= 9; $i++) \/\/ For numbers in range [0, 9].\r\n{\r\n    $occurrences = substr_count($number, $i);\r\n\r\n    echo $i . \" -> \" . $occurrences . '<br>';\r\n}","stars":3,"requirements":["Loops"]},{"id":519038117,"name":"Chess Tournament","description":"<p>Write a program on your desktop \/ laptop which prints data about the ages of the participant in chess tournament.<\/p>\r\n<p>The input is set via the variable:<\/p>\r\n<ul>\r\n    <li><b>$ages<\/b> - array containing positive integers, representing the ages of the participant.<\/li>\r\n<\/ul>\r\n\r\nThe output of the program must provide data about:\r\n<ul>\r\n    <li><b>Minimum age<\/b> - the age of the youngest participant.<\/li>\r\n    <li><b>Maximum age<\/b> - the age of the oldest participant.<\/li>\r\n    <li><b>Average age<\/b><\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>","inputs":["$ages = [19, 21, 20];","$ages = [18, 19];","$ages = [15, 15, 18];"],"outputs":["Min: 19 <br> Max: 21 <br> Average: 20","Min: 18 <br> Max: 19 <br> Average: 18","Min: 15 <br> Max: 18 <br> Average: 16"],"solution":"<?php\r\n\r\n$ages = [19, 21, 20]; \/\/ Replace it with other test value.\r\n\r\n\/\/ Loop array and find output data:\r\n$minAge = $ages[0];\r\n$maxAge = $ages[0];\r\n$sum = 0; \/\/ Used to calculate average age.\r\n\r\nforeach ($ages as $age)\r\n{\r\n    if($age < $minAge)\r\n    {\r\n        $minAge = $age;\r\n    }\r\n\r\n    if($age > $maxAge)\r\n    {\r\n        $maxAge = $age;\r\n    }\r\n\r\n    $sum += $age;\r\n}\r\n\r\n$averageAge = (int)($sum \/ count($ages));\r\n\r\necho \"Min: \" . $minAge . \"<br>\";\r\necho \"Max: \" . $maxAge . \"<br>\";\r\necho \"Average: \" . $averageAge;","stars":3,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":1469842530,"name":"Gaming Shop","description":"<p>Steve has a gaming shop and needs your help with inserting games and recording sells.<\/p>\r\n\r\n<p>Write a program on your desktop \/ laptop which processes commands.<\/p>\r\n<p>The input is set via the variable $commands - array containing strings representing commands.<\/p>\r\n\r\n<p>There are 3 types of commands:<\/p>\r\n<ul>\r\n    <li>\r\n        <b>Product Insertion<\/b> - it's in the format: <br>\r\n          \"insert-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It creates new game with the specified quantity or increases the quantity if the game is already added.\r\n    <\/li>\r\n    <li>\r\n        <b>Product Sell<\/b> - it's in the format: <br>\r\n          \"sell-&lt;game name&gt;-&lt;quantity&gt;\".<br>\r\n           It decreases the quantity of the specified game. You can assume that the sold quantity will always be less or equal to the available one.\r\n    <\/li>\r\n<\/ul> \r\n<p>After the commands are processed, a report of available games and their quantity is printed.<\/p>\r\n\r\n<p>Notice that sold out games (with quantity of 0) must not be included in the end report.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>Hint: since game names are considered unique, the best practice would be to use dictionary for storing data with key - the game name and value - it's quantity.<\/p>","inputs":["$commands = [\"insert-Minecraft-5\", \"insert-Rocket League-10\"];","$commands = [\"insert-Counter Strike-10\", \"sell-Counter Strike-3\"];","$commands  = [\"insert-Fortnite-10\", \"insert-pubg-10\", \"sell-Fortnite-10\", \"sell-pubg-7\"];"],"outputs":["Minecraft: 5<br> Rocket League: 10","Counter Strike: 7","pubg: 3"],"solution":"<?php\r\n\r\n$commands =[\"insert-Minecraft-5\", \"insert-Rocket League-10\"]; \/\/ Replace it with other test values.\r\n$gamesData = [];\r\n\r\nforeach($commands as $command) {\r\n\r\n    \/\/ Get command components by spliting.\r\n    \/\/ Example: if command has value \"insert-game-15\" then parameters would be array with 3 elements - \"insert\", \"game\" and \"15\"\r\n    $parameters = explode('-', $command);\r\n\r\n    $commandName = $parameters[0];\r\n    $gameName = $parameters[1];\r\n    $quantity = intval($parameters[2]);\r\n\r\n    if ($commandName == \"insert\")\r\n    {\r\n        \/\/ The insert command is used for:\r\n        \/\/ - Adding new game to the store with the specified quantity.\r\n        \/\/ - Increasing quantity to already added game.\r\n        \/\/ Both cases need to be handled separately.\r\n\r\n        if (isset($gamesData[$gameName]))\r\n        {\r\n            \/\/ Increase quantity to already added game\r\n            $gamesData[$gameName] += $quantity;\r\n        }\r\n        else\r\n        {\r\n            \/\/ Adding new game to the store with the specified quantity.\r\n            $gamesData[$gameName] = $quantity;\r\n        }\r\n    }\r\n    else if($commandName == \"sell\") \/\/ Handle selling:\r\n    {\r\n        \/\/ Decrease quantity when game is sold.\r\n        $gamesData[$gameName] -= $quantity;\r\n\r\n        if($gamesData[$gameName] == 0)\r\n        {\r\n            \/\/ Don't store data for games that have been sold out.\r\n            unset($gamesData[$gameName]);\r\n        }\r\n    }\r\n}\r\n\r\n\/\/ Print report:\r\nforeach ($gamesData as $name => $quantity)\r\n{\r\n    \/\/ Print report in format name: quantity.\r\n    echo $name . \": \" . $quantity . \"<br>\";\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures"]},{"id":138486819,"name":"Tic Tac Toe","description":"<p>Write a program on your desktop \/ laptop which checks who wins on in tic tac toe match.<\/p>\r\n<p>If you don't know how to play tic tac toe, you can learn the rules from\r\n<a href=\"https:\/\/www.wikihow.com\/Play-Tic-Tac-Toe\">here<\/a>.<\/p>\r\n\r\n<p>The input parameters of the program is set via the variables $row1, $row2, $row3. Each represents a line of the tic tac toe board.<\/p>\r\n<p>The program prints one of the following:<\/p>\r\n<ul>\r\n    <li><b>\"X wins\"<\/b> if X wins<\/li>\r\n    <li><b>\"O wins\"<\/b> if O wins<\/li>\r\n    <li><b>\"Tie\"<\/b> if neither of the players wins.<\/li>\r\n<\/ul>\r\n<p>You can assume that the input will always represent a legit tic tac toe endgame so you don't have to validate it.<\/p>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n\r\n<p>Hint: the best data structure that represents a tic tac toe board would be matrix with 3 rows and 3 columns.<\/p>","inputs":["$row1 = \"ooo\";<br>$row2 = \"xx-\";<br>$row3 = \"---\";","$row1 = \"xo-\";<br>$row2 = \"oxo\";<br>$row3 = \"x-x\";","$row1 = \"xox\";<br>$row2 = \"oox\";<br>$row3 = \"xxo\";"],"outputs":["O wins","X wins","Tie"],"solution":"<?php\r\n\r\n$board = [];\r\n\r\n$row1 = \"ooo\";\r\n$row2 = \"xx-\";\r\n$row3 = \"---\";\r\n\r\n\/\/ Convert lines to arrays and add them to the board.\r\n$board[0] = str_split($row1);\r\n$board[1] = str_split($row2);\r\n$board[2] = str_split($row3);\r\n\r\nif(winsTicTacToe($board, 'x'))\r\n{\r\n    echo \"X wins\";\r\n}\r\nelse if (winsTicTacToe($board, 'o'))\r\n{\r\n    echo \"O wins\";\r\n}\r\nelse\r\n{\r\n    echo \"Tie\";\r\n}\r\n\r\nfunction winsTicTacToe($board, $symbol)\r\n{\r\n    for($i = 0; $i < 3; $i++)\r\n    {\r\n        if (($board[$i][0] == $symbol && $board[$i][1] == $symbol && $board[$i][2] == $symbol) ||  \/\/ If line is filled only with x or o.\r\n            $board[0][$i] == $symbol && $board[1][$i] == $symbol && $board[2][$i] == $symbol) \/\/ If column is filled only with x or o.\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        \/\/ Check if one of the diagonals is filled only with x or o\r\n        if($board[1][1] == $symbol && \r\n                (($board[0][0] == $symbol && $board[2][2] == $symbol) ||\r\n                ($board[0][2] == $symbol && $board[2][0] == $symbol))\r\n        )\r\n        {\r\n            return true;\r\n        }\r\n\r\n    return false;\r\n}","stars":4,"requirements":["Condition Statements","Loops","Data Structures","Functions"]},{"id":1123436512,"name":"Car Dealership","description":"<p>Write a program on your desktop \/ laptop which reads data for cars and print data only for those which make is the same as the specified one.<\/p>\r\n<p>The input is specified via the following variables:<\/p>\r\n<ul>\r\n    <li><b>$carsData<\/b> - the data for all cars in which each element represents a single car in the format:<br>\r\n&lt;make&gt; &lt;model&gt; &lt;hp&gt;  &lt;price&gt; .<\/li>\r\n    <li><b>$filterMake<\/b> - string.<\/li>\r\n<\/ul>\r\n\r\n<p>The car dealership offers a 10 % discount for people who've bought a car from the same warehouse in the last 6 years. That discount must be included in the output. Also the prices of the cars must be printed as numbers with 2 digits after the decimal point.<\/p>\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Car<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to calculate discount<\/li>\r\n    <li>__toString method<\/li>\r\n    <li>array for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>$carsData = ['Volkswagen Golf 95 25000'];<br>$filterMake = 'Volkswagen';<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>1<br>Volkswagen Golf 95 25000.00 (22500 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>$carsData = ['Toyotta Corolla 120 23000', 'Ford Fiesta 80 18000', 'Toyotta Aygo 75 16000'];<br>$filterMake = 'Toyotta';<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Toyotta Corolla 120 23000.00 (20700.00 for loyal customers)<br>Toyotta Aygo 75 16000.00 (14400.00 for loyal customers)<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"<?php\r\n\r\nclass Car\r\n{\r\n    \/\/ Members accessed via getters and setters:\r\n    private $make;\r\n    private $model;\r\n    private $hp;\r\n    private $price;\r\n    \r\n    public function getMake()\r\n    {\r\n        return $this->make;\r\n    }\r\n    \r\n    public function setMake($makeVal)\r\n    {\r\n        $this->make = $makeVal;\r\n    }\r\n    \r\n    public function getModel()\r\n    {\r\n        return $this->model;\r\n    }\r\n    \r\n    public function setModel($modelVal)\r\n    {\r\n        $this->model = $modelVal;\r\n    }\r\n    \r\n    public function getHp()\r\n    {\r\n        return $this->hp;\r\n    }\r\n    \r\n    public function setHp($hp)\r\n    {\r\n        $this->hp = $hp;\r\n    }\r\n    \r\n    public function getPrice()\r\n    {\r\n        return $this->price;\r\n    }\r\n    \r\n    public function setPrice($price)\r\n    {\r\n        $this->price = $price;\r\n    }\r\n    \r\n\r\n    \/\/ Parameterized constructor for creating objects:\r\n    public function __construct($make, $model, $hp, $price)\r\n    {\r\n        $this->setMake($make);\r\n        $this->setModel($model);\r\n        $this->setHp($hp);\r\n        $this->setPrice($price);\r\n    }\r\n\r\n    public function calculateDiscount()\r\n    {\r\n        \/\/ Calculate price with 10 % discount (90 % of the ordinary price):\r\n        return $this->getPrice() * 9 \/ 10;\r\n    }\r\n    \r\n    \/\/ String representation of the class object:\r\n    public function __toString() {\r\n        return $this->getMake() . \" \" . $this->getModel() . \" \" . $this->getHp() . \" \" .\r\n        number_format($this->getPrice(), 2, '.', '') .\r\n        \" (\" . number_format($this->calculateDiscount(), 2, '.', '') . \" for loyal customers)\";\r\n    }\r\n}\r\n\r\n\r\n$cars = [];\r\n$carsData = ['Toyotta Corolla 120 23000', 'Ford Fiesta 80 18000', 'Toyotta Aygo 75 16000']; \/\/ Replace it with others test values.\r\n$filterMake = 'Toyotta'; \/\/ Replace it with others test values.\r\n\r\nforeach($carsData as $carData)\r\n{\r\n    $carParameters = explode(' ', $carData);\r\n\r\n    $make = $carParameters[0];\r\n    $model = $carParameters[1];\r\n    $hp = intval($carParameters[2]);\r\n    $price = floatval($carParameters[3]);\r\n\r\n    \/\/ Create object based on the input data and add it to the array.\r\n    $obj = new Car($make, $model, $hp, $price);\r\n    $cars[] = $obj;\r\n}\r\n\r\nforeach ($cars as $car)\r\n{\r\n    \/\/ Filter cars by make:\r\n    if ($car->getMake() == $filterMake)\r\n    {\r\n        \/\/ Print the string representations specified with the __toString method:\r\n        echo $car;\r\n    }\r\n}","stars":4,"requirements":["Calculations","Condition Statements","Loops","Data Structures","Functions","OOP"]},{"id":1000040353,"name":"Students Scores","description":"<p>Write a program on your desktop \/ laptop which reads data for students scores on exam and prints it back sorted.<\/p>\r\n<p>The input is via the following variable:<\/p>\r\n<ul>\r\n    <li><b>$examData<\/b> - the data for a single exam score in the format:<br>\r\n&lt;student's first name&gt; &lt;student's last name&gt; &lt;exam score&gt; .<\/li>\r\n<\/ul>\r\n<p>Each element of $examData represent student's info and his\/her exam grade.<\/p>\r\n<p>The output must include grade based on the following grade scale:<\/p>\r\n<ul>\r\n   <li>90 - 100 points - A<\/li>\r\n   <li>80 - 89 points - B<\/li>\r\n   <li>70 - 79 points - C<\/li>\r\n   <li>60 - 69 points - D<\/li>\r\n   <li>50 - 59 points - E<\/li>\r\n   <li>0- 49 points - F<\/li>\r\n<\/ul>\r\n\r\n<p>Analyze the inputs and outputs to understand the details and test your code via them.<\/p>\r\n<p>In order to write a cleaner code you can use:<\/p>\r\n<ul>\r\n    <li>Class representing Student<\/li>\r\n    <li>Members accessed with getters and setters<\/li>\r\n    <li>Parameterized constructor<\/li>\r\n    <li>Function to get grade<\/li>\r\n    <li>__toString method<\/li>\r\n    <li>array collection for storing class objects<\/li>\r\n<\/ul>\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>$examData = ['John Smith 81'];<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>John Smith 81 B<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>$examData = ['Alex  Ethan 77', 'Joe Hawke 82'];<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Joe Hawke 82 B<br>Alex  Ethan 77 C<\/td>\r\n    <\/tr>\r\n<\/table>\r\n\r\n<table class=\"table\">\r\n    <tr>\r\n        <th>Input:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>$examData = ['Olivia Smith 88', 'Jack DiIlan 88', 'Gabriel Doe 93'];<\/td>\r\n    <\/tr>\r\n    <tr>\r\n        <th>Output:<\/th>\r\n    <\/tr>\r\n    <tr>\r\n        <td>Gabriel Doe 93 A <br>Olivia Smith 88 B<br>Jack DiIlan 88 B<\/td>\r\n    <\/tr>\r\n<\/table>","inputs":null,"outputs":null,"solution":"<?php\r\n\r\nclass Student\r\n{\r\n    private $firstName;\r\n    private $lastName;\r\n    private $examScore;\r\n    \r\n    \/\/ Members accessed via getters and setters:\r\n    public function getFirstName()\r\n    {\r\n        return $this->firstName;\r\n    }\r\n    \r\n    public function setFirstName($value)\r\n    {\r\n        $this->firstName = $value;\r\n    }\r\n    \r\n    public function getLastName()\r\n    {\r\n        return $this->lastName;\r\n    }\r\n    \r\n    public function setLastName($value)\r\n    {\r\n        $this->lastName = $value;\r\n    }\r\n    \r\n    public function getExamScore()\r\n    {\r\n        return $this->examScore;\r\n    }\r\n    \r\n    public function setExamScore($value)\r\n    {\r\n        $this->examScore = $value;\r\n    }\r\n\r\n    public function getGrade()\r\n    {\r\n        $examScore = $this->getExamScore();\r\n        \r\n        \/\/ Find out grade based on points:\r\n        if ($examScore < 50)\r\n            return 'F';\r\n        if ($examScore < 60)\r\n            return 'E';\r\n        if ($examScore < 70)\r\n            return 'D';\r\n        if ($examScore < 80)\r\n            return 'C';\r\n        if ($examScore < 90)\r\n            return 'B';\r\n\r\n        return 'A';\r\n    }\r\n\r\n     \/\/ Parameterized constructor for creating objects:\r\n    public function __construct($firstName, $lastName, $examScore)\r\n    {\r\n        $this->setFirstName($firstName);\r\n        $this->setLastName($lastName);\r\n        $this->setExamScore($examScore);\r\n    }\r\n    \r\n    \/\/ String representation of a class object:\r\n    public function __toString()\r\n    {\r\n        return $this->getFirstName() . \" \" . $this->getLastName() . \" \" . \r\n            $this->getExamScore() .\" \" . $this->getGrade();\r\n    }\r\n}\r\n\r\n$examData  = ['Olivia Smith 88', 'Jack DiIlan 88', 'Gabriel Doe 93']; \/\/ Replace it with other values.\r\n\r\nforeach($examData as $studentData)\r\n{\r\n    $studentDataParams = explode(' ', $studentData);\r\n\r\n    $firstName = $studentDataParams[0];\r\n    $lastName = $studentDataParams[1];\r\n    $examScores = intval($studentDataParams[2]);\r\n\r\n    \/\/ Create object based on the input data and add it to array:\r\n    $obj = new Student($firstName, $lastName, $examScores);\r\n    $students[] = $obj;\r\n}\r\n\r\n\/\/ Sort students by exam score descendingly.\r\nusort($students, function ($a, $b) {\r\n    if($a->getExamScore() > $b->getExamScore())\r\n    {\r\n        return -1;\r\n    }\r\n    else if ($a->getExamScore() === $b->getExamScore())\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n});\r\n\r\nforeach($students as $student) {\r\n    \/\/ Prints the string representation specified with the ToString method:\r\n    echo $student . '<br>';\r\n}","stars":5,"requirements":["Condition Statements","Loops","Data Structures","Functions","OOP"]}],"challenges":[]}}